// Generated Preview Groups utility. Manufacturers=2668
package se.premex.compose.preview.groups

import kotlin.String
import kotlin.collections.List
import kotlin.collections.Map
import se.premex.compose.preview.device.catalog.android.A1
import se.premex.compose.preview.device.catalog.android.A1SmartBox
import se.premex.compose.preview.device.catalog.android.Aauw
import se.premex.compose.preview.device.catalog.android.Abctech
import se.premex.compose.preview.device.catalog.android.Abil
import se.premex.compose.preview.device.catalog.android.Aborder
import se.premex.compose.preview.device.catalog.android.Abxylute
import se.premex.compose.preview.device.catalog.android.Accent
import se.premex.compose.preview.device.catalog.android.Acd
import se.premex.compose.preview.device.catalog.android.Ace
import se.premex.compose.preview.device.catalog.android.Acepad
import se.premex.compose.preview.device.catalog.android.Acer
import se.premex.compose.preview.device.catalog.android.Acerpure
import se.premex.compose.preview.device.catalog.android.Achate
import se.premex.compose.preview.device.catalog.android.Aclas
import se.premex.compose.preview.device.catalog.android.Aconatic
import se.premex.compose.preview.device.catalog.android.Act
import se.premex.compose.preview.device.catalog.android.Acteck
import se.premex.compose.preview.device.catalog.android.Actstreamtv4k
import se.premex.compose.preview.device.catalog.android.Admiral
import se.premex.compose.preview.device.catalog.android.Ado
import se.premex.compose.preview.device.catalog.android.Adoc
import se.premex.compose.preview.device.catalog.android.Adreamer
import se.premex.compose.preview.device.catalog.android.Adsun
import se.premex.compose.preview.device.catalog.android.Adt3
import se.premex.compose.preview.device.catalog.android.Advan
import se.premex.compose.preview.device.catalog.android.Advance
import se.premex.compose.preview.device.catalog.android.Advantage
import se.premex.compose.preview.device.catalog.android.Advantageair
import se.premex.compose.preview.device.catalog.android.Advantech
import se.premex.compose.preview.device.catalog.android.Aeezo
import se.premex.compose.preview.device.catalog.android.Africell
import se.premex.compose.preview.device.catalog.android.Afrione
import se.premex.compose.preview.device.catalog.android.Ag
import se.premex.compose.preview.device.catalog.android.Age
import se.premex.compose.preview.device.catalog.android.Agiletv
import se.premex.compose.preview.device.catalog.android.Agm
import se.premex.compose.preview.device.catalog.android.Agno
import se.premex.compose.preview.device.catalog.android.Aha
import se.premex.compose.preview.device.catalog.android.Ahlo
import se.premex.compose.preview.device.catalog.android.Ai
import se.premex.compose.preview.device.catalog.android.Aidata
import se.premex.compose.preview.device.catalog.android.Aigo
import se.premex.compose.preview.device.catalog.android.Airpha
import se.premex.compose.preview.device.catalog.android.Airtel
import se.premex.compose.preview.device.catalog.android.AirtelXstream
import se.premex.compose.preview.device.catalog.android.Airtouch
import se.premex.compose.preview.device.catalog.android.Airtv
import se.premex.compose.preview.device.catalog.android.Ais
import se.premex.compose.preview.device.catalog.android.Aiuto
import se.premex.compose.preview.device.catalog.android.Aiwa
import se.premex.compose.preview.device.catalog.android.Ajib
import se.premex.compose.preview.device.catalog.android.Aka
import se.premex.compose.preview.device.catalog.android.Akai
import se.premex.compose.preview.device.catalog.android.Akari
import se.premex.compose.preview.device.catalog.android.Akino
import se.premex.compose.preview.device.catalog.android.Akuvox
import se.premex.compose.preview.device.catalog.android.Alba
import se.premex.compose.preview.device.catalog.android.Albadeel
import se.premex.compose.preview.device.catalog.android.Alcatel
import se.premex.compose.preview.device.catalog.android.Alco
import se.premex.compose.preview.device.catalog.android.Alcor
import se.premex.compose.preview.device.catalog.android.Aldo
import se.premex.compose.preview.device.catalog.android.Algar
import se.premex.compose.preview.device.catalog.android.Alhafidh
import se.premex.compose.preview.device.catalog.android.Aligator
import se.premex.compose.preview.device.catalog.android.AllNG
import se.premex.compose.preview.device.catalog.android.Allcall
import se.premex.compose.preview.device.catalog.android.Alldocube
import se.premex.compose.preview.device.catalog.android.Allente
import se.premex.compose.preview.device.catalog.android.Alliance
import se.premex.compose.preview.device.catalog.android.Allnet
import se.premex.compose.preview.device.catalog.android.Allview
import se.premex.compose.preview.device.catalog.android.Allwinner
import se.premex.compose.preview.device.catalog.android.Alpha
import se.premex.compose.preview.device.catalog.android.AlphaLing
import se.premex.compose.preview.device.catalog.android.Alphaling
import se.premex.compose.preview.device.catalog.android.Alphatel
import se.premex.compose.preview.device.catalog.android.Alphawolf
import se.premex.compose.preview.device.catalog.android.Alpine
import se.premex.compose.preview.device.catalog.android.Alps
import se.premex.compose.preview.device.catalog.android.Alt
import se.premex.compose.preview.device.catalog.android.Altibox
import se.premex.compose.preview.device.catalog.android.Altice
import se.premex.compose.preview.device.catalog.android.Altron
import se.premex.compose.preview.device.catalog.android.Altus
import se.premex.compose.preview.device.catalog.android.AmaMobile
import se.premex.compose.preview.device.catalog.android.Amazon
import se.premex.compose.preview.device.catalog.android.Amgoo
import se.premex.compose.preview.device.catalog.android.Amgx13e
import se.premex.compose.preview.device.catalog.android.Amino
import se.premex.compose.preview.device.catalog.android.Amlogic
import se.premex.compose.preview.device.catalog.android.Amobile
import se.premex.compose.preview.device.catalog.android.Ampliatv
import se.premex.compose.preview.device.catalog.android.Amstrad
import se.premex.compose.preview.device.catalog.android.Amulet7
import se.premex.compose.preview.device.catalog.android.Anam
import se.premex.compose.preview.device.catalog.android.And
import se.premex.compose.preview.device.catalog.android.Andersson
import se.premex.compose.preview.device.catalog.android.Andrino
import se.premex.compose.preview.device.catalog.android.Android
import se.premex.compose.preview.device.catalog.android.Anexa
import se.premex.compose.preview.device.catalog.android.Angeltech
import se.premex.compose.preview.device.catalog.android.Ans
import se.premex.compose.preview.device.catalog.android.AnsNks
import se.premex.compose.preview.device.catalog.android.AnsNksa
import se.premex.compose.preview.device.catalog.android.Antel
import se.premex.compose.preview.device.catalog.android.Antempe
import se.premex.compose.preview.device.catalog.android.Anxonit
import se.premex.compose.preview.device.catalog.android.Anya
import se.premex.compose.preview.device.catalog.android.AnywayGo
import se.premex.compose.preview.device.catalog.android.Aoc
import se.premex.compose.preview.device.catalog.android.Aocwei
import se.premex.compose.preview.device.catalog.android.Aogo
import se.premex.compose.preview.device.catalog.android.Aoskey
import se.premex.compose.preview.device.catalog.android.Aoyodkg
import se.premex.compose.preview.device.catalog.android.Apex
import se.premex.compose.preview.device.catalog.android.Apolosign
import se.premex.compose.preview.device.catalog.android.Aprix
import se.premex.compose.preview.device.catalog.android.Aqhh
import se.premex.compose.preview.device.catalog.android.Aqua
import se.premex.compose.preview.device.catalog.android.Aratek
import se.premex.compose.preview.device.catalog.android.Arbor
import se.premex.compose.preview.device.catalog.android.Arcelik
import se.premex.compose.preview.device.catalog.android.Archos
import se.premex.compose.preview.device.catalog.android.Archoswithlogic
import se.premex.compose.preview.device.catalog.android.Argo
import se.premex.compose.preview.device.catalog.android.Arguest
import se.premex.compose.preview.device.catalog.android.Arirang
import se.premex.compose.preview.device.catalog.android.Arival
import se.premex.compose.preview.device.catalog.android.Ark
import se.premex.compose.preview.device.catalog.android.Arknikko
import se.premex.compose.preview.device.catalog.android.Armadilos
import se.premex.compose.preview.device.catalog.android.Arris
import se.premex.compose.preview.device.catalog.android.Arrow
import se.premex.compose.preview.device.catalog.android.Arrqw
import se.premex.compose.preview.device.catalog.android.Artel
import se.premex.compose.preview.device.catalog.android.Artran
import se.premex.compose.preview.device.catalog.android.Arvand
import se.premex.compose.preview.device.catalog.android.AsElectronics
import se.premex.compose.preview.device.catalog.android.Asaano
import se.premex.compose.preview.device.catalog.android.Asanzo
import se.premex.compose.preview.device.catalog.android.Ascom
import se.premex.compose.preview.device.catalog.android.Ascon
import se.premex.compose.preview.device.catalog.android.Asg
import se.premex.compose.preview.device.catalog.android.Asher
import se.premex.compose.preview.device.catalog.android.Ashima
import se.premex.compose.preview.device.catalog.android.Asianet
import se.premex.compose.preview.device.catalog.android.Aspera
import se.premex.compose.preview.device.catalog.android.Astech
import se.premex.compose.preview.device.catalog.android.Astex
import se.premex.compose.preview.device.catalog.android.Aston
import se.premex.compose.preview.device.catalog.android.Astrex
import se.premex.compose.preview.device.catalog.android.AstroMobile
import se.premex.compose.preview.device.catalog.android.AstroTab
import se.premex.compose.preview.device.catalog.android.Astrom
import se.premex.compose.preview.device.catalog.android.Asus
import se.premex.compose.preview.device.catalog.android.Ateam
import se.premex.compose.preview.device.catalog.android.Atec
import se.premex.compose.preview.device.catalog.android.Athenastellar
import se.premex.compose.preview.device.catalog.android.Athesi
import se.premex.compose.preview.device.catalog.android.AthesiProfessional
import se.premex.compose.preview.device.catalog.android.AtilimMpad
import se.premex.compose.preview.device.catalog.android.Atm
import se.premex.compose.preview.device.catalog.android.Atmpc
import se.premex.compose.preview.device.catalog.android.Atol
import se.premex.compose.preview.device.catalog.android.Atoto
import se.premex.compose.preview.device.catalog.android.Atozee
import se.premex.compose.preview.device.catalog.android.Att
import se.premex.compose.preview.device.catalog.android.Atvio
import se.premex.compose.preview.device.catalog.android.Audi
import se.premex.compose.preview.device.catalog.android.Aupo
import se.premex.compose.preview.device.catalog.android.Aura
import se.premex.compose.preview.device.catalog.android.Aurzen
import se.premex.compose.preview.device.catalog.android.Ava
import se.premex.compose.preview.device.catalog.android.Avacom
import se.premex.compose.preview.device.catalog.android.Avangard
import se.premex.compose.preview.device.catalog.android.Avatel
import se.premex.compose.preview.device.catalog.android.Avaya
import se.premex.compose.preview.device.catalog.android.Avh
import se.premex.compose.preview.device.catalog.android.Avidpad
import se.premex.compose.preview.device.catalog.android.Avion
import se.premex.compose.preview.device.catalog.android.Avita
import se.premex.compose.preview.device.catalog.android.Avtek
import se.premex.compose.preview.device.catalog.android.Avvio
import se.premex.compose.preview.device.catalog.android.Awow
import se.premex.compose.preview.device.catalog.android.AxMeta
import se.premex.compose.preview.device.catalog.android.Axel
import se.premex.compose.preview.device.catalog.android.Axion
import se.premex.compose.preview.device.catalog.android.Axioo
import se.premex.compose.preview.device.catalog.android.Axon
import se.premex.compose.preview.device.catalog.android.Axs
import se.premex.compose.preview.device.catalog.android.Axstv
import se.premex.compose.preview.device.catalog.android.Axxa
import se.premex.compose.preview.device.catalog.android.AxxaMobile
import se.premex.compose.preview.device.catalog.android.Ayat
import se.premex.compose.preview.device.catalog.android.Ayonz
import se.premex.compose.preview.device.catalog.android.Ayya
import se.premex.compose.preview.device.catalog.android.Azatech
import se.premex.compose.preview.device.catalog.android.Azeyou
import se.premex.compose.preview.device.catalog.android.Azom
import se.premex.compose.preview.device.catalog.android.Azpen
import se.premex.compose.preview.device.catalog.android.Azumi
import se.premex.compose.preview.device.catalog.android.BBox
import se.premex.compose.preview.device.catalog.android.Babal
import se.premex.compose.preview.device.catalog.android.Baken
import se.premex.compose.preview.device.catalog.android.Balmuda
import se.premex.compose.preview.device.catalog.android.Banana
import se.premex.compose.preview.device.catalog.android.Bartec
import se.premex.compose.preview.device.catalog.android.Basics
import se.premex.compose.preview.device.catalog.android.Batman
import se.premex.compose.preview.device.catalog.android.Bauf
import se.premex.compose.preview.device.catalog.android.Bauhn
import se.premex.compose.preview.device.catalog.android.Baykus
import se.premex.compose.preview.device.catalog.android.Bbox
import se.premex.compose.preview.device.catalog.android.Bdq
import se.premex.compose.preview.device.catalog.android.BeaFon
import se.premex.compose.preview.device.catalog.android.Beafon
import se.premex.compose.preview.device.catalog.android.Bec
import se.premex.compose.preview.device.catalog.android.Beeline
import se.premex.compose.preview.device.catalog.android.Beghelli
import se.premex.compose.preview.device.catalog.android.Beista
import se.premex.compose.preview.device.catalog.android.Beko
import se.premex.compose.preview.device.catalog.android.Beleno
import se.premex.compose.preview.device.catalog.android.Bell
import se.premex.compose.preview.device.catalog.android.BellCanada
import se.premex.compose.preview.device.catalog.android.Benco
import se.premex.compose.preview.device.catalog.android.Beneve
import se.premex.compose.preview.device.catalog.android.Benq
import se.premex.compose.preview.device.catalog.android.Benten
import se.premex.compose.preview.device.catalog.android.Bentley
import se.premex.compose.preview.device.catalog.android.Benzo
import se.premex.compose.preview.device.catalog.android.Bergstrom
import se.premex.compose.preview.device.catalog.android.Bestbuy
import se.premex.compose.preview.device.catalog.android.Bestreha
import se.premex.compose.preview.device.catalog.android.Besttab
import se.premex.compose.preview.device.catalog.android.BeyondPte
import se.premex.compose.preview.device.catalog.android.Bfelix
import se.premex.compose.preview.device.catalog.android.Bgh
import se.premex.compose.preview.device.catalog.android.Bh
import se.premex.compose.preview.device.catalog.android.BicCamera
import se.premex.compose.preview.device.catalog.android.Biegedy
import se.premex.compose.preview.device.catalog.android.Bigme
import se.premex.compose.preview.device.catalog.android.Bigtech
import se.premex.compose.preview.device.catalog.android.Bilimbook
import se.premex.compose.preview.device.catalog.android.Billion
import se.premex.compose.preview.device.catalog.android.Billow
import se.premex.compose.preview.device.catalog.android.Binge
import se.premex.compose.preview.device.catalog.android.Biolux
import se.premex.compose.preview.device.catalog.android.Biorugged
import se.premex.compose.preview.device.catalog.android.Biosfone
import se.premex.compose.preview.device.catalog.android.BitaInternational
import se.premex.compose.preview.device.catalog.android.Bitel
import se.premex.compose.preview.device.catalog.android.Bitmore
import se.premex.compose.preview.device.catalog.android.Bittium
import se.premex.compose.preview.device.catalog.android.Bizringer
import se.premex.compose.preview.device.catalog.android.Blabloo
import se.premex.compose.preview.device.catalog.android.BlackFox
import se.premex.compose.preview.device.catalog.android.BlackShark
import se.premex.compose.preview.device.catalog.android.Blackanddecker
import se.premex.compose.preview.device.catalog.android.Blackberry
import se.premex.compose.preview.device.catalog.android.Blackfox
import se.premex.compose.preview.device.catalog.android.Blackline
import se.premex.compose.preview.device.catalog.android.Blackshark
import se.premex.compose.preview.device.catalog.android.Blackview
import se.premex.compose.preview.device.catalog.android.Blaupunkt
import se.premex.compose.preview.device.catalog.android.Bleck
import se.premex.compose.preview.device.catalog.android.Blessx
import se.premex.compose.preview.device.catalog.android.Blow
import se.premex.compose.preview.device.catalog.android.Blu
import se.premex.compose.preview.device.catalog.android.Bluboo
import se.premex.compose.preview.device.catalog.android.Blue
import se.premex.compose.preview.device.catalog.android.Bluebird
import se.premex.compose.preview.device.catalog.android.Bluedigit
import se.premex.compose.preview.device.catalog.android.Bluedot
import se.premex.compose.preview.device.catalog.android.Blueworld
import se.premex.compose.preview.device.catalog.android.Bluslate
import se.premex.compose.preview.device.catalog.android.Bmax
import se.premex.compose.preview.device.catalog.android.Bmobile
import se.premex.compose.preview.device.catalog.android.Bmpro
import se.premex.compose.preview.device.catalog.android.Bmxc
import se.premex.compose.preview.device.catalog.android.Bncf
import se.premex.compose.preview.device.catalog.android.Bno
import se.premex.compose.preview.device.catalog.android.Bolva
import se.premex.compose.preview.device.catalog.android.Boreal
import se.premex.compose.preview.device.catalog.android.Botech
import se.premex.compose.preview.device.catalog.android.BothoUniversity
import se.premex.compose.preview.device.catalog.android.Bouyguestelecom
import se.premex.compose.preview.device.catalog.android.Boxy
import se.premex.compose.preview.device.catalog.android.Bphone
import se.premex.compose.preview.device.catalog.android.Bpl
import se.premex.compose.preview.device.catalog.android.Bq
import se.premex.compose.preview.device.catalog.android.Bqmobile
import se.premex.compose.preview.device.catalog.android.Bqru
import se.premex.compose.preview.device.catalog.android.Braillenote
import se.premex.compose.preview.device.catalog.android.Brand
import se.premex.compose.preview.device.catalog.android.Brando
import se.premex.compose.preview.device.catalog.android.Brandt
import se.premex.compose.preview.device.catalog.android.Brava
import se.premex.compose.preview.device.catalog.android.Brave
import se.premex.compose.preview.device.catalog.android.Bravetechs
import se.premex.compose.preview.device.catalog.android.Bravis
import se.premex.compose.preview.device.catalog.android.BridgestoneMobilitySolutions
import se.premex.compose.preview.device.catalog.android.Brighton
import se.premex.compose.preview.device.catalog.android.Brightside
import se.premex.compose.preview.device.catalog.android.Brigmton
import se.premex.compose.preview.device.catalog.android.Briotouch
import se.premex.compose.preview.device.catalog.android.Brisanet
import se.premex.compose.preview.device.catalog.android.Britania
import se.premex.compose.preview.device.catalog.android.Brondi
import se.premex.compose.preview.device.catalog.android.Brookstone
import se.premex.compose.preview.device.catalog.android.Brown
import se.premex.compose.preview.device.catalog.android.Bruhm
import se.premex.compose.preview.device.catalog.android.Btc
import se.premex.compose.preview.device.catalog.android.Bubblegum
import se.premex.compose.preview.device.catalog.android.BuddyPhone
import se.premex.compose.preview.device.catalog.android.Buff
import se.premex.compose.preview.device.catalog.android.Bulsatcom
import se.premex.compose.preview.device.catalog.android.Bundy
import se.premex.compose.preview.device.catalog.android.Bush
import se.premex.compose.preview.device.catalog.android.Bvs
import se.premex.compose.preview.device.catalog.android.Bwjbsw
import se.premex.compose.preview.device.catalog.android.Byjus
import se.premex.compose.preview.device.catalog.android.Byybuo
import se.premex.compose.preview.device.catalog.android.C5Mobile
import se.premex.compose.preview.device.catalog.android.Cablecolor
import se.premex.compose.preview.device.catalog.android.Caixun
import se.premex.compose.preview.device.catalog.android.Callsky
import se.premex.compose.preview.device.catalog.android.Caltta
import se.premex.compose.preview.device.catalog.android.Calus
import se.premex.compose.preview.device.catalog.android.Camfone
import se.premex.compose.preview.device.catalog.android.Canal
import se.premex.compose.preview.device.catalog.android.CanalPlus
import se.premex.compose.preview.device.catalog.android.Canaldigital
import se.premex.compose.preview.device.catalog.android.Candi
import se.premex.compose.preview.device.catalog.android.Candy
import se.premex.compose.preview.device.catalog.android.Captiva
import se.premex.compose.preview.device.catalog.android.Carbonmobile
import se.premex.compose.preview.device.catalog.android.Carp
import se.premex.compose.preview.device.catalog.android.Carrefour
import se.premex.compose.preview.device.catalog.android.Carrozzeria
import se.premex.compose.preview.device.catalog.android.Casio
import se.premex.compose.preview.device.catalog.android.Casper
import se.premex.compose.preview.device.catalog.android.Cat
import se.premex.compose.preview.device.catalog.android.Catchtable
import se.premex.compose.preview.device.catalog.android.Cavion
import se.premex.compose.preview.device.catalog.android.Caxilysh
import se.premex.compose.preview.device.catalog.android.Ccc
import se.premex.compose.preview.device.catalog.android.Cecotec
import se.premex.compose.preview.device.catalog.android.Cedar
import se.premex.compose.preview.device.catalog.android.Ceibal
import se.premex.compose.preview.device.catalog.android.Celero5g
import se.premex.compose.preview.device.catalog.android.Cellacom
import se.premex.compose.preview.device.catalog.android.Cellallure
import se.premex.compose.preview.device.catalog.android.Cellcomtv
import se.premex.compose.preview.device.catalog.android.Cellecor
import se.premex.compose.preview.device.catalog.android.Cello
import se.premex.compose.preview.device.catalog.android.Cellution
import se.premex.compose.preview.device.catalog.android.Centric
import se.premex.compose.preview.device.catalog.android.Cepter
import se.premex.compose.preview.device.catalog.android.Cg
import se.premex.compose.preview.device.catalog.android.Chainway
import se.premex.compose.preview.device.catalog.android.Challenger
import se.premex.compose.preview.device.catalog.android.Chanbly
import se.premex.compose.preview.device.catalog.android.Changhong
import se.premex.compose.preview.device.catalog.android.ChannelMaster
import se.premex.compose.preview.device.catalog.android.Chcnav
import se.premex.compose.preview.device.catalog.android.Cheetah
import se.premex.compose.preview.device.catalog.android.ChemistWarehouse
import se.premex.compose.preview.device.catalog.android.Cherry
import se.premex.compose.preview.device.catalog.android.CherryMobile
import se.premex.compose.preview.device.catalog.android.Cherrymobile
import se.premex.compose.preview.device.catalog.android.ChgTvHub
import se.premex.compose.preview.device.catalog.android.Chieko
import se.premex.compose.preview.device.catalog.android.Chimei
import se.premex.compose.preview.device.catalog.android.Chiq
import se.premex.compose.preview.device.catalog.android.Chofslia
import se.premex.compose.preview.device.catalog.android.Chosunbiz
import se.premex.compose.preview.device.catalog.android.Chunghwatelecom
import se.premex.compose.preview.device.catalog.android.Chuwi
import se.premex.compose.preview.device.catalog.android.Ciber
import se.premex.compose.preview.device.catalog.android.Cidea
import se.premex.compose.preview.device.catalog.android.Cignalplaytv
import se.premex.compose.preview.device.catalog.android.Cik
import se.premex.compose.preview.device.catalog.android.Cilico
import se.premex.compose.preview.device.catalog.android.Ciontek
import se.premex.compose.preview.device.catalog.android.Cipherlab
import se.premex.compose.preview.device.catalog.android.Cisco
import se.premex.compose.preview.device.catalog.android.Citynettv
import se.premex.compose.preview.device.catalog.android.CiuseSrl
import se.premex.compose.preview.device.catalog.android.Cjhv
import se.premex.compose.preview.device.catalog.android.Ckypad
import se.premex.compose.preview.device.catalog.android.Claresta
import se.premex.compose.preview.device.catalog.android.Clarmin
import se.premex.compose.preview.device.catalog.android.Claro
import se.premex.compose.preview.device.catalog.android.Classpro
import se.premex.compose.preview.device.catalog.android.Clearsounds
import se.premex.compose.preview.device.catalog.android.Cleartouch
import se.premex.compose.preview.device.catalog.android.Clementoni
import se.premex.compose.preview.device.catalog.android.Clever
import se.premex.compose.preview.device.catalog.android.Clevertouch
import se.premex.compose.preview.device.catalog.android.ClickonicaExclusive
import se.premex.compose.preview.device.catalog.android.Clicktabds
import se.premex.compose.preview.device.catalog.android.Clide
import se.premex.compose.preview.device.catalog.android.Clio
import se.premex.compose.preview.device.catalog.android.Cloud
import se.premex.compose.preview.device.catalog.android.CloudAirWifi
import se.premex.compose.preview.device.catalog.android.CloudMobile
import se.premex.compose.preview.device.catalog.android.Cloudfone
import se.premex.compose.preview.device.catalog.android.Clover
import se.premex.compose.preview.device.catalog.android.Clovertek
import se.premex.compose.preview.device.catalog.android.Cmcc
import se.premex.compose.preview.device.catalog.android.Cmdc
import se.premex.compose.preview.device.catalog.android.Cns
import se.premex.compose.preview.device.catalog.android.Cobia
import se.premex.compose.preview.device.catalog.android.Coby
import se.premex.compose.preview.device.catalog.android.Cocomm
import se.premex.compose.preview.device.catalog.android.Coex
import se.premex.compose.preview.device.catalog.android.Cogeco
import se.premex.compose.preview.device.catalog.android.Coin
import se.premex.compose.preview.device.catalog.android.Colorroom
import se.premex.compose.preview.device.catalog.android.Colors
import se.premex.compose.preview.device.catalog.android.Colorview
import se.premex.compose.preview.device.catalog.android.Combustech
import se.premex.compose.preview.device.catalog.android.Comio
import se.premex.compose.preview.device.catalog.android.Commbox
import se.premex.compose.preview.device.catalog.android.Compaq
import se.premex.compose.preview.device.catalog.android.Compartir
import se.premex.compose.preview.device.catalog.android.Compumax
import se.premex.compose.preview.device.catalog.android.Comteco
import se.premex.compose.preview.device.catalog.android.Concord
import se.premex.compose.preview.device.catalog.android.Condor
import se.premex.compose.preview.device.catalog.android.Congotelecom
import se.premex.compose.preview.device.catalog.android.Conker
import se.premex.compose.preview.device.catalog.android.Connex
import se.premex.compose.preview.device.catalog.android.Conquest
import se.premex.compose.preview.device.catalog.android.Consung
import se.premex.compose.preview.device.catalog.android.Contex
import se.premex.compose.preview.device.catalog.android.Conti
import se.premex.compose.preview.device.catalog.android.Continental
import se.premex.compose.preview.device.catalog.android.Continentaledison
import se.premex.compose.preview.device.catalog.android.Continuus
import se.premex.compose.preview.device.catalog.android.Contixo
import se.premex.compose.preview.device.catalog.android.Converge
import se.premex.compose.preview.device.catalog.android.Coocaa
import se.premex.compose.preview.device.catalog.android.Cookie
import se.premex.compose.preview.device.catalog.android.Coolfan
import se.premex.compose.preview.device.catalog.android.Coolpad
import se.premex.compose.preview.device.catalog.android.Coop
import se.premex.compose.preview.device.catalog.android.Coopers
import se.premex.compose.preview.device.catalog.android.Coppernic
import se.premex.compose.preview.device.catalog.android.Coralphone
import se.premex.compose.preview.device.catalog.android.CoreInnovations
import se.premex.compose.preview.device.catalog.android.Corn
import se.premex.compose.preview.device.catalog.android.Cosmedia
import se.premex.compose.preview.device.catalog.android.Cosmos
import se.premex.compose.preview.device.catalog.android.CosmoteTv
import se.premex.compose.preview.device.catalog.android.Covia
import se.premex.compose.preview.device.catalog.android.Cozyla
import se.premex.compose.preview.device.catalog.android.Craig
import se.premex.compose.preview.device.catalog.android.Creato
import se.premex.compose.preview.device.catalog.android.Credenceid
import se.premex.compose.preview.device.catalog.android.Crelander
import se.premex.compose.preview.device.catalog.android.Crema
import se.premex.compose.preview.device.catalog.android.Cricket
import se.premex.compose.preview.device.catalog.android.Cristor
import se.premex.compose.preview.device.catalog.android.Crony
import se.premex.compose.preview.device.catalog.android.Crosscall
import se.premex.compose.preview.device.catalog.android.Crownmustang
import se.premex.compose.preview.device.catalog.android.Crua
import se.premex.compose.preview.device.catalog.android.Cryptodata
import se.premex.compose.preview.device.catalog.android.Ctc
import se.premex.compose.preview.device.catalog.android.Ctl
import se.premex.compose.preview.device.catalog.android.Ctroniq
import se.premex.compose.preview.device.catalog.android.Ctv
import se.premex.compose.preview.device.catalog.android.Cubot
import se.premex.compose.preview.device.catalog.android.Custom
import se.premex.compose.preview.device.catalog.android.Cvte
import se.premex.compose.preview.device.catalog.android.Cwell
import se.premex.compose.preview.device.catalog.android.Cwowdefu
import se.premex.compose.preview.device.catalog.android.Cx
import se.premex.compose.preview.device.catalog.android.Cyrus
import se.premex.compose.preview.device.catalog.android.DLight
import se.premex.compose.preview.device.catalog.android.DTech
import se.premex.compose.preview.device.catalog.android.Dabliu
import se.premex.compose.preview.device.catalog.android.Daewoo
import se.premex.compose.preview.device.catalog.android.Dahl
import se.premex.compose.preview.device.catalog.android.Dahua
import se.premex.compose.preview.device.catalog.android.Daiichi
import se.premex.compose.preview.device.catalog.android.Daiko
import se.premex.compose.preview.device.catalog.android.Daiwa
import se.premex.compose.preview.device.catalog.android.Daiyu
import se.premex.compose.preview.device.catalog.android.Damasco
import se.premex.compose.preview.device.catalog.android.Dandoon
import se.premex.compose.preview.device.catalog.android.Danew
import se.premex.compose.preview.device.catalog.android.Dangbei
import se.premex.compose.preview.device.catalog.android.Danilux
import se.premex.compose.preview.device.catalog.android.Dany
import se.premex.compose.preview.device.catalog.android.Daria
import se.premex.compose.preview.device.catalog.android.Datalogic
import se.premex.compose.preview.device.catalog.android.Datamini
import se.premex.compose.preview.device.catalog.android.DataminiTwg10
import se.premex.compose.preview.device.catalog.android.Datsun
import se.premex.compose.preview.device.catalog.android.Dawlance
import se.premex.compose.preview.device.catalog.android.Daymark
import se.premex.compose.preview.device.catalog.android.Dazn
import se.premex.compose.preview.device.catalog.android.Dcg
import se.premex.compose.preview.device.catalog.android.Dcode
import se.premex.compose.preview.device.catalog.android.Dcolor
import se.premex.compose.preview.device.catalog.android.Dec
import se.premex.compose.preview.device.catalog.android.Decaview
import se.premex.compose.preview.device.catalog.android.Deephub
import se.premex.compose.preview.device.catalog.android.Deertime
import se.premex.compose.preview.device.catalog.android.Delephas
import se.premex.compose.preview.device.catalog.android.Dell
import se.premex.compose.preview.device.catalog.android.Denka
import se.premex.compose.preview.device.catalog.android.DensTv
import se.premex.compose.preview.device.catalog.android.Densowave
import se.premex.compose.preview.device.catalog.android.Denver
import se.premex.compose.preview.device.catalog.android.Deplay
import se.premex.compose.preview.device.catalog.android.Depoint
import se.premex.compose.preview.device.catalog.android.Deutschetelekom
import se.premex.compose.preview.device.catalog.android.Dewsod
import se.premex.compose.preview.device.catalog.android.Dexp
import se.premex.compose.preview.device.catalog.android.Deyi
import se.premex.compose.preview.device.catalog.android.Dfn
import se.premex.compose.preview.device.catalog.android.Dghrti
import se.premex.compose.preview.device.catalog.android.Dgo
import se.premex.compose.preview.device.catalog.android.Dgtec
import se.premex.compose.preview.device.catalog.android.Dialn
import se.premex.compose.preview.device.catalog.android.Dialog
import se.premex.compose.preview.device.catalog.android.DialogBlaze
import se.premex.compose.preview.device.catalog.android.DialogTv
import se.premex.compose.preview.device.catalog.android.Dicle
import se.premex.compose.preview.device.catalog.android.DicleTab
import se.premex.compose.preview.device.catalog.android.Didi
import se.premex.compose.preview.device.catalog.android.Didik
import se.premex.compose.preview.device.catalog.android.DidikTab
import se.premex.compose.preview.device.catalog.android.Diggio
import se.premex.compose.preview.device.catalog.android.Digi
import se.premex.compose.preview.device.catalog.android.DigiC2
import se.premex.compose.preview.device.catalog.android.DigiR2
import se.premex.compose.preview.device.catalog.android.Digicel
import se.premex.compose.preview.device.catalog.android.Digidragon
import se.premex.compose.preview.device.catalog.android.Digiking
import se.premex.compose.preview.device.catalog.android.Digiland
import se.premex.compose.preview.device.catalog.android.Digiquest
import se.premex.compose.preview.device.catalog.android.Digit
import se.premex.compose.preview.device.catalog.android.Digits
import se.premex.compose.preview.device.catalog.android.Digma
import se.premex.compose.preview.device.catalog.android.Dijitsu
import se.premex.compose.preview.device.catalog.android.Dingdong
import se.premex.compose.preview.device.catalog.android.Directv
import se.premex.compose.preview.device.catalog.android.Dish
import se.premex.compose.preview.device.catalog.android.Dishtv
import se.premex.compose.preview.device.catalog.android.DishtvNz
import se.premex.compose.preview.device.catalog.android.Disney
import se.premex.compose.preview.device.catalog.android.DisneyPixar
import se.premex.compose.preview.device.catalog.android.Ditec
import se.premex.compose.preview.device.catalog.android.Ditecma
import se.premex.compose.preview.device.catalog.android.Diva
import se.premex.compose.preview.device.catalog.android.Dixon
import se.premex.compose.preview.device.catalog.android.Dl
import se.premex.compose.preview.device.catalog.android.Dmoao
import se.premex.compose.preview.device.catalog.android.Dna
import se.premex.compose.preview.device.catalog.android.Do
import se.premex.compose.preview.device.catalog.android.Docomo
import se.premex.compose.preview.device.catalog.android.Doel
import se.premex.compose.preview.device.catalog.android.DomRuMovix
import se.premex.compose.preview.device.catalog.android.Domaton
import se.premex.compose.preview.device.catalog.android.Doogee
import se.premex.compose.preview.device.catalog.android.Doppio
import se.premex.compose.preview.device.catalog.android.Dora
import se.premex.compose.preview.device.catalog.android.Doro
import se.premex.compose.preview.device.catalog.android.DragonTouch
import se.premex.compose.preview.device.catalog.android.Dragontouch
import se.premex.compose.preview.device.catalog.android.Dreammaker
import se.premex.compose.preview.device.catalog.android.Dreamstar
import se.premex.compose.preview.device.catalog.android.Dreamtech
import se.premex.compose.preview.device.catalog.android.Dreamview
import se.premex.compose.preview.device.catalog.android.Droidlogic
import se.premex.compose.preview.device.catalog.android.Dsic
import se.premex.compose.preview.device.catalog.android.Dtab
import se.premex.compose.preview.device.catalog.android.Dtac
import se.premex.compose.preview.device.catalog.android.Dtv
import se.premex.compose.preview.device.catalog.android.Dual
import se.premex.compose.preview.device.catalog.android.Dunhoo
import se.premex.compose.preview.device.catalog.android.DunnsMobile
import se.premex.compose.preview.device.catalog.android.Duoduogo
import se.premex.compose.preview.device.catalog.android.Durabrand
import se.premex.compose.preview.device.catalog.android.Duubee
import se.premex.compose.preview.device.catalog.android.Dwsummus
import se.premex.compose.preview.device.catalog.android.Dyanora
import se.premex.compose.preview.device.catalog.android.Dynalink
import se.premex.compose.preview.device.catalog.android.Dyon
import se.premex.compose.preview.device.catalog.android.E10
import se.premex.compose.preview.device.catalog.android.E4u
import se.premex.compose.preview.device.catalog.android.EBoda
import se.premex.compose.preview.device.catalog.android.ELead
import se.premex.compose.preview.device.catalog.android.ETel
import se.premex.compose.preview.device.catalog.android.EWealthMobile
import se.premex.compose.preview.device.catalog.android.Eachpai
import se.premex.compose.preview.device.catalog.android.Eacrugged
import se.premex.compose.preview.device.catalog.android.Eagiesoar
import se.premex.compose.preview.device.catalog.android.Eaglesoar
import se.premex.compose.preview.device.catalog.android.Eancom
import se.premex.compose.preview.device.catalog.android.EasElectric
import se.premex.compose.preview.device.catalog.android.Easyteck
import se.premex.compose.preview.device.catalog.android.Ebox
import se.premex.compose.preview.device.catalog.android.Echo
import se.premex.compose.preview.device.catalog.android.Echolink
import se.premex.compose.preview.device.catalog.android.Echosonic
import se.premex.compose.preview.device.catalog.android.Ecom
import se.premex.compose.preview.device.catalog.android.Econnect
import se.premex.compose.preview.device.catalog.android.Ecopower
import se.premex.compose.preview.device.catalog.android.Ecostar
import se.premex.compose.preview.device.catalog.android.Ecs
import se.premex.compose.preview.device.catalog.android.Edenwood
import se.premex.compose.preview.device.catalog.android.Edstar
import se.premex.compose.preview.device.catalog.android.Ee
import se.premex.compose.preview.device.catalog.android.Efioo
import se.premex.compose.preview.device.catalog.android.Egbok
import se.premex.compose.preview.device.catalog.android.Egl
import se.premex.compose.preview.device.catalog.android.Egoboo
import se.premex.compose.preview.device.catalog.android.Egotek
import se.premex.compose.preview.device.catalog.android.Ehlel
import se.premex.compose.preview.device.catalog.android.Einstein
import se.premex.compose.preview.device.catalog.android.Ejboard
import se.premex.compose.preview.device.catalog.android.Ekinox
import se.premex.compose.preview.device.catalog.android.Eko
import se.premex.compose.preview.device.catalog.android.Eks
import se.premex.compose.preview.device.catalog.android.Eksx
import se.premex.compose.preview.device.catalog.android.El
import se.premex.compose.preview.device.catalog.android.Elactron
import se.premex.compose.preview.device.catalog.android.Eldmandate
import se.premex.compose.preview.device.catalog.android.Elecson
import se.premex.compose.preview.device.catalog.android.Electra
import se.premex.compose.preview.device.catalog.android.Electroman
import se.premex.compose.preview.device.catalog.android.Electroneum
import se.premex.compose.preview.device.catalog.android.Element
import se.premex.compose.preview.device.catalog.android.Elephone
import se.premex.compose.preview.device.catalog.android.Elevate
import se.premex.compose.preview.device.catalog.android.Elevn
import se.premex.compose.preview.device.catalog.android.Elexia
import se.premex.compose.preview.device.catalog.android.Elexus
import se.premex.compose.preview.device.catalog.android.Elink
import se.premex.compose.preview.device.catalog.android.Elisa
import se.premex.compose.preview.device.catalog.android.Elisaelamus
import se.premex.compose.preview.device.catalog.android.Elista
import se.premex.compose.preview.device.catalog.android.Elitelux
import se.premex.compose.preview.device.catalog.android.Elo
import se.premex.compose.preview.device.catalog.android.Elsonic
import se.premex.compose.preview.device.catalog.android.Elsys
import se.premex.compose.preview.device.catalog.android.Ematic
import se.premex.compose.preview.device.catalog.android.Emerson
import se.premex.compose.preview.device.catalog.android.Emporia
import se.premex.compose.preview.device.catalog.android.Endo
import se.premex.compose.preview.device.catalog.android.Energizer
import se.premex.compose.preview.device.catalog.android.Energysistem
import se.premex.compose.preview.device.catalog.android.Engel
import se.premex.compose.preview.device.catalog.android.Englaon
import se.premex.compose.preview.device.catalog.android.Enie
import se.premex.compose.preview.device.catalog.android.Enova
import se.premex.compose.preview.device.catalog.android.Entel
import se.premex.compose.preview.device.catalog.android.Entity
import se.premex.compose.preview.device.catalog.android.Entv
import se.premex.compose.preview.device.catalog.android.Eon
import se.premex.compose.preview.device.catalog.android.EonSmartBox
import se.premex.compose.preview.device.catalog.android.Eonsmartbox
import se.premex.compose.preview.device.catalog.android.Epi
import se.premex.compose.preview.device.catalog.android.Epic
import se.premex.compose.preview.device.catalog.android.EpikLearningTab
import se.premex.compose.preview.device.catalog.android.Epikone
import se.premex.compose.preview.device.catalog.android.Epson
import se.premex.compose.preview.device.catalog.android.Equator
import se.premex.compose.preview.device.catalog.android.Equinoxe
import se.premex.compose.preview.device.catalog.android.Ergo
import se.premex.compose.preview.device.catalog.android.Erito
import se.premex.compose.preview.device.catalog.android.Eroc
import se.premex.compose.preview.device.catalog.android.Esley
import se.premex.compose.preview.device.catalog.android.Esol
import se.premex.compose.preview.device.catalog.android.Essential
import se.premex.compose.preview.device.catalog.android.Essentielb
import se.premex.compose.preview.device.catalog.android.Estalky
import se.premex.compose.preview.device.catalog.android.Estar
import se.premex.compose.preview.device.catalog.android.Estelle
import se.premex.compose.preview.device.catalog.android.Estla
import se.premex.compose.preview.device.catalog.android.Estream4k
import se.premex.compose.preview.device.catalog.android.Etalk
import se.premex.compose.preview.device.catalog.android.Etelpremium
import se.premex.compose.preview.device.catalog.android.Etera
import se.premex.compose.preview.device.catalog.android.Eternity
import se.premex.compose.preview.device.catalog.android.Etg
import se.premex.compose.preview.device.catalog.android.Ethiotelecom
import se.premex.compose.preview.device.catalog.android.Etoe
import se.premex.compose.preview.device.catalog.android.Eudora
import se.premex.compose.preview.device.catalog.android.Euskaltel
import se.premex.compose.preview.device.catalog.android.Evercoss
import se.premex.compose.preview.device.catalog.android.EverestEverpad
import se.premex.compose.preview.device.catalog.android.Everex
import se.premex.compose.preview.device.catalog.android.Everis
import se.premex.compose.preview.device.catalog.android.Everpad
import se.premex.compose.preview.device.catalog.android.Evertek
import se.premex.compose.preview.device.catalog.android.Everyphone
import se.premex.compose.preview.device.catalog.android.Evocatv
import se.premex.compose.preview.device.catalog.android.Evoforce1
import se.premex.compose.preview.device.catalog.android.Evolveo
import se.premex.compose.preview.device.catalog.android.Evoo
import se.premex.compose.preview.device.catalog.android.Evopro
import se.premex.compose.preview.device.catalog.android.Evota
import se.premex.compose.preview.device.catalog.android.Evvo
import se.premex.compose.preview.device.catalog.android.Evvoli
import se.premex.compose.preview.device.catalog.android.Ewis
import se.premex.compose.preview.device.catalog.android.Exceed
import se.premex.compose.preview.device.catalog.android.Exclusiv
import se.premex.compose.preview.device.catalog.android.Excotek
import se.premex.compose.preview.device.catalog.android.Exertis
import se.premex.compose.preview.device.catalog.android.Exo
import se.premex.compose.preview.device.catalog.android.Extreme
import se.premex.compose.preview.device.catalog.android.Eyepay
import se.premex.compose.preview.device.catalog.android.F150
import se.premex.compose.preview.device.catalog.android.F2
import se.premex.compose.preview.device.catalog.android.F2mobile
import se.premex.compose.preview.device.catalog.android.FPlus
import se.premex.compose.preview.device.catalog.android.Facetel
import se.premex.compose.preview.device.catalog.android.Facilotab
import se.premex.compose.preview.device.catalog.android.Faiba
import se.premex.compose.preview.device.catalog.android.Fairphone
import se.premex.compose.preview.device.catalog.android.Famix
import se.premex.compose.preview.device.catalog.android.FamousFones
import se.premex.compose.preview.device.catalog.android.Fancyday
import se.premex.compose.preview.device.catalog.android.Fandu
import se.premex.compose.preview.device.catalog.android.Fangor
import se.premex.compose.preview.device.catalog.android.Fareastone
import se.premex.compose.preview.device.catalog.android.Fastlife
import se.premex.compose.preview.device.catalog.android.Fastway
import se.premex.compose.preview.device.catalog.android.Fastwd
import se.premex.compose.preview.device.catalog.android.Fatarus
import se.premex.compose.preview.device.catalog.android.Favoritt
import se.premex.compose.preview.device.catalog.android.Fcc
import se.premex.compose.preview.device.catalog.android.Fcnt
import se.premex.compose.preview.device.catalog.android.Feitian
import se.premex.compose.preview.device.catalog.android.Felux
import se.premex.compose.preview.device.catalog.android.Fengmi
import se.premex.compose.preview.device.catalog.android.Feonal
import se.premex.compose.preview.device.catalog.android.Fero
import se.premex.compose.preview.device.catalog.android.Fezawio
import se.premex.compose.preview.device.catalog.android.Fff
import se.premex.compose.preview.device.catalog.android.Fffsmartlife
import se.premex.compose.preview.device.catalog.android.Fiestaduo
import se.premex.compose.preview.device.catalog.android.Figgers
import se.premex.compose.preview.device.catalog.android.Figi
import se.premex.compose.preview.device.catalog.android.Figo
import se.premex.compose.preview.device.catalog.android.FireflyMobile
import se.premex.compose.preview.device.catalog.android.Firehawk
import se.premex.compose.preview.device.catalog.android.Fiteye
import se.premex.compose.preview.device.catalog.android.Fivahiva
import se.premex.compose.preview.device.catalog.android.Flash
import se.premex.compose.preview.device.catalog.android.Flexy
import se.premex.compose.preview.device.catalog.android.Flipkart
import se.premex.compose.preview.device.catalog.android.Flnet
import se.premex.compose.preview.device.catalog.android.Flow
import se.premex.compose.preview.device.catalog.android.Fluo
import se.premex.compose.preview.device.catalog.android.Fly
import se.premex.compose.preview.device.catalog.android.FlyTech
import se.premex.compose.preview.device.catalog.android.Fmc
import se.premex.compose.preview.device.catalog.android.Fnb
import se.premex.compose.preview.device.catalog.android.Fobem
import se.premex.compose.preview.device.catalog.android.Fol
import se.premex.compose.preview.device.catalog.android.Folg
import se.premex.compose.preview.device.catalog.android.Fonos
import se.premex.compose.preview.device.catalog.android.FonosSmartElectronics
import se.premex.compose.preview.device.catalog.android.Forco
import se.premex.compose.preview.device.catalog.android.Formovie
import se.premex.compose.preview.device.catalog.android.Formuler
import se.premex.compose.preview.device.catalog.android.Fortus
import se.premex.compose.preview.device.catalog.android.Fossibot
import se.premex.compose.preview.device.catalog.android.Fossil
import se.premex.compose.preview.device.catalog.android.Four
import se.premex.compose.preview.device.catalog.android.Fourmobile
import se.premex.compose.preview.device.catalog.android.FoxAndSheep
import se.premex.compose.preview.device.catalog.android.Foxtel
import se.premex.compose.preview.device.catalog.android.Foxx
import se.premex.compose.preview.device.catalog.android.Foxxd
import se.premex.compose.preview.device.catalog.android.Fpd
import se.premex.compose.preview.device.catalog.android.Fplus
import se.premex.compose.preview.device.catalog.android.Fps
import se.premex.compose.preview.device.catalog.android.Fpt
import se.premex.compose.preview.device.catalog.android.FptTelecom
import se.premex.compose.preview.device.catalog.android.Free
import se.premex.compose.preview.device.catalog.android.Freebox
import se.premex.compose.preview.device.catalog.android.Freemobile
import se.premex.compose.preview.device.catalog.android.Freeski
import se.premex.compose.preview.device.catalog.android.Freetel
import se.premex.compose.preview.device.catalog.android.Freeyond
import se.premex.compose.preview.device.catalog.android.Fresh
import se.premex.compose.preview.device.catalog.android.Frunsi
import se.premex.compose.preview.device.catalog.android.Fuego
import se.premex.compose.preview.device.catalog.android.Fujitsu
import se.premex.compose.preview.device.catalog.android.Funai
import se.premex.compose.preview.device.catalog.android.Funker
import se.premex.compose.preview.device.catalog.android.Fuse4k
import se.premex.compose.preview.device.catalog.android.Fusion5
import se.premex.compose.preview.device.catalog.android.Futuretab
import se.premex.compose.preview.device.catalog.android.FxTecPro1x
import se.premex.compose.preview.device.catalog.android.Fxtec
import se.premex.compose.preview.device.catalog.android.GAnica
import se.premex.compose.preview.device.catalog.android.GGuard
import se.premex.compose.preview.device.catalog.android.GMee
import se.premex.compose.preview.device.catalog.android.GTab
import se.premex.compose.preview.device.catalog.android.GTide
import se.premex.compose.preview.device.catalog.android.GTideExtreme
import se.premex.compose.preview.device.catalog.android.GTouch
import se.premex.compose.preview.device.catalog.android.Gangnam
import se.premex.compose.preview.device.catalog.android.Garad
import se.premex.compose.preview.device.catalog.android.Garantiamovil
import se.premex.compose.preview.device.catalog.android.Gateway
import se.premex.compose.preview.device.catalog.android.Gazer
import se.premex.compose.preview.device.catalog.android.Gdl
import se.premex.compose.preview.device.catalog.android.Gdm
import se.premex.compose.preview.device.catalog.android.Ge
import se.premex.compose.preview.device.catalog.android.Geanee
import se.premex.compose.preview.device.catalog.android.Geaneepro
import se.premex.compose.preview.device.catalog.android.Gear
import se.premex.compose.preview.device.catalog.android.GearMobile
import se.premex.compose.preview.device.catalog.android.Geecoo
import se.premex.compose.preview.device.catalog.android.GeneralLuxe
import se.premex.compose.preview.device.catalog.android.Generalmobile
import se.premex.compose.preview.device.catalog.android.Generalsupreme
import se.premex.compose.preview.device.catalog.android.Geniatech
import se.premex.compose.preview.device.catalog.android.Geniora
import se.premex.compose.preview.device.catalog.android.Geoelectron
import se.premex.compose.preview.device.catalog.android.Geomax
import se.premex.compose.preview.device.catalog.android.Geotm
import se.premex.compose.preview.device.catalog.android.Geshem
import se.premex.compose.preview.device.catalog.android.Get
import se.premex.compose.preview.device.catalog.android.Getac
import se.premex.compose.preview.device.catalog.android.Getnord
import se.premex.compose.preview.device.catalog.android.Gevo
import se.premex.compose.preview.device.catalog.android.Gfast
import se.premex.compose.preview.device.catalog.android.Gfive
import se.premex.compose.preview.device.catalog.android.Gguard
import se.premex.compose.preview.device.catalog.android.Ghia
import se.premex.compose.preview.device.catalog.android.GhiaKids
import se.premex.compose.preview.device.catalog.android.Gigabyte
import se.premex.compose.preview.device.catalog.android.Gigaset
import se.premex.compose.preview.device.catalog.android.Gini
import se.premex.compose.preview.device.catalog.android.Ginzzu
import se.premex.compose.preview.device.catalog.android.Gionee
import se.premex.compose.preview.device.catalog.android.Global
import se.premex.compose.preview.device.catalog.android.Global3
import se.premex.compose.preview.device.catalog.android.Globalsec
import se.premex.compose.preview.device.catalog.android.Globe
import se.premex.compose.preview.device.catalog.android.GlobeAtv
import se.premex.compose.preview.device.catalog.android.Globestreamwatch
import se.premex.compose.preview.device.catalog.android.GlobusInfocomLimited
import se.premex.compose.preview.device.catalog.android.Glocalme
import se.premex.compose.preview.device.catalog.android.Glofiish
import se.premex.compose.preview.device.catalog.android.Glx
import se.premex.compose.preview.device.catalog.android.Gm
import se.premex.compose.preview.device.catalog.android.Gmmz
import se.premex.compose.preview.device.catalog.android.Go3
import se.premex.compose.preview.device.catalog.android.GoMdUsa
import se.premex.compose.preview.device.catalog.android.Goally
import se.premex.compose.preview.device.catalog.android.Gobox
import se.premex.compose.preview.device.catalog.android.Gol
import se.premex.compose.preview.device.catalog.android.Goldentec
import se.premex.compose.preview.device.catalog.android.Goldtech
import se.premex.compose.preview.device.catalog.android.Gomdusa
import se.premex.compose.preview.device.catalog.android.Gome
import se.premex.compose.preview.device.catalog.android.Gomobile
import se.premex.compose.preview.device.catalog.android.Goo
import se.premex.compose.preview.device.catalog.android.Goodee
import se.premex.compose.preview.device.catalog.android.Goodtel
import se.premex.compose.preview.device.catalog.android.Google
import se.premex.compose.preview.device.catalog.android.Goplus
import se.premex.compose.preview.device.catalog.android.Gotv
import se.premex.compose.preview.device.catalog.android.Gowin
import se.premex.compose.preview.device.catalog.android.Gpelectronic
import se.premex.compose.preview.device.catalog.android.Gplus
import se.premex.compose.preview.device.catalog.android.Gpx
import se.premex.compose.preview.device.catalog.android.Gradiente
import se.premex.compose.preview.device.catalog.android.Greatasia
import se.premex.compose.preview.device.catalog.android.Greatwall
import se.premex.compose.preview.device.catalog.android.Greenhouse
import se.premex.compose.preview.device.catalog.android.Greenlion
import se.premex.compose.preview.device.catalog.android.Greentel
import se.premex.compose.preview.device.catalog.android.GreentelMobile
import se.premex.compose.preview.device.catalog.android.Grid
import se.premex.compose.preview.device.catalog.android.Grolier
import se.premex.compose.preview.device.catalog.android.Grundig
import se.premex.compose.preview.device.catalog.android.Grunhelm
import se.premex.compose.preview.device.catalog.android.Grunkel
import se.premex.compose.preview.device.catalog.android.Gtel
import se.premex.compose.preview.device.catalog.android.Gto
import se.premex.compose.preview.device.catalog.android.Gtx
import se.premex.compose.preview.device.catalog.android.Guophone
import se.premex.compose.preview.device.catalog.android.H133
import se.premex.compose.preview.device.catalog.android.H800b
import se.premex.compose.preview.device.catalog.android.H819e
import se.premex.compose.preview.device.catalog.android.Haam
import se.premex.compose.preview.device.catalog.android.Haehne
import se.premex.compose.preview.device.catalog.android.Hafury
import se.premex.compose.preview.device.catalog.android.Haier
import se.premex.compose.preview.device.catalog.android.Haitech
import se.premex.compose.preview.device.catalog.android.Hako
import se.premex.compose.preview.device.catalog.android.Hamic
import se.premex.compose.preview.device.catalog.android.Hamlet
import se.premex.compose.preview.device.catalog.android.Hammer
import se.premex.compose.preview.device.catalog.android.Hanasis
import se.premex.compose.preview.device.catalog.android.Handheld
import se.premex.compose.preview.device.catalog.android.HandheldWireless
import se.premex.compose.preview.device.catalog.android.Handtop
import se.premex.compose.preview.device.catalog.android.Hanet
import se.premex.compose.preview.device.catalog.android.HankookCrea
import se.premex.compose.preview.device.catalog.android.Hannspree
import se.premex.compose.preview.device.catalog.android.Hansung
import se.premex.compose.preview.device.catalog.android.Hanyeal
import se.premex.compose.preview.device.catalog.android.Haoqin
import se.premex.compose.preview.device.catalog.android.Haovm
import se.premex.compose.preview.device.catalog.android.HarmonTec
import se.premex.compose.preview.device.catalog.android.Hatch
import se.premex.compose.preview.device.catalog.android.Hathway
import se.premex.compose.preview.device.catalog.android.Haus
import se.premex.compose.preview.device.catalog.android.Hbestore
import se.premex.compose.preview.device.catalog.android.Hcn
import se.premex.compose.preview.device.catalog.android.HdPlus
import se.premex.compose.preview.device.catalog.android.Hdc
import se.premex.compose.preview.device.catalog.android.Headwolf
import se.premex.compose.preview.device.catalog.android.Heatz
import se.premex.compose.preview.device.catalog.android.Hec
import se.premex.compose.preview.device.catalog.android.Helgi
import se.premex.compose.preview.device.catalog.android.Helio
import se.premex.compose.preview.device.catalog.android.HelixInc
import se.premex.compose.preview.device.catalog.android.Hellcat
import se.premex.compose.preview.device.catalog.android.Hellopro
import se.premex.compose.preview.device.catalog.android.Hemiltonpro
import se.premex.compose.preview.device.catalog.android.Hercls
import se.premex.compose.preview.device.catalog.android.Hero
import se.premex.compose.preview.device.catalog.android.Hexabyte
import se.premex.compose.preview.device.catalog.android.Hezire
import se.premex.compose.preview.device.catalog.android.Hi
import se.premex.compose.preview.device.catalog.android.Hicel
import se.premex.compose.preview.device.catalog.android.Hidpt
import se.premex.compose.preview.device.catalog.android.HighQ
import se.premex.compose.preview.device.catalog.android.Highscreen
import se.premex.compose.preview.device.catalog.android.Higrace
import se.premex.compose.preview.device.catalog.android.Hihi
import se.premex.compose.preview.device.catalog.android.Hikers
import se.premex.compose.preview.device.catalog.android.Hiking
import se.premex.compose.preview.device.catalog.android.Hikvision
import se.premex.compose.preview.device.catalog.android.Himade
import se.premex.compose.preview.device.catalog.android.Himedia
import se.premex.compose.preview.device.catalog.android.Himetv
import se.premex.compose.preview.device.catalog.android.Hipstreet
import se.premex.compose.preview.device.catalog.android.HipstreetDtac
import se.premex.compose.preview.device.catalog.android.HipstreetLyf
import se.premex.compose.preview.device.catalog.android.Hisense
import se.premex.compose.preview.device.catalog.android.Hisorl
import se.premex.compose.preview.device.catalog.android.Histbandroidv6
import se.premex.compose.preview.device.catalog.android.Hitabt
import se.premex.compose.preview.device.catalog.android.Hitachi
import se.premex.compose.preview.device.catalog.android.Hkc
import se.premex.compose.preview.device.catalog.android.Hmd
import se.premex.compose.preview.device.catalog.android.Hoco
import se.premex.compose.preview.device.catalog.android.Hoffmann
import se.premex.compose.preview.device.catalog.android.Holo
import se.premex.compose.preview.device.catalog.android.Homatics
import se.premex.compose.preview.device.catalog.android.HomeElite
import se.premex.compose.preview.device.catalog.android.HomePlanet
import se.premex.compose.preview.device.catalog.android.Homeplustv
import se.premex.compose.preview.device.catalog.android.Hometech
import se.premex.compose.preview.device.catalog.android.Homez
import se.premex.compose.preview.device.catalog.android.Homii
import se.premex.compose.preview.device.catalog.android.Homtom
import se.premex.compose.preview.device.catalog.android.Honda
import se.premex.compose.preview.device.catalog.android.Honeywell
import se.premex.compose.preview.device.catalog.android.Honkuahg
import se.premex.compose.preview.device.catalog.android.Honor
import se.premex.compose.preview.device.catalog.android.Hoowel
import se.premex.compose.preview.device.catalog.android.Hoozo
import se.premex.compose.preview.device.catalog.android.Hope
import se.premex.compose.preview.device.catalog.android.Horion
import se.premex.compose.preview.device.catalog.android.Horizon
import se.premex.compose.preview.device.catalog.android.Hot
import se.premex.compose.preview.device.catalog.android.Hotlight
import se.premex.compose.preview.device.catalog.android.Hotpepper
import se.premex.compose.preview.device.catalog.android.Hotwav
import se.premex.compose.preview.device.catalog.android.Hotwire
import se.premex.compose.preview.device.catalog.android.How
import se.premex.compose.preview.device.catalog.android.Hp
import se.premex.compose.preview.device.catalog.android.Hpadia10
import se.premex.compose.preview.device.catalog.android.Hq
import se.premex.compose.preview.device.catalog.android.Htc
import se.premex.compose.preview.device.catalog.android.HtccnChs
import se.premex.compose.preview.device.catalog.android.Huavi
import se.premex.compose.preview.device.catalog.android.Huawei
import se.premex.compose.preview.device.catalog.android.Hublot
import se.premex.compose.preview.device.catalog.android.Hudl
import se.premex.compose.preview.device.catalog.android.Hugerock
import se.premex.compose.preview.device.catalog.android.Huion
import se.premex.compose.preview.device.catalog.android.HumanAcadaemy
import se.premex.compose.preview.device.catalog.android.HumanAcademy
import se.premex.compose.preview.device.catalog.android.Humaxdigital
import se.premex.compose.preview.device.catalog.android.Huosheng
import se.premex.compose.preview.device.catalog.android.Hurricane
import se.premex.compose.preview.device.catalog.android.Huskee
import se.premex.compose.preview.device.catalog.android.Hy
import se.premex.compose.preview.device.catalog.android.Hyatta
import se.premex.compose.preview.device.catalog.android.Hyf
import se.premex.compose.preview.device.catalog.android.Hyjoy
import se.premex.compose.preview.device.catalog.android.Hykker
import se.premex.compose.preview.device.catalog.android.Hytera
import se.premex.compose.preview.device.catalog.android.Hyundai
import se.premex.compose.preview.device.catalog.android.HyundaiMaestro
import se.premex.compose.preview.device.catalog.android.I3Technologies
import se.premex.compose.preview.device.catalog.android.I5
import se.premex.compose.preview.device.catalog.android.IBridge
import se.premex.compose.preview.device.catalog.android.IBuddie
import se.premex.compose.preview.device.catalog.android.IKall
import se.premex.compose.preview.device.catalog.android.ILife
import se.premex.compose.preview.device.catalog.android.IPlus
import se.premex.compose.preview.device.catalog.android.IScream
import se.premex.compose.preview.device.catalog.android.Iball
import se.premex.compose.preview.device.catalog.android.Ibao
import se.premex.compose.preview.device.catalog.android.Ibg
import se.premex.compose.preview.device.catalog.android.Ibirapita
import se.premex.compose.preview.device.catalog.android.Ibowin
import se.premex.compose.preview.device.catalog.android.Ibrit
import se.premex.compose.preview.device.catalog.android.Icare
import se.premex.compose.preview.device.catalog.android.Ice
import se.premex.compose.preview.device.catalog.android.Icon
import se.premex.compose.preview.device.catalog.android.Icraig
import se.premex.compose.preview.device.catalog.android.Idata
import se.premex.compose.preview.device.catalog.android.Idc
import se.premex.compose.preview.device.catalog.android.Idemia
import se.premex.compose.preview.device.catalog.android.Idevice
import se.premex.compose.preview.device.catalog.android.Ifit
import se.premex.compose.preview.device.catalog.android.Iget
import se.premex.compose.preview.device.catalog.android.Ihome
import se.premex.compose.preview.device.catalog.android.Ihunt
import se.premex.compose.preview.device.catalog.android.Iiif150
import se.premex.compose.preview.device.catalog.android.Iiyama
import se.premex.compose.preview.device.catalog.android.Ikall
import se.premex.compose.preview.device.catalog.android.Ikimobile
import se.premex.compose.preview.device.catalog.android.Ikon
import se.premex.compose.preview.device.catalog.android.Iku
import se.premex.compose.preview.device.catalog.android.Ila
import se.premex.compose.preview.device.catalog.android.Imachine
import se.premex.compose.preview.device.catalog.android.Imarflex
import se.premex.compose.preview.device.catalog.android.Imesh
import se.premex.compose.preview.device.catalog.android.Imiia
import se.premex.compose.preview.device.catalog.android.Imin
import se.premex.compose.preview.device.catalog.android.Immer
import se.premex.compose.preview.device.catalog.android.Imo
import se.premex.compose.preview.device.catalog.android.Imose
import se.premex.compose.preview.device.catalog.android.Imozen
import se.premex.compose.preview.device.catalog.android.Impecca
import se.premex.compose.preview.device.catalog.android.Imperial
import se.premex.compose.preview.device.catalog.android.Impex
import se.premex.compose.preview.device.catalog.android.Impression
import se.premex.compose.preview.device.catalog.android.Imt
import se.premex.compose.preview.device.catalog.android.Imuz
import se.premex.compose.preview.device.catalog.android.Inclo
import se.premex.compose.preview.device.catalog.android.Inco
import se.premex.compose.preview.device.catalog.android.Indibox
import se.premex.compose.preview.device.catalog.android.Indigi
import se.premex.compose.preview.device.catalog.android.Indihome
import se.premex.compose.preview.device.catalog.android.Indurama
import se.premex.compose.preview.device.catalog.android.Inefi
import se.premex.compose.preview.device.catalog.android.Infiniton
import se.premex.compose.preview.device.catalog.android.Infinix
import se.premex.compose.preview.device.catalog.android.Infocus
import se.premex.compose.preview.device.catalog.android.Infone
import se.premex.compose.preview.device.catalog.android.Innex
import se.premex.compose.preview.device.catalog.android.Innjoo
import se.premex.compose.preview.device.catalog.android.InnoHit
import se.premex.compose.preview.device.catalog.android.Innocn
import se.premex.compose.preview.device.catalog.android.Innopia
import se.premex.compose.preview.device.catalog.android.Innos
import se.premex.compose.preview.device.catalog.android.Innova
import se.premex.compose.preview.device.catalog.android.Inoi
import se.premex.compose.preview.device.catalog.android.Inovio
import se.premex.compose.preview.device.catalog.android.Inrico
import se.premex.compose.preview.device.catalog.android.Insane
import se.premex.compose.preview.device.catalog.android.Insignia
import se.premex.compose.preview.device.catalog.android.Inspur
import se.premex.compose.preview.device.catalog.android.Insys
import se.premex.compose.preview.device.catalog.android.Intel
import se.premex.compose.preview.device.catalog.android.Intelbras
import se.premex.compose.preview.device.catalog.android.Intelkom
import se.premex.compose.preview.device.catalog.android.Intelligen
import se.premex.compose.preview.device.catalog.android.Intex
import se.premex.compose.preview.device.catalog.android.Intigral
import se.premex.compose.preview.device.catalog.android.Invens
import se.premex.compose.preview.device.catalog.android.Inventus
import se.premex.compose.preview.device.catalog.android.Inves
import se.premex.compose.preview.device.catalog.android.Ioutdoor
import se.premex.compose.preview.device.catalog.android.Iplus
import se.premex.compose.preview.device.catalog.android.Ipro
import se.premex.compose.preview.device.catalog.android.Iproda
import se.premex.compose.preview.device.catalog.android.IqTouch
import se.premex.compose.preview.device.catalog.android.Iqandt
import se.premex.compose.preview.device.catalog.android.Iqoo
import se.premex.compose.preview.device.catalog.android.Iqt
import se.premex.compose.preview.device.catalog.android.Iqu
import se.premex.compose.preview.device.catalog.android.Iqual
import se.premex.compose.preview.device.catalog.android.Ira
import se.premex.compose.preview.device.catalog.android.IraExploreMore
import se.premex.compose.preview.device.catalog.android.Irainbow
import se.premex.compose.preview.device.catalog.android.Irbis
import se.premex.compose.preview.device.catalog.android.Irie
import se.premex.compose.preview.device.catalog.android.Iris
import se.premex.compose.preview.device.catalog.android.IrisOhyama
import se.premex.compose.preview.device.catalog.android.Iriver
import se.premex.compose.preview.device.catalog.android.Irulu
import se.premex.compose.preview.device.catalog.android.Isafe
import se.premex.compose.preview.device.catalog.android.Isafemobile
import se.premex.compose.preview.device.catalog.android.Isced
import se.premex.compose.preview.device.catalog.android.Iskon
import se.premex.compose.preview.device.catalog.android.Ismart
import se.premex.compose.preview.device.catalog.android.Istar
import se.premex.compose.preview.device.catalog.android.Iswag
import se.premex.compose.preview.device.catalog.android.It
import se.premex.compose.preview.device.catalog.android.Itab
import se.premex.compose.preview.device.catalog.android.Itel
import se.premex.compose.preview.device.catalog.android.Itell
import se.premex.compose.preview.device.catalog.android.Itos
import se.premex.compose.preview.device.catalog.android.Iusa
import se.premex.compose.preview.device.catalog.android.Iva
import se.premex.compose.preview.device.catalog.android.Iview
import se.premex.compose.preview.device.catalog.android.Ivoomi
import se.premex.compose.preview.device.catalog.android.Iwaylink
import se.premex.compose.preview.device.catalog.android.Ixtech
import se.premex.compose.preview.device.catalog.android.Iyou
import se.premex.compose.preview.device.catalog.android.Izzi
import se.premex.compose.preview.device.catalog.android.IzziTelecom
import se.premex.compose.preview.device.catalog.android.JCom
import se.premex.compose.preview.device.catalog.android.Jac
import se.premex.compose.preview.device.catalog.android.Jam
import se.premex.compose.preview.device.catalog.android.JamboTechnology
import se.premex.compose.preview.device.catalog.android.Janam
import se.premex.compose.preview.device.catalog.android.Japantaxi
import se.premex.compose.preview.device.catalog.android.JayTech
import se.premex.compose.preview.device.catalog.android.Jcb
import se.premex.compose.preview.device.catalog.android.JciJp
import se.premex.compose.preview.device.catalog.android.Jcom
import se.premex.compose.preview.device.catalog.android.Jds
import se.premex.compose.preview.device.catalog.android.Jeazans
import se.premex.compose.preview.device.catalog.android.Jenesis
import se.premex.compose.preview.device.catalog.android.Jesy
import se.premex.compose.preview.device.catalog.android.Jetfon
import se.premex.compose.preview.device.catalog.android.Jetpoint
import se.premex.compose.preview.device.catalog.android.Jhon
import se.premex.compose.preview.device.catalog.android.Jhzl
import se.premex.compose.preview.device.catalog.android.Jide
import se.premex.compose.preview.device.catalog.android.Jinga
import se.premex.compose.preview.device.catalog.android.Jio
import se.premex.compose.preview.device.catalog.android.Jiuzhou
import se.premex.compose.preview.device.catalog.android.Jivi
import se.premex.compose.preview.device.catalog.android.Jmgo
import se.premex.compose.preview.device.catalog.android.Jooyon
import se.premex.compose.preview.device.catalog.android.Jooyontech
import se.premex.compose.preview.device.catalog.android.Jovi
import se.premex.compose.preview.device.catalog.android.Joyar
import se.premex.compose.preview.device.catalog.android.Joystar
import se.premex.compose.preview.device.catalog.android.Joysurf
import se.premex.compose.preview.device.catalog.android.Jp
import se.premex.compose.preview.device.catalog.android.JpIk
import se.premex.compose.preview.device.catalog.android.Jren
import se.premex.compose.preview.device.catalog.android.Jsw
import se.premex.compose.preview.device.catalog.android.Juedur
import se.premex.compose.preview.device.catalog.android.Jumper
import se.premex.compose.preview.device.catalog.android.Juniper
import se.premex.compose.preview.device.catalog.android.Junipers
import se.premex.compose.preview.device.catalog.android.Just5
import se.premex.compose.preview.device.catalog.android.Justsystems
import se.premex.compose.preview.device.catalog.android.Jusyea
import se.premex.compose.preview.device.catalog.android.Jvc
import se.premex.compose.preview.device.catalog.android.JyonetsuKakaku
import se.premex.compose.preview.device.catalog.android.KElec
import se.premex.compose.preview.device.catalog.android.KTouch
import se.premex.compose.preview.device.catalog.android.Kaan
import se.premex.compose.preview.device.catalog.android.Kagis
import se.premex.compose.preview.device.catalog.android.Kaicom
import se.premex.compose.preview.device.catalog.android.Kaliho
import se.premex.compose.preview.device.catalog.android.Kalley
import se.premex.compose.preview.device.catalog.android.Kammunica
import se.premex.compose.preview.device.catalog.android.Kandao
import se.premex.compose.preview.device.catalog.android.Kanji
import se.premex.compose.preview.device.catalog.android.Kanselir
import se.premex.compose.preview.device.catalog.android.Kaonmedia
import se.premex.compose.preview.device.catalog.android.Kapsys
import se.premex.compose.preview.device.catalog.android.Karbonn
import se.premex.compose.preview.device.catalog.android.Karma
import se.premex.compose.preview.device.catalog.android.Kat
import se.premex.compose.preview.device.catalog.android.Kazam
import se.premex.compose.preview.device.catalog.android.Kbro
import se.premex.compose.preview.device.catalog.android.Kccl
import se.premex.compose.preview.device.catalog.android.KdInteractive
import se.premex.compose.preview.device.catalog.android.Kddi
import se.premex.compose.preview.device.catalog.android.KddiU
import se.premex.compose.preview.device.catalog.android.Kefeya
import se.premex.compose.preview.device.catalog.android.Keian
import se.premex.compose.preview.device.catalog.android.KelyxKl783
import se.premex.compose.preview.device.catalog.android.KemplerStrauss
import se.premex.compose.preview.device.catalog.android.Kemplerstruss
import se.premex.compose.preview.device.catalog.android.Kenbo
import se.premex.compose.preview.device.catalog.android.Kenshi
import se.premex.compose.preview.device.catalog.android.Kenwood
import se.premex.compose.preview.device.catalog.android.Keyence
import se.premex.compose.preview.device.catalog.android.Kgtel
import se.premex.compose.preview.device.catalog.android.Kiano
import se.premex.compose.preview.device.catalog.android.Kickpi
import se.premex.compose.preview.device.catalog.android.Kiddoboo
import se.premex.compose.preview.device.catalog.android.Kinetictv
import se.premex.compose.preview.device.catalog.android.Kingcomm
import se.premex.compose.preview.device.catalog.android.Kinhank
import se.premex.compose.preview.device.catalog.android.Kinstone
import se.premex.compose.preview.device.catalog.android.Kiowa
import se.premex.compose.preview.device.catalog.android.Kirisun
import se.premex.compose.preview.device.catalog.android.Kiunit
import se.premex.compose.preview.device.catalog.android.Kivi
import se.premex.compose.preview.device.catalog.android.Klipad
import se.premex.compose.preview.device.catalog.android.KlipadXLargeTab
import se.premex.compose.preview.device.catalog.android.Kobo
import se.premex.compose.preview.device.catalog.android.Kodak
import se.premex.compose.preview.device.catalog.android.Kogan
import se.premex.compose.preview.device.catalog.android.Kolin
import se.premex.compose.preview.device.catalog.android.Kolke
import se.premex.compose.preview.device.catalog.android.Konic
import se.premex.compose.preview.device.catalog.android.Konka
import se.premex.compose.preview.device.catalog.android.Konrow
import se.premex.compose.preview.device.catalog.android.Koobee
import se.premex.compose.preview.device.catalog.android.Kooda
import se.premex.compose.preview.device.catalog.android.Koolmaax
import se.premex.compose.preview.device.catalog.android.Kozen
import se.premex.compose.preview.device.catalog.android.Kpn
import se.premex.compose.preview.device.catalog.android.Krip
import se.premex.compose.preview.device.catalog.android.Krono
import se.premex.compose.preview.device.catalog.android.KrossElegance
import se.premex.compose.preview.device.catalog.android.Krosselegance
import se.premex.compose.preview.device.catalog.android.KrugerMatz
import se.premex.compose.preview.device.catalog.android.Krugerandmatz
import se.premex.compose.preview.device.catalog.android.Kt
import se.premex.compose.preview.device.catalog.android.Ktc
import se.premex.compose.preview.device.catalog.android.Ktv
import se.premex.compose.preview.device.catalog.android.Kubik
import se.premex.compose.preview.device.catalog.android.Kult
import se.premex.compose.preview.device.catalog.android.Kunfabo
import se.premex.compose.preview.device.catalog.android.Kunft
import se.premex.compose.preview.device.catalog.android.Kuori
import se.premex.compose.preview.device.catalog.android.Kurio
import se.premex.compose.preview.device.catalog.android.Kuu
import se.premex.compose.preview.device.catalog.android.Kuva
import se.premex.compose.preview.device.catalog.android.Kxd
import se.premex.compose.preview.device.catalog.android.Kyaster
import se.premex.compose.preview.device.catalog.android.Kyocera
import se.premex.compose.preview.device.catalog.android.KyodoTv
import se.premex.compose.preview.device.catalog.android.Kzen
import se.premex.compose.preview.device.catalog.android.Laiq
import se.premex.compose.preview.device.catalog.android.Lamborghini
import se.premex.compose.preview.device.catalog.android.Lamzien
import se.premex.compose.preview.device.catalog.android.Landbyte
import se.premex.compose.preview.device.catalog.android.Landi
import se.premex.compose.preview.device.catalog.android.Landrover
import se.premex.compose.preview.device.catalog.android.Lango
import se.premex.compose.preview.device.catalog.android.Lanix
import se.premex.compose.preview.device.catalog.android.Larvand
import se.premex.compose.preview.device.catalog.android.Laser
import se.premex.compose.preview.device.catalog.android.Launch
import se.premex.compose.preview.device.catalog.android.Lava
import se.premex.compose.preview.device.catalog.android.Lavietab
import se.premex.compose.preview.device.catalog.android.Lavietabe
import se.premex.compose.preview.device.catalog.android.Lazer
import se.premex.compose.preview.device.catalog.android.Lazor
import se.premex.compose.preview.device.catalog.android.Lbq
import se.premex.compose.preview.device.catalog.android.Leader
import se.premex.compose.preview.device.catalog.android.Leaderhub
import se.premex.compose.preview.device.catalog.android.Leagoo
import se.premex.compose.preview.device.catalog.android.Lebest
import se.premex.compose.preview.device.catalog.android.Leeco
import se.premex.compose.preview.device.catalog.android.Legamaster
import se.premex.compose.preview.device.catalog.android.Legend
import se.premex.compose.preview.device.catalog.android.Legendcomfortable
import se.premex.compose.preview.device.catalog.android.Leiainc
import se.premex.compose.preview.device.catalog.android.Leica
import se.premex.compose.preview.device.catalog.android.Lenovo
import se.premex.compose.preview.device.catalog.android.Leomo
import se.premex.compose.preview.device.catalog.android.Leotec
import se.premex.compose.preview.device.catalog.android.Lepan
import se.premex.compose.preview.device.catalog.android.Lesia
import se.premex.compose.preview.device.catalog.android.Letv
import se.premex.compose.preview.device.catalog.android.Lexa
import se.premex.compose.preview.device.catalog.android.Lexibook
import se.premex.compose.preview.device.catalog.android.LgCns
import se.premex.compose.preview.device.catalog.android.LgElectronics
import se.premex.compose.preview.device.catalog.android.Lge
import se.premex.compose.preview.device.catalog.android.Lghellovision
import se.premex.compose.preview.device.catalog.android.Lguplus
import se.premex.compose.preview.device.catalog.android.Liberton
import se.premex.compose.preview.device.catalog.android.Libre
import se.premex.compose.preview.device.catalog.android.LifeDigital
import se.premex.compose.preview.device.catalog.android.LifeMobile
import se.premex.compose.preview.device.catalog.android.Lifephone
import se.premex.compose.preview.device.catalog.android.Lincplus
import se.premex.compose.preview.device.catalog.android.Linknet
import se.premex.compose.preview.device.catalog.android.Linnex
import se.premex.compose.preview.device.catalog.android.Linsar
import se.premex.compose.preview.device.catalog.android.Linsay
import se.premex.compose.preview.device.catalog.android.Listo
import se.premex.compose.preview.device.catalog.android.Litbyleia
import se.premex.compose.preview.device.catalog.android.Litetel
import se.premex.compose.preview.device.catalog.android.Lloyd
import se.premex.compose.preview.device.catalog.android.Lnmbbs
import se.premex.compose.preview.device.catalog.android.Logic
import se.premex.compose.preview.device.catalog.android.LogicInstrumemt
import se.premex.compose.preview.device.catalog.android.Logicom
import se.premex.compose.preview.device.catalog.android.Logik
import se.premex.compose.preview.device.catalog.android.Logitec
import se.premex.compose.preview.device.catalog.android.Logitech
import se.premex.compose.preview.device.catalog.android.Louisvuitton
import se.premex.compose.preview.device.catalog.android.Lp
import se.premex.compose.preview.device.catalog.android.Lt
import se.premex.compose.preview.device.catalog.android.LtMobile
import se.premex.compose.preview.device.catalog.android.Lucoms
import se.premex.compose.preview.device.catalog.android.Lumigon
import se.premex.compose.preview.device.catalog.android.Lumio
import se.premex.compose.preview.device.catalog.android.Lumitel
import se.premex.compose.preview.device.catalog.android.Lumus
import se.premex.compose.preview.device.catalog.android.Luna
import se.premex.compose.preview.device.catalog.android.Lunar
import se.premex.compose.preview.device.catalog.android.Lunnen
import se.premex.compose.preview.device.catalog.android.Luo
import se.premex.compose.preview.device.catalog.android.LushMint
import se.premex.compose.preview.device.catalog.android.Lville
import se.premex.compose.preview.device.catalog.android.Lw
import se.premex.compose.preview.device.catalog.android.Lyf
import se.premex.compose.preview.device.catalog.android.Lynknex
import se.premex.compose.preview.device.catalog.android.LyotechLabs
import se.premex.compose.preview.device.catalog.android.Lzu
import se.premex.compose.preview.device.catalog.android.M3
import se.premex.compose.preview.device.catalog.android.M4tel
import se.premex.compose.preview.device.catalog.android.MHorse
import se.premex.compose.preview.device.catalog.android.MKopa
import se.premex.compose.preview.device.catalog.android.Mafe
import se.premex.compose.preview.device.catalog.android.Mag
import se.premex.compose.preview.device.catalog.android.Magch
import se.premex.compose.preview.device.catalog.android.MagentaTv
import se.premex.compose.preview.device.catalog.android.Magentatv
import se.premex.compose.preview.device.catalog.android.Magicworld
import se.premex.compose.preview.device.catalog.android.Magnavox
import se.premex.compose.preview.device.catalog.android.Magneticnorth
import se.premex.compose.preview.device.catalog.android.Magnumtech
import se.premex.compose.preview.device.catalog.android.Majestic
import se.premex.compose.preview.device.catalog.android.Malata
import se.premex.compose.preview.device.catalog.android.Mango
import se.premex.compose.preview.device.catalog.android.Mantra
import se.premex.compose.preview.device.catalog.android.Mara
import se.premex.compose.preview.device.catalog.android.MaraPhones
import se.premex.compose.preview.device.catalog.android.Maraphones
import se.premex.compose.preview.device.catalog.android.Marcel
import se.premex.compose.preview.device.catalog.android.Markatab
import se.premex.compose.preview.device.catalog.android.Marq
import se.premex.compose.preview.device.catalog.android.Marshall
import se.premex.compose.preview.device.catalog.android.Marvel
import se.premex.compose.preview.device.catalog.android.Marvue
import se.premex.compose.preview.device.catalog.android.Mascom
import se.premex.compose.preview.device.catalog.android.Masscom
import se.premex.compose.preview.device.catalog.android.Masstel
import se.premex.compose.preview.device.catalog.android.MasterG
import se.premex.compose.preview.device.catalog.android.Masterg
import se.premex.compose.preview.device.catalog.android.Mastertech
import se.premex.compose.preview.device.catalog.android.Mauritiustelcom
import se.premex.compose.preview.device.catalog.android.Mauritiustelecom
import se.premex.compose.preview.device.catalog.android.Maxcom
import se.premex.compose.preview.device.catalog.android.Maxfone
import se.premex.compose.preview.device.catalog.android.Maxhub
import se.premex.compose.preview.device.catalog.android.Maximus
import se.premex.compose.preview.device.catalog.android.Maxis
import se.premex.compose.preview.device.catalog.android.Maxlegen
import se.premex.compose.preview.device.catalog.android.Maxon
import se.premex.compose.preview.device.catalog.android.Maxpac
import se.premex.compose.preview.device.catalog.android.Maxron
import se.premex.compose.preview.device.catalog.android.MaxsonicElite
import se.premex.compose.preview.device.catalog.android.Maxtron
import se.premex.compose.preview.device.catalog.android.Maxvi
import se.premex.compose.preview.device.catalog.android.Maxwell
import se.premex.compose.preview.device.catalog.android.Maxwest
import se.premex.compose.preview.device.catalog.android.Maze
import se.premex.compose.preview.device.catalog.android.MazeSpeed
import se.premex.compose.preview.device.catalog.android.Mbo
import se.premex.compose.preview.device.catalog.android.Mbs
import se.premex.compose.preview.device.catalog.android.Mdc
import se.premex.compose.preview.device.catalog.android.MeMobile
import se.premex.compose.preview.device.catalog.android.Meanit
import se.premex.compose.preview.device.catalog.android.Meberry
import se.premex.compose.preview.device.catalog.android.Mecer
import se.premex.compose.preview.device.catalog.android.Mecool
import se.premex.compose.preview.device.catalog.android.Mediabox
import se.premex.compose.preview.device.catalog.android.Mediacom
import se.premex.compose.preview.device.catalog.android.Mediatek
import se.premex.compose.preview.device.catalog.android.Medion
import se.premex.compose.preview.device.catalog.android.Meferi
import se.premex.compose.preview.device.catalog.android.Megacable
import se.premex.compose.preview.device.catalog.android.Megafon
import se.premex.compose.preview.device.catalog.android.Meiigoo
import se.premex.compose.preview.device.catalog.android.Meitu
import se.premex.compose.preview.device.catalog.android.Meize
import se.premex.compose.preview.device.catalog.android.Meizu
import se.premex.compose.preview.device.catalog.android.Melefon
import se.premex.compose.preview.device.catalog.android.Melita
import se.premex.compose.preview.device.catalog.android.Memorex
import se.premex.compose.preview.device.catalog.android.Menfop
import se.premex.compose.preview.device.catalog.android.Mengaltab
import se.premex.compose.preview.device.catalog.android.Mengdash
import se.premex.compose.preview.device.catalog.android.Meo
import se.premex.compose.preview.device.catalog.android.Meswao
import se.premex.compose.preview.device.catalog.android.Metfone
import se.premex.compose.preview.device.catalog.android.Metropcs
import se.premex.compose.preview.device.catalog.android.Metz
import se.premex.compose.preview.device.catalog.android.Mgears
import se.premex.compose.preview.device.catalog.android.Mgs
import se.premex.compose.preview.device.catalog.android.Mhl
import se.premex.compose.preview.device.catalog.android.Mi
import se.premex.compose.preview.device.catalog.android.Micromax
import se.premex.compose.preview.device.catalog.android.Microtech
import se.premex.compose.preview.device.catalog.android.Microtouch
import se.premex.compose.preview.device.catalog.android.Mightier
import se.premex.compose.preview.device.catalog.android.Miku
import se.premex.compose.preview.device.catalog.android.Mimio
import se.premex.compose.preview.device.catalog.android.Mindeo
import se.premex.compose.preview.device.catalog.android.MinimalPhone
import se.premex.compose.preview.device.catalog.android.Minister
import se.premex.compose.preview.device.catalog.android.Minix
import se.premex.compose.preview.device.catalog.android.Mint
import se.premex.compose.preview.device.catalog.android.MintMobile
import se.premex.compose.preview.device.catalog.android.Mintt
import se.premex.compose.preview.device.catalog.android.Mione
import se.premex.compose.preview.device.catalog.android.Miotab
import se.premex.compose.preview.device.catalog.android.Mipo
import se.premex.compose.preview.device.catalog.android.Mira
import se.premex.compose.preview.device.catalog.android.MiracleTap
import se.premex.compose.preview.device.catalog.android.Mirage
import se.premex.compose.preview.device.catalog.android.Miramage
import se.premex.compose.preview.device.catalog.android.Mirarel
import se.premex.compose.preview.device.catalog.android.Miray
import se.premex.compose.preview.device.catalog.android.Miro
import se.premex.compose.preview.device.catalog.android.Mitac
import se.premex.compose.preview.device.catalog.android.Mito
import se.premex.compose.preview.device.catalog.android.Mitsubishi
import se.premex.compose.preview.device.catalog.android.Mitsui
import se.premex.compose.preview.device.catalog.android.Mitsushiba
import se.premex.compose.preview.device.catalog.android.Mlab
import se.premex.compose.preview.device.catalog.android.Mlink
import se.premex.compose.preview.device.catalog.android.Mlogix
import se.premex.compose.preview.device.catalog.android.Mls
import se.premex.compose.preview.device.catalog.android.Mmax
import se.premex.compose.preview.device.catalog.android.MncNow
import se.premex.compose.preview.device.catalog.android.Mobell
import se.premex.compose.preview.device.catalog.android.MobiBuckeye
import se.premex.compose.preview.device.catalog.android.MobiSectv
import se.premex.compose.preview.device.catalog.android.Mobicel
import se.premex.compose.preview.device.catalog.android.Mobicell
import se.premex.compose.preview.device.catalog.android.Mobiiot
import se.premex.compose.preview.device.catalog.android.Mobiistar
import se.premex.compose.preview.device.catalog.android.Mobiledemand
import se.premex.compose.preview.device.catalog.android.Mobily
import se.premex.compose.preview.device.catalog.android.Mobistel
import se.premex.compose.preview.device.catalog.android.Mobivista
import se.premex.compose.preview.device.catalog.android.Mobiwire
import se.premex.compose.preview.device.catalog.android.Mobodo
import se.premex.compose.preview.device.catalog.android.Mobulaa
import se.premex.compose.preview.device.catalog.android.Mobvoi
import se.premex.compose.preview.device.catalog.android.Mobydata
import se.premex.compose.preview.device.catalog.android.Mode
import se.premex.compose.preview.device.catalog.android.Mode1
import se.premex.compose.preview.device.catalog.android.Modeearnphone
import se.premex.compose.preview.device.catalog.android.Mojatv
import se.premex.compose.preview.device.catalog.android.MolaTv
import se.premex.compose.preview.device.catalog.android.Molvu
import se.premex.compose.preview.device.catalog.android.Mondial
import se.premex.compose.preview.device.catalog.android.Monex
import se.premex.compose.preview.device.catalog.android.Monomax
import se.premex.compose.preview.device.catalog.android.Mookia
import se.premex.compose.preview.device.catalog.android.MoolahMobile
import se.premex.compose.preview.device.catalog.android.Morep
import se.premex.compose.preview.device.catalog.android.Mosambee
import se.premex.compose.preview.device.catalog.android.Moshimore
import se.premex.compose.preview.device.catalog.android.Mot
import se.premex.compose.preview.device.catalog.android.Motorola
import se.premex.compose.preview.device.catalog.android.Motorolasolutions
import se.premex.compose.preview.device.catalog.android.Motsol
import se.premex.compose.preview.device.catalog.android.Movado
import se.premex.compose.preview.device.catalog.android.Move
import se.premex.compose.preview.device.catalog.android.Movfast
import se.premex.compose.preview.device.catalog.android.Movienet
import se.premex.compose.preview.device.catalog.android.Movistar
import se.premex.compose.preview.device.catalog.android.Movisun
import se.premex.compose.preview.device.catalog.android.Movitel
import se.premex.compose.preview.device.catalog.android.Movix
import se.premex.compose.preview.device.catalog.android.Moxee
import se.premex.compose.preview.device.catalog.android.Moxnice
import se.premex.compose.preview.device.catalog.android.Mozatab
import se.premex.compose.preview.device.catalog.android.Mpgio
import se.premex.compose.preview.device.catalog.android.Mport
import se.premex.compose.preview.device.catalog.android.Msi
import se.premex.compose.preview.device.catalog.android.Msota
import se.premex.compose.preview.device.catalog.android.Mstar
import se.premex.compose.preview.device.catalog.android.Mswipe
import se.premex.compose.preview.device.catalog.android.Mtc
import se.premex.compose.preview.device.catalog.android.Mtek
import se.premex.compose.preview.device.catalog.android.Mtel
import se.premex.compose.preview.device.catalog.android.Mtn
import se.premex.compose.preview.device.catalog.android.Mtr
import se.premex.compose.preview.device.catalog.android.Mts
import se.premex.compose.preview.device.catalog.android.Mtt
import se.premex.compose.preview.device.catalog.android.Mu
import se.premex.compose.preview.device.catalog.android.Mujenyz
import se.premex.compose.preview.device.catalog.android.Multilaser
import se.premex.compose.preview.device.catalog.android.Multismart
import se.premex.compose.preview.device.catalog.android.Multynet
import se.premex.compose.preview.device.catalog.android.Mundopacifico
import se.premex.compose.preview.device.catalog.android.Mwalimuplus
import se.premex.compose.preview.device.catalog.android.My
import se.premex.compose.preview.device.catalog.android.Myanmarnet
import se.premex.compose.preview.device.catalog.android.Mybox
import se.premex.compose.preview.device.catalog.android.Myphone
import se.premex.compose.preview.device.catalog.android.MyrepublicStb2023
import se.premex.compose.preview.device.catalog.android.Myria
import se.premex.compose.preview.device.catalog.android.Myros
import se.premex.compose.preview.device.catalog.android.Mystic
import se.premex.compose.preview.device.catalog.android.MytabPro
import se.premex.compose.preview.device.catalog.android.NOne
import se.premex.compose.preview.device.catalog.android.Nabi
import se.premex.compose.preview.device.catalog.android.Nakamichi
import se.premex.compose.preview.device.catalog.android.Nanho
import se.premex.compose.preview.device.catalog.android.Nano
import se.premex.compose.preview.device.catalog.android.Naomicase
import se.premex.compose.preview.device.catalog.android.Naomiphone
import se.premex.compose.preview.device.catalog.android.Nasco
import se.premex.compose.preview.device.catalog.android.Nautilus
import se.premex.compose.preview.device.catalog.android.Navcity
import se.premex.compose.preview.device.catalog.android.Navitel
import se.premex.compose.preview.device.catalog.android.Navon
import se.premex.compose.preview.device.catalog.android.Naxa
import se.premex.compose.preview.device.catalog.android.Nebula
import se.premex.compose.preview.device.catalog.android.Nec
import se.premex.compose.preview.device.catalog.android.Necnon
import se.premex.compose.preview.device.catalog.android.Neffos
import se.premex.compose.preview.device.catalog.android.Nelatech
import se.premex.compose.preview.device.catalog.android.Neo
import se.premex.compose.preview.device.catalog.android.Neocore
import se.premex.compose.preview.device.catalog.android.Neon
import se.premex.compose.preview.device.catalog.android.Neoniq
import se.premex.compose.preview.device.catalog.android.Neoregent
import se.premex.compose.preview.device.catalog.android.Netbox
import se.premex.compose.preview.device.catalog.android.Netgreen
import se.premex.compose.preview.device.catalog.android.Netmak
import se.premex.compose.preview.device.catalog.android.Netogy
import se.premex.compose.preview.device.catalog.android.Nettv
import se.premex.compose.preview.device.catalog.android.Newal
import se.premex.compose.preview.device.catalog.android.Newbalance
import se.premex.compose.preview.device.catalog.android.Newbridge
import se.premex.compose.preview.device.catalog.android.Newbrige
import se.premex.compose.preview.device.catalog.android.Newland
import se.premex.compose.preview.device.catalog.android.Newline
import se.premex.compose.preview.device.catalog.android.Newspice
import se.premex.compose.preview.device.catalog.android.Newsun
import se.premex.compose.preview.device.catalog.android.Newton
import se.premex.compose.preview.device.catalog.android.Nexa
import se.premex.compose.preview.device.catalog.android.Next
import se.premex.compose.preview.device.catalog.android.NextG
import se.premex.compose.preview.device.catalog.android.NextTechnologies
import se.premex.compose.preview.device.catalog.android.Nexta
import se.premex.compose.preview.device.catalog.android.Nextbit
import se.premex.compose.preview.device.catalog.android.Nextbook
import se.premex.compose.preview.device.catalog.android.NextbymaxisM1
import se.premex.compose.preview.device.catalog.android.Nextgear
import se.premex.compose.preview.device.catalog.android.Nexus
import se.premex.compose.preview.device.catalog.android.Nexwin
import se.premex.compose.preview.device.catalog.android.Ngm
import se.premex.compose.preview.device.catalog.android.NikaiPro
import se.premex.compose.preview.device.catalog.android.Nikkei
import se.premex.compose.preview.device.catalog.android.Nio
import se.premex.compose.preview.device.catalog.android.Nisato
import se.premex.compose.preview.device.catalog.android.Nissan
import se.premex.compose.preview.device.catalog.android.Nixon
import se.premex.compose.preview.device.catalog.android.Njoy
import se.premex.compose.preview.device.catalog.android.NkjAqt100
import se.premex.compose.preview.device.catalog.android.Noa
import se.premex.compose.preview.device.catalog.android.Nobby
import se.premex.compose.preview.device.catalog.android.Nobleskiodo
import se.premex.compose.preview.device.catalog.android.Noblex
import se.premex.compose.preview.device.catalog.android.Nobrand
import se.premex.compose.preview.device.catalog.android.Nodropout
import se.premex.compose.preview.device.catalog.android.Noga
import se.premex.compose.preview.device.catalog.android.Nokia
import se.premex.compose.preview.device.catalog.android.Nomi
import se.premex.compose.preview.device.catalog.android.Nomu
import se.premex.compose.preview.device.catalog.android.Nook
import se.premex.compose.preview.device.catalog.android.NorthTech
import se.premex.compose.preview.device.catalog.android.Noryox
import se.premex.compose.preview.device.catalog.android.Nos
import se.premex.compose.preview.device.catalog.android.Nothing
import se.premex.compose.preview.device.catalog.android.Novey
import se.premex.compose.preview.device.catalog.android.Novinsun
import se.premex.compose.preview.device.catalog.android.Novo
import se.premex.compose.preview.device.catalog.android.Novojoy
import se.premex.compose.preview.device.catalog.android.NowE
import se.premex.compose.preview.device.catalog.android.Nowo
import se.premex.compose.preview.device.catalog.android.Nowtv
import se.premex.compose.preview.device.catalog.android.Npls
import se.premex.compose.preview.device.catalog.android.Nt
import se.premex.compose.preview.device.catalog.android.Nuans
import se.premex.compose.preview.device.catalog.android.Nubia
import se.premex.compose.preview.device.catalog.android.NubioLite
import se.premex.compose.preview.device.catalog.android.Nuribom
import se.premex.compose.preview.device.catalog.android.Nuu
import se.premex.compose.preview.device.catalog.android.Nuvision
import se.premex.compose.preview.device.catalog.android.Nvidia
import se.premex.compose.preview.device.catalog.android.Nw
import se.premex.compose.preview.device.catalog.android.NyxMobile
import se.premex.compose.preview.device.catalog.android.O2
import se.premex.compose.preview.device.catalog.android.Oale
import se.premex.compose.preview.device.catalog.android.Oangcc
import se.premex.compose.preview.device.catalog.android.Oase
import se.premex.compose.preview.device.catalog.android.Oasys
import se.premex.compose.preview.device.catalog.android.Octopus
import se.premex.compose.preview.device.catalog.android.Odea
import se.premex.compose.preview.device.catalog.android.Odido
import se.premex.compose.preview.device.catalog.android.Odo
import se.premex.compose.preview.device.catalog.android.Odotpad
import se.premex.compose.preview.device.catalog.android.Ods
import se.premex.compose.preview.device.catalog.android.Odys
import se.premex.compose.preview.device.catalog.android.Ofd
import se.premex.compose.preview.device.catalog.android.Ok
import se.premex.compose.preview.device.catalog.android.Okapi
import se.premex.compose.preview.device.catalog.android.Okayseamedia
import se.premex.compose.preview.device.catalog.android.Okin
import se.premex.compose.preview.device.catalog.android.Oksi
import se.premex.compose.preview.device.catalog.android.Okulaku
import se.premex.compose.preview.device.catalog.android.Okv
import se.premex.compose.preview.device.catalog.android.Olax
import se.premex.compose.preview.device.catalog.android.Olike
import se.premex.compose.preview.device.catalog.android.Olimpo
import se.premex.compose.preview.device.catalog.android.Olive
import se.premex.compose.preview.device.catalog.android.Olla
import se.premex.compose.preview.device.catalog.android.Olympia
import se.premex.compose.preview.device.catalog.android.Omax
import se.premex.compose.preview.device.catalog.android.Omix
import se.premex.compose.preview.device.catalog.android.Onda
import se.premex.compose.preview.device.catalog.android.OndaTlc
import se.premex.compose.preview.device.catalog.android.Onelern
import se.premex.compose.preview.device.catalog.android.Oneplus
import se.premex.compose.preview.device.catalog.android.Onerugged
import se.premex.compose.preview.device.catalog.android.Onescreen
import se.premex.compose.preview.device.catalog.android.Onida
import se.premex.compose.preview.device.catalog.android.Onkyo
import se.premex.compose.preview.device.catalog.android.Onn
import se.premex.compose.preview.device.catalog.android.Onyx
import se.premex.compose.preview.device.catalog.android.Ooredoo
import se.premex.compose.preview.device.catalog.android.Opay
import se.premex.compose.preview.device.catalog.android.Opel
import se.premex.compose.preview.device.catalog.android.OpelMobile
import se.premex.compose.preview.device.catalog.android.Opelmobile
import se.premex.compose.preview.device.catalog.android.OpenFhdAtv
import se.premex.compose.preview.device.catalog.android.OpenUhdAtv
import se.premex.compose.preview.device.catalog.android.Oppo
import se.premex.compose.preview.device.catalog.android.Optage
import se.premex.compose.preview.device.catalog.android.Opticon
import se.premex.compose.preview.device.catalog.android.Optimum
import se.premex.compose.preview.device.catalog.android.Optoma
import se.premex.compose.preview.device.catalog.android.Orange
import se.premex.compose.preview.device.catalog.android.Orbic
import se.premex.compose.preview.device.catalog.android.Orbys
import se.premex.compose.preview.device.catalog.android.Orca
import se.premex.compose.preview.device.catalog.android.Ordissimo
import se.premex.compose.preview.device.catalog.android.Orient
import se.premex.compose.preview.device.catalog.android.Orinoquia
import se.premex.compose.preview.device.catalog.android.Orion
import se.premex.compose.preview.device.catalog.android.Ors
import se.premex.compose.preview.device.catalog.android.Oscal
import se.premex.compose.preview.device.catalog.android.Osn
import se.premex.compose.preview.device.catalog.android.Oteeto
import se.premex.compose.preview.device.catalog.android.Oukitel
import se.premex.compose.preview.device.catalog.android.Ouzrs
import se.premex.compose.preview.device.catalog.android.Overmax
import se.premex.compose.preview.device.catalog.android.Overtech
import se.premex.compose.preview.device.catalog.android.Ovion
import se.premex.compose.preview.device.catalog.android.Own
import se.premex.compose.preview.device.catalog.android.Owxmobile
import se.premex.compose.preview.device.catalog.android.OxTab
import se.premex.compose.preview.device.catalog.android.Oxygen
import se.premex.compose.preview.device.catalog.android.OxygenId
import se.premex.compose.preview.device.catalog.android.Oxygenid
import se.premex.compose.preview.device.catalog.android.OysterLabs
import se.premex.compose.preview.device.catalog.android.Oysters
import se.premex.compose.preview.device.catalog.android.Ozon
import se.premex.compose.preview.device.catalog.android.PackardBell
import se.premex.compose.preview.device.catalog.android.Paitanry
import se.premex.compose.preview.device.catalog.android.Palm
import se.premex.compose.preview.device.catalog.android.Palsonic
import se.premex.compose.preview.device.catalog.android.Panasonic
import se.premex.compose.preview.device.catalog.android.Panavox
import se.premex.compose.preview.device.catalog.android.Panodic
import se.premex.compose.preview.device.catalog.android.Panorama
import se.premex.compose.preview.device.catalog.android.Pantech
import se.premex.compose.preview.device.catalog.android.PantechSmart
import se.premex.compose.preview.device.catalog.android.ParrotMobile
import se.premex.compose.preview.device.catalog.android.Partner
import se.premex.compose.preview.device.catalog.android.PartnerMobile
import se.premex.compose.preview.device.catalog.android.Pastigio
import se.premex.compose.preview.device.catalog.android.Patters
import se.premex.compose.preview.device.catalog.android.Pawbo
import se.premex.compose.preview.device.catalog.android.Pax
import se.premex.compose.preview.device.catalog.android.PbsKids
import se.premex.compose.preview.device.catalog.android.PcSmart
import se.premex.compose.preview.device.catalog.android.Pcbox
import se.premex.compose.preview.device.catalog.android.Pcd
import se.premex.compose.preview.device.catalog.android.Pcsmart
import se.premex.compose.preview.device.catalog.android.Peaq
import se.premex.compose.preview.device.catalog.android.Peicheng
import se.premex.compose.preview.device.catalog.android.Pel
import se.premex.compose.preview.device.catalog.android.Pensonic
import se.premex.compose.preview.device.catalog.android.Peotv
import se.premex.compose.preview.device.catalog.android.PepperlFuchs
import se.premex.compose.preview.device.catalog.android.Performance
import se.premex.compose.preview.device.catalog.android.Perseotv
import se.premex.compose.preview.device.catalog.android.Persona
import se.premex.compose.preview.device.catalog.android.Philco
import se.premex.compose.preview.device.catalog.android.Philips
import se.premex.compose.preview.device.catalog.android.Phimark
import se.premex.compose.preview.device.catalog.android.Phoenix
import se.premex.compose.preview.device.catalog.android.PhoenixNote
import se.premex.compose.preview.device.catalog.android.Phonemax
import se.premex.compose.preview.device.catalog.android.Picassotab
import se.premex.compose.preview.device.catalog.android.Pilot
import se.premex.compose.preview.device.catalog.android.Pinocchio
import se.premex.compose.preview.device.catalog.android.Pioneer
import se.premex.compose.preview.device.catalog.android.PioneerDigitalTv
import se.premex.compose.preview.device.catalog.android.Pipo
import se.premex.compose.preview.device.catalog.android.Piranha
import se.premex.compose.preview.device.catalog.android.Pitneybowes
import se.premex.compose.preview.device.catalog.android.Pivot
import se.premex.compose.preview.device.catalog.android.Pixart
import se.premex.compose.preview.device.catalog.android.Pixela
import se.premex.compose.preview.device.catalog.android.Pixpeak
import se.premex.compose.preview.device.catalog.android.Pixpro
import se.premex.compose.preview.device.catalog.android.Pixus
import se.premex.compose.preview.device.catalog.android.PlTmpl
import se.premex.compose.preview.device.catalog.android.Plaisio
import se.premex.compose.preview.device.catalog.android.Planet
import se.premex.compose.preview.device.catalog.android.Play
import se.premex.compose.preview.device.catalog.android.Playpoland
import se.premex.compose.preview.device.catalog.android.Pldthome
import se.premex.compose.preview.device.catalog.android.Plimpton
import se.premex.compose.preview.device.catalog.android.Ployer
import se.premex.compose.preview.device.catalog.android.Plum
import se.premex.compose.preview.device.catalog.android.Plusstyle
import se.premex.compose.preview.device.catalog.android.Pluzz
import se.premex.compose.preview.device.catalog.android.PnRavec
import se.premex.compose.preview.device.catalog.android.Poco
import se.premex.compose.preview.device.catalog.android.PointOfView
import se.premex.compose.preview.device.catalog.android.Pointmobile
import se.premex.compose.preview.device.catalog.android.Pokini
import se.premex.compose.preview.device.catalog.android.Polar
import se.premex.compose.preview.device.catalog.android.Polaroid
import se.premex.compose.preview.device.catalog.android.Polestar
import se.premex.compose.preview.device.catalog.android.Polsat
import se.premex.compose.preview.device.catalog.android.Polytron
import se.premex.compose.preview.device.catalog.android.Pontistech
import se.premex.compose.preview.device.catalog.android.Pools
import se.premex.compose.preview.device.catalog.android.Poptel
import se.premex.compose.preview.device.catalog.android.Porodo
import se.premex.compose.preview.device.catalog.android.Porsche
import se.premex.compose.preview.device.catalog.android.Portfolio
import se.premex.compose.preview.device.catalog.android.Portworld
import se.premex.compose.preview.device.catalog.android.Pos
import se.premex.compose.preview.device.catalog.android.Posfic
import se.premex.compose.preview.device.catalog.android.Posiflex
import se.premex.compose.preview.device.catalog.android.Positivo
import se.premex.compose.preview.device.catalog.android.Possafe
import se.premex.compose.preview.device.catalog.android.Postef
import se.premex.compose.preview.device.catalog.android.PowerGreen
import se.premex.compose.preview.device.catalog.android.Powerology
import se.premex.compose.preview.device.catalog.android.Powmus
import se.premex.compose.preview.device.catalog.android.Pozzi
import se.premex.compose.preview.device.catalog.android.Prazteck
import se.premex.compose.preview.device.catalog.android.Precision
import se.premex.compose.preview.device.catalog.android.Precisionbiometric
import se.premex.compose.preview.device.catalog.android.Premier
import se.premex.compose.preview.device.catalog.android.Premio
import se.premex.compose.preview.device.catalog.android.Preo
import se.premex.compose.preview.device.catalog.android.Prestige
import se.premex.compose.preview.device.catalog.android.Prestigio
import se.premex.compose.preview.device.catalog.android.PrestigioSolutions
import se.premex.compose.preview.device.catalog.android.Prima
import se.premex.compose.preview.device.catalog.android.Prime
import se.premex.compose.preview.device.catalog.android.Prism
import se.premex.compose.preview.device.catalog.android.Prismplus
import se.premex.compose.preview.device.catalog.android.Pritom
import se.premex.compose.preview.device.catalog.android.Prixton
import se.premex.compose.preview.device.catalog.android.Prodigi
import se.premex.compose.preview.device.catalog.android.Prodvx
import se.premex.compose.preview.device.catalog.android.Profilo
import se.premex.compose.preview.device.catalog.android.Proline
import se.premex.compose.preview.device.catalog.android.Promethean
import se.premex.compose.preview.device.catalog.android.Prometheus
import se.premex.compose.preview.device.catalog.android.Proscan
import se.premex.compose.preview.device.catalog.android.ProscanElite
import se.premex.compose.preview.device.catalog.android.Proton
import se.premex.compose.preview.device.catalog.android.Proximus
import se.premex.compose.preview.device.catalog.android.PsMobile
import se.premex.compose.preview.device.catalog.android.Pseries
import se.premex.compose.preview.device.catalog.android.Ptclshoqtv
import se.premex.compose.preview.device.catalog.android.Pulsaris
import se.premex.compose.preview.device.catalog.android.Punos
import se.premex.compose.preview.device.catalog.android.PyurTv
import se.premex.compose.preview.device.catalog.android.QElectronics
import se.premex.compose.preview.device.catalog.android.Qbell
import se.premex.compose.preview.device.catalog.android.Qcell
import se.premex.compose.preview.device.catalog.android.Qilive
import se.premex.compose.preview.device.catalog.android.Qin
import se.premex.compose.preview.device.catalog.android.Qisur
import se.premex.compose.preview.device.catalog.android.Qiuwoky
import se.premex.compose.preview.device.catalog.android.Qlink
import se.premex.compose.preview.device.catalog.android.Qmobile
import se.premex.compose.preview.device.catalog.android.Qooq
import se.premex.compose.preview.device.catalog.android.Qps
import se.premex.compose.preview.device.catalog.android.Qriom
import se.premex.compose.preview.device.catalog.android.Qsmart
import se.premex.compose.preview.device.catalog.android.Qtab
import se.premex.compose.preview.device.catalog.android.Qti
import se.premex.compose.preview.device.catalog.android.Qtouch
import se.premex.compose.preview.device.catalog.android.Quantum
import se.premex.compose.preview.device.catalog.android.Quatro
import se.premex.compose.preview.device.catalog.android.Quber
import se.premex.compose.preview.device.catalog.android.Qubo
import se.premex.compose.preview.device.catalog.android.Quest
import se.premex.compose.preview.device.catalog.android.Quick
import se.premex.compose.preview.device.catalog.android.Quickline
import se.premex.compose.preview.device.catalog.android.Quint
import se.premex.compose.preview.device.catalog.android.Qunyico
import se.premex.compose.preview.device.catalog.android.Qvwi
import se.premex.compose.preview.device.catalog.android.Qwili
import se.premex.compose.preview.device.catalog.android.Raddy
import se.premex.compose.preview.device.catalog.android.Rainx
import se.premex.compose.preview.device.catalog.android.Rakioo
import se.premex.compose.preview.device.catalog.android.Rakuten
import se.premex.compose.preview.device.catalog.android.Ramtechnology
import se.premex.compose.preview.device.catalog.android.Rancon
import se.premex.compose.preview.device.catalog.android.Rangs
import se.premex.compose.preview.device.catalog.android.Ratel
import se.premex.compose.preview.device.catalog.android.Ravoz
import se.premex.compose.preview.device.catalog.android.Raylan
import se.premex.compose.preview.device.catalog.android.RayoMovil
import se.premex.compose.preview.device.catalog.android.Razer
import se.premex.compose.preview.device.catalog.android.Rca
import se.premex.compose.preview.device.catalog.android.Rct
import se.premex.compose.preview.device.catalog.android.Rdp
import se.premex.compose.preview.device.catalog.android.Readly
import se.premex.compose.preview.device.catalog.android.Realix
import se.premex.compose.preview.device.catalog.android.Realme
import se.premex.compose.preview.device.catalog.android.Realtime
import se.premex.compose.preview.device.catalog.android.Rebecco
import se.premex.compose.preview.device.catalog.android.Recco
import se.premex.compose.preview.device.catalog.android.Red
import se.premex.compose.preview.device.catalog.android.RedMobile
import se.premex.compose.preview.device.catalog.android.RedX
import se.premex.compose.preview.device.catalog.android.Redbeat
import se.premex.compose.preview.device.catalog.android.Redfox
import se.premex.compose.preview.device.catalog.android.Redline
import se.premex.compose.preview.device.catalog.android.Redmi
import se.premex.compose.preview.device.catalog.android.Redmobile
import se.premex.compose.preview.device.catalog.android.Redtone
import se.premex.compose.preview.device.catalog.android.Redway
import se.premex.compose.preview.device.catalog.android.Reeder
import se.premex.compose.preview.device.catalog.android.Reekoo
import se.premex.compose.preview.device.catalog.android.Reeva
import se.premex.compose.preview.device.catalog.android.Regal
import se.premex.compose.preview.device.catalog.android.Regza
import se.premex.compose.preview.device.catalog.android.Reliance
import se.premex.compose.preview.device.catalog.android.Relndoo
import se.premex.compose.preview.device.catalog.android.Remdun
import se.premex.compose.preview.device.catalog.android.Renault
import se.premex.compose.preview.device.catalog.android.RenaultTrucks
import se.premex.compose.preview.device.catalog.android.Renso
import se.premex.compose.preview.device.catalog.android.Rephone
import se.premex.compose.preview.device.catalog.android.Reveal16i
import se.premex.compose.preview.device.catalog.android.Revomovil
import se.premex.compose.preview.device.catalog.android.Revox
import se.premex.compose.preview.device.catalog.android.Revrica
import se.premex.compose.preview.device.catalog.android.Revvl
import se.premex.compose.preview.device.catalog.android.Reyna
import se.premex.compose.preview.device.catalog.android.Rhino
import se.premex.compose.preview.device.catalog.android.Ricoh
import se.premex.compose.preview.device.catalog.android.Rikstv
import se.premex.compose.preview.device.catalog.android.Rindo
import se.premex.compose.preview.device.catalog.android.Rio
import se.premex.compose.preview.device.catalog.android.Riviera
import se.premex.compose.preview.device.catalog.android.Rixun
import se.premex.compose.preview.device.catalog.android.Rizzen
import se.premex.compose.preview.device.catalog.android.Rlg
import se.premex.compose.preview.device.catalog.android.Roadquest
import se.premex.compose.preview.device.catalog.android.Rockcel
import se.premex.compose.preview.device.catalog.android.Rocktek
import se.premex.compose.preview.device.catalog.android.Rokid
import se.premex.compose.preview.device.catalog.android.Rokit
import se.premex.compose.preview.device.catalog.android.Rollcall
import se.premex.compose.preview.device.catalog.android.Rombica
import se.premex.compose.preview.device.catalog.android.Roomi
import se.premex.compose.preview.device.catalog.android.Rosso
import se.premex.compose.preview.device.catalog.android.Rover
import se.premex.compose.preview.device.catalog.android.Rowa
import se.premex.compose.preview.device.catalog.android.Royalrahmani
import se.premex.compose.preview.device.catalog.android.Royqueen
import se.premex.compose.preview.device.catalog.android.Ruggear
import se.premex.compose.preview.device.catalog.android.Ruggon
import se.premex.compose.preview.device.catalog.android.Rugstorm
import se.premex.compose.preview.device.catalog.android.Ruio
import se.premex.compose.preview.device.catalog.android.Russound
import se.premex.compose.preview.device.catalog.android.Ruufuuxy
import se.premex.compose.preview.device.catalog.android.Rvp
import se.premex.compose.preview.device.catalog.android.Rwc
import se.premex.compose.preview.device.catalog.android.S
import se.premex.compose.preview.device.catalog.android.STell
import se.premex.compose.preview.device.catalog.android.Saba
import se.premex.compose.preview.device.catalog.android.Saelite
import se.premex.compose.preview.device.catalog.android.Safaricom
import se.premex.compose.preview.device.catalog.android.Sagi
import se.premex.compose.preview.device.catalog.android.Saiet
import se.premex.compose.preview.device.catalog.android.Sampo
import se.premex.compose.preview.device.catalog.android.Samsonix
import se.premex.compose.preview.device.catalog.android.Samsung
import se.premex.compose.preview.device.catalog.android.Samtech
import se.premex.compose.preview.device.catalog.android.Samwon
import se.premex.compose.preview.device.catalog.android.Sankey
import se.premex.compose.preview.device.catalog.android.Sanlux
import se.premex.compose.preview.device.catalog.android.Sannuo
import se.premex.compose.preview.device.catalog.android.Sansei
import se.premex.compose.preview.device.catalog.android.Sansui
import se.premex.compose.preview.device.catalog.android.Sanyo
import se.premex.compose.preview.device.catalog.android.Sappa
import se.premex.compose.preview.device.catalog.android.Sasktel
import se.premex.compose.preview.device.catalog.android.Satco
import se.premex.compose.preview.device.catalog.android.Satelit
import se.premex.compose.preview.device.catalog.android.Satewave
import se.premex.compose.preview.device.catalog.android.Sawink
import se.premex.compose.preview.device.catalog.android.Sbm
import se.premex.compose.preview.device.catalog.android.Scanfrost
import se.premex.compose.preview.device.catalog.android.Scbc
import se.premex.compose.preview.device.catalog.android.Sceptre
import se.premex.compose.preview.device.catalog.android.Schneider
import se.premex.compose.preview.device.catalog.android.Schok
import se.premex.compose.preview.device.catalog.android.Scientia
import se.premex.compose.preview.device.catalog.android.Scope
import se.premex.compose.preview.device.catalog.android.Scvinfinity
import se.premex.compose.preview.device.catalog.android.Sdtv
import se.premex.compose.preview.device.catalog.android.Sebbe
import se.premex.compose.preview.device.catalog.android.Secqre
import se.premex.compose.preview.device.catalog.android.Secureye
import se.premex.compose.preview.device.catalog.android.Sederick
import se.premex.compose.preview.device.catalog.android.Sego
import se.premex.compose.preview.device.catalog.android.Sei
import se.premex.compose.preview.device.catalog.android.Selecline
import se.premex.compose.preview.device.catalog.android.Seleco
import se.premex.compose.preview.device.catalog.android.Selectron
import se.premex.compose.preview.device.catalog.android.Selfix
import se.premex.compose.preview.device.catalog.android.Selvas
import se.premex.compose.preview.device.catalog.android.Semc
import se.premex.compose.preview.device.catalog.android.Semeakoko
import se.premex.compose.preview.device.catalog.android.Semp
import se.premex.compose.preview.device.catalog.android.Sencor
import se.premex.compose.preview.device.catalog.android.Senlintech
import se.premex.compose.preview.device.catalog.android.Senraise
import se.premex.compose.preview.device.catalog.android.Sense
import se.premex.compose.preview.device.catalog.android.Senseit
import se.premex.compose.preview.device.catalog.android.Senter
import se.premex.compose.preview.device.catalog.android.Senwa
import se.premex.compose.preview.device.catalog.android.Sequel
import se.premex.compose.preview.device.catalog.android.Serenity
import se.premex.compose.preview.device.catalog.android.Seuic
import se.premex.compose.preview.device.catalog.android.Sewoo
import se.premex.compose.preview.device.catalog.android.Sfr
import se.premex.compose.preview.device.catalog.android.Sg
import se.premex.compose.preview.device.catalog.android.Sgin
import se.premex.compose.preview.device.catalog.android.Sgp
import se.premex.compose.preview.device.catalog.android.Shaks
import se.premex.compose.preview.device.catalog.android.Sharp
import se.premex.compose.preview.device.catalog.android.Shelby
import se.premex.compose.preview.device.catalog.android.Shift
import se.premex.compose.preview.device.catalog.android.Shinon
import se.premex.compose.preview.device.catalog.android.Shivaki
import se.premex.compose.preview.device.catalog.android.Shortcut
import se.premex.compose.preview.device.catalog.android.Shoudum
import se.premex.compose.preview.device.catalog.android.Shuttle
import se.premex.compose.preview.device.catalog.android.Sico
import se.premex.compose.preview.device.catalog.android.Sicon
import se.premex.compose.preview.device.catalog.android.Siera
import se.premex.compose.preview.device.catalog.android.SigmaMobile
import se.premex.compose.preview.device.catalog.android.Silo
import se.premex.compose.preview.device.catalog.android.SilverLine
import se.premex.compose.preview.device.catalog.android.SilverMax
import se.premex.compose.preview.device.catalog.android.Silverline
import se.premex.compose.preview.device.catalog.android.Simbans
import se.premex.compose.preview.device.catalog.android.Simfer
import se.premex.compose.preview.device.catalog.android.Simi
import se.premex.compose.preview.device.catalog.android.Simplytab
import se.premex.compose.preview.device.catalog.android.Singer
import se.premex.compose.preview.device.catalog.android.SingtelTv
import se.premex.compose.preview.device.catalog.android.Sinognss
import se.premex.compose.preview.device.catalog.android.Siragon
import se.premex.compose.preview.device.catalog.android.SirinLabs
import se.premex.compose.preview.device.catalog.android.SitiPlaytop
import se.premex.compose.preview.device.catalog.android.Skb
import se.premex.compose.preview.device.catalog.android.SkbCable
import se.premex.compose.preview.device.catalog.android.Sky
import se.premex.compose.preview.device.catalog.android.SkyBrasil
import se.premex.compose.preview.device.catalog.android.SkyDevices
import se.premex.compose.preview.device.catalog.android.SkyOne
import se.premex.compose.preview.device.catalog.android.Skydevices
import se.premex.compose.preview.device.catalog.android.Skyegg
import se.premex.compose.preview.device.catalog.android.Skyhcn
import se.premex.compose.preview.device.catalog.android.Skylife
import se.premex.compose.preview.device.catalog.android.Skynz
import se.premex.compose.preview.device.catalog.android.Skyperfectjsat
import se.premex.compose.preview.device.catalog.android.Skyworth
import se.premex.compose.preview.device.catalog.android.Sledovanitv
import se.premex.compose.preview.device.catalog.android.Smadl
import se.premex.compose.preview.device.catalog.android.Smart
import se.premex.compose.preview.device.catalog.android.SmartKassel
import se.premex.compose.preview.device.catalog.android.SmartTechnology
import se.premex.compose.preview.device.catalog.android.SmartTek
import se.premex.compose.preview.device.catalog.android.SmartTouch
import se.premex.compose.preview.device.catalog.android.Smartab
import se.premex.compose.preview.device.catalog.android.Smartbook
import se.premex.compose.preview.device.catalog.android.Smartec
import se.premex.compose.preview.device.catalog.android.Smartever
import se.premex.compose.preview.device.catalog.android.Smartex
import se.premex.compose.preview.device.catalog.android.Smartfren
import se.premex.compose.preview.device.catalog.android.Smarti
import se.premex.compose.preview.device.catalog.android.Smartlabs
import se.premex.compose.preview.device.catalog.android.Smartlife
import se.premex.compose.preview.device.catalog.android.Smartron
import se.premex.compose.preview.device.catalog.android.Smarttech
import se.premex.compose.preview.device.catalog.android.Smarttv
import se.premex.compose.preview.device.catalog.android.Smartvu
import se.premex.compose.preview.device.catalog.android.Smaty
import se.premex.compose.preview.device.catalog.android.Smile
import se.premex.compose.preview.device.catalog.android.Smooth
import se.premex.compose.preview.device.catalog.android.Snt
import se.premex.compose.preview.device.catalog.android.Socialphone700
import se.premex.compose.preview.device.catalog.android.Soda
import se.premex.compose.preview.device.catalog.android.Softbank
import se.premex.compose.preview.device.catalog.android.SohoStyle
import se.premex.compose.preview.device.catalog.android.Solone
import se.premex.compose.preview.device.catalog.android.Soneview
import se.premex.compose.preview.device.catalog.android.Sonim
import se.premex.compose.preview.device.catalog.android.Soniq
import se.premex.compose.preview.device.catalog.android.Sony
import se.premex.compose.preview.device.catalog.android.Sonyaudio
import se.premex.compose.preview.device.catalog.android.Sooka
import se.premex.compose.preview.device.catalog.android.Soriana
import se.premex.compose.preview.device.catalog.android.Sosh
import se.premex.compose.preview.device.catalog.android.Soultech
import se.premex.compose.preview.device.catalog.android.South
import se.premex.compose.preview.device.catalog.android.Sowly
import se.premex.compose.preview.device.catalog.android.Soymomo
import se.premex.compose.preview.device.catalog.android.SoymomoTabletLite3
import se.premex.compose.preview.device.catalog.android.Spark
import se.premex.compose.preview.device.catalog.android.Sparx
import se.premex.compose.preview.device.catalog.android.Spc
import se.premex.compose.preview.device.catalog.android.Specktron
import se.premex.compose.preview.device.catalog.android.Spectra
import se.premex.compose.preview.device.catalog.android.SpectraGeospatial
import se.premex.compose.preview.device.catalog.android.Spectrageospatial
import se.premex.compose.preview.device.catalog.android.Spectralink
import se.premex.compose.preview.device.catalog.android.Spectramobile
import se.premex.compose.preview.device.catalog.android.Spectraprecision
import se.premex.compose.preview.device.catalog.android.Speedata
import se.premex.compose.preview.device.catalog.android.Speedstar
import se.premex.compose.preview.device.catalog.android.Spider
import se.premex.compose.preview.device.catalog.android.Spj
import se.premex.compose.preview.device.catalog.android.Sprange
import se.premex.compose.preview.device.catalog.android.Sprd
import se.premex.compose.preview.device.catalog.android.Spurt
import se.premex.compose.preview.device.catalog.android.Sq
import se.premex.compose.preview.device.catalog.android.Sqool
import se.premex.compose.preview.device.catalog.android.Srilankatelecom
import se.premex.compose.preview.device.catalog.android.Ssa
import se.premex.compose.preview.device.catalog.android.Ssmooth
import se.premex.compose.preview.device.catalog.android.Star
import se.premex.compose.preview.device.catalog.android.StarTrack
import se.premex.compose.preview.device.catalog.android.StarX
import se.premex.compose.preview.device.catalog.android.Starboard
import se.premex.compose.preview.device.catalog.android.Starhub
import se.premex.compose.preview.device.catalog.android.StarkFuture
import se.premex.compose.preview.device.catalog.android.Starkfuture
import se.premex.compose.preview.device.catalog.android.Starlight
import se.premex.compose.preview.device.catalog.android.Starmobile
import se.premex.compose.preview.device.catalog.android.Starshine
import se.premex.compose.preview.device.catalog.android.Stboard
import se.premex.compose.preview.device.catalog.android.Stc
import se.premex.compose.preview.device.catalog.android.Ste
import se.premex.compose.preview.device.catalog.android.Steren
import se.premex.compose.preview.device.catalog.android.Stf
import se.premex.compose.preview.device.catalog.android.Stg
import se.premex.compose.preview.device.catalog.android.StgTelecom
import se.premex.compose.preview.device.catalog.android.Stip
import se.premex.compose.preview.device.catalog.android.Stk
import se.premex.compose.preview.device.catalog.android.Stofa
import se.premex.compose.preview.device.catalog.android.Storex
import se.premex.compose.preview.device.catalog.android.Strawberry
import se.premex.compose.preview.device.catalog.android.Stream
import se.premex.compose.preview.device.catalog.android.StreamSystem
import se.premex.compose.preview.device.catalog.android.Strong
import se.premex.compose.preview.device.catalog.android.StrongZwl
import se.premex.compose.preview.device.catalog.android.Studynlearn
import se.premex.compose.preview.device.catalog.android.Stylo
import se.premex.compose.preview.device.catalog.android.Stylos
import se.premex.compose.preview.device.catalog.android.Stylostech
import se.premex.compose.preview.device.catalog.android.Suaat
import se.premex.compose.preview.device.catalog.android.Sugar
import se.premex.compose.preview.device.catalog.android.Sumtec
import se.premex.compose.preview.device.catalog.android.SunKing
import se.premex.compose.preview.device.catalog.android.Sunbio
import se.premex.compose.preview.device.catalog.android.Sunbrite
import se.premex.compose.preview.device.catalog.android.Sunconnection
import se.premex.compose.preview.device.catalog.android.Sunelan
import se.premex.compose.preview.device.catalog.android.Sunmax
import se.premex.compose.preview.device.catalog.android.Sunmi
import se.premex.compose.preview.device.catalog.android.Sunny
import se.premex.compose.preview.device.catalog.android.Sunphone
import se.premex.compose.preview.device.catalog.android.Sunstech
import se.premex.compose.preview.device.catalog.android.Suntak
import se.premex.compose.preview.device.catalog.android.Sunwind
import se.premex.compose.preview.device.catalog.android.Supersonic
import se.premex.compose.preview.device.catalog.android.Supertab
import se.premex.compose.preview.device.catalog.android.Supoin
import se.premex.compose.preview.device.catalog.android.Surface
import se.premex.compose.preview.device.catalog.android.Surfans
import se.premex.compose.preview.device.catalog.android.Surtab
import se.premex.compose.preview.device.catalog.android.Suunto
import se.premex.compose.preview.device.catalog.android.Suxi
import se.premex.compose.preview.device.catalog.android.Svision
import se.premex.compose.preview.device.catalog.android.Svitoo
import se.premex.compose.preview.device.catalog.android.Sw
import se.premex.compose.preview.device.catalog.android.Swaconnect
import se.premex.compose.preview.device.catalog.android.Swipe
import se.premex.compose.preview.device.catalog.android.Swisscom
import se.premex.compose.preview.device.catalog.android.Swissmobility
import se.premex.compose.preview.device.catalog.android.Swisstone
import se.premex.compose.preview.device.catalog.android.Swissvoice
import se.premex.compose.preview.device.catalog.android.Swosh
import se.premex.compose.preview.device.catalog.android.Syco
import se.premex.compose.preview.device.catalog.android.Syinix
import se.premex.compose.preview.device.catalog.android.Sylvania
import se.premex.compose.preview.device.catalog.android.Sylvox
import se.premex.compose.preview.device.catalog.android.Symphony
import se.premex.compose.preview.device.catalog.android.Synetech
import se.premex.compose.preview.device.catalog.android.TGo
import se.premex.compose.preview.device.catalog.android.TMobile
import se.premex.compose.preview.device.catalog.android.TMobileCzTelekomSk
import se.premex.compose.preview.device.catalog.android.TabiByTGo
import se.premex.compose.preview.device.catalog.android.TabletPc
import se.premex.compose.preview.device.catalog.android.Tabphone710Pro
import se.premex.compose.preview.device.catalog.android.Tabwee
import se.premex.compose.preview.device.catalog.android.TagDc
import se.premex.compose.preview.device.catalog.android.TagTech
import se.premex.compose.preview.device.catalog.android.Tagheuer
import se.premex.compose.preview.device.catalog.android.Tagital
import se.premex.compose.preview.device.catalog.android.Tagtech
import se.premex.compose.preview.device.catalog.android.Taifa
import se.premex.compose.preview.device.catalog.android.Taipeinet
import se.premex.compose.preview.device.catalog.android.Taiwanmobile
import se.premex.compose.preview.device.catalog.android.Takara
import se.premex.compose.preview.device.catalog.android.Talius
import se.premex.compose.preview.device.catalog.android.Talktalk
import se.premex.compose.preview.device.catalog.android.Tambo
import se.premex.compose.preview.device.catalog.android.Tamboard
import se.premex.compose.preview.device.catalog.android.Tanoshi
import se.premex.compose.preview.device.catalog.android.Tanoshischolar
import se.premex.compose.preview.device.catalog.android.Taskphone
import se.premex.compose.preview.device.catalog.android.TataskyBingeplus
import se.premex.compose.preview.device.catalog.android.Tatung
import se.premex.compose.preview.device.catalog.android.Taztag
import se.premex.compose.preview.device.catalog.android.Tbc
import se.premex.compose.preview.device.catalog.android.Tbltaca
import se.premex.compose.preview.device.catalog.android.Tbroad
import se.premex.compose.preview.device.catalog.android.Tcl
import se.premex.compose.preview.device.catalog.android.TclMetropcs
import se.premex.compose.preview.device.catalog.android.Tcst
import se.premex.compose.preview.device.catalog.android.Tct
import se.premex.compose.preview.device.catalog.android.TdSystems
import se.premex.compose.preview.device.catalog.android.Tdsystems
import se.premex.compose.preview.device.catalog.android.Teachmintx
import se.premex.compose.preview.device.catalog.android.Teamgee
import se.premex.compose.preview.device.catalog.android.TechPad
import se.premex.compose.preview.device.catalog.android.Techbite
import se.premex.compose.preview.device.catalog.android.Techcomputer
import se.premex.compose.preview.device.catalog.android.Techlife
import se.premex.compose.preview.device.catalog.android.Technicolor
import se.premex.compose.preview.device.catalog.android.Technika
import se.premex.compose.preview.device.catalog.android.Technocrat
import se.premex.compose.preview.device.catalog.android.Technopc
import se.premex.compose.preview.device.catalog.android.Techpad
import se.premex.compose.preview.device.catalog.android.Teclast
import se.premex.compose.preview.device.catalog.android.Teclastkorea
import se.premex.compose.preview.device.catalog.android.Tecno
import se.premex.compose.preview.device.catalog.android.TecnoMobile
import se.premex.compose.preview.device.catalog.android.Tecnomaster
import se.premex.compose.preview.device.catalog.android.Teco
import se.premex.compose.preview.device.catalog.android.Tectoy
import se.premex.compose.preview.device.catalog.android.Teeno
import se.premex.compose.preview.device.catalog.android.Teeview
import se.premex.compose.preview.device.catalog.android.Teklio
import se.premex.compose.preview.device.catalog.android.Teknosa
import se.premex.compose.preview.device.catalog.android.Teksavvytv
import se.premex.compose.preview.device.catalog.android.Telcel
import se.premex.compose.preview.device.catalog.android.Tele2
import se.premex.compose.preview.device.catalog.android.Telecable
import se.premex.compose.preview.device.catalog.android.Telecabplay
import se.premex.compose.preview.device.catalog.android.Telefunken
import se.premex.compose.preview.device.catalog.android.Telekomtv
import se.premex.compose.preview.device.catalog.android.Telemor
import se.premex.compose.preview.device.catalog.android.Telenet
import se.premex.compose.preview.device.catalog.android.Telenor
import se.premex.compose.preview.device.catalog.android.Teleone
import se.premex.compose.preview.device.catalog.android.Telesystem
import se.premex.compose.preview.device.catalog.android.Telev8
import se.premex.compose.preview.device.catalog.android.Telia
import se.premex.compose.preview.device.catalog.android.Telkom
import se.premex.compose.preview.device.catalog.android.Tellytablet
import se.premex.compose.preview.device.catalog.android.Telma
import se.premex.compose.preview.device.catalog.android.Telosystems
import se.premex.compose.preview.device.catalog.android.Telox
import se.premex.compose.preview.device.catalog.android.Telpo
import se.premex.compose.preview.device.catalog.android.Telstar
import se.premex.compose.preview.device.catalog.android.Telus
import se.premex.compose.preview.device.catalog.android.Teluscorporation
import se.premex.compose.preview.device.catalog.android.Tempo
import se.premex.compose.preview.device.catalog.android.Tencent
import se.premex.compose.preview.device.catalog.android.Tench
import se.premex.compose.preview.device.catalog.android.Teracube
import se.premex.compose.preview.device.catalog.android.Terra
import se.premex.compose.preview.device.catalog.android.Tes
import se.premex.compose.preview.device.catalog.android.Tesla
import se.premex.compose.preview.device.catalog.android.Tespro
import se.premex.compose.preview.device.catalog.android.Texet
import se.premex.compose.preview.device.catalog.android.Tgnco
import se.premex.compose.preview.device.catalog.android.ThanhhungTechnology
import se.premex.compose.preview.device.catalog.android.TheUhd
import se.premex.compose.preview.device.catalog.android.Thehaam
import se.premex.compose.preview.device.catalog.android.Theham
import se.premex.compose.preview.device.catalog.android.Thinkacademy
import se.premex.compose.preview.device.catalog.android.Thomson
import se.premex.compose.preview.device.catalog.android.ThomsonKodak
import se.premex.compose.preview.device.catalog.android.Tht
import se.premex.compose.preview.device.catalog.android.Thuraya
import se.premex.compose.preview.device.catalog.android.Tianyu
import se.premex.compose.preview.device.catalog.android.Tibuta
import se.premex.compose.preview.device.catalog.android.Tigers
import se.premex.compose.preview.device.catalog.android.Tigo
import se.premex.compose.preview.device.catalog.android.Tigorr
import se.premex.compose.preview.device.catalog.android.Tim
import se.premex.compose.preview.device.catalog.android.Time2
import se.premex.compose.preview.device.catalog.android.Timovi
import se.premex.compose.preview.device.catalog.android.Tinp
import se.premex.compose.preview.device.catalog.android.Tinsik
import se.premex.compose.preview.device.catalog.android.Tiok
import se.premex.compose.preview.device.catalog.android.Tit
import se.premex.compose.preview.device.catalog.android.Tiwell
import se.premex.compose.preview.device.catalog.android.Tjd
import se.premex.compose.preview.device.catalog.android.Tkds
import se.premex.compose.preview.device.catalog.android.TmCell
import se.premex.compose.preview.device.catalog.android.Tnt
import se.premex.compose.preview.device.catalog.android.TochMobile
import se.premex.compose.preview.device.catalog.android.Todos
import se.premex.compose.preview.device.catalog.android.Togocel
import se.premex.compose.preview.device.catalog.android.Tokecy
import se.premex.compose.preview.device.catalog.android.Tokyo
import se.premex.compose.preview.device.catalog.android.Tomstar
import se.premex.compose.preview.device.catalog.android.Tone
import se.premex.compose.preview.device.catalog.android.Topelotek
import se.premex.compose.preview.device.catalog.android.Topjoy
import se.premex.compose.preview.device.catalog.android.Topsand
import se.premex.compose.preview.device.catalog.android.Torex
import se.premex.compose.preview.device.catalog.android.Tornado
import se.premex.compose.preview.device.catalog.android.Toscido
import se.premex.compose.preview.device.catalog.android.Toshiba
import se.premex.compose.preview.device.catalog.android.TouchPlus
import se.premex.compose.preview.device.catalog.android.Touchmate
import se.premex.compose.preview.device.catalog.android.TouchviewInteractive
import se.premex.compose.preview.device.catalog.android.Toya
import se.premex.compose.preview.device.catalog.android.Toyin
import se.premex.compose.preview.device.catalog.android.Toyota
import se.premex.compose.preview.device.catalog.android.TpLink
import se.premex.compose.preview.device.catalog.android.Tpad
import se.premex.compose.preview.device.catalog.android.Tplay
import se.premex.compose.preview.device.catalog.android.Tps
import se.premex.compose.preview.device.catalog.android.Transvision
import se.premex.compose.preview.device.catalog.android.Travelwifi
import se.premex.compose.preview.device.catalog.android.Trecfone
import se.premex.compose.preview.device.catalog.android.Trekstor
import se.premex.compose.preview.device.catalog.android.Trevi
import se.premex.compose.preview.device.catalog.android.Triaplay
import se.premex.compose.preview.device.catalog.android.Trident
import se.premex.compose.preview.device.catalog.android.Trimble
import se.premex.compose.preview.device.catalog.android.TrimbleNavigation
import se.premex.compose.preview.device.catalog.android.True
import se.premex.compose.preview.device.catalog.android.TrueSlim
import se.premex.compose.preview.device.catalog.android.Trueidtv
import se.premex.compose.preview.device.catalog.android.Trueslim
import se.premex.compose.preview.device.catalog.android.Truevision
import se.premex.compose.preview.device.catalog.android.Truevisions
import se.premex.compose.preview.device.catalog.android.Trufon
import se.premex.compose.preview.device.catalog.android.Truvii
import se.premex.compose.preview.device.catalog.android.Tsutaya
import se.premex.compose.preview.device.catalog.android.Ttfone
import se.premex.compose.preview.device.catalog.android.Tts
import se.premex.compose.preview.device.catalog.android.Tucel
import se.premex.compose.preview.device.catalog.android.Tufen
import se.premex.compose.preview.device.catalog.android.Tuff
import se.premex.compose.preview.device.catalog.android.Turbo
import se.premex.compose.preview.device.catalog.android.TurboX
import se.premex.compose.preview.device.catalog.android.Turbopad
import se.premex.compose.preview.device.catalog.android.Turbox
import se.premex.compose.preview.device.catalog.android.TurkTelekom
import se.premex.compose.preview.device.catalog.android.Turkcell
import se.premex.compose.preview.device.catalog.android.Tutu
import se.premex.compose.preview.device.catalog.android.Tv360ByBitel
import se.premex.compose.preview.device.catalog.android.Tvb
import se.premex.compose.preview.device.catalog.android.Tvcore
import se.premex.compose.preview.device.catalog.android.Tvheryerde
import se.premex.compose.preview.device.catalog.android.Tvision
import se.premex.compose.preview.device.catalog.android.Tvplus
import se.premex.compose.preview.device.catalog.android.Tvsmart
import se.premex.compose.preview.device.catalog.android.Tvstar
import se.premex.compose.preview.device.catalog.android.Tvt
import se.premex.compose.preview.device.catalog.android.Tvup
import se.premex.compose.preview.device.catalog.android.Twinmos
import se.premex.compose.preview.device.catalog.android.Twm
import se.premex.compose.preview.device.catalog.android.Twz
import se.premex.compose.preview.device.catalog.android.Uauu
import se.premex.compose.preview.device.catalog.android.Ubnt
import se.premex.compose.preview.device.catalog.android.Ubos
import se.premex.compose.preview.device.catalog.android.Ucm
import se.premex.compose.preview.device.catalog.android.Ud
import se.premex.compose.preview.device.catalog.android.Ugee
import se.premex.compose.preview.device.catalog.android.Ugrihach
import se.premex.compose.preview.device.catalog.android.Ujj
import se.premex.compose.preview.device.catalog.android.Ujoyfeel
import se.premex.compose.preview.device.catalog.android.Ulefone
import se.premex.compose.preview.device.catalog.android.Ulesson
import se.premex.compose.preview.device.catalog.android.Ultimate
import se.premex.compose.preview.device.catalog.android.Ultra
import se.premex.compose.preview.device.catalog.android.Ultrapad
import se.premex.compose.preview.device.catalog.android.Ultym5
import se.premex.compose.preview.device.catalog.android.Umax
import se.premex.compose.preview.device.catalog.android.Umidigi
import se.premex.compose.preview.device.catalog.android.Umx
import se.premex.compose.preview.device.catalog.android.Unbluable
import se.premex.compose.preview.device.catalog.android.Unico
import se.premex.compose.preview.device.catalog.android.UnifiTv
import se.premex.compose.preview.device.catalog.android.Unihertz
import se.premex.compose.preview.device.catalog.android.Uniq
import se.premex.compose.preview.device.catalog.android.Uniqcell
import se.premex.compose.preview.device.catalog.android.Unisced
import se.premex.compose.preview.device.catalog.android.Uniscope
import se.premex.compose.preview.device.catalog.android.Unistrong
import se.premex.compose.preview.device.catalog.android.Unitech
import se.premex.compose.preview.device.catalog.android.United
import se.premex.compose.preview.device.catalog.android.Unitel
import se.premex.compose.preview.device.catalog.android.Uniwa
import se.premex.compose.preview.device.catalog.android.Unnecto
import se.premex.compose.preview.device.catalog.android.Unnion
import se.premex.compose.preview.device.catalog.android.Unniontech
import se.premex.compose.preview.device.catalog.android.Uno
import se.premex.compose.preview.device.catalog.android.Unonu
import se.premex.compose.preview.device.catalog.android.Unowhy
import se.premex.compose.preview.device.catalog.android.UpMobile
import se.premex.compose.preview.device.catalog.android.Urovo
import se.premex.compose.preview.device.catalog.android.Usconnect
import se.premex.compose.preview.device.catalog.android.Utime
import se.premex.compose.preview.device.catalog.android.Utopia
import se.premex.compose.preview.device.catalog.android.Utvbox
import se.premex.compose.preview.device.catalog.android.V2com
import se.premex.compose.preview.device.catalog.android.V7
import se.premex.compose.preview.device.catalog.android.Vaio
import se.premex.compose.preview.device.catalog.android.Vale
import se.premex.compose.preview.device.catalog.android.Valerion
import se.premex.compose.preview.device.catalog.android.Valifone
import se.premex.compose.preview.device.catalog.android.Vankyo
import se.premex.compose.preview.device.catalog.android.Vasoun
import se.premex.compose.preview.device.catalog.android.Vastking
import se.premex.compose.preview.device.catalog.android.Vatenick
import se.premex.compose.preview.device.catalog.android.Vava
import se.premex.compose.preview.device.catalog.android.Vbox
import se.premex.compose.preview.device.catalog.android.Vect
import se.premex.compose.preview.device.catalog.android.Vectra
import se.premex.compose.preview.device.catalog.android.Vega
import se.premex.compose.preview.device.catalog.android.Veidoo
import se.premex.compose.preview.device.catalog.android.Veira
import se.premex.compose.preview.device.catalog.android.Venturer
import se.premex.compose.preview.device.catalog.android.Venus
import se.premex.compose.preview.device.catalog.android.Veon
import se.premex.compose.preview.device.catalog.android.Verifone
import se.premex.compose.preview.device.catalog.android.Verizon
import se.premex.compose.preview.device.catalog.android.Vernee
import se.premex.compose.preview.device.catalog.android.Vertex
import se.premex.compose.preview.device.catalog.android.Vertu
import se.premex.compose.preview.device.catalog.android.Vestel
import se.premex.compose.preview.device.catalog.android.Vetoo
import se.premex.compose.preview.device.catalog.android.Vexia
import se.premex.compose.preview.device.catalog.android.Vezzer
import se.premex.compose.preview.device.catalog.android.Vfonx
import se.premex.compose.preview.device.catalog.android.VgoTel
import se.premex.compose.preview.device.catalog.android.Vgotel
import se.premex.compose.preview.device.catalog.android.Victurio
import se.premex.compose.preview.device.catalog.android.Vid
import se.premex.compose.preview.device.catalog.android.Vida
import se.premex.compose.preview.device.catalog.android.Viettel
import se.premex.compose.preview.device.catalog.android.Vietteltv
import se.premex.compose.preview.device.catalog.android.Viewsonic
import se.premex.compose.preview.device.catalog.android.Vikusha
import se.premex.compose.preview.device.catalog.android.Villaon
import se.premex.compose.preview.device.catalog.android.VimaTek
import se.premex.compose.preview.device.catalog.android.Vimeel
import se.premex.compose.preview.device.catalog.android.Vimoq
import se.premex.compose.preview.device.catalog.android.Vincent
import se.premex.compose.preview.device.catalog.android.Viomi
import se.premex.compose.preview.device.catalog.android.Vios
import se.premex.compose.preview.device.catalog.android.Viotto
import se.premex.compose.preview.device.catalog.android.Viper
import se.premex.compose.preview.device.catalog.android.Virzo
import se.premex.compose.preview.device.catalog.android.Visible
import se.premex.compose.preview.device.catalog.android.Visio
import se.premex.compose.preview.device.catalog.android.Vision
import se.premex.compose.preview.device.catalog.android.VisionTechnology
import se.premex.compose.preview.device.catalog.android.Visiontek
import se.premex.compose.preview.device.catalog.android.Vista
import se.premex.compose.preview.device.catalog.android.VisualLand
import se.premex.compose.preview.device.catalog.android.Vitumi
import se.premex.compose.preview.device.catalog.android.Viumee
import se.premex.compose.preview.device.catalog.android.Vivax
import se.premex.compose.preview.device.catalog.android.Vivimage
import se.premex.compose.preview.device.catalog.android.Vivitek
import se.premex.compose.preview.device.catalog.android.Vivo
import se.premex.compose.preview.device.catalog.android.Viwa
import se.premex.compose.preview.device.catalog.android.Vizio
import se.premex.compose.preview.device.catalog.android.Vizualogic
import se.premex.compose.preview.device.catalog.android.Vizzion
import se.premex.compose.preview.device.catalog.android.Vkworld
import se.premex.compose.preview.device.catalog.android.Vnpttechnology
import se.premex.compose.preview.device.catalog.android.Vocal
import se.premex.compose.preview.device.catalog.android.VodHorizon
import se.premex.compose.preview.device.catalog.android.Vodacom
import se.premex.compose.preview.device.catalog.android.Vodafone
import se.premex.compose.preview.device.catalog.android.Vodafonekd
import se.premex.compose.preview.device.catalog.android.Voger
import se.premex.compose.preview.device.catalog.android.Volentex
import se.premex.compose.preview.device.catalog.android.Volfen
import se.premex.compose.preview.device.catalog.android.Volia
import se.premex.compose.preview.device.catalog.android.Volkano
import se.premex.compose.preview.device.catalog.android.Volvocars
import se.premex.compose.preview.device.catalog.android.Von
import se.premex.compose.preview.device.catalog.android.Vonino
import se.premex.compose.preview.device.catalog.android.Voo
import se.premex.compose.preview.device.catalog.android.Voobox
import se.premex.compose.preview.device.catalog.android.Vorago
import se.premex.compose.preview.device.catalog.android.Vorcom
import se.premex.compose.preview.device.catalog.android.Vortex
import se.premex.compose.preview.device.catalog.android.Voto
import se.premex.compose.preview.device.catalog.android.Voxelectronics
import se.premex.compose.preview.device.catalog.android.Vsmart
import se.premex.compose.preview.device.catalog.android.Vsp
import se.premex.compose.preview.device.catalog.android.Vtex
import se.premex.compose.preview.device.catalog.android.Vu
import se.premex.compose.preview.device.catalog.android.Vucatimes
import se.premex.compose.preview.device.catalog.android.WO
import se.premex.compose.preview.device.catalog.android.Wacom
import se.premex.compose.preview.device.catalog.android.Waf
import se.premex.compose.preview.device.catalog.android.Wainyok
import se.premex.compose.preview.device.catalog.android.Waiputv
import se.premex.compose.preview.device.catalog.android.Walton
import se.premex.compose.preview.device.catalog.android.Wansa
import se.premex.compose.preview.device.catalog.android.Waoo
import se.premex.compose.preview.device.catalog.android.Warp
import se.premex.compose.preview.device.catalog.android.Wasabimango
import se.premex.compose.preview.device.catalog.android.Wave8
import se.premex.compose.preview.device.catalog.android.Wave8rednougat
import se.premex.compose.preview.device.catalog.android.Wced
import se.premex.compose.preview.device.catalog.android.We
import se.premex.compose.preview.device.catalog.android.Webee
import se.premex.compose.preview.device.catalog.android.WebfleetSolutions
import se.premex.compose.preview.device.catalog.android.Weelikeit
import se.premex.compose.preview.device.catalog.android.Welio
import se.premex.compose.preview.device.catalog.android.Wemax
import se.premex.compose.preview.device.catalog.android.Westgate
import se.premex.compose.preview.device.catalog.android.WestgateResorts
import se.premex.compose.preview.device.catalog.android.Westgateresorts
import se.premex.compose.preview.device.catalog.android.Westinghouse
import se.premex.compose.preview.device.catalog.android.Westway
import se.premex.compose.preview.device.catalog.android.Wetap
import se.premex.compose.preview.device.catalog.android.Wetek
import se.premex.compose.preview.device.catalog.android.Whitedeer
import se.premex.compose.preview.device.catalog.android.Whoop
import se.premex.compose.preview.device.catalog.android.WiboxTv
import se.premex.compose.preview.device.catalog.android.Widevu
import se.premex.compose.preview.device.catalog.android.Wieppo
import se.premex.compose.preview.device.catalog.android.Wigor
import se.premex.compose.preview.device.catalog.android.Wiko
import se.premex.compose.preview.device.catalog.android.Wileyfox
import se.premex.compose.preview.device.catalog.android.Willett
import se.premex.compose.preview.device.catalog.android.Willkotech
import se.premex.compose.preview.device.catalog.android.Win
import se.premex.compose.preview.device.catalog.android.Wind
import se.premex.compose.preview.device.catalog.android.Winds
import se.premex.compose.preview.device.catalog.android.Wings
import se.premex.compose.preview.device.catalog.android.WingsMobile
import se.premex.compose.preview.device.catalog.android.Winmax
import se.premex.compose.preview.device.catalog.android.Winnovo
import se.premex.compose.preview.device.catalog.android.Winro
import se.premex.compose.preview.device.catalog.android.Wintek
import se.premex.compose.preview.device.catalog.android.Wintouch
import se.premex.compose.preview.device.catalog.android.Wirelessgate
import se.premex.compose.preview.device.catalog.android.WiseTech
import se.premex.compose.preview.device.catalog.android.Wiseasy
import se.premex.compose.preview.device.catalog.android.Wisetech
import se.premex.compose.preview.device.catalog.android.Wishtel
import se.premex.compose.preview.device.catalog.android.Wismann
import se.premex.compose.preview.device.catalog.android.Witooth
import se.premex.compose.preview.device.catalog.android.Wiz
import se.premex.compose.preview.device.catalog.android.Wizz
import se.premex.compose.preview.device.catalog.android.Wnc
import se.premex.compose.preview.device.catalog.android.Wom
import se.premex.compose.preview.device.catalog.android.Wongkuo
import se.premex.compose.preview.device.catalog.android.Workmate
import se.premex.compose.preview.device.catalog.android.Wow
import se.premex.compose.preview.device.catalog.android.Wowi
import se.premex.compose.preview.device.catalog.android.Woxter
import se.premex.compose.preview.device.catalog.android.Wozifan
import se.premex.compose.preview.device.catalog.android.Wpawa
import se.premex.compose.preview.device.catalog.android.Ws
import se.premex.compose.preview.device.catalog.android.Wxunja
import se.premex.compose.preview.device.catalog.android.Wybor
import se.premex.compose.preview.device.catalog.android.XAge
import se.premex.compose.preview.device.catalog.android.XMobile
import se.premex.compose.preview.device.catalog.android.XPremium
import se.premex.compose.preview.device.catalog.android.XTigi
import se.premex.compose.preview.device.catalog.android.XView
import se.premex.compose.preview.device.catalog.android.Xb
import se.premex.compose.preview.device.catalog.android.Xd
import se.premex.compose.preview.device.catalog.android.XdEnjoy
import se.premex.compose.preview.device.catalog.android.Xelex
import se.premex.compose.preview.device.catalog.android.Xell
import se.premex.compose.preview.device.catalog.android.Xenon
import se.premex.compose.preview.device.catalog.android.Xgimi
import se.premex.compose.preview.device.catalog.android.Xgody
import se.premex.compose.preview.device.catalog.android.Xiaomi
import se.premex.compose.preview.device.catalog.android.Xitrix
import se.premex.compose.preview.device.catalog.android.Xl
import se.premex.compose.preview.device.catalog.android.Xlaxiata
import se.premex.compose.preview.device.catalog.android.Xming
import se.premex.compose.preview.device.catalog.android.Xmobile
import se.premex.compose.preview.device.catalog.android.Xolo
import se.premex.compose.preview.device.catalog.android.Xoro
import se.premex.compose.preview.device.catalog.android.Xphoenix
import se.premex.compose.preview.device.catalog.android.Xplore
import se.premex.compose.preview.device.catalog.android.XploreTechnologies
import se.premex.compose.preview.device.catalog.android.Xppen
import se.premex.compose.preview.device.catalog.android.Xreal
import se.premex.compose.preview.device.catalog.android.Xsmart
import se.premex.compose.preview.device.catalog.android.Xtigi
import se.premex.compose.preview.device.catalog.android.Xtouch
import se.premex.compose.preview.device.catalog.android.Xtr
import se.premex.compose.preview.device.catalog.android.Xtratech
import se.premex.compose.preview.device.catalog.android.XtratechIguanapad
import se.premex.compose.preview.device.catalog.android.Xtreme
import se.premex.compose.preview.device.catalog.android.Xwave
import se.premex.compose.preview.device.catalog.android.Yandex
import se.premex.compose.preview.device.catalog.android.Yara
import se.premex.compose.preview.device.catalog.android.Yasin
import se.premex.compose.preview.device.catalog.android.Yay
import se.premex.compose.preview.device.catalog.android.Yellyouth
import se.premex.compose.preview.device.catalog.android.Yes
import se.premex.compose.preview.device.catalog.android.Yestel
import se.premex.compose.preview.device.catalog.android.Yettel
import se.premex.compose.preview.device.catalog.android.Yezz
import se.premex.compose.preview.device.catalog.android.Yikemi
import se.premex.compose.preview.device.catalog.android.Yinoche
import se.premex.compose.preview.device.catalog.android.Ymobile
import se.premex.compose.preview.device.catalog.android.Yobanse
import se.premex.compose.preview.device.catalog.android.Yokis
import se.premex.compose.preview.device.catalog.android.Yokoscan
import se.premex.compose.preview.device.catalog.android.Yosatoo
import se.premex.compose.preview.device.catalog.android.Yoshiro
import se.premex.compose.preview.device.catalog.android.Yotaphone
import se.premex.compose.preview.device.catalog.android.Yotopt
import se.premex.compose.preview.device.catalog.android.Youfone
import se.premex.compose.preview.device.catalog.android.Youin
import se.premex.compose.preview.device.catalog.android.Youtab
import se.premex.compose.preview.device.catalog.android.Yqsavior
import se.premex.compose.preview.device.catalog.android.Yqsvaior
import se.premex.compose.preview.device.catalog.android.Ysf
import se.premex.compose.preview.device.catalog.android.Ysfen
import se.premex.compose.preview.device.catalog.android.Yu
import se.premex.compose.preview.device.catalog.android.Yuho
import se.premex.compose.preview.device.catalog.android.Yumkem
import se.premex.compose.preview.device.catalog.android.Yuntab
import se.premex.compose.preview.device.catalog.android.Yyswie
import se.premex.compose.preview.device.catalog.android.Zaikai
import se.premex.compose.preview.device.catalog.android.Zaith
import se.premex.compose.preview.device.catalog.android.Zamolxe
import se.premex.compose.preview.device.catalog.android.Zapitv
import se.premex.compose.preview.device.catalog.android.Zatec
import se.premex.compose.preview.device.catalog.android.Zcs
import se.premex.compose.preview.device.catalog.android.Zdk
import se.premex.compose.preview.device.catalog.android.Zebra
import se.premex.compose.preview.device.catalog.android.Zeeker
import se.premex.compose.preview.device.catalog.android.Zeki
import se.premex.compose.preview.device.catalog.android.Zelu
import se.premex.compose.preview.device.catalog.android.Zenijust
import se.premex.compose.preview.device.catalog.android.Zenos
import se.premex.compose.preview.device.catalog.android.Zentec
import se.premex.compose.preview.device.catalog.android.Zeop
import se.premex.compose.preview.device.catalog.android.Zephir
import se.premex.compose.preview.device.catalog.android.Zetatv
import se.premex.compose.preview.device.catalog.android.Ziffler
import se.premex.compose.preview.device.catalog.android.Zigo
import se.premex.compose.preview.device.catalog.android.Zik
import se.premex.compose.preview.device.catalog.android.Zinox
import se.premex.compose.preview.device.catalog.android.Ziovo
import se.premex.compose.preview.device.catalog.android.Ziox
import se.premex.compose.preview.device.catalog.android.Zitab
import se.premex.compose.preview.device.catalog.android.Zitro
import se.premex.compose.preview.device.catalog.android.Zmbizi
import se.premex.compose.preview.device.catalog.android.Zmooth
import se.premex.compose.preview.device.catalog.android.Zofywnas
import se.premex.compose.preview.device.catalog.android.Zoji
import se.premex.compose.preview.device.catalog.android.Zolon
import se.premex.compose.preview.device.catalog.android.Zong
import se.premex.compose.preview.device.catalog.android.Zonko
import se.premex.compose.preview.device.catalog.android.Zonmai
import se.premex.compose.preview.device.catalog.android.Zoom
import se.premex.compose.preview.device.catalog.android.Zoomme
import se.premex.compose.preview.device.catalog.android.Zoomsmart
import se.premex.compose.preview.device.catalog.android.Zooomtv
import se.premex.compose.preview.device.catalog.android.Zpad
import se.premex.compose.preview.device.catalog.android.Zte
import se.premex.compose.preview.device.catalog.android.ZteTv
import se.premex.compose.preview.device.catalog.android.Ztleke
import se.premex.compose.preview.device.catalog.android.Zucchetti
import se.premex.compose.preview.device.catalog.android.Zuk
import se.premex.compose.preview.device.catalog.android.Zuleisy
import se.premex.compose.preview.device.catalog.android.Zuopu
import se.premex.compose.preview.device.catalog.android.Zuum
import se.premex.compose.preview.device.catalog.android.Zyrex
import se.premex.compose.preview.device.catalog.android.Zzb
import se.premex.compose.preview.device.catalog.android._10or
import se.premex.compose.preview.device.catalog.android._1u1
import se.premex.compose.preview.device.catalog.android._2e
import se.premex.compose.preview.device.catalog.android._3222222satelital
import se.premex.compose.preview.device.catalog.android._3bbtv
import se.premex.compose.preview.device.catalog.android._3rtablet
import se.premex.compose.preview.device.catalog.android._7mobile
import se.premex.compose.preview.device.catalog.android._8849

/**
 * Preview Groups utility providing collections of device specifications grouped by brand.
 *
 * This enables developers to easily access all devices from a specific manufacturer
 * for comprehensive UI testing and preview generation.
 */
public object PreviewGroups {
  private val brandMap: Map<String, () -> List<String>> = mapOf(
          "a1" to ::getA1Devices,
          "a1smartbox" to ::getA1SmartBoxDevices,
          "aauw" to ::getAauwDevices,
          "abctech" to ::getAbctechDevices,
          "abil" to ::getAbilDevices,
          "aborder" to ::getAborderDevices,
          "abxylute" to ::getAbxyluteDevices,
          "accent" to ::getAccentDevices,
          "acd" to ::getAcdDevices,
          "ace" to ::getAceDevices,
          "acepad" to ::getAcepadDevices,
          "acer" to ::getAcerDevices,
          "acerpure" to ::getAcerpureDevices,
          "achate" to ::getAchateDevices,
          "aclas" to ::getAclasDevices,
          "aconatic" to ::getAconaticDevices,
          "act" to ::getActDevices,
          "acteck" to ::getActeckDevices,
          "actstreamtv4k" to ::getActstreamtv4kDevices,
          "admiral" to ::getAdmiralDevices,
          "ado" to ::getAdoDevices,
          "adoc" to ::getAdocDevices,
          "adreamer" to ::getAdreamerDevices,
          "adsun" to ::getAdsunDevices,
          "adt3" to ::getAdt3Devices,
          "advan" to ::getAdvanDevices,
          "advance" to ::getAdvanceDevices,
          "advantage" to ::getAdvantageDevices,
          "advantageair" to ::getAdvantageairDevices,
          "advantech" to ::getAdvantechDevices,
          "aeezo" to ::getAeezoDevices,
          "africell" to ::getAfricellDevices,
          "afrione" to ::getAfrioneDevices,
          "ag" to ::getAgDevices,
          "age" to ::getAgeDevices,
          "agiletv" to ::getAgiletvDevices,
          "agm" to ::getAgmDevices,
          "agno" to ::getAgnoDevices,
          "aha" to ::getAhaDevices,
          "ahlo" to ::getAhloDevices,
          "ai" to ::getAiDevices,
          "aidata" to ::getAidataDevices,
          "aigo" to ::getAigoDevices,
          "airpha" to ::getAirphaDevices,
          "airtel" to ::getAirtelDevices,
          "airtelxstream" to ::getAirtelXstreamDevices,
          "airtouch" to ::getAirtouchDevices,
          "airtv" to ::getAirtvDevices,
          "ais" to ::getAisDevices,
          "aiuto" to ::getAiutoDevices,
          "aiwa" to ::getAiwaDevices,
          "ajib" to ::getAjibDevices,
          "aka" to ::getAkaDevices,
          "akai" to ::getAkaiDevices,
          "akari" to ::getAkariDevices,
          "akino" to ::getAkinoDevices,
          "akuvox" to ::getAkuvoxDevices,
          "alba" to ::getAlbaDevices,
          "albadeel" to ::getAlbadeelDevices,
          "alcatel" to ::getAlcatelDevices,
          "alco" to ::getAlcoDevices,
          "alcor" to ::getAlcorDevices,
          "aldo" to ::getAldoDevices,
          "algar" to ::getAlgarDevices,
          "alhafidh" to ::getAlhafidhDevices,
          "aligator" to ::getAligatorDevices,
          "allng" to ::getAllNGDevices,
          "allcall" to ::getAllcallDevices,
          "alldocube" to ::getAlldocubeDevices,
          "allente" to ::getAllenteDevices,
          "alliance" to ::getAllianceDevices,
          "allnet" to ::getAllnetDevices,
          "allview" to ::getAllviewDevices,
          "allwinner" to ::getAllwinnerDevices,
          "alpha" to ::getAlphaDevices,
          "alphaling" to ::getAlphaLingDevices,
          "alphaling" to ::getAlphalingDevices,
          "alphatel" to ::getAlphatelDevices,
          "alphawolf" to ::getAlphawolfDevices,
          "alpine" to ::getAlpineDevices,
          "alps" to ::getAlpsDevices,
          "alt" to ::getAltDevices,
          "altibox" to ::getAltiboxDevices,
          "altice" to ::getAlticeDevices,
          "altron" to ::getAltronDevices,
          "altus" to ::getAltusDevices,
          "amamobile" to ::getAmaMobileDevices,
          "amazon" to ::getAmazonDevices,
          "amgoo" to ::getAmgooDevices,
          "amgx13e" to ::getAmgx13eDevices,
          "amino" to ::getAminoDevices,
          "amlogic" to ::getAmlogicDevices,
          "amobile" to ::getAmobileDevices,
          "ampliatv" to ::getAmpliatvDevices,
          "amstrad" to ::getAmstradDevices,
          "amulet7" to ::getAmulet7Devices,
          "anam" to ::getAnamDevices,
          "and" to ::getAndDevices,
          "andersson" to ::getAnderssonDevices,
          "andrino" to ::getAndrinoDevices,
          "android" to ::getAndroidDevices,
          "anexa" to ::getAnexaDevices,
          "angeltech" to ::getAngeltechDevices,
          "ans" to ::getAnsDevices,
          "ansnks" to ::getAnsNksDevices,
          "ansnksa" to ::getAnsNksaDevices,
          "antel" to ::getAntelDevices,
          "antempe" to ::getAntempeDevices,
          "anxonit" to ::getAnxonitDevices,
          "anya" to ::getAnyaDevices,
          "anywaygo" to ::getAnywayGoDevices,
          "aoc" to ::getAocDevices,
          "aocwei" to ::getAocweiDevices,
          "aogo" to ::getAogoDevices,
          "aoskey" to ::getAoskeyDevices,
          "aoyodkg" to ::getAoyodkgDevices,
          "apex" to ::getApexDevices,
          "apolosign" to ::getApolosignDevices,
          "aprix" to ::getAprixDevices,
          "aqhh" to ::getAqhhDevices,
          "aqua" to ::getAquaDevices,
          "aratek" to ::getAratekDevices,
          "arbor" to ::getArborDevices,
          "arcelik" to ::getArcelikDevices,
          "archos" to ::getArchosDevices,
          "archoswithlogic" to ::getArchoswithlogicDevices,
          "argo" to ::getArgoDevices,
          "arguest" to ::getArguestDevices,
          "arirang" to ::getArirangDevices,
          "arival" to ::getArivalDevices,
          "ark" to ::getArkDevices,
          "arknikko" to ::getArknikkoDevices,
          "armadilos" to ::getArmadilosDevices,
          "arris" to ::getArrisDevices,
          "arrow" to ::getArrowDevices,
          "arrqw" to ::getArrqwDevices,
          "artel" to ::getArtelDevices,
          "artran" to ::getArtranDevices,
          "arvand" to ::getArvandDevices,
          "aselectronics" to ::getAsElectronicsDevices,
          "asaano" to ::getAsaanoDevices,
          "asanzo" to ::getAsanzoDevices,
          "ascom" to ::getAscomDevices,
          "ascon" to ::getAsconDevices,
          "asg" to ::getAsgDevices,
          "asher" to ::getAsherDevices,
          "ashima" to ::getAshimaDevices,
          "asianet" to ::getAsianetDevices,
          "aspera" to ::getAsperaDevices,
          "astech" to ::getAstechDevices,
          "astex" to ::getAstexDevices,
          "aston" to ::getAstonDevices,
          "astrex" to ::getAstrexDevices,
          "astromobile" to ::getAstroMobileDevices,
          "astrotab" to ::getAstroTabDevices,
          "astrom" to ::getAstromDevices,
          "asus" to ::getAsusDevices,
          "ateam" to ::getAteamDevices,
          "atec" to ::getAtecDevices,
          "athenastellar" to ::getAthenastellarDevices,
          "athesi" to ::getAthesiDevices,
          "athesiprofessional" to ::getAthesiProfessionalDevices,
          "atilimmpad" to ::getAtilimMpadDevices,
          "atm" to ::getAtmDevices,
          "atmpc" to ::getAtmpcDevices,
          "atol" to ::getAtolDevices,
          "atoto" to ::getAtotoDevices,
          "atozee" to ::getAtozeeDevices,
          "att" to ::getAttDevices,
          "atvio" to ::getAtvioDevices,
          "audi" to ::getAudiDevices,
          "aupo" to ::getAupoDevices,
          "aura" to ::getAuraDevices,
          "aurzen" to ::getAurzenDevices,
          "ava" to ::getAvaDevices,
          "avacom" to ::getAvacomDevices,
          "avangard" to ::getAvangardDevices,
          "avatel" to ::getAvatelDevices,
          "avaya" to ::getAvayaDevices,
          "avh" to ::getAvhDevices,
          "avidpad" to ::getAvidpadDevices,
          "avion" to ::getAvionDevices,
          "avita" to ::getAvitaDevices,
          "avtek" to ::getAvtekDevices,
          "avvio" to ::getAvvioDevices,
          "awow" to ::getAwowDevices,
          "axmeta" to ::getAxMetaDevices,
          "axel" to ::getAxelDevices,
          "axion" to ::getAxionDevices,
          "axioo" to ::getAxiooDevices,
          "axon" to ::getAxonDevices,
          "axs" to ::getAxsDevices,
          "axstv" to ::getAxstvDevices,
          "axxa" to ::getAxxaDevices,
          "axxamobile" to ::getAxxaMobileDevices,
          "ayat" to ::getAyatDevices,
          "ayonz" to ::getAyonzDevices,
          "ayya" to ::getAyyaDevices,
          "azatech" to ::getAzatechDevices,
          "azeyou" to ::getAzeyouDevices,
          "azom" to ::getAzomDevices,
          "azpen" to ::getAzpenDevices,
          "azumi" to ::getAzumiDevices,
          "bbox" to ::getBBoxDevices,
          "babal" to ::getBabalDevices,
          "baken" to ::getBakenDevices,
          "balmuda" to ::getBalmudaDevices,
          "banana" to ::getBananaDevices,
          "bartec" to ::getBartecDevices,
          "basics" to ::getBasicsDevices,
          "batman" to ::getBatmanDevices,
          "bauf" to ::getBaufDevices,
          "bauhn" to ::getBauhnDevices,
          "baykus" to ::getBaykusDevices,
          "bbox" to ::getBboxDevices,
          "bdq" to ::getBdqDevices,
          "beafon" to ::getBeaFonDevices,
          "beafon" to ::getBeafonDevices,
          "bec" to ::getBecDevices,
          "beeline" to ::getBeelineDevices,
          "beghelli" to ::getBeghelliDevices,
          "beista" to ::getBeistaDevices,
          "beko" to ::getBekoDevices,
          "beleno" to ::getBelenoDevices,
          "bell" to ::getBellDevices,
          "bellcanada" to ::getBellCanadaDevices,
          "benco" to ::getBencoDevices,
          "beneve" to ::getBeneveDevices,
          "benq" to ::getBenqDevices,
          "benten" to ::getBentenDevices,
          "bentley" to ::getBentleyDevices,
          "benzo" to ::getBenzoDevices,
          "bergstrom" to ::getBergstromDevices,
          "bestbuy" to ::getBestbuyDevices,
          "bestreha" to ::getBestrehaDevices,
          "besttab" to ::getBesttabDevices,
          "beyondpte" to ::getBeyondPteDevices,
          "bfelix" to ::getBfelixDevices,
          "bgh" to ::getBghDevices,
          "bh" to ::getBhDevices,
          "biccamera" to ::getBicCameraDevices,
          "biegedy" to ::getBiegedyDevices,
          "bigme" to ::getBigmeDevices,
          "bigtech" to ::getBigtechDevices,
          "bilimbook" to ::getBilimbookDevices,
          "billion" to ::getBillionDevices,
          "billow" to ::getBillowDevices,
          "binge" to ::getBingeDevices,
          "biolux" to ::getBioluxDevices,
          "biorugged" to ::getBioruggedDevices,
          "biosfone" to ::getBiosfoneDevices,
          "bitainternational" to ::getBitaInternationalDevices,
          "bitel" to ::getBitelDevices,
          "bitmore" to ::getBitmoreDevices,
          "bittium" to ::getBittiumDevices,
          "bizringer" to ::getBizringerDevices,
          "blabloo" to ::getBlablooDevices,
          "blackfox" to ::getBlackFoxDevices,
          "blackshark" to ::getBlackSharkDevices,
          "blackanddecker" to ::getBlackanddeckerDevices,
          "blackberry" to ::getBlackberryDevices,
          "blackfox" to ::getBlackfoxDevices,
          "blackline" to ::getBlacklineDevices,
          "blackshark" to ::getBlacksharkDevices,
          "blackview" to ::getBlackviewDevices,
          "blaupunkt" to ::getBlaupunktDevices,
          "bleck" to ::getBleckDevices,
          "blessx" to ::getBlessxDevices,
          "blow" to ::getBlowDevices,
          "blu" to ::getBluDevices,
          "bluboo" to ::getBlubooDevices,
          "blue" to ::getBlueDevices,
          "bluebird" to ::getBluebirdDevices,
          "bluedigit" to ::getBluedigitDevices,
          "bluedot" to ::getBluedotDevices,
          "blueworld" to ::getBlueworldDevices,
          "bluslate" to ::getBluslateDevices,
          "bmax" to ::getBmaxDevices,
          "bmobile" to ::getBmobileDevices,
          "bmpro" to ::getBmproDevices,
          "bmxc" to ::getBmxcDevices,
          "bncf" to ::getBncfDevices,
          "bno" to ::getBnoDevices,
          "bolva" to ::getBolvaDevices,
          "boreal" to ::getBorealDevices,
          "botech" to ::getBotechDevices,
          "bothouniversity" to ::getBothoUniversityDevices,
          "bouyguestelecom" to ::getBouyguestelecomDevices,
          "boxy" to ::getBoxyDevices,
          "bphone" to ::getBphoneDevices,
          "bpl" to ::getBplDevices,
          "bq" to ::getBqDevices,
          "bqmobile" to ::getBqmobileDevices,
          "bqru" to ::getBqruDevices,
          "braillenote" to ::getBraillenoteDevices,
          "brand" to ::getBrandDevices,
          "brando" to ::getBrandoDevices,
          "brandt" to ::getBrandtDevices,
          "brava" to ::getBravaDevices,
          "brave" to ::getBraveDevices,
          "bravetechs" to ::getBravetechsDevices,
          "bravis" to ::getBravisDevices,
          "bridgestonemobilitysolutions" to ::getBridgestoneMobilitySolutionsDevices,
          "brighton" to ::getBrightonDevices,
          "brightside" to ::getBrightsideDevices,
          "brigmton" to ::getBrigmtonDevices,
          "briotouch" to ::getBriotouchDevices,
          "brisanet" to ::getBrisanetDevices,
          "britania" to ::getBritaniaDevices,
          "brondi" to ::getBrondiDevices,
          "brookstone" to ::getBrookstoneDevices,
          "brown" to ::getBrownDevices,
          "bruhm" to ::getBruhmDevices,
          "btc" to ::getBtcDevices,
          "bubblegum" to ::getBubblegumDevices,
          "buddyphone" to ::getBuddyPhoneDevices,
          "buff" to ::getBuffDevices,
          "bulsatcom" to ::getBulsatcomDevices,
          "bundy" to ::getBundyDevices,
          "bush" to ::getBushDevices,
          "bvs" to ::getBvsDevices,
          "bwjbsw" to ::getBwjbswDevices,
          "byjus" to ::getByjusDevices,
          "byybuo" to ::getByybuoDevices,
          "c5mobile" to ::getC5MobileDevices,
          "cablecolor" to ::getCablecolorDevices,
          "caixun" to ::getCaixunDevices,
          "callsky" to ::getCallskyDevices,
          "caltta" to ::getCalttaDevices,
          "calus" to ::getCalusDevices,
          "camfone" to ::getCamfoneDevices,
          "canal" to ::getCanalDevices,
          "canalplus" to ::getCanalPlusDevices,
          "canaldigital" to ::getCanaldigitalDevices,
          "candi" to ::getCandiDevices,
          "candy" to ::getCandyDevices,
          "captiva" to ::getCaptivaDevices,
          "carbonmobile" to ::getCarbonmobileDevices,
          "carp" to ::getCarpDevices,
          "carrefour" to ::getCarrefourDevices,
          "carrozzeria" to ::getCarrozzeriaDevices,
          "casio" to ::getCasioDevices,
          "casper" to ::getCasperDevices,
          "cat" to ::getCatDevices,
          "catchtable" to ::getCatchtableDevices,
          "cavion" to ::getCavionDevices,
          "caxilysh" to ::getCaxilyshDevices,
          "ccc" to ::getCccDevices,
          "cecotec" to ::getCecotecDevices,
          "cedar" to ::getCedarDevices,
          "ceibal" to ::getCeibalDevices,
          "celero5g" to ::getCelero5gDevices,
          "cellacom" to ::getCellacomDevices,
          "cellallure" to ::getCellallureDevices,
          "cellcomtv" to ::getCellcomtvDevices,
          "cellecor" to ::getCellecorDevices,
          "cello" to ::getCelloDevices,
          "cellution" to ::getCellutionDevices,
          "centric" to ::getCentricDevices,
          "cepter" to ::getCepterDevices,
          "cg" to ::getCgDevices,
          "chainway" to ::getChainwayDevices,
          "challenger" to ::getChallengerDevices,
          "chanbly" to ::getChanblyDevices,
          "changhong" to ::getChanghongDevices,
          "channelmaster" to ::getChannelMasterDevices,
          "chcnav" to ::getChcnavDevices,
          "cheetah" to ::getCheetahDevices,
          "chemistwarehouse" to ::getChemistWarehouseDevices,
          "cherry" to ::getCherryDevices,
          "cherrymobile" to ::getCherryMobileDevices,
          "cherrymobile" to ::getCherrymobileDevices,
          "chgtvhub" to ::getChgTvHubDevices,
          "chieko" to ::getChiekoDevices,
          "chimei" to ::getChimeiDevices,
          "chiq" to ::getChiqDevices,
          "chofslia" to ::getChofsliaDevices,
          "chosunbiz" to ::getChosunbizDevices,
          "chunghwatelecom" to ::getChunghwatelecomDevices,
          "chuwi" to ::getChuwiDevices,
          "ciber" to ::getCiberDevices,
          "cidea" to ::getCideaDevices,
          "cignalplaytv" to ::getCignalplaytvDevices,
          "cik" to ::getCikDevices,
          "cilico" to ::getCilicoDevices,
          "ciontek" to ::getCiontekDevices,
          "cipherlab" to ::getCipherlabDevices,
          "cisco" to ::getCiscoDevices,
          "citynettv" to ::getCitynettvDevices,
          "ciusesrl" to ::getCiuseSrlDevices,
          "cjhv" to ::getCjhvDevices,
          "ckypad" to ::getCkypadDevices,
          "claresta" to ::getClarestaDevices,
          "clarmin" to ::getClarminDevices,
          "claro" to ::getClaroDevices,
          "classpro" to ::getClassproDevices,
          "clearsounds" to ::getClearsoundsDevices,
          "cleartouch" to ::getCleartouchDevices,
          "clementoni" to ::getClementoniDevices,
          "clever" to ::getCleverDevices,
          "clevertouch" to ::getClevertouchDevices,
          "clickonicaexclusive" to ::getClickonicaExclusiveDevices,
          "clicktabds" to ::getClicktabdsDevices,
          "clide" to ::getClideDevices,
          "clio" to ::getClioDevices,
          "cloud" to ::getCloudDevices,
          "cloudairwifi" to ::getCloudAirWifiDevices,
          "cloudmobile" to ::getCloudMobileDevices,
          "cloudfone" to ::getCloudfoneDevices,
          "clover" to ::getCloverDevices,
          "clovertek" to ::getClovertekDevices,
          "cmcc" to ::getCmccDevices,
          "cmdc" to ::getCmdcDevices,
          "cns" to ::getCnsDevices,
          "cobia" to ::getCobiaDevices,
          "coby" to ::getCobyDevices,
          "cocomm" to ::getCocommDevices,
          "coex" to ::getCoexDevices,
          "cogeco" to ::getCogecoDevices,
          "coin" to ::getCoinDevices,
          "colorroom" to ::getColorroomDevices,
          "colors" to ::getColorsDevices,
          "colorview" to ::getColorviewDevices,
          "combustech" to ::getCombustechDevices,
          "comio" to ::getComioDevices,
          "commbox" to ::getCommboxDevices,
          "compaq" to ::getCompaqDevices,
          "compartir" to ::getCompartirDevices,
          "compumax" to ::getCompumaxDevices,
          "comteco" to ::getComtecoDevices,
          "concord" to ::getConcordDevices,
          "condor" to ::getCondorDevices,
          "congotelecom" to ::getCongotelecomDevices,
          "conker" to ::getConkerDevices,
          "connex" to ::getConnexDevices,
          "conquest" to ::getConquestDevices,
          "consung" to ::getConsungDevices,
          "contex" to ::getContexDevices,
          "conti" to ::getContiDevices,
          "continental" to ::getContinentalDevices,
          "continentaledison" to ::getContinentaledisonDevices,
          "continuus" to ::getContinuusDevices,
          "contixo" to ::getContixoDevices,
          "converge" to ::getConvergeDevices,
          "coocaa" to ::getCoocaaDevices,
          "cookie" to ::getCookieDevices,
          "coolfan" to ::getCoolfanDevices,
          "coolpad" to ::getCoolpadDevices,
          "coop" to ::getCoopDevices,
          "coopers" to ::getCoopersDevices,
          "coppernic" to ::getCoppernicDevices,
          "coralphone" to ::getCoralphoneDevices,
          "coreinnovations" to ::getCoreInnovationsDevices,
          "corn" to ::getCornDevices,
          "cosmedia" to ::getCosmediaDevices,
          "cosmos" to ::getCosmosDevices,
          "cosmotetv" to ::getCosmoteTvDevices,
          "covia" to ::getCoviaDevices,
          "cozyla" to ::getCozylaDevices,
          "craig" to ::getCraigDevices,
          "creato" to ::getCreatoDevices,
          "credenceid" to ::getCredenceidDevices,
          "crelander" to ::getCrelanderDevices,
          "crema" to ::getCremaDevices,
          "cricket" to ::getCricketDevices,
          "cristor" to ::getCristorDevices,
          "crony" to ::getCronyDevices,
          "crosscall" to ::getCrosscallDevices,
          "crownmustang" to ::getCrownmustangDevices,
          "crua" to ::getCruaDevices,
          "cryptodata" to ::getCryptodataDevices,
          "ctc" to ::getCtcDevices,
          "ctl" to ::getCtlDevices,
          "ctroniq" to ::getCtroniqDevices,
          "ctv" to ::getCtvDevices,
          "cubot" to ::getCubotDevices,
          "custom" to ::getCustomDevices,
          "cvte" to ::getCvteDevices,
          "cwell" to ::getCwellDevices,
          "cwowdefu" to ::getCwowdefuDevices,
          "cx" to ::getCxDevices,
          "cyrus" to ::getCyrusDevices,
          "dlight" to ::getDLightDevices,
          "dtech" to ::getDTechDevices,
          "dabliu" to ::getDabliuDevices,
          "daewoo" to ::getDaewooDevices,
          "dahl" to ::getDahlDevices,
          "dahua" to ::getDahuaDevices,
          "daiichi" to ::getDaiichiDevices,
          "daiko" to ::getDaikoDevices,
          "daiwa" to ::getDaiwaDevices,
          "daiyu" to ::getDaiyuDevices,
          "damasco" to ::getDamascoDevices,
          "dandoon" to ::getDandoonDevices,
          "danew" to ::getDanewDevices,
          "dangbei" to ::getDangbeiDevices,
          "danilux" to ::getDaniluxDevices,
          "dany" to ::getDanyDevices,
          "daria" to ::getDariaDevices,
          "datalogic" to ::getDatalogicDevices,
          "datamini" to ::getDataminiDevices,
          "dataminitwg10" to ::getDataminiTwg10Devices,
          "datsun" to ::getDatsunDevices,
          "dawlance" to ::getDawlanceDevices,
          "daymark" to ::getDaymarkDevices,
          "dazn" to ::getDaznDevices,
          "dcg" to ::getDcgDevices,
          "dcode" to ::getDcodeDevices,
          "dcolor" to ::getDcolorDevices,
          "dec" to ::getDecDevices,
          "decaview" to ::getDecaviewDevices,
          "deephub" to ::getDeephubDevices,
          "deertime" to ::getDeertimeDevices,
          "delephas" to ::getDelephasDevices,
          "dell" to ::getDellDevices,
          "denka" to ::getDenkaDevices,
          "denstv" to ::getDensTvDevices,
          "densowave" to ::getDensowaveDevices,
          "denver" to ::getDenverDevices,
          "deplay" to ::getDeplayDevices,
          "depoint" to ::getDepointDevices,
          "deutschetelekom" to ::getDeutschetelekomDevices,
          "dewsod" to ::getDewsodDevices,
          "dexp" to ::getDexpDevices,
          "deyi" to ::getDeyiDevices,
          "dfn" to ::getDfnDevices,
          "dghrti" to ::getDghrtiDevices,
          "dgo" to ::getDgoDevices,
          "dgtec" to ::getDgtecDevices,
          "dialn" to ::getDialnDevices,
          "dialog" to ::getDialogDevices,
          "dialogblaze" to ::getDialogBlazeDevices,
          "dialogtv" to ::getDialogTvDevices,
          "dicle" to ::getDicleDevices,
          "dicletab" to ::getDicleTabDevices,
          "didi" to ::getDidiDevices,
          "didik" to ::getDidikDevices,
          "didiktab" to ::getDidikTabDevices,
          "diggio" to ::getDiggioDevices,
          "digi" to ::getDigiDevices,
          "digic2" to ::getDigiC2Devices,
          "digir2" to ::getDigiR2Devices,
          "digicel" to ::getDigicelDevices,
          "digidragon" to ::getDigidragonDevices,
          "digiking" to ::getDigikingDevices,
          "digiland" to ::getDigilandDevices,
          "digiquest" to ::getDigiquestDevices,
          "digit" to ::getDigitDevices,
          "digits" to ::getDigitsDevices,
          "digma" to ::getDigmaDevices,
          "dijitsu" to ::getDijitsuDevices,
          "dingdong" to ::getDingdongDevices,
          "directv" to ::getDirectvDevices,
          "dish" to ::getDishDevices,
          "dishtv" to ::getDishtvDevices,
          "dishtvnz" to ::getDishtvNzDevices,
          "disney" to ::getDisneyDevices,
          "disneypixar" to ::getDisneyPixarDevices,
          "ditec" to ::getDitecDevices,
          "ditecma" to ::getDitecmaDevices,
          "diva" to ::getDivaDevices,
          "dixon" to ::getDixonDevices,
          "dl" to ::getDlDevices,
          "dmoao" to ::getDmoaoDevices,
          "dna" to ::getDnaDevices,
          "do" to ::getDoDevices,
          "docomo" to ::getDocomoDevices,
          "doel" to ::getDoelDevices,
          "domrumovix" to ::getDomRuMovixDevices,
          "domaton" to ::getDomatonDevices,
          "doogee" to ::getDoogeeDevices,
          "doppio" to ::getDoppioDevices,
          "dora" to ::getDoraDevices,
          "doro" to ::getDoroDevices,
          "dragontouch" to ::getDragonTouchDevices,
          "dragontouch" to ::getDragontouchDevices,
          "dreammaker" to ::getDreammakerDevices,
          "dreamstar" to ::getDreamstarDevices,
          "dreamtech" to ::getDreamtechDevices,
          "dreamview" to ::getDreamviewDevices,
          "droidlogic" to ::getDroidlogicDevices,
          "dsic" to ::getDsicDevices,
          "dtab" to ::getDtabDevices,
          "dtac" to ::getDtacDevices,
          "dtv" to ::getDtvDevices,
          "dual" to ::getDualDevices,
          "dunhoo" to ::getDunhooDevices,
          "dunnsmobile" to ::getDunnsMobileDevices,
          "duoduogo" to ::getDuoduogoDevices,
          "durabrand" to ::getDurabrandDevices,
          "duubee" to ::getDuubeeDevices,
          "dwsummus" to ::getDwsummusDevices,
          "dyanora" to ::getDyanoraDevices,
          "dynalink" to ::getDynalinkDevices,
          "dyon" to ::getDyonDevices,
          "e10" to ::getE10Devices,
          "e4u" to ::getE4uDevices,
          "eboda" to ::getEBodaDevices,
          "elead" to ::getELeadDevices,
          "etel" to ::getETelDevices,
          "ewealthmobile" to ::getEWealthMobileDevices,
          "eachpai" to ::getEachpaiDevices,
          "eacrugged" to ::getEacruggedDevices,
          "eagiesoar" to ::getEagiesoarDevices,
          "eaglesoar" to ::getEaglesoarDevices,
          "eancom" to ::getEancomDevices,
          "easelectric" to ::getEasElectricDevices,
          "easyteck" to ::getEasyteckDevices,
          "ebox" to ::getEboxDevices,
          "echo" to ::getEchoDevices,
          "echolink" to ::getEcholinkDevices,
          "echosonic" to ::getEchosonicDevices,
          "ecom" to ::getEcomDevices,
          "econnect" to ::getEconnectDevices,
          "ecopower" to ::getEcopowerDevices,
          "ecostar" to ::getEcostarDevices,
          "ecs" to ::getEcsDevices,
          "edenwood" to ::getEdenwoodDevices,
          "edstar" to ::getEdstarDevices,
          "ee" to ::getEeDevices,
          "efioo" to ::getEfiooDevices,
          "egbok" to ::getEgbokDevices,
          "egl" to ::getEglDevices,
          "egoboo" to ::getEgobooDevices,
          "egotek" to ::getEgotekDevices,
          "ehlel" to ::getEhlelDevices,
          "einstein" to ::getEinsteinDevices,
          "ejboard" to ::getEjboardDevices,
          "ekinox" to ::getEkinoxDevices,
          "eko" to ::getEkoDevices,
          "eks" to ::getEksDevices,
          "eksx" to ::getEksxDevices,
          "el" to ::getElDevices,
          "elactron" to ::getElactronDevices,
          "eldmandate" to ::getEldmandateDevices,
          "elecson" to ::getElecsonDevices,
          "electra" to ::getElectraDevices,
          "electroman" to ::getElectromanDevices,
          "electroneum" to ::getElectroneumDevices,
          "element" to ::getElementDevices,
          "elephone" to ::getElephoneDevices,
          "elevate" to ::getElevateDevices,
          "elevn" to ::getElevnDevices,
          "elexia" to ::getElexiaDevices,
          "elexus" to ::getElexusDevices,
          "elink" to ::getElinkDevices,
          "elisa" to ::getElisaDevices,
          "elisaelamus" to ::getElisaelamusDevices,
          "elista" to ::getElistaDevices,
          "elitelux" to ::getEliteluxDevices,
          "elo" to ::getEloDevices,
          "elsonic" to ::getElsonicDevices,
          "elsys" to ::getElsysDevices,
          "ematic" to ::getEmaticDevices,
          "emerson" to ::getEmersonDevices,
          "emporia" to ::getEmporiaDevices,
          "endo" to ::getEndoDevices,
          "energizer" to ::getEnergizerDevices,
          "energysistem" to ::getEnergysistemDevices,
          "engel" to ::getEngelDevices,
          "englaon" to ::getEnglaonDevices,
          "enie" to ::getEnieDevices,
          "enova" to ::getEnovaDevices,
          "entel" to ::getEntelDevices,
          "entity" to ::getEntityDevices,
          "entv" to ::getEntvDevices,
          "eon" to ::getEonDevices,
          "eonsmartbox" to ::getEonSmartBoxDevices,
          "eonsmartbox" to ::getEonsmartboxDevices,
          "epi" to ::getEpiDevices,
          "epic" to ::getEpicDevices,
          "epiklearningtab" to ::getEpikLearningTabDevices,
          "epikone" to ::getEpikoneDevices,
          "epson" to ::getEpsonDevices,
          "equator" to ::getEquatorDevices,
          "equinoxe" to ::getEquinoxeDevices,
          "ergo" to ::getErgoDevices,
          "erito" to ::getEritoDevices,
          "eroc" to ::getErocDevices,
          "esley" to ::getEsleyDevices,
          "esol" to ::getEsolDevices,
          "essential" to ::getEssentialDevices,
          "essentielb" to ::getEssentielbDevices,
          "estalky" to ::getEstalkyDevices,
          "estar" to ::getEstarDevices,
          "estelle" to ::getEstelleDevices,
          "estla" to ::getEstlaDevices,
          "estream4k" to ::getEstream4kDevices,
          "etalk" to ::getEtalkDevices,
          "etelpremium" to ::getEtelpremiumDevices,
          "etera" to ::getEteraDevices,
          "eternity" to ::getEternityDevices,
          "etg" to ::getEtgDevices,
          "ethiotelecom" to ::getEthiotelecomDevices,
          "etoe" to ::getEtoeDevices,
          "eudora" to ::getEudoraDevices,
          "euskaltel" to ::getEuskaltelDevices,
          "evercoss" to ::getEvercossDevices,
          "everesteverpad" to ::getEverestEverpadDevices,
          "everex" to ::getEverexDevices,
          "everis" to ::getEverisDevices,
          "everpad" to ::getEverpadDevices,
          "evertek" to ::getEvertekDevices,
          "everyphone" to ::getEveryphoneDevices,
          "evocatv" to ::getEvocatvDevices,
          "evoforce1" to ::getEvoforce1Devices,
          "evolveo" to ::getEvolveoDevices,
          "evoo" to ::getEvooDevices,
          "evopro" to ::getEvoproDevices,
          "evota" to ::getEvotaDevices,
          "evvo" to ::getEvvoDevices,
          "evvoli" to ::getEvvoliDevices,
          "ewis" to ::getEwisDevices,
          "exceed" to ::getExceedDevices,
          "exclusiv" to ::getExclusivDevices,
          "excotek" to ::getExcotekDevices,
          "exertis" to ::getExertisDevices,
          "exo" to ::getExoDevices,
          "extreme" to ::getExtremeDevices,
          "eyepay" to ::getEyepayDevices,
          "f150" to ::getF150Devices,
          "f2" to ::getF2Devices,
          "f2mobile" to ::getF2mobileDevices,
          "fplus" to ::getFPlusDevices,
          "facetel" to ::getFacetelDevices,
          "facilotab" to ::getFacilotabDevices,
          "faiba" to ::getFaibaDevices,
          "fairphone" to ::getFairphoneDevices,
          "famix" to ::getFamixDevices,
          "famousfones" to ::getFamousFonesDevices,
          "fancyday" to ::getFancydayDevices,
          "fandu" to ::getFanduDevices,
          "fangor" to ::getFangorDevices,
          "fareastone" to ::getFareastoneDevices,
          "fastlife" to ::getFastlifeDevices,
          "fastway" to ::getFastwayDevices,
          "fastwd" to ::getFastwdDevices,
          "fatarus" to ::getFatarusDevices,
          "favoritt" to ::getFavorittDevices,
          "fcc" to ::getFccDevices,
          "fcnt" to ::getFcntDevices,
          "feitian" to ::getFeitianDevices,
          "felux" to ::getFeluxDevices,
          "fengmi" to ::getFengmiDevices,
          "feonal" to ::getFeonalDevices,
          "fero" to ::getFeroDevices,
          "fezawio" to ::getFezawioDevices,
          "fff" to ::getFffDevices,
          "fffsmartlife" to ::getFffsmartlifeDevices,
          "fiestaduo" to ::getFiestaduoDevices,
          "figgers" to ::getFiggersDevices,
          "figi" to ::getFigiDevices,
          "figo" to ::getFigoDevices,
          "fireflymobile" to ::getFireflyMobileDevices,
          "firehawk" to ::getFirehawkDevices,
          "fiteye" to ::getFiteyeDevices,
          "fivahiva" to ::getFivahivaDevices,
          "flash" to ::getFlashDevices,
          "flexy" to ::getFlexyDevices,
          "flipkart" to ::getFlipkartDevices,
          "flnet" to ::getFlnetDevices,
          "flow" to ::getFlowDevices,
          "fluo" to ::getFluoDevices,
          "fly" to ::getFlyDevices,
          "flytech" to ::getFlyTechDevices,
          "fmc" to ::getFmcDevices,
          "fnb" to ::getFnbDevices,
          "fobem" to ::getFobemDevices,
          "fol" to ::getFolDevices,
          "folg" to ::getFolgDevices,
          "fonos" to ::getFonosDevices,
          "fonossmartelectronics" to ::getFonosSmartElectronicsDevices,
          "forco" to ::getForcoDevices,
          "formovie" to ::getFormovieDevices,
          "formuler" to ::getFormulerDevices,
          "fortus" to ::getFortusDevices,
          "fossibot" to ::getFossibotDevices,
          "fossil" to ::getFossilDevices,
          "four" to ::getFourDevices,
          "fourmobile" to ::getFourmobileDevices,
          "foxandsheep" to ::getFoxAndSheepDevices,
          "foxtel" to ::getFoxtelDevices,
          "foxx" to ::getFoxxDevices,
          "foxxd" to ::getFoxxdDevices,
          "fpd" to ::getFpdDevices,
          "fplus" to ::getFplusDevices,
          "fps" to ::getFpsDevices,
          "fpt" to ::getFptDevices,
          "fpttelecom" to ::getFptTelecomDevices,
          "free" to ::getFreeDevices,
          "freebox" to ::getFreeboxDevices,
          "freemobile" to ::getFreemobileDevices,
          "freeski" to ::getFreeskiDevices,
          "freetel" to ::getFreetelDevices,
          "freeyond" to ::getFreeyondDevices,
          "fresh" to ::getFreshDevices,
          "frunsi" to ::getFrunsiDevices,
          "fuego" to ::getFuegoDevices,
          "fujitsu" to ::getFujitsuDevices,
          "funai" to ::getFunaiDevices,
          "funker" to ::getFunkerDevices,
          "fuse4k" to ::getFuse4kDevices,
          "fusion5" to ::getFusion5Devices,
          "futuretab" to ::getFuturetabDevices,
          "fxtecpro1x" to ::getFxTecPro1xDevices,
          "fxtec" to ::getFxtecDevices,
          "ganica" to ::getGAnicaDevices,
          "gguard" to ::getGGuardDevices,
          "gmee" to ::getGMeeDevices,
          "gtab" to ::getGTabDevices,
          "gtide" to ::getGTideDevices,
          "gtideextreme" to ::getGTideExtremeDevices,
          "gtouch" to ::getGTouchDevices,
          "gangnam" to ::getGangnamDevices,
          "garad" to ::getGaradDevices,
          "garantiamovil" to ::getGarantiamovilDevices,
          "gateway" to ::getGatewayDevices,
          "gazer" to ::getGazerDevices,
          "gdl" to ::getGdlDevices,
          "gdm" to ::getGdmDevices,
          "ge" to ::getGeDevices,
          "geanee" to ::getGeaneeDevices,
          "geaneepro" to ::getGeaneeproDevices,
          "gear" to ::getGearDevices,
          "gearmobile" to ::getGearMobileDevices,
          "geecoo" to ::getGeecooDevices,
          "generalluxe" to ::getGeneralLuxeDevices,
          "generalmobile" to ::getGeneralmobileDevices,
          "generalsupreme" to ::getGeneralsupremeDevices,
          "geniatech" to ::getGeniatechDevices,
          "geniora" to ::getGenioraDevices,
          "geoelectron" to ::getGeoelectronDevices,
          "geomax" to ::getGeomaxDevices,
          "geotm" to ::getGeotmDevices,
          "geshem" to ::getGeshemDevices,
          "get" to ::getGetDevices,
          "getac" to ::getGetacDevices,
          "getnord" to ::getGetnordDevices,
          "gevo" to ::getGevoDevices,
          "gfast" to ::getGfastDevices,
          "gfive" to ::getGfiveDevices,
          "gguard" to ::getGguardDevices,
          "ghia" to ::getGhiaDevices,
          "ghiakids" to ::getGhiaKidsDevices,
          "gigabyte" to ::getGigabyteDevices,
          "gigaset" to ::getGigasetDevices,
          "gini" to ::getGiniDevices,
          "ginzzu" to ::getGinzzuDevices,
          "gionee" to ::getGioneeDevices,
          "global" to ::getGlobalDevices,
          "global3" to ::getGlobal3Devices,
          "globalsec" to ::getGlobalsecDevices,
          "globe" to ::getGlobeDevices,
          "globeatv" to ::getGlobeAtvDevices,
          "globestreamwatch" to ::getGlobestreamwatchDevices,
          "globusinfocomlimited" to ::getGlobusInfocomLimitedDevices,
          "glocalme" to ::getGlocalmeDevices,
          "glofiish" to ::getGlofiishDevices,
          "glx" to ::getGlxDevices,
          "gm" to ::getGmDevices,
          "gmmz" to ::getGmmzDevices,
          "go3" to ::getGo3Devices,
          "gomdusa" to ::getGoMdUsaDevices,
          "goally" to ::getGoallyDevices,
          "gobox" to ::getGoboxDevices,
          "gol" to ::getGolDevices,
          "goldentec" to ::getGoldentecDevices,
          "goldtech" to ::getGoldtechDevices,
          "gomdusa" to ::getGomdusaDevices,
          "gome" to ::getGomeDevices,
          "gomobile" to ::getGomobileDevices,
          "goo" to ::getGooDevices,
          "goodee" to ::getGoodeeDevices,
          "goodtel" to ::getGoodtelDevices,
          "google" to ::getGoogleDevices,
          "goplus" to ::getGoplusDevices,
          "gotv" to ::getGotvDevices,
          "gowin" to ::getGowinDevices,
          "gpelectronic" to ::getGpelectronicDevices,
          "gplus" to ::getGplusDevices,
          "gpx" to ::getGpxDevices,
          "gradiente" to ::getGradienteDevices,
          "greatasia" to ::getGreatasiaDevices,
          "greatwall" to ::getGreatwallDevices,
          "greenhouse" to ::getGreenhouseDevices,
          "greenlion" to ::getGreenlionDevices,
          "greentel" to ::getGreentelDevices,
          "greentelmobile" to ::getGreentelMobileDevices,
          "grid" to ::getGridDevices,
          "grolier" to ::getGrolierDevices,
          "grundig" to ::getGrundigDevices,
          "grunhelm" to ::getGrunhelmDevices,
          "grunkel" to ::getGrunkelDevices,
          "gtel" to ::getGtelDevices,
          "gto" to ::getGtoDevices,
          "gtx" to ::getGtxDevices,
          "guophone" to ::getGuophoneDevices,
          "h133" to ::getH133Devices,
          "h800b" to ::getH800bDevices,
          "h819e" to ::getH819eDevices,
          "haam" to ::getHaamDevices,
          "haehne" to ::getHaehneDevices,
          "hafury" to ::getHafuryDevices,
          "haier" to ::getHaierDevices,
          "haitech" to ::getHaitechDevices,
          "hako" to ::getHakoDevices,
          "hamic" to ::getHamicDevices,
          "hamlet" to ::getHamletDevices,
          "hammer" to ::getHammerDevices,
          "hanasis" to ::getHanasisDevices,
          "handheld" to ::getHandheldDevices,
          "handheldwireless" to ::getHandheldWirelessDevices,
          "handtop" to ::getHandtopDevices,
          "hanet" to ::getHanetDevices,
          "hankookcrea" to ::getHankookCreaDevices,
          "hannspree" to ::getHannspreeDevices,
          "hansung" to ::getHansungDevices,
          "hanyeal" to ::getHanyealDevices,
          "haoqin" to ::getHaoqinDevices,
          "haovm" to ::getHaovmDevices,
          "harmontec" to ::getHarmonTecDevices,
          "hatch" to ::getHatchDevices,
          "hathway" to ::getHathwayDevices,
          "haus" to ::getHausDevices,
          "hbestore" to ::getHbestoreDevices,
          "hcn" to ::getHcnDevices,
          "hdplus" to ::getHdPlusDevices,
          "hdc" to ::getHdcDevices,
          "headwolf" to ::getHeadwolfDevices,
          "heatz" to ::getHeatzDevices,
          "hec" to ::getHecDevices,
          "helgi" to ::getHelgiDevices,
          "helio" to ::getHelioDevices,
          "helixinc" to ::getHelixIncDevices,
          "hellcat" to ::getHellcatDevices,
          "hellopro" to ::getHelloproDevices,
          "hemiltonpro" to ::getHemiltonproDevices,
          "hercls" to ::getHerclsDevices,
          "hero" to ::getHeroDevices,
          "hexabyte" to ::getHexabyteDevices,
          "hezire" to ::getHezireDevices,
          "hi" to ::getHiDevices,
          "hicel" to ::getHicelDevices,
          "hidpt" to ::getHidptDevices,
          "highq" to ::getHighQDevices,
          "highscreen" to ::getHighscreenDevices,
          "higrace" to ::getHigraceDevices,
          "hihi" to ::getHihiDevices,
          "hikers" to ::getHikersDevices,
          "hiking" to ::getHikingDevices,
          "hikvision" to ::getHikvisionDevices,
          "himade" to ::getHimadeDevices,
          "himedia" to ::getHimediaDevices,
          "himetv" to ::getHimetvDevices,
          "hipstreet" to ::getHipstreetDevices,
          "hipstreetdtac" to ::getHipstreetDtacDevices,
          "hipstreetlyf" to ::getHipstreetLyfDevices,
          "hisense" to ::getHisenseDevices,
          "hisorl" to ::getHisorlDevices,
          "histbandroidv6" to ::getHistbandroidv6Devices,
          "hitabt" to ::getHitabtDevices,
          "hitachi" to ::getHitachiDevices,
          "hkc" to ::getHkcDevices,
          "hmd" to ::getHmdDevices,
          "hoco" to ::getHocoDevices,
          "hoffmann" to ::getHoffmannDevices,
          "holo" to ::getHoloDevices,
          "homatics" to ::getHomaticsDevices,
          "homeelite" to ::getHomeEliteDevices,
          "homeplanet" to ::getHomePlanetDevices,
          "homeplustv" to ::getHomeplustvDevices,
          "hometech" to ::getHometechDevices,
          "homez" to ::getHomezDevices,
          "homii" to ::getHomiiDevices,
          "homtom" to ::getHomtomDevices,
          "honda" to ::getHondaDevices,
          "honeywell" to ::getHoneywellDevices,
          "honkuahg" to ::getHonkuahgDevices,
          "honor" to ::getHonorDevices,
          "hoowel" to ::getHoowelDevices,
          "hoozo" to ::getHoozoDevices,
          "hope" to ::getHopeDevices,
          "horion" to ::getHorionDevices,
          "horizon" to ::getHorizonDevices,
          "hot" to ::getHotDevices,
          "hotlight" to ::getHotlightDevices,
          "hotpepper" to ::getHotpepperDevices,
          "hotwav" to ::getHotwavDevices,
          "hotwire" to ::getHotwireDevices,
          "how" to ::getHowDevices,
          "hp" to ::getHpDevices,
          "hpadia10" to ::getHpadia10Devices,
          "hq" to ::getHqDevices,
          "htc" to ::getHtcDevices,
          "htccnchs" to ::getHtccnChsDevices,
          "huavi" to ::getHuaviDevices,
          "huawei" to ::getHuaweiDevices,
          "hublot" to ::getHublotDevices,
          "hudl" to ::getHudlDevices,
          "hugerock" to ::getHugerockDevices,
          "huion" to ::getHuionDevices,
          "humanacadaemy" to ::getHumanAcadaemyDevices,
          "humanacademy" to ::getHumanAcademyDevices,
          "humaxdigital" to ::getHumaxdigitalDevices,
          "huosheng" to ::getHuoshengDevices,
          "hurricane" to ::getHurricaneDevices,
          "huskee" to ::getHuskeeDevices,
          "hy" to ::getHyDevices,
          "hyatta" to ::getHyattaDevices,
          "hyf" to ::getHyfDevices,
          "hyjoy" to ::getHyjoyDevices,
          "hykker" to ::getHykkerDevices,
          "hytera" to ::getHyteraDevices,
          "hyundai" to ::getHyundaiDevices,
          "hyundaimaestro" to ::getHyundaiMaestroDevices,
          "i3technologies" to ::getI3TechnologiesDevices,
          "i5" to ::getI5Devices,
          "ibridge" to ::getIBridgeDevices,
          "ibuddie" to ::getIBuddieDevices,
          "ikall" to ::getIKallDevices,
          "ilife" to ::getILifeDevices,
          "iplus" to ::getIPlusDevices,
          "iscream" to ::getIScreamDevices,
          "iball" to ::getIballDevices,
          "ibao" to ::getIbaoDevices,
          "ibg" to ::getIbgDevices,
          "ibirapita" to ::getIbirapitaDevices,
          "ibowin" to ::getIbowinDevices,
          "ibrit" to ::getIbritDevices,
          "icare" to ::getIcareDevices,
          "ice" to ::getIceDevices,
          "icon" to ::getIconDevices,
          "icraig" to ::getIcraigDevices,
          "idata" to ::getIdataDevices,
          "idc" to ::getIdcDevices,
          "idemia" to ::getIdemiaDevices,
          "idevice" to ::getIdeviceDevices,
          "ifit" to ::getIfitDevices,
          "iget" to ::getIgetDevices,
          "ihome" to ::getIhomeDevices,
          "ihunt" to ::getIhuntDevices,
          "iiif150" to ::getIiif150Devices,
          "iiyama" to ::getIiyamaDevices,
          "ikall" to ::getIkallDevices,
          "ikimobile" to ::getIkimobileDevices,
          "ikon" to ::getIkonDevices,
          "iku" to ::getIkuDevices,
          "ila" to ::getIlaDevices,
          "imachine" to ::getImachineDevices,
          "imarflex" to ::getImarflexDevices,
          "imesh" to ::getImeshDevices,
          "imiia" to ::getImiiaDevices,
          "imin" to ::getIminDevices,
          "immer" to ::getImmerDevices,
          "imo" to ::getImoDevices,
          "imose" to ::getImoseDevices,
          "imozen" to ::getImozenDevices,
          "impecca" to ::getImpeccaDevices,
          "imperial" to ::getImperialDevices,
          "impex" to ::getImpexDevices,
          "impression" to ::getImpressionDevices,
          "imt" to ::getImtDevices,
          "imuz" to ::getImuzDevices,
          "inclo" to ::getIncloDevices,
          "inco" to ::getIncoDevices,
          "indibox" to ::getIndiboxDevices,
          "indigi" to ::getIndigiDevices,
          "indihome" to ::getIndihomeDevices,
          "indurama" to ::getInduramaDevices,
          "inefi" to ::getInefiDevices,
          "infiniton" to ::getInfinitonDevices,
          "infinix" to ::getInfinixDevices,
          "infocus" to ::getInfocusDevices,
          "infone" to ::getInfoneDevices,
          "innex" to ::getInnexDevices,
          "innjoo" to ::getInnjooDevices,
          "innohit" to ::getInnoHitDevices,
          "innocn" to ::getInnocnDevices,
          "innopia" to ::getInnopiaDevices,
          "innos" to ::getInnosDevices,
          "innova" to ::getInnovaDevices,
          "inoi" to ::getInoiDevices,
          "inovio" to ::getInovioDevices,
          "inrico" to ::getInricoDevices,
          "insane" to ::getInsaneDevices,
          "insignia" to ::getInsigniaDevices,
          "inspur" to ::getInspurDevices,
          "insys" to ::getInsysDevices,
          "intel" to ::getIntelDevices,
          "intelbras" to ::getIntelbrasDevices,
          "intelkom" to ::getIntelkomDevices,
          "intelligen" to ::getIntelligenDevices,
          "intex" to ::getIntexDevices,
          "intigral" to ::getIntigralDevices,
          "invens" to ::getInvensDevices,
          "inventus" to ::getInventusDevices,
          "inves" to ::getInvesDevices,
          "ioutdoor" to ::getIoutdoorDevices,
          "iplus" to ::getIplusDevices,
          "ipro" to ::getIproDevices,
          "iproda" to ::getIprodaDevices,
          "iqtouch" to ::getIqTouchDevices,
          "iqandt" to ::getIqandtDevices,
          "iqoo" to ::getIqooDevices,
          "iqt" to ::getIqtDevices,
          "iqu" to ::getIquDevices,
          "iqual" to ::getIqualDevices,
          "ira" to ::getIraDevices,
          "iraexploremore" to ::getIraExploreMoreDevices,
          "irainbow" to ::getIrainbowDevices,
          "irbis" to ::getIrbisDevices,
          "irie" to ::getIrieDevices,
          "iris" to ::getIrisDevices,
          "irisohyama" to ::getIrisOhyamaDevices,
          "iriver" to ::getIriverDevices,
          "irulu" to ::getIruluDevices,
          "isafe" to ::getIsafeDevices,
          "isafemobile" to ::getIsafemobileDevices,
          "isced" to ::getIscedDevices,
          "iskon" to ::getIskonDevices,
          "ismart" to ::getIsmartDevices,
          "istar" to ::getIstarDevices,
          "iswag" to ::getIswagDevices,
          "it" to ::getItDevices,
          "itab" to ::getItabDevices,
          "itel" to ::getItelDevices,
          "itell" to ::getItellDevices,
          "itos" to ::getItosDevices,
          "iusa" to ::getIusaDevices,
          "iva" to ::getIvaDevices,
          "iview" to ::getIviewDevices,
          "ivoomi" to ::getIvoomiDevices,
          "iwaylink" to ::getIwaylinkDevices,
          "ixtech" to ::getIxtechDevices,
          "iyou" to ::getIyouDevices,
          "izzi" to ::getIzziDevices,
          "izzitelecom" to ::getIzziTelecomDevices,
          "jcom" to ::getJComDevices,
          "jac" to ::getJacDevices,
          "jam" to ::getJamDevices,
          "jambotechnology" to ::getJamboTechnologyDevices,
          "janam" to ::getJanamDevices,
          "japantaxi" to ::getJapantaxiDevices,
          "jaytech" to ::getJayTechDevices,
          "jcb" to ::getJcbDevices,
          "jcijp" to ::getJciJpDevices,
          "jcom" to ::getJcomDevices,
          "jds" to ::getJdsDevices,
          "jeazans" to ::getJeazansDevices,
          "jenesis" to ::getJenesisDevices,
          "jesy" to ::getJesyDevices,
          "jetfon" to ::getJetfonDevices,
          "jetpoint" to ::getJetpointDevices,
          "jhon" to ::getJhonDevices,
          "jhzl" to ::getJhzlDevices,
          "jide" to ::getJideDevices,
          "jinga" to ::getJingaDevices,
          "jio" to ::getJioDevices,
          "jiuzhou" to ::getJiuzhouDevices,
          "jivi" to ::getJiviDevices,
          "jmgo" to ::getJmgoDevices,
          "jooyon" to ::getJooyonDevices,
          "jooyontech" to ::getJooyontechDevices,
          "jovi" to ::getJoviDevices,
          "joyar" to ::getJoyarDevices,
          "joystar" to ::getJoystarDevices,
          "joysurf" to ::getJoysurfDevices,
          "jp" to ::getJpDevices,
          "jpik" to ::getJpIkDevices,
          "jren" to ::getJrenDevices,
          "jsw" to ::getJswDevices,
          "juedur" to ::getJuedurDevices,
          "jumper" to ::getJumperDevices,
          "juniper" to ::getJuniperDevices,
          "junipers" to ::getJunipersDevices,
          "just5" to ::getJust5Devices,
          "justsystems" to ::getJustsystemsDevices,
          "jusyea" to ::getJusyeaDevices,
          "jvc" to ::getJvcDevices,
          "jyonetsukakaku" to ::getJyonetsuKakakuDevices,
          "kelec" to ::getKElecDevices,
          "ktouch" to ::getKTouchDevices,
          "kaan" to ::getKaanDevices,
          "kagis" to ::getKagisDevices,
          "kaicom" to ::getKaicomDevices,
          "kaliho" to ::getKalihoDevices,
          "kalley" to ::getKalleyDevices,
          "kammunica" to ::getKammunicaDevices,
          "kandao" to ::getKandaoDevices,
          "kanji" to ::getKanjiDevices,
          "kanselir" to ::getKanselirDevices,
          "kaonmedia" to ::getKaonmediaDevices,
          "kapsys" to ::getKapsysDevices,
          "karbonn" to ::getKarbonnDevices,
          "karma" to ::getKarmaDevices,
          "kat" to ::getKatDevices,
          "kazam" to ::getKazamDevices,
          "kbro" to ::getKbroDevices,
          "kccl" to ::getKcclDevices,
          "kdinteractive" to ::getKdInteractiveDevices,
          "kddi" to ::getKddiDevices,
          "kddiu" to ::getKddiUDevices,
          "kefeya" to ::getKefeyaDevices,
          "keian" to ::getKeianDevices,
          "kelyxkl783" to ::getKelyxKl783Devices,
          "kemplerstrauss" to ::getKemplerStraussDevices,
          "kemplerstruss" to ::getKemplerstrussDevices,
          "kenbo" to ::getKenboDevices,
          "kenshi" to ::getKenshiDevices,
          "kenwood" to ::getKenwoodDevices,
          "keyence" to ::getKeyenceDevices,
          "kgtel" to ::getKgtelDevices,
          "kiano" to ::getKianoDevices,
          "kickpi" to ::getKickpiDevices,
          "kiddoboo" to ::getKiddobooDevices,
          "kinetictv" to ::getKinetictvDevices,
          "kingcomm" to ::getKingcommDevices,
          "kinhank" to ::getKinhankDevices,
          "kinstone" to ::getKinstoneDevices,
          "kiowa" to ::getKiowaDevices,
          "kirisun" to ::getKirisunDevices,
          "kiunit" to ::getKiunitDevices,
          "kivi" to ::getKiviDevices,
          "klipad" to ::getKlipadDevices,
          "klipadxlargetab" to ::getKlipadXLargeTabDevices,
          "kobo" to ::getKoboDevices,
          "kodak" to ::getKodakDevices,
          "kogan" to ::getKoganDevices,
          "kolin" to ::getKolinDevices,
          "kolke" to ::getKolkeDevices,
          "konic" to ::getKonicDevices,
          "konka" to ::getKonkaDevices,
          "konrow" to ::getKonrowDevices,
          "koobee" to ::getKoobeeDevices,
          "kooda" to ::getKoodaDevices,
          "koolmaax" to ::getKoolmaaxDevices,
          "kozen" to ::getKozenDevices,
          "kpn" to ::getKpnDevices,
          "krip" to ::getKripDevices,
          "krono" to ::getKronoDevices,
          "krosselegance" to ::getKrossEleganceDevices,
          "krosselegance" to ::getKrosseleganceDevices,
          "krugermatz" to ::getKrugerMatzDevices,
          "krugerandmatz" to ::getKrugerandmatzDevices,
          "kt" to ::getKtDevices,
          "ktc" to ::getKtcDevices,
          "ktv" to ::getKtvDevices,
          "kubik" to ::getKubikDevices,
          "kult" to ::getKultDevices,
          "kunfabo" to ::getKunfaboDevices,
          "kunft" to ::getKunftDevices,
          "kuori" to ::getKuoriDevices,
          "kurio" to ::getKurioDevices,
          "kuu" to ::getKuuDevices,
          "kuva" to ::getKuvaDevices,
          "kxd" to ::getKxdDevices,
          "kyaster" to ::getKyasterDevices,
          "kyocera" to ::getKyoceraDevices,
          "kyodotv" to ::getKyodoTvDevices,
          "kzen" to ::getKzenDevices,
          "laiq" to ::getLaiqDevices,
          "lamborghini" to ::getLamborghiniDevices,
          "lamzien" to ::getLamzienDevices,
          "landbyte" to ::getLandbyteDevices,
          "landi" to ::getLandiDevices,
          "landrover" to ::getLandroverDevices,
          "lango" to ::getLangoDevices,
          "lanix" to ::getLanixDevices,
          "larvand" to ::getLarvandDevices,
          "laser" to ::getLaserDevices,
          "launch" to ::getLaunchDevices,
          "lava" to ::getLavaDevices,
          "lavietab" to ::getLavietabDevices,
          "lavietabe" to ::getLavietabeDevices,
          "lazer" to ::getLazerDevices,
          "lazor" to ::getLazorDevices,
          "lbq" to ::getLbqDevices,
          "leader" to ::getLeaderDevices,
          "leaderhub" to ::getLeaderhubDevices,
          "leagoo" to ::getLeagooDevices,
          "lebest" to ::getLebestDevices,
          "leeco" to ::getLeecoDevices,
          "legamaster" to ::getLegamasterDevices,
          "legend" to ::getLegendDevices,
          "legendcomfortable" to ::getLegendcomfortableDevices,
          "leiainc" to ::getLeiaincDevices,
          "leica" to ::getLeicaDevices,
          "lenovo" to ::getLenovoDevices,
          "leomo" to ::getLeomoDevices,
          "leotec" to ::getLeotecDevices,
          "lepan" to ::getLepanDevices,
          "lesia" to ::getLesiaDevices,
          "letv" to ::getLetvDevices,
          "lexa" to ::getLexaDevices,
          "lexibook" to ::getLexibookDevices,
          "lgcns" to ::getLgCnsDevices,
          "lgelectronics" to ::getLgElectronicsDevices,
          "lge" to ::getLgeDevices,
          "lghellovision" to ::getLghellovisionDevices,
          "lguplus" to ::getLguplusDevices,
          "liberton" to ::getLibertonDevices,
          "libre" to ::getLibreDevices,
          "lifedigital" to ::getLifeDigitalDevices,
          "lifemobile" to ::getLifeMobileDevices,
          "lifephone" to ::getLifephoneDevices,
          "lincplus" to ::getLincplusDevices,
          "linknet" to ::getLinknetDevices,
          "linnex" to ::getLinnexDevices,
          "linsar" to ::getLinsarDevices,
          "linsay" to ::getLinsayDevices,
          "listo" to ::getListoDevices,
          "litbyleia" to ::getLitbyleiaDevices,
          "litetel" to ::getLitetelDevices,
          "lloyd" to ::getLloydDevices,
          "lnmbbs" to ::getLnmbbsDevices,
          "logic" to ::getLogicDevices,
          "logicinstrumemt" to ::getLogicInstrumemtDevices,
          "logicom" to ::getLogicomDevices,
          "logik" to ::getLogikDevices,
          "logitec" to ::getLogitecDevices,
          "logitech" to ::getLogitechDevices,
          "louisvuitton" to ::getLouisvuittonDevices,
          "lp" to ::getLpDevices,
          "lt" to ::getLtDevices,
          "ltmobile" to ::getLtMobileDevices,
          "lucoms" to ::getLucomsDevices,
          "lumigon" to ::getLumigonDevices,
          "lumio" to ::getLumioDevices,
          "lumitel" to ::getLumitelDevices,
          "lumus" to ::getLumusDevices,
          "luna" to ::getLunaDevices,
          "lunar" to ::getLunarDevices,
          "lunnen" to ::getLunnenDevices,
          "luo" to ::getLuoDevices,
          "lushmint" to ::getLushMintDevices,
          "lville" to ::getLvilleDevices,
          "lw" to ::getLwDevices,
          "lyf" to ::getLyfDevices,
          "lynknex" to ::getLynknexDevices,
          "lyotechlabs" to ::getLyotechLabsDevices,
          "lzu" to ::getLzuDevices,
          "m3" to ::getM3Devices,
          "m4tel" to ::getM4telDevices,
          "mhorse" to ::getMHorseDevices,
          "mkopa" to ::getMKopaDevices,
          "mafe" to ::getMafeDevices,
          "mag" to ::getMagDevices,
          "magch" to ::getMagchDevices,
          "magentatv" to ::getMagentaTvDevices,
          "magentatv" to ::getMagentatvDevices,
          "magicworld" to ::getMagicworldDevices,
          "magnavox" to ::getMagnavoxDevices,
          "magneticnorth" to ::getMagneticnorthDevices,
          "magnumtech" to ::getMagnumtechDevices,
          "majestic" to ::getMajesticDevices,
          "malata" to ::getMalataDevices,
          "mango" to ::getMangoDevices,
          "mantra" to ::getMantraDevices,
          "mara" to ::getMaraDevices,
          "maraphones" to ::getMaraPhonesDevices,
          "maraphones" to ::getMaraphonesDevices,
          "marcel" to ::getMarcelDevices,
          "markatab" to ::getMarkatabDevices,
          "marq" to ::getMarqDevices,
          "marshall" to ::getMarshallDevices,
          "marvel" to ::getMarvelDevices,
          "marvue" to ::getMarvueDevices,
          "mascom" to ::getMascomDevices,
          "masscom" to ::getMasscomDevices,
          "masstel" to ::getMasstelDevices,
          "masterg" to ::getMasterGDevices,
          "masterg" to ::getMastergDevices,
          "mastertech" to ::getMastertechDevices,
          "mauritiustelcom" to ::getMauritiustelcomDevices,
          "mauritiustelecom" to ::getMauritiustelecomDevices,
          "maxcom" to ::getMaxcomDevices,
          "maxfone" to ::getMaxfoneDevices,
          "maxhub" to ::getMaxhubDevices,
          "maximus" to ::getMaximusDevices,
          "maxis" to ::getMaxisDevices,
          "maxlegen" to ::getMaxlegenDevices,
          "maxon" to ::getMaxonDevices,
          "maxpac" to ::getMaxpacDevices,
          "maxron" to ::getMaxronDevices,
          "maxsonicelite" to ::getMaxsonicEliteDevices,
          "maxtron" to ::getMaxtronDevices,
          "maxvi" to ::getMaxviDevices,
          "maxwell" to ::getMaxwellDevices,
          "maxwest" to ::getMaxwestDevices,
          "maze" to ::getMazeDevices,
          "mazespeed" to ::getMazeSpeedDevices,
          "mbo" to ::getMboDevices,
          "mbs" to ::getMbsDevices,
          "mdc" to ::getMdcDevices,
          "memobile" to ::getMeMobileDevices,
          "meanit" to ::getMeanitDevices,
          "meberry" to ::getMeberryDevices,
          "mecer" to ::getMecerDevices,
          "mecool" to ::getMecoolDevices,
          "mediabox" to ::getMediaboxDevices,
          "mediacom" to ::getMediacomDevices,
          "mediatek" to ::getMediatekDevices,
          "medion" to ::getMedionDevices,
          "meferi" to ::getMeferiDevices,
          "megacable" to ::getMegacableDevices,
          "megafon" to ::getMegafonDevices,
          "meiigoo" to ::getMeiigooDevices,
          "meitu" to ::getMeituDevices,
          "meize" to ::getMeizeDevices,
          "meizu" to ::getMeizuDevices,
          "melefon" to ::getMelefonDevices,
          "melita" to ::getMelitaDevices,
          "memorex" to ::getMemorexDevices,
          "menfop" to ::getMenfopDevices,
          "mengaltab" to ::getMengaltabDevices,
          "mengdash" to ::getMengdashDevices,
          "meo" to ::getMeoDevices,
          "meswao" to ::getMeswaoDevices,
          "metfone" to ::getMetfoneDevices,
          "metropcs" to ::getMetropcsDevices,
          "metz" to ::getMetzDevices,
          "mgears" to ::getMgearsDevices,
          "mgs" to ::getMgsDevices,
          "mhl" to ::getMhlDevices,
          "mi" to ::getMiDevices,
          "micromax" to ::getMicromaxDevices,
          "microtech" to ::getMicrotechDevices,
          "microtouch" to ::getMicrotouchDevices,
          "mightier" to ::getMightierDevices,
          "miku" to ::getMikuDevices,
          "mimio" to ::getMimioDevices,
          "mindeo" to ::getMindeoDevices,
          "minimalphone" to ::getMinimalPhoneDevices,
          "minister" to ::getMinisterDevices,
          "minix" to ::getMinixDevices,
          "mint" to ::getMintDevices,
          "mintmobile" to ::getMintMobileDevices,
          "mintt" to ::getMinttDevices,
          "mione" to ::getMioneDevices,
          "miotab" to ::getMiotabDevices,
          "mipo" to ::getMipoDevices,
          "mira" to ::getMiraDevices,
          "miracletap" to ::getMiracleTapDevices,
          "mirage" to ::getMirageDevices,
          "miramage" to ::getMiramageDevices,
          "mirarel" to ::getMirarelDevices,
          "miray" to ::getMirayDevices,
          "miro" to ::getMiroDevices,
          "mitac" to ::getMitacDevices,
          "mito" to ::getMitoDevices,
          "mitsubishi" to ::getMitsubishiDevices,
          "mitsui" to ::getMitsuiDevices,
          "mitsushiba" to ::getMitsushibaDevices,
          "mlab" to ::getMlabDevices,
          "mlink" to ::getMlinkDevices,
          "mlogix" to ::getMlogixDevices,
          "mls" to ::getMlsDevices,
          "mmax" to ::getMmaxDevices,
          "mncnow" to ::getMncNowDevices,
          "mobell" to ::getMobellDevices,
          "mobibuckeye" to ::getMobiBuckeyeDevices,
          "mobisectv" to ::getMobiSectvDevices,
          "mobicel" to ::getMobicelDevices,
          "mobicell" to ::getMobicellDevices,
          "mobiiot" to ::getMobiiotDevices,
          "mobiistar" to ::getMobiistarDevices,
          "mobiledemand" to ::getMobiledemandDevices,
          "mobily" to ::getMobilyDevices,
          "mobistel" to ::getMobistelDevices,
          "mobivista" to ::getMobivistaDevices,
          "mobiwire" to ::getMobiwireDevices,
          "mobodo" to ::getMobodoDevices,
          "mobulaa" to ::getMobulaaDevices,
          "mobvoi" to ::getMobvoiDevices,
          "mobydata" to ::getMobydataDevices,
          "mode" to ::getModeDevices,
          "mode1" to ::getMode1Devices,
          "modeearnphone" to ::getModeearnphoneDevices,
          "mojatv" to ::getMojatvDevices,
          "molatv" to ::getMolaTvDevices,
          "molvu" to ::getMolvuDevices,
          "mondial" to ::getMondialDevices,
          "monex" to ::getMonexDevices,
          "monomax" to ::getMonomaxDevices,
          "mookia" to ::getMookiaDevices,
          "moolahmobile" to ::getMoolahMobileDevices,
          "morep" to ::getMorepDevices,
          "mosambee" to ::getMosambeeDevices,
          "moshimore" to ::getMoshimoreDevices,
          "mot" to ::getMotDevices,
          "motorola" to ::getMotorolaDevices,
          "motorolasolutions" to ::getMotorolasolutionsDevices,
          "motsol" to ::getMotsolDevices,
          "movado" to ::getMovadoDevices,
          "move" to ::getMoveDevices,
          "movfast" to ::getMovfastDevices,
          "movienet" to ::getMovienetDevices,
          "movistar" to ::getMovistarDevices,
          "movisun" to ::getMovisunDevices,
          "movitel" to ::getMovitelDevices,
          "movix" to ::getMovixDevices,
          "moxee" to ::getMoxeeDevices,
          "moxnice" to ::getMoxniceDevices,
          "mozatab" to ::getMozatabDevices,
          "mpgio" to ::getMpgioDevices,
          "mport" to ::getMportDevices,
          "msi" to ::getMsiDevices,
          "msota" to ::getMsotaDevices,
          "mstar" to ::getMstarDevices,
          "mswipe" to ::getMswipeDevices,
          "mtc" to ::getMtcDevices,
          "mtek" to ::getMtekDevices,
          "mtel" to ::getMtelDevices,
          "mtn" to ::getMtnDevices,
          "mtr" to ::getMtrDevices,
          "mts" to ::getMtsDevices,
          "mtt" to ::getMttDevices,
          "mu" to ::getMuDevices,
          "mujenyz" to ::getMujenyzDevices,
          "multilaser" to ::getMultilaserDevices,
          "multismart" to ::getMultismartDevices,
          "multynet" to ::getMultynetDevices,
          "mundopacifico" to ::getMundopacificoDevices,
          "mwalimuplus" to ::getMwalimuplusDevices,
          "my" to ::getMyDevices,
          "myanmarnet" to ::getMyanmarnetDevices,
          "mybox" to ::getMyboxDevices,
          "myphone" to ::getMyphoneDevices,
          "myrepublicstb2023" to ::getMyrepublicStb2023Devices,
          "myria" to ::getMyriaDevices,
          "myros" to ::getMyrosDevices,
          "mystic" to ::getMysticDevices,
          "mytabpro" to ::getMytabProDevices,
          "none" to ::getNOneDevices,
          "nabi" to ::getNabiDevices,
          "nakamichi" to ::getNakamichiDevices,
          "nanho" to ::getNanhoDevices,
          "nano" to ::getNanoDevices,
          "naomicase" to ::getNaomicaseDevices,
          "naomiphone" to ::getNaomiphoneDevices,
          "nasco" to ::getNascoDevices,
          "nautilus" to ::getNautilusDevices,
          "navcity" to ::getNavcityDevices,
          "navitel" to ::getNavitelDevices,
          "navon" to ::getNavonDevices,
          "naxa" to ::getNaxaDevices,
          "nebula" to ::getNebulaDevices,
          "nec" to ::getNecDevices,
          "necnon" to ::getNecnonDevices,
          "neffos" to ::getNeffosDevices,
          "nelatech" to ::getNelatechDevices,
          "neo" to ::getNeoDevices,
          "neocore" to ::getNeocoreDevices,
          "neon" to ::getNeonDevices,
          "neoniq" to ::getNeoniqDevices,
          "neoregent" to ::getNeoregentDevices,
          "netbox" to ::getNetboxDevices,
          "netgreen" to ::getNetgreenDevices,
          "netmak" to ::getNetmakDevices,
          "netogy" to ::getNetogyDevices,
          "nettv" to ::getNettvDevices,
          "newal" to ::getNewalDevices,
          "newbalance" to ::getNewbalanceDevices,
          "newbridge" to ::getNewbridgeDevices,
          "newbrige" to ::getNewbrigeDevices,
          "newland" to ::getNewlandDevices,
          "newline" to ::getNewlineDevices,
          "newspice" to ::getNewspiceDevices,
          "newsun" to ::getNewsunDevices,
          "newton" to ::getNewtonDevices,
          "nexa" to ::getNexaDevices,
          "next" to ::getNextDevices,
          "nextg" to ::getNextGDevices,
          "nexttechnologies" to ::getNextTechnologiesDevices,
          "nexta" to ::getNextaDevices,
          "nextbit" to ::getNextbitDevices,
          "nextbook" to ::getNextbookDevices,
          "nextbymaxism1" to ::getNextbymaxisM1Devices,
          "nextgear" to ::getNextgearDevices,
          "nexus" to ::getNexusDevices,
          "nexwin" to ::getNexwinDevices,
          "ngm" to ::getNgmDevices,
          "nikaipro" to ::getNikaiProDevices,
          "nikkei" to ::getNikkeiDevices,
          "nio" to ::getNioDevices,
          "nisato" to ::getNisatoDevices,
          "nissan" to ::getNissanDevices,
          "nixon" to ::getNixonDevices,
          "njoy" to ::getNjoyDevices,
          "nkjaqt100" to ::getNkjAqt100Devices,
          "noa" to ::getNoaDevices,
          "nobby" to ::getNobbyDevices,
          "nobleskiodo" to ::getNobleskiodoDevices,
          "noblex" to ::getNoblexDevices,
          "nobrand" to ::getNobrandDevices,
          "nodropout" to ::getNodropoutDevices,
          "noga" to ::getNogaDevices,
          "nokia" to ::getNokiaDevices,
          "nomi" to ::getNomiDevices,
          "nomu" to ::getNomuDevices,
          "nook" to ::getNookDevices,
          "northtech" to ::getNorthTechDevices,
          "noryox" to ::getNoryoxDevices,
          "nos" to ::getNosDevices,
          "nothing" to ::getNothingDevices,
          "novey" to ::getNoveyDevices,
          "novinsun" to ::getNovinsunDevices,
          "novo" to ::getNovoDevices,
          "novojoy" to ::getNovojoyDevices,
          "nowe" to ::getNowEDevices,
          "nowo" to ::getNowoDevices,
          "nowtv" to ::getNowtvDevices,
          "npls" to ::getNplsDevices,
          "nt" to ::getNtDevices,
          "nuans" to ::getNuansDevices,
          "nubia" to ::getNubiaDevices,
          "nubiolite" to ::getNubioLiteDevices,
          "nuribom" to ::getNuribomDevices,
          "nuu" to ::getNuuDevices,
          "nuvision" to ::getNuvisionDevices,
          "nvidia" to ::getNvidiaDevices,
          "nw" to ::getNwDevices,
          "nyxmobile" to ::getNyxMobileDevices,
          "o2" to ::getO2Devices,
          "oale" to ::getOaleDevices,
          "oangcc" to ::getOangccDevices,
          "oase" to ::getOaseDevices,
          "oasys" to ::getOasysDevices,
          "octopus" to ::getOctopusDevices,
          "odea" to ::getOdeaDevices,
          "odido" to ::getOdidoDevices,
          "odo" to ::getOdoDevices,
          "odotpad" to ::getOdotpadDevices,
          "ods" to ::getOdsDevices,
          "odys" to ::getOdysDevices,
          "ofd" to ::getOfdDevices,
          "ok" to ::getOkDevices,
          "okapi" to ::getOkapiDevices,
          "okayseamedia" to ::getOkayseamediaDevices,
          "okin" to ::getOkinDevices,
          "oksi" to ::getOksiDevices,
          "okulaku" to ::getOkulakuDevices,
          "okv" to ::getOkvDevices,
          "olax" to ::getOlaxDevices,
          "olike" to ::getOlikeDevices,
          "olimpo" to ::getOlimpoDevices,
          "olive" to ::getOliveDevices,
          "olla" to ::getOllaDevices,
          "olympia" to ::getOlympiaDevices,
          "omax" to ::getOmaxDevices,
          "omix" to ::getOmixDevices,
          "onda" to ::getOndaDevices,
          "ondatlc" to ::getOndaTlcDevices,
          "onelern" to ::getOnelernDevices,
          "oneplus" to ::getOneplusDevices,
          "onerugged" to ::getOneruggedDevices,
          "onescreen" to ::getOnescreenDevices,
          "onida" to ::getOnidaDevices,
          "onkyo" to ::getOnkyoDevices,
          "onn" to ::getOnnDevices,
          "onyx" to ::getOnyxDevices,
          "ooredoo" to ::getOoredooDevices,
          "opay" to ::getOpayDevices,
          "opel" to ::getOpelDevices,
          "opelmobile" to ::getOpelMobileDevices,
          "opelmobile" to ::getOpelmobileDevices,
          "openfhdatv" to ::getOpenFhdAtvDevices,
          "openuhdatv" to ::getOpenUhdAtvDevices,
          "oppo" to ::getOppoDevices,
          "optage" to ::getOptageDevices,
          "opticon" to ::getOpticonDevices,
          "optimum" to ::getOptimumDevices,
          "optoma" to ::getOptomaDevices,
          "orange" to ::getOrangeDevices,
          "orbic" to ::getOrbicDevices,
          "orbys" to ::getOrbysDevices,
          "orca" to ::getOrcaDevices,
          "ordissimo" to ::getOrdissimoDevices,
          "orient" to ::getOrientDevices,
          "orinoquia" to ::getOrinoquiaDevices,
          "orion" to ::getOrionDevices,
          "ors" to ::getOrsDevices,
          "oscal" to ::getOscalDevices,
          "osn" to ::getOsnDevices,
          "oteeto" to ::getOteetoDevices,
          "oukitel" to ::getOukitelDevices,
          "ouzrs" to ::getOuzrsDevices,
          "overmax" to ::getOvermaxDevices,
          "overtech" to ::getOvertechDevices,
          "ovion" to ::getOvionDevices,
          "own" to ::getOwnDevices,
          "owxmobile" to ::getOwxmobileDevices,
          "oxtab" to ::getOxTabDevices,
          "oxygen" to ::getOxygenDevices,
          "oxygenid" to ::getOxygenIdDevices,
          "oxygenid" to ::getOxygenidDevices,
          "oysterlabs" to ::getOysterLabsDevices,
          "oysters" to ::getOystersDevices,
          "ozon" to ::getOzonDevices,
          "packardbell" to ::getPackardBellDevices,
          "paitanry" to ::getPaitanryDevices,
          "palm" to ::getPalmDevices,
          "palsonic" to ::getPalsonicDevices,
          "panasonic" to ::getPanasonicDevices,
          "panavox" to ::getPanavoxDevices,
          "panodic" to ::getPanodicDevices,
          "panorama" to ::getPanoramaDevices,
          "pantech" to ::getPantechDevices,
          "pantechsmart" to ::getPantechSmartDevices,
          "parrotmobile" to ::getParrotMobileDevices,
          "partner" to ::getPartnerDevices,
          "partnermobile" to ::getPartnerMobileDevices,
          "pastigio" to ::getPastigioDevices,
          "patters" to ::getPattersDevices,
          "pawbo" to ::getPawboDevices,
          "pax" to ::getPaxDevices,
          "pbskids" to ::getPbsKidsDevices,
          "pcsmart" to ::getPcSmartDevices,
          "pcbox" to ::getPcboxDevices,
          "pcd" to ::getPcdDevices,
          "pcsmart" to ::getPcsmartDevices,
          "peaq" to ::getPeaqDevices,
          "peicheng" to ::getPeichengDevices,
          "pel" to ::getPelDevices,
          "pensonic" to ::getPensonicDevices,
          "peotv" to ::getPeotvDevices,
          "pepperlfuchs" to ::getPepperlFuchsDevices,
          "performance" to ::getPerformanceDevices,
          "perseotv" to ::getPerseotvDevices,
          "persona" to ::getPersonaDevices,
          "philco" to ::getPhilcoDevices,
          "philips" to ::getPhilipsDevices,
          "phimark" to ::getPhimarkDevices,
          "phoenix" to ::getPhoenixDevices,
          "phoenixnote" to ::getPhoenixNoteDevices,
          "phonemax" to ::getPhonemaxDevices,
          "picassotab" to ::getPicassotabDevices,
          "pilot" to ::getPilotDevices,
          "pinocchio" to ::getPinocchioDevices,
          "pioneer" to ::getPioneerDevices,
          "pioneerdigitaltv" to ::getPioneerDigitalTvDevices,
          "pipo" to ::getPipoDevices,
          "piranha" to ::getPiranhaDevices,
          "pitneybowes" to ::getPitneybowesDevices,
          "pivot" to ::getPivotDevices,
          "pixart" to ::getPixartDevices,
          "pixela" to ::getPixelaDevices,
          "pixpeak" to ::getPixpeakDevices,
          "pixpro" to ::getPixproDevices,
          "pixus" to ::getPixusDevices,
          "pltmpl" to ::getPlTmplDevices,
          "plaisio" to ::getPlaisioDevices,
          "planet" to ::getPlanetDevices,
          "play" to ::getPlayDevices,
          "playpoland" to ::getPlaypolandDevices,
          "pldthome" to ::getPldthomeDevices,
          "plimpton" to ::getPlimptonDevices,
          "ployer" to ::getPloyerDevices,
          "plum" to ::getPlumDevices,
          "plusstyle" to ::getPlusstyleDevices,
          "pluzz" to ::getPluzzDevices,
          "pnravec" to ::getPnRavecDevices,
          "poco" to ::getPocoDevices,
          "pointofview" to ::getPointOfViewDevices,
          "pointmobile" to ::getPointmobileDevices,
          "pokini" to ::getPokiniDevices,
          "polar" to ::getPolarDevices,
          "polaroid" to ::getPolaroidDevices,
          "polestar" to ::getPolestarDevices,
          "polsat" to ::getPolsatDevices,
          "polytron" to ::getPolytronDevices,
          "pontistech" to ::getPontistechDevices,
          "pools" to ::getPoolsDevices,
          "poptel" to ::getPoptelDevices,
          "porodo" to ::getPorodoDevices,
          "porsche" to ::getPorscheDevices,
          "portfolio" to ::getPortfolioDevices,
          "portworld" to ::getPortworldDevices,
          "pos" to ::getPosDevices,
          "posfic" to ::getPosficDevices,
          "posiflex" to ::getPosiflexDevices,
          "positivo" to ::getPositivoDevices,
          "possafe" to ::getPossafeDevices,
          "postef" to ::getPostefDevices,
          "powergreen" to ::getPowerGreenDevices,
          "powerology" to ::getPowerologyDevices,
          "powmus" to ::getPowmusDevices,
          "pozzi" to ::getPozziDevices,
          "prazteck" to ::getPrazteckDevices,
          "precision" to ::getPrecisionDevices,
          "precisionbiometric" to ::getPrecisionbiometricDevices,
          "premier" to ::getPremierDevices,
          "premio" to ::getPremioDevices,
          "preo" to ::getPreoDevices,
          "prestige" to ::getPrestigeDevices,
          "prestigio" to ::getPrestigioDevices,
          "prestigiosolutions" to ::getPrestigioSolutionsDevices,
          "prima" to ::getPrimaDevices,
          "prime" to ::getPrimeDevices,
          "prism" to ::getPrismDevices,
          "prismplus" to ::getPrismplusDevices,
          "pritom" to ::getPritomDevices,
          "prixton" to ::getPrixtonDevices,
          "prodigi" to ::getProdigiDevices,
          "prodvx" to ::getProdvxDevices,
          "profilo" to ::getProfiloDevices,
          "proline" to ::getProlineDevices,
          "promethean" to ::getPrometheanDevices,
          "prometheus" to ::getPrometheusDevices,
          "proscan" to ::getProscanDevices,
          "proscanelite" to ::getProscanEliteDevices,
          "proton" to ::getProtonDevices,
          "proximus" to ::getProximusDevices,
          "psmobile" to ::getPsMobileDevices,
          "pseries" to ::getPseriesDevices,
          "ptclshoqtv" to ::getPtclshoqtvDevices,
          "pulsaris" to ::getPulsarisDevices,
          "punos" to ::getPunosDevices,
          "pyurtv" to ::getPyurTvDevices,
          "qelectronics" to ::getQElectronicsDevices,
          "qbell" to ::getQbellDevices,
          "qcell" to ::getQcellDevices,
          "qilive" to ::getQiliveDevices,
          "qin" to ::getQinDevices,
          "qisur" to ::getQisurDevices,
          "qiuwoky" to ::getQiuwokyDevices,
          "qlink" to ::getQlinkDevices,
          "qmobile" to ::getQmobileDevices,
          "qooq" to ::getQooqDevices,
          "qps" to ::getQpsDevices,
          "qriom" to ::getQriomDevices,
          "qsmart" to ::getQsmartDevices,
          "qtab" to ::getQtabDevices,
          "qti" to ::getQtiDevices,
          "qtouch" to ::getQtouchDevices,
          "quantum" to ::getQuantumDevices,
          "quatro" to ::getQuatroDevices,
          "quber" to ::getQuberDevices,
          "qubo" to ::getQuboDevices,
          "quest" to ::getQuestDevices,
          "quick" to ::getQuickDevices,
          "quickline" to ::getQuicklineDevices,
          "quint" to ::getQuintDevices,
          "qunyico" to ::getQunyicoDevices,
          "qvwi" to ::getQvwiDevices,
          "qwili" to ::getQwiliDevices,
          "raddy" to ::getRaddyDevices,
          "rainx" to ::getRainxDevices,
          "rakioo" to ::getRakiooDevices,
          "rakuten" to ::getRakutenDevices,
          "ramtechnology" to ::getRamtechnologyDevices,
          "rancon" to ::getRanconDevices,
          "rangs" to ::getRangsDevices,
          "ratel" to ::getRatelDevices,
          "ravoz" to ::getRavozDevices,
          "raylan" to ::getRaylanDevices,
          "rayomovil" to ::getRayoMovilDevices,
          "razer" to ::getRazerDevices,
          "rca" to ::getRcaDevices,
          "rct" to ::getRctDevices,
          "rdp" to ::getRdpDevices,
          "readly" to ::getReadlyDevices,
          "realix" to ::getRealixDevices,
          "realme" to ::getRealmeDevices,
          "realtime" to ::getRealtimeDevices,
          "rebecco" to ::getRebeccoDevices,
          "recco" to ::getReccoDevices,
          "red" to ::getRedDevices,
          "redmobile" to ::getRedMobileDevices,
          "redx" to ::getRedXDevices,
          "redbeat" to ::getRedbeatDevices,
          "redfox" to ::getRedfoxDevices,
          "redline" to ::getRedlineDevices,
          "redmi" to ::getRedmiDevices,
          "redmobile" to ::getRedmobileDevices,
          "redtone" to ::getRedtoneDevices,
          "redway" to ::getRedwayDevices,
          "reeder" to ::getReederDevices,
          "reekoo" to ::getReekooDevices,
          "reeva" to ::getReevaDevices,
          "regal" to ::getRegalDevices,
          "regza" to ::getRegzaDevices,
          "reliance" to ::getRelianceDevices,
          "relndoo" to ::getRelndooDevices,
          "remdun" to ::getRemdunDevices,
          "renault" to ::getRenaultDevices,
          "renaulttrucks" to ::getRenaultTrucksDevices,
          "renso" to ::getRensoDevices,
          "rephone" to ::getRephoneDevices,
          "reveal16i" to ::getReveal16iDevices,
          "revomovil" to ::getRevomovilDevices,
          "revox" to ::getRevoxDevices,
          "revrica" to ::getRevricaDevices,
          "revvl" to ::getRevvlDevices,
          "reyna" to ::getReynaDevices,
          "rhino" to ::getRhinoDevices,
          "ricoh" to ::getRicohDevices,
          "rikstv" to ::getRikstvDevices,
          "rindo" to ::getRindoDevices,
          "rio" to ::getRioDevices,
          "riviera" to ::getRivieraDevices,
          "rixun" to ::getRixunDevices,
          "rizzen" to ::getRizzenDevices,
          "rlg" to ::getRlgDevices,
          "roadquest" to ::getRoadquestDevices,
          "rockcel" to ::getRockcelDevices,
          "rocktek" to ::getRocktekDevices,
          "rokid" to ::getRokidDevices,
          "rokit" to ::getRokitDevices,
          "rollcall" to ::getRollcallDevices,
          "rombica" to ::getRombicaDevices,
          "roomi" to ::getRoomiDevices,
          "rosso" to ::getRossoDevices,
          "rover" to ::getRoverDevices,
          "rowa" to ::getRowaDevices,
          "royalrahmani" to ::getRoyalrahmaniDevices,
          "royqueen" to ::getRoyqueenDevices,
          "ruggear" to ::getRuggearDevices,
          "ruggon" to ::getRuggonDevices,
          "rugstorm" to ::getRugstormDevices,
          "ruio" to ::getRuioDevices,
          "russound" to ::getRussoundDevices,
          "ruufuuxy" to ::getRuufuuxyDevices,
          "rvp" to ::getRvpDevices,
          "rwc" to ::getRwcDevices,
          "s" to ::getSDevices,
          "stell" to ::getSTellDevices,
          "saba" to ::getSabaDevices,
          "saelite" to ::getSaeliteDevices,
          "safaricom" to ::getSafaricomDevices,
          "sagi" to ::getSagiDevices,
          "saiet" to ::getSaietDevices,
          "sampo" to ::getSampoDevices,
          "samsonix" to ::getSamsonixDevices,
          "samsung" to ::getSamsungDevices,
          "samtech" to ::getSamtechDevices,
          "samwon" to ::getSamwonDevices,
          "sankey" to ::getSankeyDevices,
          "sanlux" to ::getSanluxDevices,
          "sannuo" to ::getSannuoDevices,
          "sansei" to ::getSanseiDevices,
          "sansui" to ::getSansuiDevices,
          "sanyo" to ::getSanyoDevices,
          "sappa" to ::getSappaDevices,
          "sasktel" to ::getSasktelDevices,
          "satco" to ::getSatcoDevices,
          "satelit" to ::getSatelitDevices,
          "satewave" to ::getSatewaveDevices,
          "sawink" to ::getSawinkDevices,
          "sbm" to ::getSbmDevices,
          "scanfrost" to ::getScanfrostDevices,
          "scbc" to ::getScbcDevices,
          "sceptre" to ::getSceptreDevices,
          "schneider" to ::getSchneiderDevices,
          "schok" to ::getSchokDevices,
          "scientia" to ::getScientiaDevices,
          "scope" to ::getScopeDevices,
          "scvinfinity" to ::getScvinfinityDevices,
          "sdtv" to ::getSdtvDevices,
          "sebbe" to ::getSebbeDevices,
          "secqre" to ::getSecqreDevices,
          "secureye" to ::getSecureyeDevices,
          "sederick" to ::getSederickDevices,
          "sego" to ::getSegoDevices,
          "sei" to ::getSeiDevices,
          "selecline" to ::getSeleclineDevices,
          "seleco" to ::getSelecoDevices,
          "selectron" to ::getSelectronDevices,
          "selfix" to ::getSelfixDevices,
          "selvas" to ::getSelvasDevices,
          "semc" to ::getSemcDevices,
          "semeakoko" to ::getSemeakokoDevices,
          "semp" to ::getSempDevices,
          "sencor" to ::getSencorDevices,
          "senlintech" to ::getSenlintechDevices,
          "senraise" to ::getSenraiseDevices,
          "sense" to ::getSenseDevices,
          "senseit" to ::getSenseitDevices,
          "senter" to ::getSenterDevices,
          "senwa" to ::getSenwaDevices,
          "sequel" to ::getSequelDevices,
          "serenity" to ::getSerenityDevices,
          "seuic" to ::getSeuicDevices,
          "sewoo" to ::getSewooDevices,
          "sfr" to ::getSfrDevices,
          "sg" to ::getSgDevices,
          "sgin" to ::getSginDevices,
          "sgp" to ::getSgpDevices,
          "shaks" to ::getShaksDevices,
          "sharp" to ::getSharpDevices,
          "shelby" to ::getShelbyDevices,
          "shift" to ::getShiftDevices,
          "shinon" to ::getShinonDevices,
          "shivaki" to ::getShivakiDevices,
          "shortcut" to ::getShortcutDevices,
          "shoudum" to ::getShoudumDevices,
          "shuttle" to ::getShuttleDevices,
          "sico" to ::getSicoDevices,
          "sicon" to ::getSiconDevices,
          "siera" to ::getSieraDevices,
          "sigmamobile" to ::getSigmaMobileDevices,
          "silo" to ::getSiloDevices,
          "silverline" to ::getSilverLineDevices,
          "silvermax" to ::getSilverMaxDevices,
          "silverline" to ::getSilverlineDevices,
          "simbans" to ::getSimbansDevices,
          "simfer" to ::getSimferDevices,
          "simi" to ::getSimiDevices,
          "simplytab" to ::getSimplytabDevices,
          "singer" to ::getSingerDevices,
          "singteltv" to ::getSingtelTvDevices,
          "sinognss" to ::getSinognssDevices,
          "siragon" to ::getSiragonDevices,
          "sirinlabs" to ::getSirinLabsDevices,
          "sitiplaytop" to ::getSitiPlaytopDevices,
          "skb" to ::getSkbDevices,
          "skbcable" to ::getSkbCableDevices,
          "sky" to ::getSkyDevices,
          "skybrasil" to ::getSkyBrasilDevices,
          "skydevices" to ::getSkyDevicesDevices,
          "skyone" to ::getSkyOneDevices,
          "skydevices" to ::getSkydevicesDevices,
          "skyegg" to ::getSkyeggDevices,
          "skyhcn" to ::getSkyhcnDevices,
          "skylife" to ::getSkylifeDevices,
          "skynz" to ::getSkynzDevices,
          "skyperfectjsat" to ::getSkyperfectjsatDevices,
          "skyworth" to ::getSkyworthDevices,
          "sledovanitv" to ::getSledovanitvDevices,
          "smadl" to ::getSmadlDevices,
          "smart" to ::getSmartDevices,
          "smartkassel" to ::getSmartKasselDevices,
          "smarttechnology" to ::getSmartTechnologyDevices,
          "smarttek" to ::getSmartTekDevices,
          "smarttouch" to ::getSmartTouchDevices,
          "smartab" to ::getSmartabDevices,
          "smartbook" to ::getSmartbookDevices,
          "smartec" to ::getSmartecDevices,
          "smartever" to ::getSmarteverDevices,
          "smartex" to ::getSmartexDevices,
          "smartfren" to ::getSmartfrenDevices,
          "smarti" to ::getSmartiDevices,
          "smartlabs" to ::getSmartlabsDevices,
          "smartlife" to ::getSmartlifeDevices,
          "smartron" to ::getSmartronDevices,
          "smarttech" to ::getSmarttechDevices,
          "smarttv" to ::getSmarttvDevices,
          "smartvu" to ::getSmartvuDevices,
          "smaty" to ::getSmatyDevices,
          "smile" to ::getSmileDevices,
          "smooth" to ::getSmoothDevices,
          "snt" to ::getSntDevices,
          "socialphone700" to ::getSocialphone700Devices,
          "soda" to ::getSodaDevices,
          "softbank" to ::getSoftbankDevices,
          "sohostyle" to ::getSohoStyleDevices,
          "solone" to ::getSoloneDevices,
          "soneview" to ::getSoneviewDevices,
          "sonim" to ::getSonimDevices,
          "soniq" to ::getSoniqDevices,
          "sony" to ::getSonyDevices,
          "sonyaudio" to ::getSonyaudioDevices,
          "sooka" to ::getSookaDevices,
          "soriana" to ::getSorianaDevices,
          "sosh" to ::getSoshDevices,
          "soultech" to ::getSoultechDevices,
          "south" to ::getSouthDevices,
          "sowly" to ::getSowlyDevices,
          "soymomo" to ::getSoymomoDevices,
          "soymomotabletlite3" to ::getSoymomoTabletLite3Devices,
          "spark" to ::getSparkDevices,
          "sparx" to ::getSparxDevices,
          "spc" to ::getSpcDevices,
          "specktron" to ::getSpecktronDevices,
          "spectra" to ::getSpectraDevices,
          "spectrageospatial" to ::getSpectraGeospatialDevices,
          "spectrageospatial" to ::getSpectrageospatialDevices,
          "spectralink" to ::getSpectralinkDevices,
          "spectramobile" to ::getSpectramobileDevices,
          "spectraprecision" to ::getSpectraprecisionDevices,
          "speedata" to ::getSpeedataDevices,
          "speedstar" to ::getSpeedstarDevices,
          "spider" to ::getSpiderDevices,
          "spj" to ::getSpjDevices,
          "sprange" to ::getSprangeDevices,
          "sprd" to ::getSprdDevices,
          "spurt" to ::getSpurtDevices,
          "sq" to ::getSqDevices,
          "sqool" to ::getSqoolDevices,
          "srilankatelecom" to ::getSrilankatelecomDevices,
          "ssa" to ::getSsaDevices,
          "ssmooth" to ::getSsmoothDevices,
          "star" to ::getStarDevices,
          "startrack" to ::getStarTrackDevices,
          "starx" to ::getStarXDevices,
          "starboard" to ::getStarboardDevices,
          "starhub" to ::getStarhubDevices,
          "starkfuture" to ::getStarkFutureDevices,
          "starkfuture" to ::getStarkfutureDevices,
          "starlight" to ::getStarlightDevices,
          "starmobile" to ::getStarmobileDevices,
          "starshine" to ::getStarshineDevices,
          "stboard" to ::getStboardDevices,
          "stc" to ::getStcDevices,
          "ste" to ::getSteDevices,
          "steren" to ::getSterenDevices,
          "stf" to ::getStfDevices,
          "stg" to ::getStgDevices,
          "stgtelecom" to ::getStgTelecomDevices,
          "stip" to ::getStipDevices,
          "stk" to ::getStkDevices,
          "stofa" to ::getStofaDevices,
          "storex" to ::getStorexDevices,
          "strawberry" to ::getStrawberryDevices,
          "stream" to ::getStreamDevices,
          "streamsystem" to ::getStreamSystemDevices,
          "strong" to ::getStrongDevices,
          "strongzwl" to ::getStrongZwlDevices,
          "studynlearn" to ::getStudynlearnDevices,
          "stylo" to ::getStyloDevices,
          "stylos" to ::getStylosDevices,
          "stylostech" to ::getStylostechDevices,
          "suaat" to ::getSuaatDevices,
          "sugar" to ::getSugarDevices,
          "sumtec" to ::getSumtecDevices,
          "sunking" to ::getSunKingDevices,
          "sunbio" to ::getSunbioDevices,
          "sunbrite" to ::getSunbriteDevices,
          "sunconnection" to ::getSunconnectionDevices,
          "sunelan" to ::getSunelanDevices,
          "sunmax" to ::getSunmaxDevices,
          "sunmi" to ::getSunmiDevices,
          "sunny" to ::getSunnyDevices,
          "sunphone" to ::getSunphoneDevices,
          "sunstech" to ::getSunstechDevices,
          "suntak" to ::getSuntakDevices,
          "sunwind" to ::getSunwindDevices,
          "supersonic" to ::getSupersonicDevices,
          "supertab" to ::getSupertabDevices,
          "supoin" to ::getSupoinDevices,
          "surface" to ::getSurfaceDevices,
          "surfans" to ::getSurfansDevices,
          "surtab" to ::getSurtabDevices,
          "suunto" to ::getSuuntoDevices,
          "suxi" to ::getSuxiDevices,
          "svision" to ::getSvisionDevices,
          "svitoo" to ::getSvitooDevices,
          "sw" to ::getSwDevices,
          "swaconnect" to ::getSwaconnectDevices,
          "swipe" to ::getSwipeDevices,
          "swisscom" to ::getSwisscomDevices,
          "swissmobility" to ::getSwissmobilityDevices,
          "swisstone" to ::getSwisstoneDevices,
          "swissvoice" to ::getSwissvoiceDevices,
          "swosh" to ::getSwoshDevices,
          "syco" to ::getSycoDevices,
          "syinix" to ::getSyinixDevices,
          "sylvania" to ::getSylvaniaDevices,
          "sylvox" to ::getSylvoxDevices,
          "symphony" to ::getSymphonyDevices,
          "synetech" to ::getSynetechDevices,
          "tgo" to ::getTGoDevices,
          "tmobile" to ::getTMobileDevices,
          "tmobilecztelekomsk" to ::getTMobileCzTelekomSkDevices,
          "tabibytgo" to ::getTabiByTGoDevices,
          "tabletpc" to ::getTabletPcDevices,
          "tabphone710pro" to ::getTabphone710ProDevices,
          "tabwee" to ::getTabweeDevices,
          "tagdc" to ::getTagDcDevices,
          "tagtech" to ::getTagTechDevices,
          "tagheuer" to ::getTagheuerDevices,
          "tagital" to ::getTagitalDevices,
          "tagtech" to ::getTagtechDevices,
          "taifa" to ::getTaifaDevices,
          "taipeinet" to ::getTaipeinetDevices,
          "taiwanmobile" to ::getTaiwanmobileDevices,
          "takara" to ::getTakaraDevices,
          "talius" to ::getTaliusDevices,
          "talktalk" to ::getTalktalkDevices,
          "tambo" to ::getTamboDevices,
          "tamboard" to ::getTamboardDevices,
          "tanoshi" to ::getTanoshiDevices,
          "tanoshischolar" to ::getTanoshischolarDevices,
          "taskphone" to ::getTaskphoneDevices,
          "tataskybingeplus" to ::getTataskyBingeplusDevices,
          "tatung" to ::getTatungDevices,
          "taztag" to ::getTaztagDevices,
          "tbc" to ::getTbcDevices,
          "tbltaca" to ::getTbltacaDevices,
          "tbroad" to ::getTbroadDevices,
          "tcl" to ::getTclDevices,
          "tclmetropcs" to ::getTclMetropcsDevices,
          "tcst" to ::getTcstDevices,
          "tct" to ::getTctDevices,
          "tdsystems" to ::getTdSystemsDevices,
          "tdsystems" to ::getTdsystemsDevices,
          "teachmintx" to ::getTeachmintxDevices,
          "teamgee" to ::getTeamgeeDevices,
          "techpad" to ::getTechPadDevices,
          "techbite" to ::getTechbiteDevices,
          "techcomputer" to ::getTechcomputerDevices,
          "techlife" to ::getTechlifeDevices,
          "technicolor" to ::getTechnicolorDevices,
          "technika" to ::getTechnikaDevices,
          "technocrat" to ::getTechnocratDevices,
          "technopc" to ::getTechnopcDevices,
          "techpad" to ::getTechpadDevices,
          "teclast" to ::getTeclastDevices,
          "teclastkorea" to ::getTeclastkoreaDevices,
          "tecno" to ::getTecnoDevices,
          "tecnomobile" to ::getTecnoMobileDevices,
          "tecnomaster" to ::getTecnomasterDevices,
          "teco" to ::getTecoDevices,
          "tectoy" to ::getTectoyDevices,
          "teeno" to ::getTeenoDevices,
          "teeview" to ::getTeeviewDevices,
          "teklio" to ::getTeklioDevices,
          "teknosa" to ::getTeknosaDevices,
          "teksavvytv" to ::getTeksavvytvDevices,
          "telcel" to ::getTelcelDevices,
          "tele2" to ::getTele2Devices,
          "telecable" to ::getTelecableDevices,
          "telecabplay" to ::getTelecabplayDevices,
          "telefunken" to ::getTelefunkenDevices,
          "telekomtv" to ::getTelekomtvDevices,
          "telemor" to ::getTelemorDevices,
          "telenet" to ::getTelenetDevices,
          "telenor" to ::getTelenorDevices,
          "teleone" to ::getTeleoneDevices,
          "telesystem" to ::getTelesystemDevices,
          "telev8" to ::getTelev8Devices,
          "telia" to ::getTeliaDevices,
          "telkom" to ::getTelkomDevices,
          "tellytablet" to ::getTellytabletDevices,
          "telma" to ::getTelmaDevices,
          "telosystems" to ::getTelosystemsDevices,
          "telox" to ::getTeloxDevices,
          "telpo" to ::getTelpoDevices,
          "telstar" to ::getTelstarDevices,
          "telus" to ::getTelusDevices,
          "teluscorporation" to ::getTeluscorporationDevices,
          "tempo" to ::getTempoDevices,
          "tencent" to ::getTencentDevices,
          "tench" to ::getTenchDevices,
          "teracube" to ::getTeracubeDevices,
          "terra" to ::getTerraDevices,
          "tes" to ::getTesDevices,
          "tesla" to ::getTeslaDevices,
          "tespro" to ::getTesproDevices,
          "texet" to ::getTexetDevices,
          "tgnco" to ::getTgncoDevices,
          "thanhhungtechnology" to ::getThanhhungTechnologyDevices,
          "theuhd" to ::getTheUhdDevices,
          "thehaam" to ::getThehaamDevices,
          "theham" to ::getThehamDevices,
          "thinkacademy" to ::getThinkacademyDevices,
          "thomson" to ::getThomsonDevices,
          "thomsonkodak" to ::getThomsonKodakDevices,
          "tht" to ::getThtDevices,
          "thuraya" to ::getThurayaDevices,
          "tianyu" to ::getTianyuDevices,
          "tibuta" to ::getTibutaDevices,
          "tigers" to ::getTigersDevices,
          "tigo" to ::getTigoDevices,
          "tigorr" to ::getTigorrDevices,
          "tim" to ::getTimDevices,
          "time2" to ::getTime2Devices,
          "timovi" to ::getTimoviDevices,
          "tinp" to ::getTinpDevices,
          "tinsik" to ::getTinsikDevices,
          "tiok" to ::getTiokDevices,
          "tit" to ::getTitDevices,
          "tiwell" to ::getTiwellDevices,
          "tjd" to ::getTjdDevices,
          "tkds" to ::getTkdsDevices,
          "tmcell" to ::getTmCellDevices,
          "tnt" to ::getTntDevices,
          "tochmobile" to ::getTochMobileDevices,
          "todos" to ::getTodosDevices,
          "togocel" to ::getTogocelDevices,
          "tokecy" to ::getTokecyDevices,
          "tokyo" to ::getTokyoDevices,
          "tomstar" to ::getTomstarDevices,
          "tone" to ::getToneDevices,
          "topelotek" to ::getTopelotekDevices,
          "topjoy" to ::getTopjoyDevices,
          "topsand" to ::getTopsandDevices,
          "torex" to ::getTorexDevices,
          "tornado" to ::getTornadoDevices,
          "toscido" to ::getToscidoDevices,
          "toshiba" to ::getToshibaDevices,
          "touchplus" to ::getTouchPlusDevices,
          "touchmate" to ::getTouchmateDevices,
          "touchviewinteractive" to ::getTouchviewInteractiveDevices,
          "toya" to ::getToyaDevices,
          "toyin" to ::getToyinDevices,
          "toyota" to ::getToyotaDevices,
          "tplink" to ::getTpLinkDevices,
          "tpad" to ::getTpadDevices,
          "tplay" to ::getTplayDevices,
          "tps" to ::getTpsDevices,
          "transvision" to ::getTransvisionDevices,
          "travelwifi" to ::getTravelwifiDevices,
          "trecfone" to ::getTrecfoneDevices,
          "trekstor" to ::getTrekstorDevices,
          "trevi" to ::getTreviDevices,
          "triaplay" to ::getTriaplayDevices,
          "trident" to ::getTridentDevices,
          "trimble" to ::getTrimbleDevices,
          "trimblenavigation" to ::getTrimbleNavigationDevices,
          "true" to ::getTrueDevices,
          "trueslim" to ::getTrueSlimDevices,
          "trueidtv" to ::getTrueidtvDevices,
          "trueslim" to ::getTrueslimDevices,
          "truevision" to ::getTruevisionDevices,
          "truevisions" to ::getTruevisionsDevices,
          "trufon" to ::getTrufonDevices,
          "truvii" to ::getTruviiDevices,
          "tsutaya" to ::getTsutayaDevices,
          "ttfone" to ::getTtfoneDevices,
          "tts" to ::getTtsDevices,
          "tucel" to ::getTucelDevices,
          "tufen" to ::getTufenDevices,
          "tuff" to ::getTuffDevices,
          "turbo" to ::getTurboDevices,
          "turbox" to ::getTurboXDevices,
          "turbopad" to ::getTurbopadDevices,
          "turbox" to ::getTurboxDevices,
          "turktelekom" to ::getTurkTelekomDevices,
          "turkcell" to ::getTurkcellDevices,
          "tutu" to ::getTutuDevices,
          "tv360bybitel" to ::getTv360ByBitelDevices,
          "tvb" to ::getTvbDevices,
          "tvcore" to ::getTvcoreDevices,
          "tvheryerde" to ::getTvheryerdeDevices,
          "tvision" to ::getTvisionDevices,
          "tvplus" to ::getTvplusDevices,
          "tvsmart" to ::getTvsmartDevices,
          "tvstar" to ::getTvstarDevices,
          "tvt" to ::getTvtDevices,
          "tvup" to ::getTvupDevices,
          "twinmos" to ::getTwinmosDevices,
          "twm" to ::getTwmDevices,
          "twz" to ::getTwzDevices,
          "uauu" to ::getUauuDevices,
          "ubnt" to ::getUbntDevices,
          "ubos" to ::getUbosDevices,
          "ucm" to ::getUcmDevices,
          "ud" to ::getUdDevices,
          "ugee" to ::getUgeeDevices,
          "ugrihach" to ::getUgrihachDevices,
          "ujj" to ::getUjjDevices,
          "ujoyfeel" to ::getUjoyfeelDevices,
          "ulefone" to ::getUlefoneDevices,
          "ulesson" to ::getUlessonDevices,
          "ultimate" to ::getUltimateDevices,
          "ultra" to ::getUltraDevices,
          "ultrapad" to ::getUltrapadDevices,
          "ultym5" to ::getUltym5Devices,
          "umax" to ::getUmaxDevices,
          "umidigi" to ::getUmidigiDevices,
          "umx" to ::getUmxDevices,
          "unbluable" to ::getUnbluableDevices,
          "unico" to ::getUnicoDevices,
          "unifitv" to ::getUnifiTvDevices,
          "unihertz" to ::getUnihertzDevices,
          "uniq" to ::getUniqDevices,
          "uniqcell" to ::getUniqcellDevices,
          "unisced" to ::getUniscedDevices,
          "uniscope" to ::getUniscopeDevices,
          "unistrong" to ::getUnistrongDevices,
          "unitech" to ::getUnitechDevices,
          "united" to ::getUnitedDevices,
          "unitel" to ::getUnitelDevices,
          "uniwa" to ::getUniwaDevices,
          "unnecto" to ::getUnnectoDevices,
          "unnion" to ::getUnnionDevices,
          "unniontech" to ::getUnniontechDevices,
          "uno" to ::getUnoDevices,
          "unonu" to ::getUnonuDevices,
          "unowhy" to ::getUnowhyDevices,
          "upmobile" to ::getUpMobileDevices,
          "urovo" to ::getUrovoDevices,
          "usconnect" to ::getUsconnectDevices,
          "utime" to ::getUtimeDevices,
          "utopia" to ::getUtopiaDevices,
          "utvbox" to ::getUtvboxDevices,
          "v2com" to ::getV2comDevices,
          "v7" to ::getV7Devices,
          "vaio" to ::getVaioDevices,
          "vale" to ::getValeDevices,
          "valerion" to ::getValerionDevices,
          "valifone" to ::getValifoneDevices,
          "vankyo" to ::getVankyoDevices,
          "vasoun" to ::getVasounDevices,
          "vastking" to ::getVastkingDevices,
          "vatenick" to ::getVatenickDevices,
          "vava" to ::getVavaDevices,
          "vbox" to ::getVboxDevices,
          "vect" to ::getVectDevices,
          "vectra" to ::getVectraDevices,
          "vega" to ::getVegaDevices,
          "veidoo" to ::getVeidooDevices,
          "veira" to ::getVeiraDevices,
          "venturer" to ::getVenturerDevices,
          "venus" to ::getVenusDevices,
          "veon" to ::getVeonDevices,
          "verifone" to ::getVerifoneDevices,
          "verizon" to ::getVerizonDevices,
          "vernee" to ::getVerneeDevices,
          "vertex" to ::getVertexDevices,
          "vertu" to ::getVertuDevices,
          "vestel" to ::getVestelDevices,
          "vetoo" to ::getVetooDevices,
          "vexia" to ::getVexiaDevices,
          "vezzer" to ::getVezzerDevices,
          "vfonx" to ::getVfonxDevices,
          "vgotel" to ::getVgoTelDevices,
          "vgotel" to ::getVgotelDevices,
          "victurio" to ::getVicturioDevices,
          "vid" to ::getVidDevices,
          "vida" to ::getVidaDevices,
          "viettel" to ::getViettelDevices,
          "vietteltv" to ::getVietteltvDevices,
          "viewsonic" to ::getViewsonicDevices,
          "vikusha" to ::getVikushaDevices,
          "villaon" to ::getVillaonDevices,
          "vimatek" to ::getVimaTekDevices,
          "vimeel" to ::getVimeelDevices,
          "vimoq" to ::getVimoqDevices,
          "vincent" to ::getVincentDevices,
          "viomi" to ::getViomiDevices,
          "vios" to ::getViosDevices,
          "viotto" to ::getViottoDevices,
          "viper" to ::getViperDevices,
          "virzo" to ::getVirzoDevices,
          "visible" to ::getVisibleDevices,
          "visio" to ::getVisioDevices,
          "vision" to ::getVisionDevices,
          "visiontechnology" to ::getVisionTechnologyDevices,
          "visiontek" to ::getVisiontekDevices,
          "vista" to ::getVistaDevices,
          "visualland" to ::getVisualLandDevices,
          "vitumi" to ::getVitumiDevices,
          "viumee" to ::getViumeeDevices,
          "vivax" to ::getVivaxDevices,
          "vivimage" to ::getVivimageDevices,
          "vivitek" to ::getVivitekDevices,
          "vivo" to ::getVivoDevices,
          "viwa" to ::getViwaDevices,
          "vizio" to ::getVizioDevices,
          "vizualogic" to ::getVizualogicDevices,
          "vizzion" to ::getVizzionDevices,
          "vkworld" to ::getVkworldDevices,
          "vnpttechnology" to ::getVnpttechnologyDevices,
          "vocal" to ::getVocalDevices,
          "vodhorizon" to ::getVodHorizonDevices,
          "vodacom" to ::getVodacomDevices,
          "vodafone" to ::getVodafoneDevices,
          "vodafonekd" to ::getVodafonekdDevices,
          "voger" to ::getVogerDevices,
          "volentex" to ::getVolentexDevices,
          "volfen" to ::getVolfenDevices,
          "volia" to ::getVoliaDevices,
          "volkano" to ::getVolkanoDevices,
          "volvocars" to ::getVolvocarsDevices,
          "von" to ::getVonDevices,
          "vonino" to ::getVoninoDevices,
          "voo" to ::getVooDevices,
          "voobox" to ::getVooboxDevices,
          "vorago" to ::getVoragoDevices,
          "vorcom" to ::getVorcomDevices,
          "vortex" to ::getVortexDevices,
          "voto" to ::getVotoDevices,
          "voxelectronics" to ::getVoxelectronicsDevices,
          "vsmart" to ::getVsmartDevices,
          "vsp" to ::getVspDevices,
          "vtex" to ::getVtexDevices,
          "vu" to ::getVuDevices,
          "vucatimes" to ::getVucatimesDevices,
          "wo" to ::getWODevices,
          "wacom" to ::getWacomDevices,
          "waf" to ::getWafDevices,
          "wainyok" to ::getWainyokDevices,
          "waiputv" to ::getWaiputvDevices,
          "walton" to ::getWaltonDevices,
          "wansa" to ::getWansaDevices,
          "waoo" to ::getWaooDevices,
          "warp" to ::getWarpDevices,
          "wasabimango" to ::getWasabimangoDevices,
          "wave8" to ::getWave8Devices,
          "wave8rednougat" to ::getWave8rednougatDevices,
          "wced" to ::getWcedDevices,
          "we" to ::getWeDevices,
          "webee" to ::getWebeeDevices,
          "webfleetsolutions" to ::getWebfleetSolutionsDevices,
          "weelikeit" to ::getWeelikeitDevices,
          "welio" to ::getWelioDevices,
          "wemax" to ::getWemaxDevices,
          "westgate" to ::getWestgateDevices,
          "westgateresorts" to ::getWestgateResortsDevices,
          "westgateresorts" to ::getWestgateresortsDevices,
          "westinghouse" to ::getWestinghouseDevices,
          "westway" to ::getWestwayDevices,
          "wetap" to ::getWetapDevices,
          "wetek" to ::getWetekDevices,
          "whitedeer" to ::getWhitedeerDevices,
          "whoop" to ::getWhoopDevices,
          "wiboxtv" to ::getWiboxTvDevices,
          "widevu" to ::getWidevuDevices,
          "wieppo" to ::getWieppoDevices,
          "wigor" to ::getWigorDevices,
          "wiko" to ::getWikoDevices,
          "wileyfox" to ::getWileyfoxDevices,
          "willett" to ::getWillettDevices,
          "willkotech" to ::getWillkotechDevices,
          "win" to ::getWinDevices,
          "wind" to ::getWindDevices,
          "winds" to ::getWindsDevices,
          "wings" to ::getWingsDevices,
          "wingsmobile" to ::getWingsMobileDevices,
          "winmax" to ::getWinmaxDevices,
          "winnovo" to ::getWinnovoDevices,
          "winro" to ::getWinroDevices,
          "wintek" to ::getWintekDevices,
          "wintouch" to ::getWintouchDevices,
          "wirelessgate" to ::getWirelessgateDevices,
          "wisetech" to ::getWiseTechDevices,
          "wiseasy" to ::getWiseasyDevices,
          "wisetech" to ::getWisetechDevices,
          "wishtel" to ::getWishtelDevices,
          "wismann" to ::getWismannDevices,
          "witooth" to ::getWitoothDevices,
          "wiz" to ::getWizDevices,
          "wizz" to ::getWizzDevices,
          "wnc" to ::getWncDevices,
          "wom" to ::getWomDevices,
          "wongkuo" to ::getWongkuoDevices,
          "workmate" to ::getWorkmateDevices,
          "wow" to ::getWowDevices,
          "wowi" to ::getWowiDevices,
          "woxter" to ::getWoxterDevices,
          "wozifan" to ::getWozifanDevices,
          "wpawa" to ::getWpawaDevices,
          "ws" to ::getWsDevices,
          "wxunja" to ::getWxunjaDevices,
          "wybor" to ::getWyborDevices,
          "xage" to ::getXAgeDevices,
          "xmobile" to ::getXMobileDevices,
          "xpremium" to ::getXPremiumDevices,
          "xtigi" to ::getXTigiDevices,
          "xview" to ::getXViewDevices,
          "xb" to ::getXbDevices,
          "xd" to ::getXdDevices,
          "xdenjoy" to ::getXdEnjoyDevices,
          "xelex" to ::getXelexDevices,
          "xell" to ::getXellDevices,
          "xenon" to ::getXenonDevices,
          "xgimi" to ::getXgimiDevices,
          "xgody" to ::getXgodyDevices,
          "xiaomi" to ::getXiaomiDevices,
          "xitrix" to ::getXitrixDevices,
          "xl" to ::getXlDevices,
          "xlaxiata" to ::getXlaxiataDevices,
          "xming" to ::getXmingDevices,
          "xmobile" to ::getXmobileDevices,
          "xolo" to ::getXoloDevices,
          "xoro" to ::getXoroDevices,
          "xphoenix" to ::getXphoenixDevices,
          "xplore" to ::getXploreDevices,
          "xploretechnologies" to ::getXploreTechnologiesDevices,
          "xppen" to ::getXppenDevices,
          "xreal" to ::getXrealDevices,
          "xsmart" to ::getXsmartDevices,
          "xtigi" to ::getXtigiDevices,
          "xtouch" to ::getXtouchDevices,
          "xtr" to ::getXtrDevices,
          "xtratech" to ::getXtratechDevices,
          "xtratechiguanapad" to ::getXtratechIguanapadDevices,
          "xtreme" to ::getXtremeDevices,
          "xwave" to ::getXwaveDevices,
          "yandex" to ::getYandexDevices,
          "yara" to ::getYaraDevices,
          "yasin" to ::getYasinDevices,
          "yay" to ::getYayDevices,
          "yellyouth" to ::getYellyouthDevices,
          "yes" to ::getYesDevices,
          "yestel" to ::getYestelDevices,
          "yettel" to ::getYettelDevices,
          "yezz" to ::getYezzDevices,
          "yikemi" to ::getYikemiDevices,
          "yinoche" to ::getYinocheDevices,
          "ymobile" to ::getYmobileDevices,
          "yobanse" to ::getYobanseDevices,
          "yokis" to ::getYokisDevices,
          "yokoscan" to ::getYokoscanDevices,
          "yosatoo" to ::getYosatooDevices,
          "yoshiro" to ::getYoshiroDevices,
          "yotaphone" to ::getYotaphoneDevices,
          "yotopt" to ::getYotoptDevices,
          "youfone" to ::getYoufoneDevices,
          "youin" to ::getYouinDevices,
          "youtab" to ::getYoutabDevices,
          "yqsavior" to ::getYqsaviorDevices,
          "yqsvaior" to ::getYqsvaiorDevices,
          "ysf" to ::getYsfDevices,
          "ysfen" to ::getYsfenDevices,
          "yu" to ::getYuDevices,
          "yuho" to ::getYuhoDevices,
          "yumkem" to ::getYumkemDevices,
          "yuntab" to ::getYuntabDevices,
          "yyswie" to ::getYyswieDevices,
          "zaikai" to ::getZaikaiDevices,
          "zaith" to ::getZaithDevices,
          "zamolxe" to ::getZamolxeDevices,
          "zapitv" to ::getZapitvDevices,
          "zatec" to ::getZatecDevices,
          "zcs" to ::getZcsDevices,
          "zdk" to ::getZdkDevices,
          "zebra" to ::getZebraDevices,
          "zeeker" to ::getZeekerDevices,
          "zeki" to ::getZekiDevices,
          "zelu" to ::getZeluDevices,
          "zenijust" to ::getZenijustDevices,
          "zenos" to ::getZenosDevices,
          "zentec" to ::getZentecDevices,
          "zeop" to ::getZeopDevices,
          "zephir" to ::getZephirDevices,
          "zetatv" to ::getZetatvDevices,
          "ziffler" to ::getZifflerDevices,
          "zigo" to ::getZigoDevices,
          "zik" to ::getZikDevices,
          "zinox" to ::getZinoxDevices,
          "ziovo" to ::getZiovoDevices,
          "ziox" to ::getZioxDevices,
          "zitab" to ::getZitabDevices,
          "zitro" to ::getZitroDevices,
          "zmbizi" to ::getZmbiziDevices,
          "zmooth" to ::getZmoothDevices,
          "zofywnas" to ::getZofywnasDevices,
          "zoji" to ::getZojiDevices,
          "zolon" to ::getZolonDevices,
          "zong" to ::getZongDevices,
          "zonko" to ::getZonkoDevices,
          "zonmai" to ::getZonmaiDevices,
          "zoom" to ::getZoomDevices,
          "zoomme" to ::getZoommeDevices,
          "zoomsmart" to ::getZoomsmartDevices,
          "zooomtv" to ::getZooomtvDevices,
          "zpad" to ::getZpadDevices,
          "zte" to ::getZteDevices,
          "ztetv" to ::getZteTvDevices,
          "ztleke" to ::getZtlekeDevices,
          "zucchetti" to ::getZucchettiDevices,
          "zuk" to ::getZukDevices,
          "zuleisy" to ::getZuleisyDevices,
          "zuopu" to ::getZuopuDevices,
          "zuum" to ::getZuumDevices,
          "zyrex" to ::getZyrexDevices,
          "zzb" to ::getZzbDevices,
          "_10or" to ::get_10orDevices,
          "_1u1" to ::get_1u1Devices,
          "_2e" to ::get_2eDevices,
          "_3222222satelital" to ::get_3222222satelitalDevices,
          "_3bbtv" to ::get_3bbtvDevices,
          "_3rtablet" to ::get_3rtabletDevices,
          "_7mobile" to ::get_7mobileDevices,
          "_8849" to ::get_8849Devices
      )

  /**
   * Get all device specifications for A1 devices.
   * Useful for a1 testing.
   */
  public fun getA1Devices(): List<String> = listOf(
      A1.DV9161_KBA,
      A1.P671F60,
      A1.P963F01D,
      A1.VFD720
  )

  /**
   * Get all device specifications for A1_Smart_Box devices.
   * Useful for a1_smart_box testing.
   */
  public fun getA1SmartBoxDevices(): List<String> = listOf(
      A1SmartBox.A1_B866V2F02
  )

  /**
   * Get all device specifications for AAUW devices.
   * Useful for aauw testing.
   */
  public fun getAauwDevices(): List<String> = listOf(
      Aauw.M50,
      Aauw.M50_NEW,
      Aauw.M60_NEW,
      Aauw.T10,
      Aauw.T50_2023,
      Aauw.T60PRO,
      Aauw.T60PRO_2023,
      Aauw.T60PRO_ROW,
      Aauw.T90,
      Aauw.T_50
  )

  /**
   * Get all device specifications for ABCTECH devices.
   * Useful for abctech testing.
   */
  public fun getAbctechDevices(): List<String> = listOf(
      Abctech.PG11,
      Abctech.X20
  )

  /**
   * Get all device specifications for ABIL devices.
   * Useful for abil testing.
   */
  public fun getAbilDevices(): List<String> = listOf(
      Abil.A8
  )

  /**
   * Get all device specifications for Aborder devices.
   * Useful for aborder testing.
   */
  public fun getAborderDevices(): List<String> = listOf(
      Aborder.GUANDU,
      Aborder.MARTIN
  )

  /**
   * Get all device specifications for abxylute devices.
   * Useful for abxylute testing.
   */
  public fun getAbxyluteDevices(): List<String> = listOf(
      Abxylute.ABXYLUTE_ONE
  )

  /**
   * Get all device specifications for ACCENT devices.
   * Useful for accent testing.
   */
  public fun getAccentDevices(): List<String> = listOf(
      Accent.C5_PLUS,
      Accent.CAMELEON_C5,
      Accent.CAMELEON_C6,
      Accent.FAST10,
      Accent.FAST10,
      Accent.FAST17,
      Accent.FAST7,
      Accent.FAST73G,
      Accent.FAST7_3G,
      Accent.KIDZY70,
      Accent.PEARL_A4,
      Accent.PEARL_A4_LITE,
      Accent.PEARL_A4_PLUS,
      Accent.PEARL_A6,
      Accent.PEARL_A6,
      Accent.SPEED_X2,
      Accent.SPEED_Y3,
      Accent.TANK_P55
  )

  /**
   * Get all device specifications for ACD devices.
   * Useful for acd testing.
   */
  public fun getAcdDevices(): List<String> = listOf(
      Acd.ACD_TAB_10S
  )

  /**
   * Get all device specifications for ACE devices.
   * Useful for ace testing.
   */
  public fun getAceDevices(): List<String> = listOf(
      Ace.AS0218,
      Ace.AS0518,
      Ace.AS0618,
      Ace.BUZZ_1_LITE,
      Ace.BUZZ_1_PLUS,
      Ace.BUZZ_2,
      Ace.BUZZ_2_PLUS,
      Ace.BUZZ_3,
      Ace.BUZZ_3_LITE,
      Ace.BUZZ_3_PLUS,
      Ace.BUZZ_3E,
      Ace.BUZZ_4,
      Ace.BUZZ_4_NOTE,
      Ace.BUZZ_4_PRIME,
      Ace.BUZZ_4_ULTRA,
      Ace.BUZZ_4LITE,
      Ace.BUZZ_4PRO,
      Ace.BUZZ_4S,
      Ace.BUZZ_5_LITE,
      Ace.BUZZ_5_NOTE,
      Ace.BUZZ_5_PRIME,
      Ace.BUZZ_5_PRO,
      Ace.BUZZ_5_PRO_PLUS,
      Ace.BUZZ_5_ULTRA,
      Ace.BUZZ_6_FLIP,
      Ace.BUZZ_6_PRIME,
      Ace.BUZZ_6_PRIME_PLUS,
      Ace.BUZZ_6_PRO,
      Ace.BUZZ_6_PRO_PLUS,
      Ace.BUZZ_6_ULTRA,
      Ace.BUZZ_7_LITE,
      Ace.BUZZ_7_NOTE,
      Ace.BUZZ_7_PRIME,
      Ace.BUZZ_7_PRIME_PLUS,
      Ace.BUZZ_7_PRO,
      Ace.BUZZ_7_ULTRA,
      Ace.CLEVER_3,
      Ace.URBAN_1,
      Ace.URBAN_2,
      Ace.URBAN_3,
      Ace.URBAN_3_PLUSE,
      Ace.URBAN_3E
  )

  /**
   * Get all device specifications for Acepad devices.
   * Useful for acepad testing.
   */
  public fun getAcepadDevices(): List<String> = listOf(
      Acepad.A121,
      Acepad.A130,
      Acepad.A131,
      Acepad.A131_14,
      Acepad.A140,
      Acepad.A145,
      Acepad.A150,
      Acepad.A150_14,
      Acepad.A170,
      Acepad.A171_14,
      Acepad.ACEPAD_HIGH_EEA,
      Acepad.AX1
  )

  /**
   * Get all device specifications for Acer devices.
   * Useful for acer testing.
   */
  public fun getAcerDevices(): List<String> = listOf(
      Acer.ACER_A10M1,
      Acer.ACER_A11M1,
      Acer.ACER_A60,
      Acer.ACER_A60L,
      Acer.ACER_A61LX,
      Acer.ACER_A62LX,
      Acer.ACER_A8M1,
      Acer.ACER_AC50,
      Acer.ACER_AC81,
      Acer.ACER_AC92,
      Acer.ACER_APRILIA,
      Acer.ACER_APRILIAHD,
      Acer.ACER_AQ9_EU,
      Acer.ACER_ASGARD,
      Acer.ACER_ASGARDFHD,
      Acer.ACER_ASGARDLTE,
      Acer.ACER_AX61,
      Acer.ACER_AX64,
      Acer.ACER_AX85,
      Acer.ACER_BARRICADE,
      Acer.ACER_BARRICADE_3G,
      Acer.ACER_BARRICADEWIFI,
      Acer.ACER_C01,
      Acer.ACER_COLNAGO,
      Acer.ACER_COLNAGOFHD,
      Acer.ACER_E39,
      Acer.ACER_FRENZYREFRESH,
      Acer.ACER_HARLEY,
      Acer.ACER_HARLEYFHD,
      Acer.ACER_JETFIREFHD,
      Acer.ACER_JETFIREHD,
      Acer.ACER_JETFIRELTE,
      Acer.ACER_ONE_10_T8_129L,
      Acer.ACER_ONE_10_T9_1212L,
      Acer.ACER_ONE_7_4G,
      Acer.ACER_ONE_8_T2,
      Acer.ACER_P10M2,
      Acer.ACER_S57,
      Acer.ACER_T02,
      Acer.ACER_T03,
      Acer.ACER_T04,
      Acer.ACER_T06,
      Acer.ACER_T07,
      Acer.ACER_T08,
      Acer.ACER_T09,
      Acer.ACER_T10,
      Acer.ACER_T11,
      Acer.ACER_TITAN,
      Acer.ACER_V10M2,
      Acer.ACER_V11M1,
      Acer.ACER_VULCAN,
      Acer.ACER_X12M1,
      Acer.ACER_Z410,
      Acer.ACER_Z500,
      Acer.ACER_Z520,
      Acer.ACER_ZIPP,
      Acer.ACERO10T412LI,
      Acer.ACERONE8T4_82L,
      Acer.ACERONE8T4_82LXI,
      Acer.ACERONE8T482L,
      Acer.ACERONE8T9_422L,
      Acer.ACTAB1021_A,
      Acer.ACTAB1022,
      Acer.ACTAB1024,
      Acer.ACTAB10KB24,
      Acer.ACTAB1123,
      Acer.ACTAB1422,
      Acer.ACTAB721,
      Acer.ACTAB723,
      Acer.ACTAB821_A,
      Acer.ACTABKID,
      Acer.AKMEI14,
      Acer.ANGLELAKE,
      Acer.AOT10_22L,
      Acer.ARSP25MTA14A1,
      Acer.AS10LXPRO,
      Acer.AS10W,
      Acer.AS10WF,
      Acer.AS8W,
      Acer.ATAB1021E,
      Acer.ATAB1024E,
      Acer.ATAB10KB24E,
      Acer.ATAB1123E,
      Acer.ATAB1422E,
      Acer.ATAB721E,
      Acer.ATAB723E,
      Acer.ATAB821E,
      Acer.ATABKD1024K,
      Acer.ATLTE1022,
      Acer.ATLTE1022E,
      Acer.B1_710,
      Acer.B1_711,
      Acer.B1_720,
      Acer.B1_A71,
      Acer.BATTLEZONE,
      Acer.BATTLEZONE_LTE,
      Acer.BAYMAX,
      Acer.C11,
      Acer.CHESTER,
      Acer.CITIZEN,
      Acer.CORONA,
      Acer.DAHU,
      Acer.DT3K_F,
      Acer.DUCATI,
      Acer.DUCATI2FHD,
      Acer.DUCATI2HD,
      Acer.DUCATI2HD3G,
      Acer.FRENZY,
      Acer.FRONTIER,
      Acer.MANGO,
      Acer.OBAN,
      Acer.OMEGA,
      Acer.P11,
      Acer.PICASSO_E2,
      Acer.PICASSO_M,
      Acer.PICASSO_MF,
      Acer.R1,
      Acer.R10G,
      Acer.R2,
      Acer.R3,
      Acer.R3_GTV,
      Acer.R4,
      Acer.R4_GTV,
      Acer.ROLEX,
      Acer.T01,
      Acer.T012,
      Acer.TATTOO,
      Acer.ULTIMO,
      Acer.VESPA,
      Acer.VESPA2,
      Acer.VESPA8,
      Acer.VESPATN,
      Acer.VILEPARLE,
      Acer.WAIAWA,
      Acer.WALLE,
      Acer.Z220,
      Acer.ZARA,
      Acer.ZX
  )

  /**
   * Get all device specifications for acerpure devices.
   * Useful for acerpure testing.
   */
  public fun getAcerpureDevices(): List<String> = listOf(
      Acerpure.ANGLELAKE,
      Acerpure.WAIAWA
  )

  /**
   * Get all device specifications for Achate devices.
   * Useful for achate testing.
   */
  public fun getAchateDevices(): List<String> = listOf(
      Achate.KIDS_TAB_2,
      Achate.KIDSTAB1_EEA,
      Achate.KIDSTAB3_EEA
  )

  /**
   * Get all device specifications for Aclas devices.
   * Useful for aclas testing.
   */
  public fun getAclasDevices(): List<String> = listOf(
      Aclas.AO4
  )

  /**
   * Get all device specifications for Aconatic devices.
   * Useful for aconatic testing.
   */
  public fun getAconaticDevices(): List<String> = listOf(
      Aconatic.BANGBAE,
      Aconatic.BARKING,
      Aconatic.BRUNO,
      Aconatic.OD0M_EA_T32,
      Aconatic.R1,
      Aconatic.R2,
      Aconatic.R3_GTV,
      Aconatic.R4_GTV,
      Aconatic.SHILIN,
      Aconatic.STANFORD,
      Aconatic.TAKAO,
      Aconatic.ZHONGSHAN
  )

  /**
   * Get all device specifications for ACT devices.
   * Useful for act testing.
   */
  public fun getActDevices(): List<String> = listOf(
      Act.IPBOX
  )

  /**
   * Get all device specifications for ACTECK devices.
   * Useful for acteck testing.
   */
  public fun getActeckDevices(): List<String> = listOf(
      Acteck.AC_934312
  )

  /**
   * Get all device specifications for ACTStreamTV4K devices.
   * Useful for actstreamtv4k testing.
   */
  public fun getActstreamtv4kDevices(): List<String> = listOf(
      Actstreamtv4k.HP40A
  )

  /**
   * Get all device specifications for ADMIRAL devices.
   * Useful for admiral testing.
   */
  public fun getAdmiralDevices(): List<String> = listOf(
      Admiral.ANGLELAKE,
      Admiral.FIRE,
      Admiral.ONE_MUNDIAL,
      Admiral.STANFORD,
      Admiral.SUNNYVALE,
      Admiral.SW4H,
      Admiral.WAIAWA,
      Admiral.ZHONGSHAN
  )

  /**
   * Get all device specifications for ADO devices.
   * Useful for ado testing.
   */
  public fun getAdoDevices(): List<String> = listOf(
      Ado.DIW377_ALT_DO
  )

  /**
   * Get all device specifications for ADOC devices.
   * Useful for adoc testing.
   */
  public fun getAdocDevices(): List<String> = listOf(
      Adoc.ADOC_D18,
      Adoc.D30
  )

  /**
   * Get all device specifications for Adreamer devices.
   * Useful for adreamer testing.
   */
  public fun getAdreamerDevices(): List<String> = listOf(
      Adreamer.KIDSPAD10X,
      Adreamer.LEOPAD20,
      Adreamer.LEOPAD_10X
  )

  /**
   * Get all device specifications for ADSUN devices.
   * Useful for adsun testing.
   */
  public fun getAdsunDevices(): List<String> = listOf(
      Adsun.STANFORD
  )

  /**
   * Get all device specifications for ADT-3 devices.
   * Useful for adt-3 testing.
   */
  public fun getAdt3Devices(): List<String> = listOf(
      Adt3.ADT3
  )

  /**
   * Get all device specifications for ADVAN devices.
   * Useful for advan testing.
   */
  public fun getAdvanDevices(): List<String> = listOf(
      Advan.ADVAN_5041,
      Advan.ADVAN_5059,
      Advan.ADVAN_5060,
      Advan.ADVAN_5061,
      Advan.ADVAN_5501,
      Advan.ADVAN_5701,
      Advan.ADVAN_A8,
      Advan.ADVAN_E1C4G,
      Advan.ADVAN_E1C_3G,
      Advan.ADVAN_E1C_NXT,
      Advan.ADVAN_G2,
      Advan.ADVAN_G2_PRO,
      Advan.ADVAN_G3,
      Advan.ADVAN_G3_PRO,
      Advan.ADVAN_G5,
      Advan.ADVAN_G5_ELITE,
      Advan.ADVAN_G5_PLUS,
      Advan.ADVAN_G9,
      Advan.ADVAN_G_TAB,
      Advan.ADVAN_GX,
      Advan.ADVAN_I4U,
      Advan.ADVAN_I55D,
      Advan.ADVAN_I55K,
      Advan.ADVAN_I5C_PLUS,
      Advan.ADVAN_I5D,
      Advan.ADVAN_I5E,
      Advan.ADVAN_I5G,
      Advan.ADVAN_I6C,
      Advan.ADVAN_I7D,
      Advan.ADVAN_I_LITE,
      Advan.ADVAN_I_TAB,
      Advan.ADVAN_M4,
      Advan.ADVAN_NASA,
      Advan.ADVAN_NASA_PLUS,
      Advan.ADVAN_S40,
      Advan.ADVAN_S4Z,
      Advan.ADVAN_S50_PRIME,
      Advan.ADVAN_S5E_FULL_VIEW,
      Advan.ADVAN_S6_PLUS,
      Advan.ADVAN_S7C,
      Advan.ADVAN_SKETSA3,
      Advan.ADVAN_SKETSA_2,
      Advan.ADVAN_TAB_10,
      Advan.ADVAN_TAB_7,
      Advan.ADVAN_TAB_8,
      Advan.ADVAN_TAB_A8,
      Advan.ADVAN_TAB_A8_PLUS,
      Advan.ADVAN_TAB_GALLILEA,
      Advan.ADVAN_TAB_VX,
      Advan.ADVAN_TAB_VX_LITE,
      Advan.ADVAN_VX_NEO,
      Advan.ADVAN_X1,
      Advan.ADVAN_X7_PRO,
      Advan.ADVAN_XTAB,
      Advan.ADVANNASAPRO,
      Advan.I10,
      Advan.I5C,
      Advan.T2J,
      Advan.X7_MAX
  )

  /**
   * Get all device specifications for ADVANCE devices.
   * Useful for advance testing.
   */
  public fun getAdvanceDevices(): List<String> = listOf(
      Advance.HL9000,
      Advance.NP6050,
      Advance.NP6070,
      Advance.PR5650,
      Advance.PR5747,
      Advance.PR5860,
      Advance.PR6146,
      Advance.PR6149,
      Advance.PR6152,
      Advance.PR6152_ADV,
      Advance.PR7547,
      Advance.SP4702,
      Advance.SP4703,
      Advance.SP4871,
      Advance.SP4872,
      Advance.SP5702,
      Advance.SP5705,
      Advance.SP5712,
      Advance.SP5713,
      Advance.SP5730,
      Advance.SP5732,
      Advance.SP5736,
      Advance.SP5760,
      Advance.SP5775,
      Advance.SP5776,
      Advance.SP7248,
      Advance.SP7348,
      Advance.TABLET_ADV_V1,
      Advance.TR3947,
      Advance.TR4986,
      Advance.TR5994,
      Advance.TR5996,
      Advance.TR6948,
      Advance.TR7988,
      Advance.TR7989,
      Advance.TR7990,
      Advance.TR7998,
      Advance.TR8990
  )

  /**
   * Get all device specifications for ADVANTAGE devices.
   * Useful for advantage testing.
   */
  public fun getAdvantageDevices(): List<String> = listOf(
      Advantage.I101MTK
  )

  /**
   * Get all device specifications for AdvantageAir devices.
   * Useful for advantageair testing.
   */
  public fun getAdvantageairDevices(): List<String> = listOf(
      Advantageair.PIC10GS10,
      Advantageair.PIC10GS13,
      Advantageair.PIC10GS8,
      Advantageair.PIC7GS10_A,
      Advantageair.PIC7GS13,
      Advantageair.PIC7GS8,
      Advantageair.PIC8GS10,
      Advantageair.PIC8GS12,
      Advantageair.PIC8GS8
  )

  /**
   * Get all device specifications for Advantech devices.
   * Useful for advantech testing.
   */
  public fun getAdvantechDevices(): List<String> = listOf(
      Advantech.AIM75_LTE,
      Advantech.AIM75_WIFI
  )

  /**
   * Get all device specifications for AEEZO devices.
   * Useful for aeezo testing.
   */
  public fun getAeezoDevices(): List<String> = listOf(
      Aeezo.TK701,
      Aeezo.TK701_EEA,
      Aeezo.TK801,
      Aeezo.TK806,
      Aeezo.TK806_EEA,
      Aeezo.TK809,
      Aeezo.TK809_EEA,
      Aeezo.TP1001,
      Aeezo.TP901
  )

  /**
   * Get all device specifications for AFRICELL devices.
   * Useful for africell testing.
   */
  public fun getAfricellDevices(): List<String> = listOf(
      Africell.S10
  )

  /**
   * Get all device specifications for Afrione devices.
   * Useful for afrione testing.
   */
  public fun getAfrioneDevices(): List<String> = listOf(
      Afrione.CHAMPIONPRO,
      Afrione.CYGNUSX
  )

  /**
   * Get all device specifications for AG devices.
   * Useful for ag testing.
   */
  public fun getAgDevices(): List<String> = listOf(
      Ag.HASHTAG
  )

  /**
   * Get all device specifications for AGE devices.
   * Useful for age testing.
   */
  public fun getAgeDevices(): List<String> = listOf(
      Age.STANFORD,
      Age.ZHONGSHAN
  )

  /**
   * Get all device specifications for AgileTV devices.
   * Useful for agiletv testing.
   */
  public fun getAgiletvDevices(): List<String> = listOf(
      Agiletv.DV9157_T2_KIA,
      Agiletv.DWT765MM,
      Agiletv.UZW4060MM
  )

  /**
   * Get all device specifications for AGM devices.
   * Useful for agm testing.
   */
  public fun getAgmDevices(): List<String> = listOf(
      Agm.AGM_GLORY_G1,
      Agm.AGM_GLORY_G1S_EU,
      Agm.AGM_GLORY_G1S_US,
      Agm.AGM_H3,
      Agm.AGM_H5,
      Agm.AGM_H5_PRO,
      Agm.AGM_H6,
      Agm.AGM_H_MAX,
      Agm.AGM_NOTE_N1,
      Agm.AGM_PAD_P1,
      Agm.AGM_PAD_P2,
      Agm.AGM_PAD_P2_ACTIVE,
      Agm.AGM_PAD_T1,
      Agm.AGM_PAD_T1_WIFI,
      Agm.AGM_PAD_T2,
      Agm.AGM_PAD_T3,
      Agm.AGM_X6_EEA,
      Agm.AGM_X6_RU,
      Agm.ANDROID_TABLET,
      Agm.HS8952QC,
      Agm.HS8976QC,
      Agm.HSSDM450QC,
      Agm.HSSDM845QC,
      Agm.SHARKL5,
      Agm.T91EUE1
  )

  /**
   * Get all device specifications for AGNO devices.
   * Useful for agno testing.
   */
  public fun getAgnoDevices(): List<String> = listOf(
      Agno.TAIG717A
  )

  /**
   * Get all device specifications for AHA devices.
   * Useful for aha testing.
   */
  public fun getAhaDevices(): List<String> = listOf(
      Aha.AHA_ULTRA_RK3588
  )

  /**
   * Get all device specifications for ahlo devices.
   * Useful for ahlo testing.
   */
  public fun getAhloDevices(): List<String> = listOf(
      Ahlo.CAV
  )

  /**
   * Get all device specifications for AI devices.
   * Useful for ai testing.
   */
  public fun getAiDevices(): List<String> = listOf(
      Ai.AI_ES1059
  )

  /**
   * Get all device specifications for AIDATA devices.
   * Useful for aidata testing.
   */
  public fun getAidataDevices(): List<String> = listOf(
      Aidata.ADT_R10TME,
      Aidata.ADT1012L,
      Aidata.ADT1061,
      Aidata.ADT1061_1,
      Aidata.ADT_1061
  )

  /**
   * Get all device specifications for aigo devices.
   * Useful for aigo testing.
   */
  public fun getAigoDevices(): List<String> = listOf(
      Aigo.A16,
      Aigo.A16PRO
  )

  /**
   * Get all device specifications for Airpha devices.
   * Useful for airpha testing.
   */
  public fun getAirphaDevices(): List<String> = listOf(
      Airpha.HALO3_PRO,
      Airpha.HALO4,
      Airpha.HALO4_PRO
  )

  /**
   * Get all device specifications for Airtel devices.
   * Useful for airtel testing.
   */
  public fun getAirtelDevices(): List<String> = listOf(
      Airtel.AIRTELOTTBOX,
      Airtel.DV9108_KNA,
      Airtel.GANESA,
      Airtel.HSW4026ATL
  )

  /**
   * Get all device specifications for Airtel-Xstream devices.
   * Useful for airtel-xstream testing.
   */
  public fun getAirtelXstreamDevices(): List<String> = listOf(
      AirtelXstream.UIW4078ATL,
      AirtelXstream.VIP7220SIAI
  )

  /**
   * Get all device specifications for AirTouch devices.
   * Useful for airtouch testing.
   */
  public fun getAirtouchDevices(): List<String> = listOf(
      Airtouch.AIRTOUCH5
  )

  /**
   * Get all device specifications for AirTV devices.
   * Useful for airtv testing.
   */
  public fun getAirtvDevices(): List<String> = listOf(
      Airtv.DV8535,
      Airtv.KUNLUN
  )

  /**
   * Get all device specifications for AIS devices.
   * Useful for ais testing.
   */
  public fun getAisDevices(): List<String> = listOf(
      Ais.AISPLAYBOX,
      Ais.B866V2_HA
  )

  /**
   * Get all device specifications for aiuto devices.
   * Useful for aiuto testing.
   */
  public fun getAiutoDevices(): List<String> = listOf(
      Aiuto.AT1001,
      Aiuto.AT1002,
      Aiuto.AT702
  )

  /**
   * Get all device specifications for AIWA devices.
   * Useful for aiwa testing.
   */
  public fun getAiwaDevices(): List<String> = listOf(
      Aiwa.AIWA_A81,
      Aiwa.AIWA_Z9_PLUS,
      Aiwa.AW_P,
      Aiwa.AW790,
      Aiwa.AW_TAB10_14,
      Aiwa.AWM501,
      Aiwa.AWM539,
      Aiwa.AWPP101AW,
      Aiwa.AWT10H,
      Aiwa.HONGKONG,
      Aiwa.IKEBUKURO,
      Aiwa.JA2_SMP0601,
      Aiwa.JA2_TBA0801,
      Aiwa.JA2_TBA1001,
      Aiwa.JA2_TBA1002,
      Aiwa.JA3_SMP0602,
      Aiwa.JA3_TBA0802,
      Aiwa.JA3_TBA1005,
      Aiwa.JA3_TBA1006_4,
      Aiwa.JA3_TBA1006_6,
      Aiwa.JA3_TBA1007,
      Aiwa.JA4_TBA1008,
      Aiwa.JA4_TBA1101,
      Aiwa.LAVENDER,
      Aiwa.LONGSHAN,
      Aiwa.MOUNTBAKER,
      Aiwa.R3,
      Aiwa.R4,
      Aiwa.REDWOOD,
      Aiwa.SAMSEONG,
      Aiwa.SHINAGAWA,
      Aiwa.SINDORIM,
      Aiwa.STANFORD,
      Aiwa.SW6H,
      Aiwa.TA_07_232,
      Aiwa.TA_10_232,
      Aiwa.TA07_2GB,
      Aiwa.TA10_SO10,
      Aiwa.TAB_1100,
      Aiwa.TAB_1102,
      Aiwa.TAB_1103,
      Aiwa.TAB_1003G,
      Aiwa.TABLETAWTH801,
      Aiwa.ZHONGSHAN
  )

  /**
   * Get all device specifications for ajib devices.
   * Useful for ajib testing.
   */
  public fun getAjibDevices(): List<String> = listOf(
      Ajib.AJIB_I10,
      Ajib.AJIB_L1,
      Ajib.AJIB_X1,
      Ajib.I15,
      Ajib.I25
  )

  /**
   * Get all device specifications for AKA devices.
   * Useful for aka testing.
   */
  public fun getAkaDevices(): List<String> = listOf(
      Aka.MODEL_A
  )

  /**
   * Get all device specifications for AKAI devices.
   * Useful for akai testing.
   */
  public fun getAkaiDevices(): List<String> = listOf(
      Akai.MD1063,
      Akai.R3,
      Akai.SP5504G,
      Akai.STANFORD,
      Akai.SW6H,
      Akai.UMEDA
  )

  /**
   * Get all device specifications for Akari devices.
   * Useful for akari testing.
   */
  public fun getAkariDevices(): List<String> = listOf(
      Akari.DV8035,
      Akari.DV8219
  )

  /**
   * Get all device specifications for AKINO devices.
   * Useful for akino testing.
   */
  public fun getAkinoDevices(): List<String> = listOf(
      Akino.HAMAMATSUCHO,
      Akino.LAOSHAN
  )

  /**
   * Get all device specifications for AKUVOX devices.
   * Useful for akuvox testing.
   */
  public fun getAkuvoxDevices(): List<String> = listOf(
      Akuvox.S567
  )

  /**
   * Get all device specifications for Alba devices.
   * Useful for alba testing.
   */
  public fun getAlbaDevices(): List<String> = listOf(
      Alba.AC101CPLV3,
      Alba.AC40AS3G,
      Alba.AC60CRS,
      Alba.ALBA10NOU,
      Alba.ALBA10PIE,
      Alba.ALBA10Q,
      Alba.ALBA7NOU,
      Alba.ALBA7PIE,
      Alba.ALBA7Q,
      Alba.ALBA8NOU
  )

  /**
   * Get all device specifications for Albadeel devices.
   * Useful for albadeel testing.
   */
  public fun getAlbadeelDevices(): List<String> = listOf(
      Albadeel.IKEBUKURO,
      Albadeel.LONGSHAN,
      Albadeel.REDWOOD,
      Albadeel.SAMSEONG
  )

  /**
   * Get all device specifications for Alcatel devices.
   * Useful for alcatel testing.
   */
  public fun getAlcatelDevices(): List<String> = listOf(
      Alcatel._5006,
      Alcatel.APOLLO_8_4G,
      Alcatel.APOLLO_8_4G_TMO,
      Alcatel.AQUAMAN_10_4G,
      Alcatel.AQUAMAN_10_KIDS_WIFI,
      Alcatel.AQUAMAN_10_SMART_WIFI,
      Alcatel.AQUAMAN_10_WIFI,
      Alcatel.ASTER,
      Alcatel.ASTER_PRO,
      Alcatel.COROLLA,
      Alcatel.CRUZE,
      Alcatel.CRUZE_LITE,
      Alcatel.CRUZE_PRO,
      Alcatel.DAHLIA,
      Alcatel.DAHLIAPRO,
      Alcatel.GOLDFINCH_NP_PRO,
      Alcatel.HONG_KONG,
      Alcatel.HONG_KONG_PRO,
      Alcatel.HULK_7_GL_WIFI,
      Alcatel.HULK_7_KIDS_WIFI,
      Alcatel.JAKARTA,
      Alcatel.JAKARTA_LITE,
      Alcatel.JAKARTA_MINI,
      Alcatel.KING_KONG_7_4G,
      Alcatel.KONA,
      Alcatel.MACAU,
      Alcatel.MILAN,
      Alcatel.PHOENIX_7,
      Alcatel.PHOENIX_7_KIDS,
      Alcatel.SEOUL,
      Alcatel.TOKYO,
      Alcatel.TOKYO_CAN,
      Alcatel.TOKYO_GC,
      Alcatel.TOKYO_LITE,
      Alcatel.TOKYOPRO,
      Alcatel.U3A_10_WIFI_P,
      Alcatel.U3A_7_3G_REFRESH,
      Alcatel.U3A_7_WIFI_REFRESH,
      Alcatel.WRIGHT_PRO
  )

  /**
   * Get all device specifications for Alco devices.
   * Useful for alco testing.
   */
  public fun getAlcoDevices(): List<String> = listOf(
      Alco.ALCO_S9
  )

  /**
   * Get all device specifications for Alcor devices.
   * Useful for alcor testing.
   */
  public fun getAlcorDevices(): List<String> = listOf(
      Alcor.COMET_O118LR
  )

  /**
   * Get all device specifications for ALDO devices.
   * Useful for aldo testing.
   */
  public fun getAldoDevices(): List<String> = listOf(
      Aldo.T10S,
      Aldo.T7Q_4G
  )

  /**
   * Get all device specifications for Algar devices.
   * Useful for algar testing.
   */
  public fun getAlgarDevices(): List<String> = listOf(
      Algar.GIU6770
  )

  /**
   * Get all device specifications for ALHAFIDH devices.
   * Useful for alhafidh testing.
   */
  public fun getAlhafidhDevices(): List<String> = listOf(
      Alhafidh.R1,
      Alhafidh.R10G,
      Alhafidh.R2,
      Alhafidh.R3,
      Alhafidh.R3_GTV,
      Alhafidh.R4,
      Alhafidh.R4_GTV,
      Alhafidh.TCL_EU,
      Alhafidh.VILEPARLE
  )

  /**
   * Get all device specifications for Aligator devices.
   * Useful for aligator testing.
   */
  public fun getAligatorDevices(): List<String> = listOf(
      Aligator.ALIGATOR_RX550,
      Aligator.ALIGATOR_RX710,
      Aligator.ALIGATOR_RX800,
      Aligator.ALIGATOR_S5070,
      Aligator.ALIGATOR_S5520,
      Aligator.ALIGATOR_S5540,
      Aligator.ALIGATOR_S5550,
      Aligator.ALIGATOR_S6000,
      Aligator.ALIGATOR_S6100,
      Aligator.ALIGATOR_S6500,
      Aligator.ALIGATOR_S6550,
      Aligator.ALIGATOR_S6600,
      Aligator.RX600,
      Aligator.RX700,
      Aligator.RX850,
      Aligator.S5710
  )

  /**
   * Get all device specifications for ALL_N_G devices.
   * Useful for all_n_g testing.
   */
  public fun getAllNGDevices(): List<String> = listOf(
      AllNG.MYPAD2
  )

  /**
   * Get all device specifications for AllCall devices.
   * Useful for allcall testing.
   */
  public fun getAllcallDevices(): List<String> = listOf(
      Allcall.ALLCALL_S1_X,
      Allcall.HERO_20_PRO,
      Allcall.MIX2,
      Allcall.S5500
  )

  /**
   * Get all device specifications for ALLDOCUBE devices.
   * Useful for alldocube testing.
   */
  public fun getAlldocubeDevices(): List<String> = listOf(
      Alldocube.IPLAY50_MINI_PRO,
      Alldocube.IPLAY60_MINI,
      Alldocube.IPLAY60_MINI_PRO,
      Alldocube.IPLAY60_PRO,
      Alldocube.IPLAY60_S_4G,
      Alldocube.IPLAY_20,
      Alldocube.IPLAY_70_MINI_ULTRA,
      Alldocube.IPLAY_70_PRO,
      Alldocube.IPLAY_70_S,
      Alldocube.KIDZPAD_PRO,
      Alldocube.SMILE_1,
      Alldocube.T1001,
      Alldocube.T1012,
      Alldocube.T1016,
      Alldocube.T1020H,
      Alldocube.T1020S,
      Alldocube.T1021,
      Alldocube.T1021P,
      Alldocube.T1021PM,
      Alldocube.T1021T,
      Alldocube.T1023,
      Alldocube.T1026,
      Alldocube.T1028,
      Alldocube.T1029T,
      Alldocube.T1029TA,
      Alldocube.T1030,
      Alldocube.T1030M,
      Alldocube.T1030MAN,
      Alldocube.T1030X,
      Alldocube.T1102T,
      Alldocube.T1103T,
      Alldocube.T1201,
      Alldocube.T701,
      Alldocube.T701_X,
      Alldocube.T802,
      Alldocube.T806,
      Alldocube.T806ME,
      Alldocube.T806MH,
      Alldocube.U1005,
      Alldocube.U1005E,
      Alldocube.U1006,
      Alldocube.U1006E,
      Alldocube.U1006H,
      Alldocube.U1008,
      Alldocube.U1030,
      Alldocube.U1033,
      Alldocube.U63PLUS,
      Alldocube.U807,
      Alldocube.U812
  )

  /**
   * Get all device specifications for Allente devices.
   * Useful for allente testing.
   */
  public fun getAllenteDevices(): List<String> = listOf(
      Allente.SEI700ALLG
  )

  /**
   * Get all device specifications for Alliance devices.
   * Useful for alliance testing.
   */
  public fun getAllianceDevices(): List<String> = listOf(
      Alliance.DTP9731
  )

  /**
   * Get all device specifications for Allnet devices.
   * Useful for allnet testing.
   */
  public fun getAllnetDevices(): List<String> = listOf(
      Allnet.PRIMEONE
  )

  /**
   * Get all device specifications for ALLVIEW devices.
   * Useful for allview testing.
   */
  public fun getAllviewDevices(): List<String> = listOf(
      Allview.A10_LITE,
      Allview.A10_LITE_2019,
      Allview.A10_LITE_2GB,
      Allview.A10_MAX,
      Allview.A20_LITE,
      Allview.A20_MAX,
      Allview.A30_MAX,
      Allview.A30_PLUS,
      Allview.A5_EASY,
      Allview.A5_READY,
      Allview.A9_LITE,
      Allview.A9_PLUS,
      Allview.AX501Q,
      Allview.AX503,
      Allview.AX503_Q,
      Allview.BANGBAE,
      Allview.C1004,
      Allview.H1003_LTE_PRO,
      Allview.H1003_LTE_PRO1,
      Allview.H1003_LTE_PRO1_64,
      Allview.H1003_LTE_PRO3,
      Allview.H1004_LTE,
      Allview.KOMAGOME,
      Allview.P10_MAX,
      Allview.P10_PRO,
      Allview.P41_EMAGIC,
      Allview.P4_PRO,
      Allview.P5_EMAGIC,
      Allview.P5_ENERGY,
      Allview.P7_LITE,
      Allview.P7_PRO,
      Allview.P8_EMAGIC,
      Allview.P8_ENERGY,
      Allview.P8_ENERGY_MINI,
      Allview.P8_LIFE,
      Allview.P8_PRO,
      Allview.P9_ENERGY,
      Allview.P9_ENERGY_LITE_2017,
      Allview.P9_ENERGY_MINI,
      Allview.P9_ENERGY_S,
      Allview.SHINAGAWA,
      Allview.SW4H_FF,
      Allview.V10_VIPER,
      Allview.V10_VIPER_LITE,
      Allview.V2_VIPER_S,
      Allview.V2_VIPER_X_PLUS,
      Allview.V3_VIPER,
      Allview.V4_VIPER,
      Allview.V4_VIPER_PRO,
      Allview.V5_VIPER,
      Allview.VIVA_1003G,
      Allview.VIVA_1003G_LITE,
      Allview.VIVA_1003G_LITE_Q,
      Allview.VIVA_803G,
      Allview.VIVA_C703,
      Allview.VIVA_H1001_LTE,
      Allview.VIVA_H1002_LTE,
      Allview.VIVA_H1003_LTE,
      Allview.VIVA_H701_LTE,
      Allview.VIVA_H802_LTE,
      Allview.VIVA_PLAY_804,
      Allview.X10_SOUL,
      Allview.X10_SOUL_LITE,
      Allview.X20_SOUL,
      Allview.X3_SOUL_LITE,
      Allview.X3_SOUL_PLUS,
      Allview.X3_SOUL_STYLE,
      Allview.X4_SOUL_INFINITY_N,
      Allview.X4_SOUL_INFINITY_NV,
      Allview.X4_SOUL_INFINITY_S,
      Allview.X4_SOUL_INFINITY_SV,
      Allview.X4_SOUL_INFINITY_Z,
      Allview.X4_SOUL_LITE,
      Allview.X4_SOUL_MINI,
      Allview.X4_SOUL_PLUS,
      Allview.X4_SOUL_STYLE,
      Allview.X4_SOUL_XTREME,
      Allview.X5_SOUL,
      Allview.X5_SOUL_MINI,
      Allview.X5_SOUL_PRO,
      Allview.X5_SOUL_STYLE,
      Allview.X6_SOUL_MINI,
      Allview.X6_SOUL_XTREME,
      Allview.X7_SOUL_PRO,
      Allview.X7_SOUL_STYLE,
      Allview.X8_SOUL_PRO,
      Allview.X8_SOUL_STYLE
  )

  /**
   * Get all device specifications for Allwinner devices.
   * Useful for allwinner testing.
   */
  public fun getAllwinnerDevices(): List<String> = listOf(
      Allwinner.APOLLO_P7,
      Allwinner.T3_K2001_NWD,
      Allwinner.T3_P1
  )

  /**
   * Get all device specifications for ALPHA devices.
   * Useful for alpha testing.
   */
  public fun getAlphaDevices(): List<String> = listOf(
      Alpha.HAYWARD,
      Alpha.IKEBUKURO,
      Alpha.LUSHAN,
      Alpha.SAMSEONG
  )

  /**
   * Get all device specifications for ALPHA_LING devices.
   * Useful for alpha_ling testing.
   */
  public fun getAlphaLingDevices(): List<String> = listOf(
      AlphaLing.A97GT
  )

  /**
   * Get all device specifications for ALPHALING devices.
   * Useful for alphaling testing.
   */
  public fun getAlphalingDevices(): List<String> = listOf(
      Alphaling.A94GT_PLUS,
      Alphaling.A97GT,
      Alphaling.A97GT_PRO
  )

  /**
   * Get all device specifications for Alphatel devices.
   * Useful for alphatel testing.
   */
  public fun getAlphatelDevices(): List<String> = listOf(
      Alphatel.ALPHATEL_T1,
      Alphatel.T1_PRO
  )

  /**
   * Get all device specifications for ALPHAWOLF devices.
   * Useful for alphawolf testing.
   */
  public fun getAlphawolfDevices(): List<String> = listOf(
      Alphawolf.A1,
      Alphawolf.L1,
      Alphawolf.L2,
      Alphawolf.L3
  )

  /**
   * Get all device specifications for alpine devices.
   * Useful for alpine testing.
   */
  public fun getAlpineDevices(): List<String> = listOf(
      Alpine.AIVI2_R_FULL_DOM,
      Alpine.INE_AW409S,
      Alpine.INE_AX809
  )

  /**
   * Get all device specifications for alps devices.
   * Useful for alps testing.
   */
  public fun getAlpsDevices(): List<String> = listOf(
      Alps._8227L_DEMO,
      Alps.HCT77_JB
  )

  /**
   * Get all device specifications for ALT devices.
   * Useful for alt testing.
   */
  public fun getAltDevices(): List<String> = listOf(
      Alt.ODIN,
      Alt.ODIN2,
      Alt.THOR,
      Alt.THOR2
  )

  /**
   * Get all device specifications for Altibox devices.
   * Useful for altibox testing.
   */
  public fun getAltiboxDevices(): List<String> = listOf(
      Altibox.UIW4054AIB
  )

  /**
   * Get all device specifications for Altice devices.
   * Useful for altice testing.
   */
  public fun getAlticeDevices(): List<String> = listOf(
      Altice.E25,
      Altice.E54,
      Altice.E55,
      Altice.S11,
      Altice.S12,
      Altice.S13,
      Altice.S14,
      Altice.S22,
      Altice.S23,
      Altice.S24,
      Altice.S25,
      Altice.S32,
      Altice.S32_NFC,
      Altice.S32_PLUS,
      Altice.S33,
      Altice.S34,
      Altice.S35,
      Altice.S42,
      Altice.S43,
      Altice.S60,
      Altice.S61,
      Altice.S64,
      Altice.S70,
      Altice.STARACTIVE,
      Altice.STARNAUTE4,
      Altice.STARTRAIL7,
      Altice.STARXTREM5
  )

  /**
   * Get all device specifications for Altron devices.
   * Useful for altron testing.
   */
  public fun getAltronDevices(): List<String> = listOf(
      Altron.BE_730,
      Altron.OB_1021,
      Altron.OB_728,
      Altron.OB_588,
      Altron.OB_628
  )

  /**
   * Get all device specifications for ALTUS devices.
   * Useful for altus testing.
   */
  public fun getAltusDevices(): List<String> = listOf(
      Altus.MARINA,
      Altus.MARTIN,
      Altus.SINCHON
  )

  /**
   * Get all device specifications for Ama-Mobile devices.
   * Useful for ama-mobile testing.
   */
  public fun getAmaMobileDevices(): List<String> = listOf(
      AmaMobile.AMAA703
  )

  /**
   * Get all device specifications for Amazon devices.
   * Useful for amazon testing.
   */
  public fun getAmazonDevices(): List<String> = listOf(
      Amazon.DOUGLAS,
      Amazon.KARNAK,
      Amazon.MAVERICK,
      Amazon.MUSTANG,
      Amazon.ONYX,
      Amazon.SUEZ,
      Amazon.TRONA
  )

  /**
   * Get all device specifications for AMGOO devices.
   * Useful for amgoo testing.
   */
  public fun getAmgooDevices(): List<String> = listOf(
      Amgoo.AM515,
      Amgoo.AM518,
      Amgoo.AM530
  )

  /**
   * Get all device specifications for AMGx13e devices.
   * Useful for amgx13e testing.
   */
  public fun getAmgx13eDevices(): List<String> = listOf(
      Amgx13e.ASPE2201
  )

  /**
   * Get all device specifications for Amino devices.
   * Useful for amino testing.
   */
  public fun getAminoDevices(): List<String> = listOf(
      Amino.AMIGO,
      Amino.AMIGO7X,
      Amino.AMIGO7X3SBC,
      Amino.AMIGO7XCCN,
      Amino.AMIGO7XESP,
      Amino.AMIGO7XGM,
      Amino.AMIGO7XSCB,
      Amino.AMIGO7Y
  )

  /**
   * Get all device specifications for Amlogic devices.
   * Useful for amlogic testing.
   */
  public fun getAmlogicDevices(): List<String> = listOf(
      Amlogic.AMPERE,
      Amlogic.P212
  )

  /**
   * Get all device specifications for AMobile devices.
   * Useful for amobile testing.
   */
  public fun getAmobileDevices(): List<String> = listOf(
      Amobile.PD470,
      Amobile.PD602
  )

  /**
   * Get all device specifications for ampliatv devices.
   * Useful for ampliatv testing.
   */
  public fun getAmpliatvDevices(): List<String> = listOf(
      Ampliatv.STI6160D327
  )

  /**
   * Get all device specifications for AMSTRAD devices.
   * Useful for amstrad testing.
   */
  public fun getAmstradDevices(): List<String> = listOf(
      Amstrad.R2,
      Amstrad.R3,
      Amstrad.R4,
      Amstrad.R4_GTV
  )

  /**
   * Get all device specifications for amulet7 devices.
   * Useful for amulet7 testing.
   */
  public fun getAmulet7Devices(): List<String> = listOf(
      Amulet7.P10SU_PLUS,
      Amulet7.P10SU_PLUS,
      Amulet7.P10SU_PRO
  )

  /**
   * Get all device specifications for ANAM devices.
   * Useful for anam testing.
   */
  public fun getAnamDevices(): List<String> = listOf(
      Anam.SEOCHO
  )

  /**
   * Get all device specifications for AND devices.
   * Useful for and testing.
   */
  public fun getAndDevices(): List<String> = listOf(
      And.HS8916QC
  )

  /**
   * Get all device specifications for Andersson devices.
   * Useful for andersson testing.
   */
  public fun getAnderssonDevices(): List<String> = listOf(
      Andersson.TBX10,
      Andersson.TBX11,
      Andersson.TBX211
  )

  /**
   * Get all device specifications for andrino devices.
   * Useful for andrino testing.
   */
  public fun getAndrinoDevices(): List<String> = listOf(
      Andrino.BANGBAE,
      Andrino.KOMAGOME
  )

  /**
   * Get all device specifications for Android devices.
   * Useful for android testing.
   */
  public fun getAndroidDevices(): List<String> = listOf(
      Android.NANOPC_T4,
      Android.RK322X_BOX,
      Android.RK3328_BOX
  )

  /**
   * Get all device specifications for ANEXA devices.
   * Useful for anexa testing.
   */
  public fun getAnexaDevices(): List<String> = listOf(
      Anexa.REDWOOD
  )

  /**
   * Get all device specifications for AngelTech devices.
   * Useful for angeltech testing.
   */
  public fun getAngeltechDevices(): List<String> = listOf(
      Angeltech.E109GCM,
      Angeltech.P80
  )

  /**
   * Get all device specifications for ANS devices.
   * Useful for ans testing.
   */
  public fun getAnsDevices(): List<String> = listOf(
      Ans.L50,
      Ans.L51,
      Ans.UL40
  )

  /**
   * Get all device specifications for ANS_NKS devices.
   * Useful for ans_nks testing.
   */
  public fun getAnsNksDevices(): List<String> = listOf(
      AnsNks.NKS_AQT80
  )

  /**
   * Get all device specifications for ANS_NKSA devices.
   * Useful for ans_nksa testing.
   */
  public fun getAnsNksaDevices(): List<String> = listOf(
      AnsNksa.NKSA_AQT82
  )

  /**
   * Get all device specifications for Antel devices.
   * Useful for antel testing.
   */
  public fun getAntelDevices(): List<String> = listOf(
      Antel.ANTEL_B866V2FAS,
      Antel.DV8547
  )

  /**
   * Get all device specifications for ANTEMPE devices.
   * Useful for antempe testing.
   */
  public fun getAntempeDevices(): List<String> = listOf(
      Antempe.D115_EEA
  )

  /**
   * Get all device specifications for ANXONIT devices.
   * Useful for anxonit testing.
   */
  public fun getAnxonitDevices(): List<String> = listOf(
      Anxonit.ANPAD_U2
  )

  /**
   * Get all device specifications for Anya devices.
   * Useful for anya testing.
   */
  public fun getAnyaDevices(): List<String> = listOf(
      Anya.ANYA_S5U,
      Anya.S558
  )

  /**
   * Get all device specifications for anyway-go devices.
   * Useful for anyway-go testing.
   */
  public fun getAnywayGoDevices(): List<String> = listOf(
      AnywayGo.TP1040
  )

  /**
   * Get all device specifications for AOC devices.
   * Useful for aoc testing.
   */
  public fun getAocDevices(): List<String> = listOf(
      Aoc.A110_E,
      Aoc.AOC_WW,
      Aoc.HONGKONG,
      Aoc.KHARDI,
      Aoc.MOUNTBAKER,
      Aoc.PH0M_EA_T32,
      Aoc.PH3M_AL_T32,
      Aoc.Q10107L_ME,
      Aoc.Q10107LW_ME,
      Aoc.Q8108L_ME,
      Aoc.WULONG
  )

  /**
   * Get all device specifications for Aocwei devices.
   * Useful for aocwei testing.
   */
  public fun getAocweiDevices(): List<String> = listOf(
      Aocwei.X300,
      Aocwei.X300_EEA,
      Aocwei.X300_EEA_T,
      Aocwei.X500_EEA,
      Aocwei.X500_T_EEA,
      Aocwei.X500_US,
      Aocwei.X700_EEA,
      Aocwei.X800_EEA,
      Aocwei.X800_US,
      Aocwei.X900_US,
      Aocwei.X900_EEA,
      Aocwei.X900_US
  )

  /**
   * Get all device specifications for AoGo devices.
   * Useful for aogo testing.
   */
  public fun getAogoDevices(): List<String> = listOf(
      Aogo.AOGO1
  )

  /**
   * Get all device specifications for AOSKEY devices.
   * Useful for aoskey testing.
   */
  public fun getAoskeyDevices(): List<String> = listOf(
      Aoskey.F11,
      Aoskey.P21
  )

  /**
   * Get all device specifications for AOYODKG devices.
   * Useful for aoyodkg testing.
   */
  public fun getAoyodkgDevices(): List<String> = listOf(
      Aoyodkg.M50,
      Aoyodkg.M50_EEA
  )

  /**
   * Get all device specifications for APEX devices.
   * Useful for apex testing.
   */
  public fun getApexDevices(): List<String> = listOf(
      Apex.APEX_P10HD_PRO,
      Apex.P10HD_LITE,
      Apex.R10D,
      Apex.T40PRO_L1,
      Apex.U10,
      Apex.U10PRO,
      Apex.Z12_PRO,
      Apex.Z4PRO
  )

  /**
   * Get all device specifications for Apolosign devices.
   * Useful for apolosign testing.
   */
  public fun getApolosignDevices(): List<String> = listOf(
      Apolosign.AP2718T,
      Apolosign.EM101A,
      Apolosign.EM101C,
      Apolosign.EM103A,
      Apolosign.EP103B,
      Apolosign.EP1095T,
      Apolosign.FA158AT,
      Apolosign.K109_PRO,
      Apolosign.K109A,
      Apolosign.K709A,
      Apolosign.NW1495T,
      Apolosign.WF2189T,
      Apolosign.WF2489T,
      Apolosign.WF3289T
  )

  /**
   * Get all device specifications for Aprix devices.
   * Useful for aprix testing.
   */
  public fun getAprixDevices(): List<String> = listOf(
      Aprix.TAB1066,
      Aprix.TAB_X2,
      Aprix.TABX4
  )

  /**
   * Get all device specifications for AQHH devices.
   * Useful for aqhh testing.
   */
  public fun getAqhhDevices(): List<String> = listOf(
      Aqhh.A75
  )

  /**
   * Get all device specifications for AQUA devices.
   * Useful for aqua testing.
   */
  public fun getAquaDevices(): List<String> = listOf(
      Aqua.BROADWAY,
      Aqua.DAAN,
      Aqua.DETO,
      Aqua.DUPONT,
      Aqua.HANYANG,
      Aqua.IRVINE,
      Aqua.JORDAN,
      Aqua.NIPPORI,
      Aqua.OMONIA
  )

  /**
   * Get all device specifications for ARATEK devices.
   * Useful for aratek testing.
   */
  public fun getAratekDevices(): List<String> = listOf(
      Aratek.MARSHALL_8
  )

  /**
   * Get all device specifications for ARBOR devices.
   * Useful for arbor testing.
   */
  public fun getArborDevices(): List<String> = listOf(
      Arbor.G47,
      Arbor.GT78_VN
  )

  /**
   * Get all device specifications for Arcelik devices.
   * Useful for arcelik testing.
   */
  public fun getArcelikDevices(): List<String> = listOf(
      Arcelik.AKROPOLI,
      Arcelik.ARCELIK_EU,
      Arcelik.KUNYANG,
      Arcelik.MARTIN,
      Arcelik.R4,
      Arcelik.SHINAGAWA,
      Arcelik.SINCHON,
      Arcelik.WANCHAI
  )

  /**
   * Get all device specifications for ARCHOS devices.
   * Useful for archos testing.
   */
  public fun getArchosDevices(): List<String> = listOf(
      Archos.A101NE,
      Archos.A101XE,
      Archos.A70XE,
      Archos.AC101AS3G,
      Archos.AC101AS3GV2,
      Archos.AC101AS3GV3,
      Archos.AC101ASWF,
      Archos.AC101ASWFV2,
      Archos.AC101BCV,
      Archos.AC101BOX,
      Archos.AC101BOXV2,
      Archos.AC101BOXV3,
      Archos.AC101BXEV2,
      Archos.AC101BXEV3,
      Archos.AC101CCV,
      Archos.AC101CNE,
      Archos.AC101CPL,
      Archos.AC101CPLV2,
      Archos.AC101CR3GV2,
      Archos.AC101CR3GV3,
      Archos.AC101CR3GV4,
      Archos.AC101CR3GV5,
      Archos.AC101CR4GV3,
      Archos.AC101CV,
      Archos.AC101CXEV2,
      Archos.AC101DNE,
      Archos.AC101DPL,
      Archos.AC101DPLV2,
      Archos.AC101ENE,
      Archos.AC101ENEV2,
      Archos.AC101HELLO,
      Archos.AC101MA,
      Archos.AC101OX4G,
      Archos.AC101PL3G,
      Archos.AC101PL3GV2,
      Archos.AC101SOX,
      Archos.AC101SOXAZ,
      Archos.AC101SOXUL,
      Archos.AC101TR,
      Archos.AC101XEL,
      Archos.AC101XPRO4G,
      Archos.AC101XS2,
      Archos.AC101XSE,
      Archos.AC116NE,
      Archos.AC133OX,
      Archos.AC156OX,
      Archos.AC40HE,
      Archos.AC40NE,
      Archos.AC45AS4G,
      Archos.AC45DPL,
      Archos.AC50AS3G,
      Archos.AC50AS4G,
      Archos.AC50ASS4G,
      Archos.AC50BCO,
      Archos.AC50CO,
      Archos.AC50CPL,
      Archos.AC50CR4G,
      Archos.AC50DIS,
      Archos.AC50EHE,
      Archos.AC50ENE,
      Archos.AC50FHE,
      Archos.AC50FNEV2,
      Archos.AC50HELLO,
      Archos.AC50HEPLUS,
      Archos.AC50PL4G,
      Archos.AC50PO,
      Archos.AC50SA,
      Archos.AC50SAX,
      Archos.AC50SEDC,
      Archos.AC50TI,
      Archos.AC50XSE,
      Archos.AC55AS3G,
      Archos.AC55BCO,
      Archos.AC55BPL,
      Archos.AC55COP,
      Archos.AC55CRSULTRA,
      Archos.AC55DIPLUS,
      Archos.AC55DISELFIE,
      Archos.AC55HE,
      Archos.AC55HEPLUS,
      Archos.AC55PL,
      Archos.AC55SEDC,
      Archos.AC55SES,
      Archos.AC57AS3G,
      Archos.AC57AS4G,
      Archos.AC57CRS,
      Archos.AC57OX,
      Archos.AC60CRS,
      Archos.AC60PL,
      Archos.AC62CRS,
      Archos.AC63OX,
      Archos.AC68OXXL,
      Archos.AC70AS3G,
      Archos.AC70ASWF,
      Archos.AC70CNE,
      Archos.AC70CR3G,
      Archos.AC70CR3GV2,
      Archos.AC70CXE,
      Archos.AC70HELLO,
      Archos.AC70OX,
      Archos.AC70PLV3,
      Archos.AC70PLV4,
      Archos.AC70XEC,
      Archos.AC80OX,
      Archos.AC94FFF,
      Archos.AC97CPL,
      Archos.AC97CPLV2,
      Archos.ACT1014G,
      Archos.ACT101FHD2WF,
      Archos.ACT101FHD4G,
      Archos.ACT101HD,
      Archos.ACT101HD24G,
      Archos.ACT101HD3,
      Archos.ACT101HD4G2,
      Archos.ACT101HDP,
      Archos.ACT101HDWF,
      Archos.ACT101WF,
      Archos.ACT101X4G,
      Archos.ACT105FHD4G,
      Archos.ACT105FHDWFUL,
      Archos.ACT110FHD4GULTRA,
      Archos.ACT80HDWF,
      Archos.ACT80W,
      Archos.ARCHOS,
      Archos.ARCHOST96,
      Archos.ARCHOST963G,
      Archos.AT101FHDW,
      Archos.AZA101SOXUL,
      Archos.HOMETABLET,
      Archos.LIFB57,
      Archos.X18_ULTRA
  )

  /**
   * Get all device specifications for ArchosWithLogic devices.
   * Useful for archoswithlogic testing.
   */
  public fun getArchoswithlogicDevices(): List<String> = listOf(
      Archoswithlogic.AC67X5G
  )

  /**
   * Get all device specifications for ARGO devices.
   * Useful for argo testing.
   */
  public fun getArgoDevices(): List<String> = listOf(
      Argo.OSAKI
  )

  /**
   * Get all device specifications for ARGUEST devices.
   * Useful for arguest testing.
   */
  public fun getArguestDevices(): List<String> = listOf(
      Arguest.KUNYANG
  )

  /**
   * Get all device specifications for Arirang devices.
   * Useful for arirang testing.
   */
  public fun getArirangDevices(): List<String> = listOf(
      Arirang.ATPA801_1
  )

  /**
   * Get all device specifications for Arival devices.
   * Useful for arival testing.
   */
  public fun getArivalDevices(): List<String> = listOf(
      Arival.BIONIQP116
  )

  /**
   * Get all device specifications for ARK devices.
   * Useful for ark testing.
   */
  public fun getArkDevices(): List<String> = listOf(
      Ark.BENEFIT_M9
  )

  /**
   * Get all device specifications for Arknikko devices.
   * Useful for arknikko testing.
   */
  public fun getArknikkoDevices(): List<String> = listOf(
      Arknikko.MEMOPAD_T3_EEA,
      Arknikko.MEMOPAD_T4,
      Arknikko.SOPHPAD_X11,
      Arknikko.SOPHPAD_X22_EEA
  )

  /**
   * Get all device specifications for ARMADILOS devices.
   * Useful for armadilos testing.
   */
  public fun getArmadilosDevices(): List<String> = listOf(
      Armadilos.LISTO22
  )

  /**
   * Get all device specifications for ARRIS devices.
   * Useful for arris testing.
   */
  public fun getArrisDevices(): List<String> = listOf(
      Arris.F503,
      Arris.F515,
      Arris.SFO,
      Arris.VIP5242A,
      Arris.VIP5442,
      Arris.VIP5702W_TN,
      Arris.VIP6102W,
      Arris.VIP7020_YOUSEE,
      Arris.ZC4450V_ORM,
      Arris.ZC4455V_ORB,
      Arris.ZI4450V_ORS
  )

  /**
   * Get all device specifications for Arrow devices.
   * Useful for arrow testing.
   */
  public fun getArrowDevices(): List<String> = listOf(
      Arrow.M916H
  )

  /**
   * Get all device specifications for ARRQW devices.
   * Useful for arrqw testing.
   */
  public fun getArrqwDevices(): List<String> = listOf(
      Arrqw.LONGSHAN,
      Arrqw.SAMSEONG,
      Arrqw.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for Artel devices.
   * Useful for artel testing.
   */
  public fun getArtelDevices(): List<String> = listOf(
      Artel.ALO,
      Artel.ARTEL_AIR,
      Artel.ARTEL_PREMIUM,
      Artel.ARTEL_QUADRO,
      Artel.ARTEL_QUADRO_PRO,
      Artel.ARTEL_T10,
      Artel.ARTEL_TESLA,
      Artel.ARTEL_TOMCHI,
      Artel.GAP_YOQ,
      Artel.GAPYOQ,
      Artel.NAGAI,
      Artel.R1,
      Artel.R2,
      Artel.R3,
      Artel.R3_GTV,
      Artel.R4,
      Artel.R4_GTV,
      Artel.SW4H,
      Artel.U2,
      Artel.U3,
      Artel.U3_4G,
      Artel.U4,
      Artel.U5
  )

  /**
   * Get all device specifications for ARTRAN devices.
   * Useful for artran testing.
   */
  public fun getArtranDevices(): List<String> = listOf(
      Artran.ARTRAN_EI101F,
      Artran.AZ101F,
      Artran.IB101F_PRO,
      Artran.IB868H
  )

  /**
   * Get all device specifications for ARVAND devices.
   * Useful for arvand testing.
   */
  public fun getArvandDevices(): List<String> = listOf(
      Arvand.M863TABH8
  )

  /**
   * Get all device specifications for AS_ELECTRONICS devices.
   * Useful for as_electronics testing.
   */
  public fun getAsElectronicsDevices(): List<String> = listOf(
      AsElectronics.AS1
  )

  /**
   * Get all device specifications for ASAANO devices.
   * Useful for asaano testing.
   */
  public fun getAsaanoDevices(): List<String> = listOf(
      Asaano.HONGKONG
  )

  /**
   * Get all device specifications for ASANZO devices.
   * Useful for asanzo testing.
   */
  public fun getAsanzoDevices(): List<String> = listOf(
      Asanzo.ASANZO_A2,
      Asanzo.S6,
      Asanzo.SHIBUYA,
      Asanzo.SW6H
  )

  /**
   * Get all device specifications for Ascom devices.
   * Useful for ascom testing.
   */
  public fun getAscomDevices(): List<String> = listOf(
      Ascom.ABAA,
      Ascom.ABBA,
      Ascom.ACBA,
      Ascom.ADAA,
      Ascom.SH4_1,
      Ascom.SH4_2
  )

  /**
   * Get all device specifications for ascon devices.
   * Useful for ascon testing.
   */
  public fun getAsconDevices(): List<String> = listOf(
      Ascon.AT14
  )

  /**
   * Get all device specifications for ASG devices.
   * Useful for asg testing.
   */
  public fun getAsgDevices(): List<String> = listOf(
      Asg.SW4H
  )

  /**
   * Get all device specifications for ASHER devices.
   * Useful for asher testing.
   */
  public fun getAsherDevices(): List<String> = listOf(
      Asher.LONGSHAN,
      Asher.REDWOOD
  )

  /**
   * Get all device specifications for Ashima devices.
   * Useful for ashima testing.
   */
  public fun getAshimaDevices(): List<String> = listOf(
      Ashima.SONGSHAN
  )

  /**
   * Get all device specifications for Asianet devices.
   * Useful for asianet testing.
   */
  public fun getAsianetDevices(): List<String> = listOf(
      Asianet.D8109N
  )

  /**
   * Get all device specifications for Aspera devices.
   * Useful for aspera testing.
   */
  public fun getAsperaDevices(): List<String> = listOf(
      Aspera.A45_1,
      Aspera.AS_10,
      Aspera.AS5,
      Aspera.AS57,
      Aspera.AS6,
      Aspera.AS7,
      Aspera.AS8,
      Aspera.AS9,
      Aspera.ASPERA_NITRO,
      Aspera.ASPERA_R10,
      Aspera.BUZZ,
      Aspera.CHAT,
      Aspera.GEM,
      Aspera.JAZZ_2,
      Aspera.NITRO2,
      Aspera.R9
  )

  /**
   * Get all device specifications for ASTECH devices.
   * Useful for astech testing.
   */
  public fun getAstechDevices(): List<String> = listOf(
      Astech.ASTECH_IRIS,
      Astech.ASTECH_S7,
      Astech.ASTECH_S8,
      Astech.ASTECH_S9,
      Astech.R10G,
      Astech.R3,
      Astech.R3_GTV,
      Astech.R4,
      Astech.TAMACHI,
      Astech.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for ASTEX devices.
   * Useful for astex testing.
   */
  public fun getAstexDevices(): List<String> = listOf(
      Astex.BANDRA,
      Astex.KENTON,
      Astex.LASALLE
  )

  /**
   * Get all device specifications for ASTON devices.
   * Useful for aston testing.
   */
  public fun getAstonDevices(): List<String> = listOf(
      Aston.HYPER_MAX_POWER
  )

  /**
   * Get all device specifications for ASTREX devices.
   * Useful for astrex testing.
   */
  public fun getAstrexDevices(): List<String> = listOf(
      Astrex.VEGAPRO,
      Astrex.VICTORY
  )

  /**
   * Get all device specifications for Astro_Mobile devices.
   * Useful for astro_mobile testing.
   */
  public fun getAstroMobileDevices(): List<String> = listOf(
      AstroMobile.SMART_A1_PLUS
  )

  /**
   * Get all device specifications for Astro_Tab devices.
   * Useful for astro_tab testing.
   */
  public fun getAstroTabDevices(): List<String> = listOf(
      AstroTab.DCG_P10
  )

  /**
   * Get all device specifications for ASTROM devices.
   * Useful for astrom testing.
   */
  public fun getAstromDevices(): List<String> = listOf(
      Astrom.AST707G
  )

  /**
   * Get all device specifications for asus devices.
   * Useful for asus testing.
   */
  public fun getAsusDevices(): List<String> = listOf(
      Asus.ASUS_A86,
      Asus.ASUS_T00D,
      Asus.ASUS_A001,
      Asus.ASUS_A001D_1,
      Asus.ASUS_A001D_2,
      Asus.ASUS_A002,
      Asus.ASUS_A002_1,
      Asus.ASUS_A006,
      Asus.ASUS_A007,
      Asus.ASUS_A009,
      Asus.ASUS_AI2201,
      Asus.ASUS_AI2202,
      Asus.ASUS_AI2203,
      Asus.ASUS_AI2205,
      Asus.ASUS_AI2302,
      Asus.ASUS_AI2401,
      Asus.ASUS_I001_1,
      Asus.ASUS_I002D,
      Asus.ASUS_I003_1,
      Asus.ASUS_I004D,
      Asus.ASUS_I005_1,
      Asus.ASUS_I006D,
      Asus.ASUS_I007_1,
      Asus.ASUS_I01WD,
      Asus.ASUS_L001_1,
      Asus.ASUS_L001_2,
      Asus.ASUS_P00I,
      Asus.ASUS_P00J,
      Asus.ASUS_P00L_1,
      Asus.ASUS_P00L_2,
      Asus.ASUS_P028_1,
      Asus.ASUS_P028_2,
      Asus.ASUS_T00F,
      Asus.ASUS_T00F1,
      Asus.ASUS_T00G,
      Asus.ASUS_T00I,
      Asus.ASUS_T00J,
      Asus.ASUS_T00J1,
      Asus.ASUS_T00K,
      Asus.ASUS_T00N,
      Asus.ASUS_T00P,
      Asus.ASUS_T00Q,
      Asus.ASUS_X005,
      Asus.ASUS_X007D,
      Asus.ASUS_X008,
      Asus.ASUS_X008_1,
      Asus.ASUS_X009D_2,
      Asus.ASUS_X00AD_2,
      Asus.ASUS_X00BD_1,
      Asus.ASUS_X00DD,
      Asus.ASUS_X00G_1,
      Asus.ASUS_X00HD_1,
      Asus.ASUS_X00HD_2,
      Asus.ASUS_X00HD_3,
      Asus.ASUS_X00HD_4,
      Asus.ASUS_X00ID,
      Asus.ASUS_X00IDB,
      Asus.ASUS_X00IDC,
      Asus.ASUS_X00LD_1,
      Asus.ASUS_X00LD_2,
      Asus.ASUS_X00LD_3,
      Asus.ASUS_X00P_1,
      Asus.ASUS_X00P_2,
      Asus.ASUS_X00P_3,
      Asus.ASUS_X00P_4,
      Asus.ASUS_X00P_6,
      Asus.ASUS_X00P_8,
      Asus.ASUS_X00QD,
      Asus.ASUS_X00R_1,
      Asus.ASUS_X00R_2,
      Asus.ASUS_X00R_3,
      Asus.ASUS_X00R_5,
      Asus.ASUS_X00R_6,
      Asus.ASUS_X00R_7,
      Asus.ASUS_X00T_2,
      Asus.ASUS_X00T_3,
      Asus.ASUS_X00T_4,
      Asus.ASUS_X00T_6,
      Asus.ASUS_X00T_8,
      Asus.ASUS_X013D_1,
      Asus.ASUS_X013D_2,
      Asus.ASUS_X014D_1,
      Asus.ASUS_X014D_2,
      Asus.ASUS_X017D_1,
      Asus.ASUS_X017D_2,
      Asus.ASUS_X018_1,
      Asus.ASUS_X018_2,
      Asus.ASUS_X018_4,
      Asus.ASUS_X01A_1,
      Asus.ASUS_X01BD_1,
      Asus.ASUS_X01BD_2,
      Asus.ASUS_X550,
      Asus.ASUS_Z002,
      Asus.ASUS_Z007,
      Asus.ASUS_Z00D,
      Asus.ASUS_Z00E_1,
      Asus.ASUS_Z00E_2,
      Asus.ASUS_Z00E_3,
      Asus.ASUS_Z00E_4,
      Asus.ASUS_Z00L_63,
      Asus.ASUS_Z00L_63A,
      Asus.ASUS_Z00L_93,
      Asus.ASUS_Z00M,
      Asus.ASUS_Z00RD_7,
      Asus.ASUS_Z00SD,
      Asus.ASUS_Z00T,
      Asus.ASUS_Z00U_1,
      Asus.ASUS_Z00U_2,
      Asus.ASUS_Z00VD,
      Asus.ASUS_Z00W_63,
      Asus.ASUS_Z00YD,
      Asus.ASUS_Z010,
      Asus.ASUS_Z010_2,
      Asus.ASUS_Z010_CD,
      Asus.ASUS_Z011,
      Asus.ASUS_Z012D,
      Asus.ASUS_Z017D_1,
      Asus.ASUS_Z01F_1,
      Asus.ASUS_Z01GD_1,
      Asus.ASUS_Z01H_1,
      Asus.ASUS_Z01KD_1,
      Asus.ASUS_Z01KD_2,
      Asus.ASUS_Z01KD_3,
      Asus.ASUS_Z01KDA,
      Asus.ASUS_Z01M_1,
      Asus.ASUS_Z01QD,
      Asus.ASUS_Z01QD_1,
      Asus.ASUS_Z01R_1,
      Asus.ASUS_ZENBO,
      Asus.ASUSAI2501,
      Asus.DAHU,
      Asus.K007,
      Asus.K00C,
      Asus.K00E,
      Asus.K00F,
      Asus.K00G,
      Asus.K00L,
      Asus.K00R,
      Asus.K00U,
      Asus.K00X,
      Asus.K00Y,
      Asus.K00Z,
      Asus.K010,
      Asus.K010E,
      Asus.K011,
      Asus.K011_1,
      Asus.K012,
      Asus.K012_2,
      Asus.K013,
      Asus.K013_1,
      Asus.K013C,
      Asus.K014,
      Asus.K015,
      Asus.K016_1,
      Asus.K016_2,
      Asus.K017,
      Asus.K018,
      Asus.K019_1,
      Asus.K019_2,
      Asus.K019_3,
      Asus.K019_4,
      Asus.K01A,
      Asus.K01B,
      Asus.K01E_2,
      Asus.K01H,
      Asus.K01N_1,
      Asus.K01N_2,
      Asus.K01Q,
      Asus.K01U_1,
      Asus.ME172V,
      Asus.ME173X,
      Asus.ME301T,
      Asus.ME302C,
      Asus.ME302KL,
      Asus.ME371MG,
      Asus.P001,
      Asus.P001_2,
      Asus.P002_1,
      Asus.P002_2,
      Asus.P002_M,
      Asus.P008,
      Asus.P008_1,
      Asus.P008_2,
      Asus.P00A_2,
      Asus.P00C_2,
      Asus.P00C_M,
      Asus.P00I,
      Asus.P01M_1,
      Asus.P01M_2,
      Asus.P01M_3,
      Asus.P01M_4,
      Asus.P01M_5,
      Asus.P01T_1,
      Asus.P01V_2,
      Asus.P01W,
      Asus.P01Y,
      Asus.P01Y_2,
      Asus.P01Y_S,
      Asus.P01Z,
      Asus.P021,
      Asus.P021_1,
      Asus.P022_1,
      Asus.P022_2,
      Asus.P023_1,
      Asus.P023_2,
      Asus.P024_1,
      Asus.P024_2,
      Asus.P024_4,
      Asus.P027,
      Asus.P1801_T,
      Asus.SPARROW,
      Asus.SWIFT,
      Asus.TF201,
      Asus.TF300T,
      Asus.TF300TG,
      Asus.TF700T,
      Asus.TX201LA,
      Asus.TX201LAF,
      Asus.WREN,
      Asus.Z008_1,
      Asus.Z00A,
      Asus.Z00A_1,
      Asus.Z00A_3,
      Asus.Z00X,
      Asus.Z00X_1,
      Asus.Z00X_2,
      Asus.Z016,
      Asus.Z016_1,
      Asus.Z01B_1
  )

  /**
   * Get all device specifications for ATEAM devices.
   * Useful for ateam testing.
   */
  public fun getAteamDevices(): List<String> = listOf(
      Ateam.A1010,
      Ateam.A801
  )

  /**
   * Get all device specifications for ATEC devices.
   * Useful for atec testing.
   */
  public fun getAtecDevices(): List<String> = listOf(
      Atec.APD3,
      Atec.ATEC_IWB
  )

  /**
   * Get all device specifications for AthenaStellar devices.
   * Useful for athenastellar testing.
   */
  public fun getAthenastellarDevices(): List<String> = listOf(
      Athenastellar.MAT80211
  )

  /**
   * Get all device specifications for Athesi devices.
   * Useful for athesi testing.
   */
  public fun getAthesiDevices(): List<String> = listOf(
      Athesi.AP5501,
      Athesi.AP5701,
      Athesi.AP5801,
      Athesi.AT_E8T,
      Athesi.E55,
      Athesi.E65,
      Athesi.E6A,
      Athesi.RT4500
  )

  /**
   * Get all device specifications for Athesi_professional devices.
   * Useful for athesi_professional testing.
   */
  public fun getAthesiProfessionalDevices(): List<String> = listOf(
      AthesiProfessional.AP5702,
      AthesiProfessional.AP5705S
  )

  /**
   * Get all device specifications for ATILIM_mPAD devices.
   * Useful for atilim_mpad testing.
   */
  public fun getAtilimMpadDevices(): List<String> = listOf(
      AtilimMpad.ATILIM_MPAD07
  )

  /**
   * Get all device specifications for ATM devices.
   * Useful for atm testing.
   */
  public fun getAtmDevices(): List<String> = listOf(
      Atm.R5,
      Atm.R5_PRO,
      Atm.X50U
  )

  /**
   * Get all device specifications for ATMPC devices.
   * Useful for atmpc testing.
   */
  public fun getAtmpcDevices(): List<String> = listOf(
      Atmpc.IT_1001A,
      Atmpc.IT_701A,
      Atmpc.IT_801B,
      Atmpc.IT_801BA3,
      Atmpc.IT_701A,
      Atmpc.IT_701A1,
      Atmpc.IT_801B
  )

  /**
   * Get all device specifications for ATOL devices.
   * Useful for atol testing.
   */
  public fun getAtolDevices(): List<String> = listOf(
      Atol.T150,
      Atol.T50P
  )

  /**
   * Get all device specifications for ATOTO devices.
   * Useful for atoto testing.
   */
  public fun getAtotoDevices(): List<String> = listOf(
      Atoto.MULTIFUNCTIONAL_TABLET
  )

  /**
   * Get all device specifications for ATOZEE devices.
   * Useful for atozee testing.
   */
  public fun getAtozeeDevices(): List<String> = listOf(
      Atozee.A30MAX,
      Atozee.AT10K,
      Atozee.AT11K,
      Atozee.AT12K,
      Atozee.AT70K,
      Atozee.AT71K,
      Atozee.AT81K,
      Atozee.CP10S,
      Atozee.CP20_GOLD,
      Atozee.CP20_MAX,
      Atozee.CP20_PRO,
      Atozee.CP20S,
      Atozee.CP30,
      Atozee.CP31,
      Atozee.CP80,
      Atozee.CP80KS,
      Atozee.CP81,
      Atozee.NV10S,
      Atozee.P12,
      Atozee.P70W,
      Atozee.P80W,
      Atozee.P81W,
      Atozee.Q2S,
      Atozee.Q2SK,
      Atozee.T30MAX,
      Atozee.T30MAX_EEA,
      Atozee.YQ10S_GOLD,
      Atozee.YQ10S_MAX,
      Atozee.YQ10SK,
      Atozee.ZB10S,
      Atozee.ZB11S
  )

  /**
   * Get all device specifications for ATT devices.
   * Useful for att testing.
   */
  public fun getAttDevices(): List<String> = listOf(
      Att.C71KW200,
      Att.C71KW400,
      Att.C71KW400_4GB,
      Att.C71KW400_BEAM,
      Att.EA211001,
      Att.EA211002,
      Att.EA211005,
      Att.QS5509QL,
      Att.SL219A,
      Att.SN509A,
      Att.TINT8_ATT,
      Att.U202AA,
      Att.U304AA,
      Att.U318AA,
      Att.U319AA,
      Att.U380AA,
      Att.U6080AA,
      Att.U626AA,
      Att.U705AA,
      Att.V340U,
      Att.V341U,
      Att.V350U,
      Att.WTATTRW2
  )

  /**
   * Get all device specifications for ATVIO devices.
   * Useful for atvio testing.
   */
  public fun getAtvioDevices(): List<String> = listOf(
      Atvio._100011886BK,
      Atvio.MID1032_MR_32,
      Atvio.MID7015_MK_32
  )

  /**
   * Get all device specifications for Audi devices.
   * Useful for audi testing.
   */
  public fun getAudiDevices(): List<String> = listOf(
      Audi.RSEIII,
      Audi.SDIS1
  )

  /**
   * Get all device specifications for AUPO devices.
   * Useful for aupo testing.
   */
  public fun getAupoDevices(): List<String> = listOf(
      Aupo.AUPO_ZEUS_10_PRO,
      Aupo.AUPO_ZEUS_10_PRO_ROW
  )

  /**
   * Get all device specifications for Aura devices.
   * Useful for aura testing.
   */
  public fun getAuraDevices(): List<String> = listOf(
      Aura.DEMOPAD
  )

  /**
   * Get all device specifications for AURZEN devices.
   * Useful for aurzen testing.
   */
  public fun getAurzenDevices(): List<String> = listOf(
      Aurzen.TB_AS100A,
      Aurzen.TB_AS110A,
      Aurzen.YANDANGSHAN
  )

  /**
   * Get all device specifications for AVA devices.
   * Useful for ava testing.
   */
  public fun getAvaDevices(): List<String> = listOf(
      Ava.AVA_RM_RX1,
      Ava.AVA_RM_RX2_US
  )

  /**
   * Get all device specifications for AVACOM devices.
   * Useful for avacom testing.
   */
  public fun getAvacomDevices(): List<String> = listOf(
      Avacom.AVT015
  )

  /**
   * Get all device specifications for AVANGARD devices.
   * Useful for avangard testing.
   */
  public fun getAvangardDevices(): List<String> = listOf(
      Avangard.R3,
      Avangard.R4
  )

  /**
   * Get all device specifications for Avatel devices.
   * Useful for avatel testing.
   */
  public fun getAvatelDevices(): List<String> = listOf(
      Avatel.DV8547_KSA
  )

  /**
   * Get all device specifications for Avaya devices.
   * Useful for avaya testing.
   */
  public fun getAvayaDevices(): List<String> = listOf(
      Avaya.K175
  )

  /**
   * Get all device specifications for AVH devices.
   * Useful for avh testing.
   */
  public fun getAvhDevices(): List<String> = listOf(
      Avh.EXCER_10_PRO
  )

  /**
   * Get all device specifications for AvidPad devices.
   * Useful for avidpad testing.
   */
  public fun getAvidpadDevices(): List<String> = listOf(
      Avidpad.A30,
      Avidpad.A30PRO,
      Avidpad.A60,
      Avidpad.S30,
      Avidpad.S60,
      Avidpad.S80
  )

  /**
   * Get all device specifications for Avion devices.
   * Useful for avion testing.
   */
  public fun getAvionDevices(): List<String> = listOf(
      Avion.AVION_A10
  )

  /**
   * Get all device specifications for AVITA devices.
   * Useful for avita testing.
   */
  public fun getAvitaDevices(): List<String> = listOf(
      Avita.T101
  )

  /**
   * Get all device specifications for Avtek devices.
   * Useful for avtek testing.
   */
  public fun getAvtekDevices(): List<String> = listOf(
      Avtek.MTK9679
  )

  /**
   * Get all device specifications for Avvio devices.
   * Useful for avvio testing.
   */
  public fun getAvvioDevices(): List<String> = listOf(
      Avvio.AVVIO_4GO,
      Avvio.AVVIO_A400,
      Avvio.AVVIO_Q503
  )

  /**
   * Get all device specifications for AWOW devices.
   * Useful for awow testing.
   */
  public fun getAwowDevices(): List<String> = listOf(
      Awow.AWOW_CREAPAD_1001,
      Awow.AWOW_CREAPAD_1003_EEA,
      Awow.CQA1019_EEA,
      Awow.CREAPAD_1005,
      Awow.CREAPAD_1005_EEA,
      Awow.CREAPAD_1009,
      Awow.CREAPAD_1009_EEA,
      Awow.CREAPAD_1009S,
      Awow.CUBTAB_1001,
      Awow.FUNTAB_1001,
      Awow.FUNTAB_1001_EEA,
      Awow.FUNTAB_1003_EEA,
      Awow.FUNTAB_1003_US,
      Awow.FUNTAB_801_I_EEA,
      Awow.FUNTAB_801_K_EEA,
      Awow.MID_1085_EEA,
      Awow.MID_1089IPS_EEA,
      Awow.MID_789A100_EEA,
      Awow.P11_EEA,
      Awow.UTBOOK,
      Awow.UTBOOK_14,
      Awow.UTBOOK_EEA
  )

  /**
   * Get all device specifications for AX_META devices.
   * Useful for ax_meta testing.
   */
  public fun getAxMetaDevices(): List<String> = listOf(
      AxMeta.AX_META_TAB_7
  )

  /**
   * Get all device specifications for AXEL devices.
   * Useful for axel testing.
   */
  public fun getAxelDevices(): List<String> = listOf(
      Axel.AX_PRO
  )

  /**
   * Get all device specifications for AXION devices.
   * Useful for axion testing.
   */
  public fun getAxionDevices(): List<String> = listOf(
      Axion.SBAA1011
  )

  /**
   * Get all device specifications for AXIOO devices.
   * Useful for axioo testing.
   */
  public fun getAxiooDevices(): List<String> = listOf(
      Axioo.PICOPAD_7H,
      Axioo.PICOPAD_7H_JL,
      Axioo.PICOPAD_7H_R8
  )

  /**
   * Get all device specifications for AXON devices.
   * Useful for axon testing.
   */
  public fun getAxonDevices(): List<String> = listOf(
      Axon.EVOLUTION
  )

  /**
   * Get all device specifications for AXS devices.
   * Useful for axs testing.
   */
  public fun getAxsDevices(): List<String> = listOf(
      Axs.B866V2FA_AXS
  )

  /**
   * Get all device specifications for AXSTV devices.
   * Useful for axstv testing.
   */
  public fun getAxstvDevices(): List<String> = listOf(
      Axstv.SEI130PTS,
      Axstv.SEI530PTS
  )

  /**
   * Get all device specifications for AXXA devices.
   * Useful for axxa testing.
   */
  public fun getAxxaDevices(): List<String> = listOf(
      Axxa.AXXA_S45_PLUS
  )

  /**
   * Get all device specifications for AXXA_MOBILE devices.
   * Useful for axxa_mobile testing.
   */
  public fun getAxxaMobileDevices(): List<String> = listOf(
      AxxaMobile.GEM
  )

  /**
   * Get all device specifications for Ayat devices.
   * Useful for ayat testing.
   */
  public fun getAyatDevices(): List<String> = listOf(
      Ayat.AYAT101,
      Ayat.AYAT_101
  )

  /**
   * Get all device specifications for Ayonz devices.
   * Useful for ayonz testing.
   */
  public fun getAyonzDevices(): List<String> = listOf(
      Ayonz.HANYANG
  )

  /**
   * Get all device specifications for AYYA devices.
   * Useful for ayya testing.
   */
  public fun getAyyaDevices(): List<String> = listOf(
      Ayya.T1
  )

  /**
   * Get all device specifications for AZATECH devices.
   * Useful for azatech testing.
   */
  public fun getAzatechDevices(): List<String> = listOf(
      Azatech.STANFORD,
      Azatech.ZHONGSHAN
  )

  /**
   * Get all device specifications for Azeyou devices.
   * Useful for azeyou testing.
   */
  public fun getAzeyouDevices(): List<String> = listOf(
      Azeyou.AT1002J,
      Azeyou.AT1011E,
      Azeyou.AT1011U,
      Azeyou.AT1012E,
      Azeyou.AT1012U,
      Azeyou.AT1014,
      Azeyou.AT1014U,
      Azeyou.AT1016BBK,
      Azeyou.AT1016E,
      Azeyou.AT1016U,
      Azeyou.AT1101,
      Azeyou.AT1202J,
      Azeyou.M17QF27A
  )

  /**
   * Get all device specifications for AZOM devices.
   * Useful for azom testing.
   */
  public fun getAzomDevices(): List<String> = listOf(
      Azom.DESERT2,
      Azom.RIVER1
  )

  /**
   * Get all device specifications for AZPEN devices.
   * Useful for azpen testing.
   */
  public fun getAzpenDevices(): List<String> = listOf(
      Azpen.A1046G,
      Azpen.A1080G,
      Azpen.A1083,
      Azpen.C_603,
      Azpen.G800,
      Azpen.MID1032_MK_32
  )

  /**
   * Get all device specifications for Azumi devices.
   * Useful for azumi testing.
   */
  public fun getAzumiDevices(): List<String> = listOf(
      Azumi.A50LT,
      Azumi.A5_AC11,
      Azumi.AZUMI_A4_AC12OM,
      Azumi.AZUMI_A4_AC27B,
      Azumi.AZUMI_A4_B,
      Azumi.AZUMI_A4PLUS_AC11,
      Azumi.AZUMI_A57B,
      Azumi.AZUMI_A5_P,
      Azumi.AZUMI_A5_P1,
      Azumi.AZUMI_A5B_BD,
      Azumi.AZUMI_K55QL_AC15,
      Azumi.AZUMI_K5QL,
      Azumi.AZUMI_M5_P,
      Azumi.AZUMI_M5PLUS,
      Azumi.AZUMI_M5S,
      Azumi.AZUMI_SPEED_5B,
      Azumi.AZUMI_V4_AC04,
      Azumi.AZUMI_V4_AC23,
      Azumi.AZUMI_V54_AC04,
      Azumi.AZUMI_V55_AC04,
      Azumi.AZUMI_V5_AC01,
      Azumi.AZUMI_V5_AC01,
      Azumi.AZUMI_V5_AC04,
      Azumi.AZUMI_V5_AC25,
      Azumi.AZUMI_V5PLUS_AC24,
      Azumi.AZUMI_V5PLUS_AC25,
      Azumi.AZUMI_V5PLUS_AC27,
      Azumi.AZUMI_V60,
      Azumi.AZUMI_V60F,
      Azumi.IRO_A4_Q,
      Azumi.IRO_A55_Q,
      Azumi.IRO_A5_Q,
      Azumi.IRO_A5_Q_AF,
      Azumi.IRO_A5_QL,
      Azumi.KIREI_A45_D,
      Azumi.NOBU_A55,
      Azumi.NOBU_A55_PRO
  )

  /**
   * Get all device specifications for b-box devices.
   * Useful for b-box testing.
   */
  public fun getBBoxDevices(): List<String> = listOf(
      BBox.HP44H
  )

  /**
   * Get all device specifications for Babal devices.
   * Useful for babal testing.
   */
  public fun getBabalDevices(): List<String> = listOf(
      Babal.BABAL_1008
  )

  /**
   * Get all device specifications for BAKEN devices.
   * Useful for baken testing.
   */
  public fun getBakenDevices(): List<String> = listOf(
      Baken.M10_A03
  )

  /**
   * Get all device specifications for BALMUDA devices.
   * Useful for balmuda testing.
   */
  public fun getBalmudaDevices(): List<String> = listOf(
      Balmuda.A101BM,
      Balmuda.X01A
  )

  /**
   * Get all device specifications for BANANA devices.
   * Useful for banana testing.
   */
  public fun getBananaDevices(): List<String> = listOf(
      Banana.STANFORD,
      Banana.ZHONGSHAN
  )

  /**
   * Get all device specifications for BARTEC devices.
   * Useful for bartec testing.
   */
  public fun getBartecDevices(): List<String> = listOf(
      Bartec.PIXAVIPHONE,
      Bartec.SP9EX1
  )

  /**
   * Get all device specifications for BASICS devices.
   * Useful for basics testing.
   */
  public fun getBasicsDevices(): List<String> = listOf(
      Basics.BT1124FW
  )

  /**
   * Get all device specifications for BATMAN devices.
   * Useful for batman testing.
   */
  public fun getBatmanDevices(): List<String> = listOf(
      Batman.TM_MID1065BT
  )

  /**
   * Get all device specifications for BAUF devices.
   * Useful for bauf testing.
   */
  public fun getBaufDevices(): List<String> = listOf(
      Bauf.STANFORD,
      Bauf.ZHONGSHAN
  )

  /**
   * Get all device specifications for BAUHN devices.
   * Useful for bauhn testing.
   */
  public fun getBauhnDevices(): List<String> = listOf(
      Bauhn.ATAB10_1224,
      Bauhn.ATAB7_0125,
      Bauhn.BANGBAE,
      Bauhn.GANGBYEON,
      Bauhn.KOMAGOME,
      Bauhn.LONGSHAN,
      Bauhn.REDWOOD
  )

  /**
   * Get all device specifications for BAYKUS devices.
   * Useful for baykus testing.
   */
  public fun getBaykusDevices(): List<String> = listOf(
      Baykus.BKM10
  )

  /**
   * Get all device specifications for bbox devices.
   * Useful for bbox testing.
   */
  public fun getBboxDevices(): List<String> = listOf(
      Bbox.BBOX_M752A
  )

  /**
   * Get all device specifications for BDQ devices.
   * Useful for bdq testing.
   */
  public fun getBdqDevices(): List<String> = listOf(
      Bdq.DESTINY,
      Bdq.DESTINY_4G,
      Bdq.SMART_CAMON
  )

  /**
   * Get all device specifications for Bea-fon devices.
   * Useful for bea-fon testing.
   */
  public fun getBeaFonDevices(): List<String> = listOf(
      BeaFon.MX1
  )

  /**
   * Get all device specifications for Beafon devices.
   * Useful for beafon testing.
   */
  public fun getBeafonDevices(): List<String> = listOf(
      Beafon.M5,
      Beafon.M6S,
      Beafon.M7,
      Beafon.M7_LITE,
      Beafon.TL20,
      Beafon.TW10_EEA,
      Beafon.TW20_EEA
  )

  /**
   * Get all device specifications for BEC devices.
   * Useful for bec testing.
   */
  public fun getBecDevices(): List<String> = listOf(
      Bec.LONGSHAN
  )

  /**
   * Get all device specifications for Beeline devices.
   * Useful for beeline testing.
   */
  public fun getBeelineDevices(): List<String> = listOf(
      Beeline.BEELINE_PRO_6,
      Beeline.SWG2001A,
      Beeline.Z701
  )

  /**
   * Get all device specifications for Beghelli devices.
   * Useful for beghelli testing.
   */
  public fun getBeghelliDevices(): List<String> = listOf(
      Beghelli.SLV_SMARTPHONE_55
  )

  /**
   * Get all device specifications for BEISTA devices.
   * Useful for beista testing.
   */
  public fun getBeistaDevices(): List<String> = listOf(
      Beista.K105,
      Beista.T30_EEA,
      Beista.X101,
      Beista.X104,
      Beista.X104_EEA,
      Beista.X80_EEA
  )

  /**
   * Get all device specifications for BEKO devices.
   * Useful for beko testing.
   */
  public fun getBekoDevices(): List<String> = listOf(
      Beko.AKROPOLI,
      Beko.KUNYANG,
      Beko.MARTIN,
      Beko.R4,
      Beko.SHINAGAWA,
      Beko.SINCHON,
      Beko.WANCHAI
  )

  /**
   * Get all device specifications for BeLeno devices.
   * Useful for beleno testing.
   */
  public fun getBelenoDevices(): List<String> = listOf(
      Beleno.BELENO_NEOD_8,
      Beleno.BELENO_TURBO_101
  )

  /**
   * Get all device specifications for bell devices.
   * Useful for bell testing.
   */
  public fun getBellDevices(): List<String> = listOf(
      Bell.STI6130D324
  )

  /**
   * Get all device specifications for Bell_Canada devices.
   * Useful for bell_canada testing.
   */
  public fun getBellCanadaDevices(): List<String> = listOf(
      BellCanada.VIP7802_BELL
  )

  /**
   * Get all device specifications for benco devices.
   * Useful for benco testing.
   */
  public fun getBencoDevices(): List<String> = listOf(
      Benco.AE9010,
      Benco.AE9110,
      Benco.AE9120,
      Benco.AE9150,
      Benco.AE9230,
      Benco.AE9240,
      Benco.AE9250,
      Benco.AE9260,
      Benco.AE9310,
      Benco.AE9950,
      Benco.AEOP513,
      Benco.AEOP517,
      Benco.AEOP519,
      Benco.AEOP520,
      Benco.AEOP523,
      Benco.AEOP525,
      Benco.AEOP526,
      Benco.AF9010_F,
      Benco.AF9020,
      Benco.AF9030,
      Benco.AH9110,
      Benco.AH9210,
      Benco.AH9910,
      Benco.M1000,
      Benco.M700
  )

  /**
   * Get all device specifications for BENEVE devices.
   * Useful for beneve testing.
   */
  public fun getBeneveDevices(): List<String> = listOf(
      Beneve.M1036,
      Beneve.M1038_EEA,
      Beneve.M51S,
      Beneve.M51S_EEA,
      Beneve.M53,
      Beneve.M53_EEA,
      Beneve.M55_EEA,
      Beneve.M7152,
      Beneve.M7152D1,
      Beneve.M7152D1_EEA,
      Beneve.M7152P_EEA
  )

  /**
   * Get all device specifications for BenQ devices.
   * Useful for benq testing.
   */
  public fun getBenqDevices(): List<String> = listOf(
      Benq.HIMALAYA,
      Benq.IKEBUKURO,
      Benq.LAOSHAN,
      Benq.LONGSHAN,
      Benq.RE04_SERIES,
      Benq.RE04N_SERIES,
      Benq.REDWOOD,
      Benq.RM6504,
      Benq.RM7504,
      Benq.RM8604,
      Benq.RP6504,
      Benq.RP7504,
      Benq.RP8604,
      Benq.S905Y2,
      Benq.SAMSEONG,
      Benq.YUL
  )

  /**
   * Get all device specifications for Benten devices.
   * Useful for benten testing.
   */
  public fun getBentenDevices(): List<String> = listOf(
      Benten.BENTEN_T10,
      Benten.BENTEN_T20,
      Benten.BENTEN_T30,
      Benten.T8
  )

  /**
   * Get all device specifications for BENTLEY devices.
   * Useful for bentley testing.
   */
  public fun getBentleyDevices(): List<String> = listOf(
      Bentley.SDIS1
  )

  /**
   * Get all device specifications for benzo devices.
   * Useful for benzo testing.
   */
  public fun getBenzoDevices(): List<String> = listOf(
      Benzo.CLASS_C250
  )

  /**
   * Get all device specifications for BERGSTROM devices.
   * Useful for bergstrom testing.
   */
  public fun getBergstromDevices(): List<String> = listOf(
      Bergstrom._666770,
      Bergstrom.H634_BLK,
      Bergstrom.P187
  )

  /**
   * Get all device specifications for bestbuy devices.
   * Useful for bestbuy testing.
   */
  public fun getBestbuyDevices(): List<String> = listOf(
      Bestbuy.NS_14T002
  )

  /**
   * Get all device specifications for Bestreha devices.
   * Useful for bestreha testing.
   */
  public fun getBestrehaDevices(): List<String> = listOf(
      Bestreha.BRN01
  )

  /**
   * Get all device specifications for BESTTAB devices.
   * Useful for besttab testing.
   */
  public fun getBesttabDevices(): List<String> = listOf(
      Besttab.A10,
      Besttab.A20
  )

  /**
   * Get all device specifications for Beyond_PTE devices.
   * Useful for beyond_pte testing.
   */
  public fun getBeyondPteDevices(): List<String> = listOf(
      BeyondPte.MAX4
  )

  /**
   * Get all device specifications for Bfelix devices.
   * Useful for bfelix testing.
   */
  public fun getBfelixDevices(): List<String> = listOf(
      Bfelix.BF1001_KIDS
  )

  /**
   * Get all device specifications for BGH devices.
   * Useful for bgh testing.
   */
  public fun getBghDevices(): List<String> = listOf(
      Bgh.BGH_JOY_303,
      Bgh.HAMAMATSUCHO,
      Bgh.KENTON,
      Bgh.LASALLE,
      Bgh.N918ST,
      Bgh.P635A20,
      Bgh.SUNNYVALE,
      Bgh.XIAOYUSHAN,
      Bgh.ZTE_BLADE_A475,
      Bgh.ZTE_BLADE_V580
  )

  /**
   * Get all device specifications for BH devices.
   * Useful for bh testing.
   */
  public fun getBhDevices(): List<String> = listOf(
      Bh.STB_B866V2H
  )

  /**
   * Get all device specifications for Bic_Camera devices.
   * Useful for bic_camera testing.
   */
  public fun getBicCameraDevices(): List<String> = listOf(
      BicCamera.SI01BB
  )

  /**
   * Get all device specifications for Biegedy devices.
   * Useful for biegedy testing.
   */
  public fun getBiegedyDevices(): List<String> = listOf(
      Biegedy.B21_EEA,
      Biegedy.B22_EEA,
      Biegedy.B22_US,
      Biegedy.B23_U_EEA,
      Biegedy.B29_EEA,
      Biegedy.B29_US
  )

  /**
   * Get all device specifications for Bigme devices.
   * Useful for bigme testing.
   */
  public fun getBigmeDevices(): List<String> = listOf(
      Bigme.SMARTPHONE
  )

  /**
   * Get all device specifications for Bigtech devices.
   * Useful for bigtech testing.
   */
  public fun getBigtechDevices(): List<String> = listOf(
      Bigtech.BIGTECH_A_RU,
      Bigtech.BIGTECH_B_RU
  )

  /**
   * Get all device specifications for BilimBook devices.
   * Useful for bilimbook testing.
   */
  public fun getBilimbookDevices(): List<String> = listOf(
      Bilimbook.BILIMBOOK_MINI
  )

  /**
   * Get all device specifications for Billion devices.
   * Useful for billion testing.
   */
  public fun getBillionDevices(): List<String> = listOf(
      Billion.RIMOB
  )

  /**
   * Get all device specifications for Billow devices.
   * Useful for billow testing.
   */
  public fun getBillowDevices(): List<String> = listOf(
      Billow.X101PRO,
      Billow.X103PRO
  )

  /**
   * Get all device specifications for Binge devices.
   * Useful for binge testing.
   */
  public fun getBingeDevices(): List<String> = listOf(
      Binge.BINGESTICK
  )

  /**
   * Get all device specifications for biolux devices.
   * Useful for biolux testing.
   */
  public fun getBioluxDevices(): List<String> = listOf(
      Biolux.LONGSHAN,
      Biolux.REDWOOD
  )

  /**
   * Get all device specifications for BIORUGGED devices.
   * Useful for biorugged testing.
   */
  public fun getBioruggedDevices(): List<String> = listOf(
      Biorugged.BIOWOLF8F30,
      Biorugged.BIOWOLF_C
  )

  /**
   * Get all device specifications for BIOSfone devices.
   * Useful for biosfone testing.
   */
  public fun getBiosfoneDevices(): List<String> = listOf(
      Biosfone.T11
  )

  /**
   * Get all device specifications for Bita-International devices.
   * Useful for bita-international testing.
   */
  public fun getBitaInternationalDevices(): List<String> = listOf(
      BitaInternational.MC66
  )

  /**
   * Get all device specifications for Bitel devices.
   * Useful for bitel testing.
   */
  public fun getBitelDevices(): List<String> = listOf(
      Bitel.B8416,
      Bitel.B8506,
      Bitel.B9504,
      Bitel.BPRO
  )

  /**
   * Get all device specifications for Bitmore devices.
   * Useful for bitmore testing.
   */
  public fun getBitmoreDevices(): List<String> = listOf(
      Bitmore.MOBITAB10_S3_32GB,
      Bitmore.TAB10_PLUS_32GB
  )

  /**
   * Get all device specifications for Bittium devices.
   * Useful for bittium testing.
   */
  public fun getBittiumDevices(): List<String> = listOf(
      Bittium.CRATON
  )

  /**
   * Get all device specifications for Bizringer devices.
   * Useful for bizringer testing.
   */
  public fun getBizringerDevices(): List<String> = listOf(
      Bizringer._8BIZ18
  )

  /**
   * Get all device specifications for Blabloo devices.
   * Useful for blabloo testing.
   */
  public fun getBlablooDevices(): List<String> = listOf(
      Blabloo.SPACE1BLUE
  )

  /**
   * Get all device specifications for BLACK_FOX devices.
   * Useful for black_fox testing.
   */
  public fun getBlackFoxDevices(): List<String> = listOf(
      BlackFox.BMM431B,
      BlackFox.BMM431S,
      BlackFox.BMM441A,
      BlackFox.BMM441S,
      BlackFox.BMM531D,
      BlackFox.BMM531S,
      BlackFox.BMM532D,
      BlackFox.BMM541W,
      BlackFox.BMM543S
  )

  /**
   * Get all device specifications for BLACK_SHARK devices.
   * Useful for black_shark testing.
   */
  public fun getBlackSharkDevices(): List<String> = listOf(
      BlackShark.PAD6
  )

  /**
   * Get all device specifications for BLACKANDDECKER devices.
   * Useful for blackanddecker testing.
   */
  public fun getBlackanddeckerDevices(): List<String> = listOf(
      Blackanddecker.R10G
  )

  /**
   * Get all device specifications for blackberry devices.
   * Useful for blackberry testing.
   */
  public fun getBlackberryDevices(): List<String> = listOf(
      Blackberry.ARGON,
      Blackberry.BBB100,
      Blackberry.BBC100,
      Blackberry.BBD100,
      Blackberry.BBE100,
      Blackberry.BBF100,
      Blackberry.BBG100,
      Blackberry.BBH100,
      Blackberry.HAMBURG,
      Blackberry.VENICE
  )

  /**
   * Get all device specifications for Blackfox devices.
   * Useful for blackfox testing.
   */
  public fun getBlackfoxDevices(): List<String> = listOf(
      Blackfox.BMM441B,
      Blackfox.BMM531A
  )

  /**
   * Get all device specifications for BLACKLINE devices.
   * Useful for blackline testing.
   */
  public fun getBlacklineDevices(): List<String> = listOf(
      Blackline.R10G,
      Blackline.R3,
      Blackline.R3_GTV,
      Blackline.R4,
      Blackline.R4_GTV
  )

  /**
   * Get all device specifications for blackshark devices.
   * Useful for blackshark testing.
   */
  public fun getBlacksharkDevices(): List<String> = listOf(
      Blackshark.BULLHEAD,
      Blackshark.DARKLIGHTER,
      Blackshark.KAISER,
      Blackshark.KAISER_OS,
      Blackshark.KLEIN,
      Blackshark.MOBIUS,
      Blackshark.PENROSE,
      Blackshark.SHARK,
      Blackshark.SKYWALKER
  )

  /**
   * Get all device specifications for Blackview devices.
   * Useful for blackview testing.
   */
  public fun getBlackviewDevices(): List<String> = listOf(
      Blackview.A10,
      Blackview.A100,
      Blackview.A20,
      Blackview.A200PRO,
      Blackview.A20PRO,
      Blackview.A30,
      Blackview.A50,
      Blackview.A52,
      Blackview.A52PRO,
      Blackview.A53,
      Blackview.A53_PRO,
      Blackview.A55,
      Blackview.A55_PRO,
      Blackview.A60,
      Blackview.A60_2G,
      Blackview.A60PLUS,
      Blackview.A60PRO,
      Blackview.A7,
      Blackview.A70,
      Blackview.A70_PRO,
      Blackview.A7PRO,
      Blackview.A80,
      Blackview.A80PLUS,
      Blackview.A80PRO,
      Blackview.A80S,
      Blackview.A85,
      Blackview.A90,
      Blackview.A95,
      Blackview.A96,
      Blackview.A9_PRO,
      Blackview.ACTIVE6,
      Blackview.ACTIVE6_EEA,
      Blackview.ACTIVE6_RU,
      Blackview.ACTIVE8,
      Blackview.ACTIVE8PRO,
      Blackview.ACTIVE_10_PRO,
      Blackview.BL5000,
      Blackview.BL6000PRO,
      Blackview.BL8000,
      Blackview.BL8800,
      Blackview.BL8800PRO,
      Blackview.BL9000,
      Blackview.BL9000_PRO,
      Blackview.BLACKVIEW,
      Blackview.BV4000,
      Blackview.BV4000PRO,
      Blackview.BV4800,
      Blackview.BV4800_SE,
      Blackview.BV4800PRO,
      Blackview.BV4900,
      Blackview.BV4900PRO,
      Blackview.BV4900S,
      Blackview.BV5100,
      Blackview.BV5100PRO,
      Blackview.BV5200,
      Blackview.BV5200_PRO,
      Blackview.BV5300,
      Blackview.BV5300_PLUS,
      Blackview.BV5300_PRO,
      Blackview.BV5500,
      Blackview.BV5500PLUS,
      Blackview.BV5500PRO,
      Blackview.BV5500S,
      Blackview.BV5800,
      Blackview.BV5800_PRO,
      Blackview.BV5800_RU,
      Blackview.BV5800PRO_RU,
      Blackview.BV5900,
      Blackview.BV6000_RU,
      Blackview.BV6000S,
      Blackview.BV6000S_RU,
      Blackview.BV6100,
      Blackview.BV6200,
      Blackview.BV6200_PLUS,
      Blackview.BV6200_PRO_14,
      Blackview.BV6200PRO,
      Blackview.BV6300,
      Blackview.BV6300PRO,
      Blackview.BV6600,
      Blackview.BV6600E,
      Blackview.BV6600PRO,
      Blackview.BV6800PRO,
      Blackview.BV6800PRO_RU,
      Blackview.BV6900,
      Blackview.BV7000,
      Blackview.BV7000_PRO,
      Blackview.BV7100,
      Blackview.BV7200,
      Blackview.BV7300,
      Blackview.BV8000PRO,
      Blackview.BV8000PRO_RU,
      Blackview.BV8100,
      Blackview.BV8200,
      Blackview.BV8800,
      Blackview.BV8900,
      Blackview.BV8900_PRO,
      Blackview.BV9000,
      Blackview.BV9000_F,
      Blackview.BV9000_RU,
      Blackview.BV9000PRO,
      Blackview.BV9000PRO_F,
      Blackview.BV9000PRO_RU,
      Blackview.BV9100,
      Blackview.BV9200,
      Blackview.BV9300,
      Blackview.BV9300_PRO,
      Blackview.BV9500,
      Blackview.BV9500_RU,
      Blackview.BV9500PLUS,
      Blackview.BV9500PRO,
      Blackview.BV9600,
      Blackview.BV9600E,
      Blackview.BV9700PRO,
      Blackview.BV9800,
      Blackview.BV9800PRO,
      Blackview.BV9900,
      Blackview.BV9900E,
      Blackview.BV9900PRO,
      Blackview.COLOR_8,
      Blackview.E7S,
      Blackview.HERO10,
      Blackview.MAX1,
      Blackview.MEGA_1,
      Blackview.MEGA_2,
      Blackview.MEGA_8,
      Blackview.N6000,
      Blackview.N6000_SE,
      Blackview.P10000_PRO,
      Blackview.P2LITE,
      Blackview.P6000,
      Blackview.PAD8_EEA,
      Blackview.PAD8_ROW,
      Blackview.S6,
      Blackview.S8,
      Blackview.SHARK8,
      Blackview.SHARK_9,
      Blackview.TAB10WIFI,
      Blackview.TAB11_EA,
      Blackview.TAB11_EEA,
      Blackview.TAB11_NEU,
      Blackview.TAB11_ROW,
      Blackview.TAB11_RU,
      Blackview.TAB11SE_EEA,
      Blackview.TAB11SE_NEU,
      Blackview.TAB11SE_RU,
      Blackview.TAB11WIFI_EEA,
      Blackview.TAB11WIFI_NEU,
      Blackview.TAB12_EEA,
      Blackview.TAB12_NEU,
      Blackview.TAB12PRO_EEA,
      Blackview.TAB12PRO_NEU,
      Blackview.TAB13_PRO,
      Blackview.TAB13PRO_NEU,
      Blackview.TAB15PRO_EEA,
      Blackview.TAB15PRO_NEU,
      Blackview.TAB16_EEA,
      Blackview.TAB16_NEU,
      Blackview.TAB16_PRO,
      Blackview.TAB16_RU,
      Blackview.TAB18,
      Blackview.TAB3KIDS,
      Blackview.TAB50KIDS,
      Blackview.TAB50WIFI,
      Blackview.TAB5EEA,
      Blackview.TAB5NEU,
      Blackview.TAB60,
      Blackview.TAB60KIDS,
      Blackview.TAB60KIDS_EEA,
      Blackview.TAB60KIDS_RU,
      Blackview.TAB6_EEA,
      Blackview.TAB6_NEU,
      Blackview.TAB6KIDS_EEA,
      Blackview.TAB6KIDS_RU,
      Blackview.TAB6S_EEA,
      Blackview.TAB6S_NEU,
      Blackview.TAB70WIFI,
      Blackview.TAB7PRO_EEA,
      Blackview.TAB7PRO_NEU,
      Blackview.TAB8,
      Blackview.TAB80,
      Blackview.TAB80_EEA,
      Blackview.TAB80_RU,
      Blackview.TAB8_EEA,
      Blackview.TAB8_NEU,
      Blackview.TAB8_ROW,
      Blackview.TAB8_RU,
      Blackview.TAB8_WIFI_EEA,
      Blackview.TAB8_WIFI_ROW,
      Blackview.TAB9_NEU,
      Blackview.TAB9_RU,
      Blackview.TAB_10,
      Blackview.TAB_10_PRO,
      Blackview.TAB_13,
      Blackview.TAB_15_EU,
      Blackview.TAB_15_NEU,
      Blackview.TAB_15_RU,
      Blackview.TAB_30_KIDS,
      Blackview.TAB_30_WIFI,
      Blackview.TAB_60_PRO,
      Blackview.TAB_60_PRO_K,
      Blackview.TAB_60_WIFI,
      Blackview.TAB_70_WIFI_14,
      Blackview.TAB_7_EEA,
      Blackview.TAB_7_NEU,
      Blackview.TAB_7_WIFI_EEA,
      Blackview.TAB_7_WIFI_NEU,
      Blackview.TAB_80_KIDS,
      Blackview.TAB_90,
      Blackview.TAB_90_WIFI,
      Blackview.TAB_9_WIFI,
      Blackview.TAB_A5_KIDS,
      Blackview.TAB_A6_KIDS,
      Blackview.WAVE6C,
      Blackview.WAVE_8,
      Blackview.WAVE_8C
  )

  /**
   * Get all device specifications for BLAUPUNKT devices.
   * Useful for blaupunkt testing.
   */
  public fun getBlaupunktDevices(): List<String> = listOf(
      Blaupunkt.BANGBAE,
      Blaupunkt.BLAUPUNKT_SF02,
      Blaupunkt.BLAUPUNKT_SL_04,
      Blaupunkt.BLAUPUNKT_SM_01,
      Blaupunkt.BLAUPUNKT_SM_02,
      Blaupunkt.BLAUPUNKT_SM_05,
      Blaupunkt.BLAUPUNKT_TX60,
      Blaupunkt.BP_6108,
      Blaupunkt.BP_6110,
      Blaupunkt.BP_T6108X,
      Blaupunkt.BP_T6110X,
      Blaupunkt.BRUNO,
      Blaupunkt.CAPITOLHILL,
      Blaupunkt.EWHA,
      Blaupunkt.EXPO,
      Blaupunkt.GMP,
      Blaupunkt.GUANDU,
      Blaupunkt.GUARDIAN,
      Blaupunkt.HANYANG,
      Blaupunkt.HONGKONG,
      Blaupunkt.ICN,
      Blaupunkt.IKEBUKURO,
      Blaupunkt.JFK,
      Blaupunkt.KAITAK,
      Blaupunkt.KEONEAE,
      Blaupunkt.KOMAGOME,
      Blaupunkt.LAVENDER,
      Blaupunkt.LONGSHAN,
      Blaupunkt.MARINA,
      Blaupunkt.MARTIN,
      Blaupunkt.MOUNTBAKER,
      Blaupunkt.NIPPORI,
      Blaupunkt.OT16,
      Blaupunkt.OT19,
      Blaupunkt.REDWOOD,
      Blaupunkt.SAMSEONG,
      Blaupunkt.SF04_4G_EEA,
      Blaupunkt.SHILIN,
      Blaupunkt.SHINJUKU,
      Blaupunkt.SINDANG,
      Blaupunkt.SL05,
      Blaupunkt.SM_02_2019,
      Blaupunkt.STANFORD,
      Blaupunkt.TAMACHI,
      Blaupunkt.TENNOJI,
      Blaupunkt.TX01,
      Blaupunkt.YEONGDEUNGPO,
      Blaupunkt.ZHONGSHAN
  )

  /**
   * Get all device specifications for BLECK devices.
   * Useful for bleck testing.
   */
  public fun getBleckDevices(): List<String> = listOf(
      Bleck.BE_DG,
      Bleck.BE_ET,
      Bleck.BE_O2,
      Bleck.BE_SE,
      Bleck.BE_XL
  )

  /**
   * Get all device specifications for BLESSX devices.
   * Useful for blessx testing.
   */
  public fun getBlessxDevices(): List<String> = listOf(
      Blessx.T4SMODELX
  )

  /**
   * Get all device specifications for BLOW devices.
   * Useful for blow testing.
   */
  public fun getBlowDevices(): List<String> = listOf(
      Blow.BLACKTAB7,
      Blow.BLACKTAB7_3G_V2,
      Blow.BLACKTAB8_4G,
      Blow.GPSTAB7_4G,
      Blow.KIDSTAB10_4G_EEA,
      Blow.KIDSTAB7_EEA,
      Blow.LASERTAB10,
      Blow.PLATINUMTAB10,
      Blow.PLATINUMTAB10_4G_V1,
      Blow.PLATINUMTAB10_4G_V2,
      Blow.PLATINUMTAB10_4G_V3,
      Blow.PLATINUMTAB10V11,
      Blow.PLATINUMTAB10V22,
      Blow.PLATINUMTAB11_4G,
      Blow.PLATINUMTAB8_4G
  )

  /**
   * Get all device specifications for BLU devices.
   * Useful for blu testing.
   */
  public fun getBluDevices(): List<String> = listOf(
      Blu.A0050LL,
      Blu.A230Q,
      Blu.A290Q,
      Blu.A30,
      Blu.A350,
      Blu.A350A,
      Blu.A390,
      Blu.A390T,
      Blu.ADVANCE_4_0_L3,
      Blu.ADVANCE_5_0_HD,
      Blu.B100DL,
      Blu.B110DL,
      Blu.B130DL,
      Blu.B140DL,
      Blu.B160V,
      Blu.B170D,
      Blu.B301,
      Blu.BLU_ADVANCE_4_0_L2,
      Blu.BLU_DASH_L2,
      Blu.BLU_DASH_M2,
      Blu.BLU_DASH_X,
      Blu.BLU_DASH_X2,
      Blu.BLU_DIAMOND_M,
      Blu.BLU_ENERGY_DIAMOND,
      Blu.BLU_ENERGY_X_2,
      Blu.BLU_ENERGY_X_PLUS_2,
      Blu.BLU_ENERGY_XL,
      Blu.BLU_GRAND_5_5_HD,
      Blu.BLU_GRAND_X_LTE,
      Blu.BLU_LIFE_XL,
      Blu.BLU_PURE_XL,
      Blu.BLU_PURE_XR,
      Blu.BLU_R1_HD,
      Blu.BLU_STUDIO_C_HD,
      Blu.BLU_STUDIO_ENERGY_2,
      Blu.BLU_STUDIO_G,
      Blu.BLU_STUDIO_G2,
      Blu.BLU_STUDIO_M_HD,
      Blu.BLU_STUDIO_ONE,
      Blu.BLU_STUDIO_SELFIE_2,
      Blu.BLU_STUDIO_TOUCH,
      Blu.BLU_VIVO_5,
      Blu.BLU_VIVO_5R,
      Blu.BLU_VIVO_6,
      Blu.BLU_VIVO_XL,
      Blu.BLU_VIVO_XL2,
      Blu.C0010LL,
      Blu.C0010TT,
      Blu.C0010UU,
      Blu.C0030,
      Blu.C0040TT,
      Blu.C0050,
      Blu.C0051LL,
      Blu.C0070WW,
      Blu.C0090WW,
      Blu.C0100TT,
      Blu.C0101TT,
      Blu.C0101WW,
      Blu.C010Q,
      Blu.C0130UU,
      Blu.C014,
      Blu.C0140TT,
      Blu.C0141TT,
      Blu.C0150WW,
      Blu.C0151WW,
      Blu.C0161WW,
      Blu.C0162WW,
      Blu.C0170WW,
      Blu.C0173WW,
      Blu.C0175,
      Blu.C0176,
      Blu.C017U,
      Blu.C0190,
      Blu.C0200,
      Blu.C0210,
      Blu.C0220,
      Blu.C0230,
      Blu.C0270,
      Blu.C031P,
      Blu.C050,
      Blu.C090EQ,
      Blu.C090P,
      Blu.C110,
      Blu.C111,
      Blu.C130EQ,
      Blu.C210,
      Blu.C230EQ,
      Blu.C250EQ,
      Blu.C270EQ,
      Blu.C290EQ,
      Blu.D0070WW,
      Blu.D10,
      Blu.D600,
      Blu.D701,
      Blu.DASH_G,
      Blu.DASH_X2,
      Blu.DASH_XL,
      Blu.E0010,
      Blu.E20,
      Blu.ENERGY_DIAMOND_MINI,
      Blu.F0030UU,
      Blu.F0090,
      Blu.G0030,
      Blu.G0050,
      Blu.G0070WW,
      Blu.G0090,
      Blu.G0130WW,
      Blu.G0130WW_SR,
      Blu.G0151WW,
      Blu.G0170,
      Blu.G0190,
      Blu.G0210,
      Blu.G0230WW,
      Blu.G0231WW,
      Blu.G0250WW,
      Blu.G0251WW,
      Blu.G0270WW,
      Blu.G0290WW,
      Blu.G0310WW,
      Blu.G0330WW,
      Blu.G0350WW,
      Blu.G0370WW,
      Blu.G0390WW,
      Blu.G0410WW,
      Blu.G0430WW,
      Blu.G0450WW,
      Blu.G0490WW,
      Blu.G0510WW,
      Blu.G0512WW,
      Blu.G0530WW,
      Blu.G0550WW,
      Blu.G0570WW,
      Blu.G0581WW,
      Blu.G0590WW,
      Blu.G0591WW,
      Blu.G0630WW,
      Blu.G0670WW,
      Blu.G0690WW,
      Blu.G0710WW,
      Blu.G0730WW,
      Blu.G0770,
      Blu.G0771,
      Blu.G0790UU,
      Blu.G0820WW,
      Blu.G0830WW,
      Blu.G0840,
      Blu.G0850,
      Blu.G0850_IW,
      Blu.G0850_TIGO,
      Blu.G0851,
      Blu.G0860,
      Blu.G0870,
      Blu.G0890,
      Blu.G0892,
      Blu.G0894,
      Blu.G0910,
      Blu.G0930,
      Blu.G0950,
      Blu.G0970,
      Blu.G0971,
      Blu.G0990,
      Blu.G1010,
      Blu.G1030,
      Blu.G1050,
      Blu.G1070,
      Blu.G1110,
      Blu.G170Q,
      Blu.G190,
      Blu.G210Q,
      Blu.GRAND_ENERGY,
      Blu.GRAND_M,
      Blu.GRAND_MAX,
      Blu.GRAND_X,
      Blu.GRAND_XL,
      Blu.J0000LL_ATT_MX,
      Blu.J0080WW,
      Blu.J0082WW,
      Blu.J0090WW,
      Blu.J0092WW,
      Blu.J0100,
      Blu.J0110,
      Blu.J0140,
      Blu.J0150,
      Blu.J0170,
      Blu.J0230,
      Blu.J210EQ,
      Blu.K0010,
      Blu.K0110,
      Blu.K0130,
      Blu.K0150,
      Blu.K0170,
      Blu.K10,
      Blu.K101,
      Blu.K10_PRO,
      Blu.L0150WW,
      Blu.LIFE_MAX,
      Blu.LIFE_ONE_X2,
      Blu.LIFE_ONE_X2_MINI,
      Blu.M0030TT,
      Blu.M0050LL,
      Blu.M0080WW,
      Blu.M0100WW,
      Blu.M0160WW,
      Blu.M0170WW,
      Blu.M0171WW,
      Blu.M0172WW,
      Blu.M0173WW,
      Blu.M0174WW,
      Blu.M0174WW_ND,
      Blu.M0176,
      Blu.M0176_EX,
      Blu.M0176_ND,
      Blu.M0178_ND,
      Blu.M0208WW,
      Blu.M0209WW,
      Blu.M0210WW,
      Blu.M0212WW_ND,
      Blu.M0213_ND,
      Blu.M0214_ND,
      Blu.M0215,
      Blu.M0215_ND,
      Blu.M0220WW,
      Blu.M0220WW_ND,
      Blu.M0222,
      Blu.M0222_EX,
      Blu.M0222_IMT,
      Blu.M0223_ND,
      Blu.M0224,
      Blu.M030P,
      Blu.N0030WW,
      Blu.N0050UU,
      Blu.N0070,
      Blu.P0050WW,
      Blu.P290,
      Blu.R010P,
      Blu.R0150EE,
      Blu.R0170WW,
      Blu.R0190WW,
      Blu.R1_HD,
      Blu.R1_PLUS,
      Blu.S011EQ,
      Blu.S0320WW,
      Blu.S0450WW,
      Blu.S0480LL,
      Blu.S050EQ,
      Blu.S0570WW,
      Blu.S0590LL,
      Blu.S0610WW,
      Blu.S0630WW,
      Blu.S0690WW,
      Blu.S0730WW,
      Blu.S532,
      Blu.S750,
      Blu.S770P,
      Blu.S790Q,
      Blu.S810,
      Blu.S812P,
      Blu.S870Q,
      Blu.S910Q,
      Blu.S950P,
      Blu.S970EQ,
      Blu.S990EQ,
      Blu.STUDIO_G2_HD,
      Blu.STUDIO_G_HD_LTE,
      Blu.STUDIO_J1,
      Blu.STUDIO_J2,
      Blu.STUDIO_J5,
      Blu.STUDIO_J8,
      Blu.STUDIO_J8_LTE,
      Blu.STUDIO_MEGA,
      Blu.STUDIO_XL_2,
      Blu.T0030WW,
      Blu.T0040TT,
      Blu.T0050TT,
      Blu.T0060TT,
      Blu.T0070TT_TIGO,
      Blu.T0080TT,
      Blu.T0090TT,
      Blu.T0120TT,
      Blu.T0130TT,
      Blu.TANK_XTREME_5_0,
      Blu.V0150LL,
      Blu.V0150UU,
      Blu.V0160WW,
      Blu.V0190UU,
      Blu.V0210WW,
      Blu.V0230WW,
      Blu.V0250WW,
      Blu.V0270WW,
      Blu.V0290WW,
      Blu.V0310WW,
      Blu.V0330WW,
      Blu.V0350WW,
      Blu.V0370WW,
      Blu.V0390WW,
      Blu.VIVO_5_MINI,
      Blu.X0010WW,
      Blu.X0020
  )

  /**
   * Get all device specifications for BLUBOO devices.
   * Useful for bluboo testing.
   */
  public fun getBlubooDevices(): List<String> = listOf(
      Bluboo.S1A,
      Bluboo.S3
  )

  /**
   * Get all device specifications for BLUE devices.
   * Useful for blue testing.
   */
  public fun getBlueDevices(): List<String> = listOf(
      Blue.IKEBUKURO
  )

  /**
   * Get all device specifications for Bluebird devices.
   * Useful for bluebird testing.
   */
  public fun getBluebirdDevices(): List<String> = listOf(
      Bluebird.BM180,
      Bluebird.CF550,
      Bluebird.EF400,
      Bluebird.EF401,
      Bluebird.EF500,
      Bluebird.EF501,
      Bluebird.EF550,
      Bluebird.EF550R,
      Bluebird.EF551,
      Bluebird.HF550,
      Bluebird.RP350,
      Bluebird.RT080,
      Bluebird.RT103,
      Bluebird.S20,
      Bluebird.SF550,
      Bluebird.SF650,
      Bluebird.ST103,
      Bluebird.VF550,
      Bluebird.VX500
  )

  /**
   * Get all device specifications for BLUEDIGIT devices.
   * Useful for bluedigit testing.
   */
  public fun getBluedigitDevices(): List<String> = listOf(
      Bluedigit.RAVOZ_R4,
      Bluedigit.RAVOZ_R7,
      Bluedigit.RAVOZ_R8,
      Bluedigit.RAVOZ_R9
  )

  /**
   * Get all device specifications for BLUEDOT devices.
   * Useful for bluedot testing.
   */
  public fun getBluedotDevices(): List<String> = listOf(
      Bluedot.BNT_1013,
      Bluedot.BNT_802,
      Bluedot.BNT_1012W,
      Bluedot.BNT_801W
  )

  /**
   * Get all device specifications for BLUEWORLD devices.
   * Useful for blueworld testing.
   */
  public fun getBlueworldDevices(): List<String> = listOf(
      Blueworld.TM12
  )

  /**
   * Get all device specifications for Bluslate devices.
   * Useful for bluslate testing.
   */
  public fun getBluslateDevices(): List<String> = listOf(
      Bluslate.BLUSLATE8
  )

  /**
   * Get all device specifications for BMAX devices.
   * Useful for bmax testing.
   */
  public fun getBmaxDevices(): List<String> = listOf(
      Bmax.BMAX_I9,
      Bmax.I10,
      Bmax.I10_EEA,
      Bmax.I10_LTE,
      Bmax.I10_PLUS,
      Bmax.I10_PLUS_EEA,
      Bmax.I10_PLUS_LTE,
      Bmax.I10_PLUS_WLAN,
      Bmax.I10_PRO_EEA,
      Bmax.I10_PRO_LTE,
      Bmax.I10_PRO_LTE_EEA,
      Bmax.I10_PRO_ROW,
      Bmax.I10_S_PRO,
      Bmax.I10PRO_LTE,
      Bmax.I10PRO_LTE_EEA,
      Bmax.I11,
      Bmax.I11_EEA,
      Bmax.I11_LTE,
      Bmax.I11_PLUS,
      Bmax.I11_PLUS_EEA,
      Bmax.I11_PLUS_LTE,
      Bmax.I11_PLUS_LTE_EEA,
      Bmax.I11_POWER,
      Bmax.I11_POWER_LTE,
      Bmax.I11_S,
      Bmax.I8,
      Bmax.I8_PLUS,
      Bmax.I9_PLUS_EEA,
      Bmax.I9_PLUS_ROW,
      Bmax.I9_PLUS_WIFI_EEA,
      Bmax.I9_PLUS_WIFI_ROW,
      Bmax.I9_PLUS_WIFIONLY,
      Bmax.I9_PLUS_WLAN,
      Bmax.I9_PLUS_WLAN_EEA,
      Bmax.I9_PLUS_WLANONLY,
      Bmax.I9_PLUS_WLANONLY_EEA
  )

  /**
   * Get all device specifications for Bmobile devices.
   * Useful for bmobile testing.
   */
  public fun getBmobileDevices(): List<String> = listOf(
      Bmobile.AX1073PLUSMV18,
      Bmobile.B55,
      Bmobile.B60PRO_MV03,
      Bmobile.BMOBILE_AX1016,
      Bmobile.BMOBILE_AX1017_MV12,
      Bmobile.BMOBILE_AX1017_TG05,
      Bmobile.BMOBILE_AX1035,
      Bmobile.BMOBILE_AX1065E,
      Bmobile.BMOBILE_AX1070,
      Bmobile.BMOBILE_AX1073,
      Bmobile.BMOBILE_AX1073PLUS,
      Bmobile.BMOBILE_AX1073PLUSW,
      Bmobile.BMOBILE_AX1074,
      Bmobile.BMOBILE_AX1075,
      Bmobile.BMOBILE_AX1076P_MV03,
      Bmobile.BMOBILE_AX1076P_MV05,
      Bmobile.BMOBILE_AX1076P_MV12,
      Bmobile.BMOBILE_AX1077,
      Bmobile.BMOBILE_AX1077_MAS,
      Bmobile.BMOBILE_AX1077_MTG05,
      Bmobile.BMOBILE_AX1077_MTG06,
      Bmobile.BMOBILE_AX1077_MTG07,
      Bmobile.BMOBILE_AX1078_OM,
      Bmobile.BMOBILE_AX1078_TG05,
      Bmobile.BMOBILE_AX1078_TG06,
      Bmobile.BMOBILE_AX1078_TG07,
      Bmobile.BMOBILE_AX1078_TG07B,
      Bmobile.BMOBILE_AX1082,
      Bmobile.BMOBILE_AX1082_MV15,
      Bmobile.BMOBILE_AX680,
      Bmobile.BMOBILE_AX681,
      Bmobile.BMOBILE_AX683,
      Bmobile.BMOBILE_AX685,
      Bmobile.BMOBILE_AX687,
      Bmobile.BMOBILE_AX687_MV03,
      Bmobile.BMOBILE_AX688,
      Bmobile.BMOBILE_AX715,
      Bmobile.BMOBILE_AX751,
      Bmobile.BMOBILE_AX751_PLUS,
      Bmobile.BMOBILE_AX754,
      Bmobile.BMOBILE_AX754PLUS,
      Bmobile.BMOBILE_AX820,
      Bmobile.BMOBILE_AX821,
      Bmobile.BMOBILE_AX823,
      Bmobile.BMOBILE_AX824_MV03,
      Bmobile.BMOBILE_AX824A,
      Bmobile.BMOBILE_AX824PLUS_MV03,
      Bmobile.BMOBILE_AX824PLUS_MV15,
      Bmobile.BMOBILE_AX825,
      Bmobile.BMOBILE_AX830,
      Bmobile.BMOBILE_AX905,
      Bmobile.BMOBILE_AX920,
      Bmobile.BMOBILE_AX921,
      Bmobile.BMOBILE_AX951,
      Bmobile.BMOBILE_AX960_MV03,
      Bmobile.BMOBILE_AX960_MV15,
      Bmobile.BMOBILE_B50,
      Bmobile.BMOBILE_B50_1,
      Bmobile.BMOBILE_B50PRO,
      Bmobile.BMOBILE_B50PRO_MV03,
      Bmobile.BMOBILE_B50PROSS,
      Bmobile.BMOBILE_B60PRO,
      Bmobile.BMOBILE_B60PRO_MV03SP,
      Bmobile.BMOBILE_B70PRO,
      Bmobile.BMOBILE_B70PRO_MV03,
      Bmobile.BMOBILE_BL40_MV12,
      Bmobile.BMOBILE_BL50,
      Bmobile.BMOBILE_BL50_TG06,
      Bmobile.BMOBILE_BL50_TG07,
      Bmobile.BMOBILE_BL50_TG09,
      Bmobile.BMOBILE_BL50P_TG05,
      Bmobile.BMOBILE_BL50P_TG06,
      Bmobile.BMOBILE_BL50P_TG07,
      Bmobile.BMOBILE_BL51_MV05,
      Bmobile.BMOBILE_BL52,
      Bmobile.BMOBILE_BL52PRO,
      Bmobile.BMOBILE_BL53_TG05,
      Bmobile.BMOBILE_BL53_TG06,
      Bmobile.BMOBILE_BL53_TG07,
      Bmobile.BMOBILE_BL54_PRO_TG05,
      Bmobile.BMOBILE_BL54PRO,
      Bmobile.BMOBILE_BL55,
      Bmobile.BMOBILE_BL55_TG06,
      Bmobile.BMOBILE_BL60_TG05,
      Bmobile.BMOBILE_BL60_TG17,
      Bmobile.BMOBILE_BL60M_MV05,
      Bmobile.BMOBILE_BL61_MV05,
      Bmobile.BMOBILE_BL62,
      Bmobile.BMOBILE_BL62I,
      Bmobile.BMOBILE_BL63,
      Bmobile.BMOBILE_BL63PRO,
      Bmobile.BMOBILE_BL65_OM,
      Bmobile.BMOBILE_BL65_TG,
      Bmobile.BMOBILE_BL65PLUS_TG07,
      Bmobile.BMOBILE_BM65_PRO,
      Bmobile.BMOBILE_BM65PLUS,
      Bmobile.BMOBILE_BM65PRO_TG05,
      Bmobile.BMOBILE_COSMO_B6_TG,
      Bmobile.BMOBILE_NOVUS65_TG06,
      Bmobile.BMOBILE_NOVUS65_TG07,
      Bmobile.BMOBILE_NOVUS_65,
      Bmobile.BMOBILE_NOVUS_65_MV03,
      Bmobile.BMOBILE_T70,
      Bmobile.BMOBILE_ULTRA,
      Bmobile.BMOBILE_ULTRA_S_MV03,
      Bmobile.ULTRA_S
  )

  /**
   * Get all device specifications for BMPRO devices.
   * Useful for bmpro testing.
   */
  public fun getBmproDevices(): List<String> = listOf(
      Bmpro.BMPRO7DI
  )

  /**
   * Get all device specifications for BMXC devices.
   * Useful for bmxc testing.
   */
  public fun getBmxcDevices(): List<String> = listOf(
      Bmxc.BM108,
      Bmxc.JR_M802,
      Bmxc.K107,
      Bmxc.K107_EEA,
      Bmxc.M107,
      Bmxc.M863,
      Bmxc.M863_EEA
  )

  /**
   * Get all device specifications for BNCF devices.
   * Useful for bncf testing.
   */
  public fun getBncfDevices(): List<String> = listOf(
      Bncf.BPAD,
      Bncf.BPAD_10_4G
  )

  /**
   * Get all device specifications for BNO devices.
   * Useful for bno testing.
   */
  public fun getBnoDevices(): List<String> = listOf(
      Bno.BNO_MT5593UPLUS_EU
  )

  /**
   * Get all device specifications for BOLVA devices.
   * Useful for bolva testing.
   */
  public fun getBolvaDevices(): List<String> = listOf(
      Bolva.B_TAB1021
  )

  /**
   * Get all device specifications for BOREAL devices.
   * Useful for boreal testing.
   */
  public fun getBorealDevices(): List<String> = listOf(
      Boreal.R1,
      Boreal.R2
  )

  /**
   * Get all device specifications for BOTECH devices.
   * Useful for botech testing.
   */
  public fun getBotechDevices(): List<String> = listOf(
      Botech.HND,
      Botech.R1,
      Botech.R2,
      Botech.STANFORD,
      Botech.ZHONGSHAN
  )

  /**
   * Get all device specifications for BOTHO_University devices.
   * Useful for botho_university testing.
   */
  public fun getBothoUniversityDevices(): List<String> = listOf(
      BothoUniversity.GLTAB101
  )

  /**
   * Get all device specifications for BouyguesTelecom devices.
   * Useful for bouyguestelecom testing.
   */
  public fun getBouyguestelecomDevices(): List<String> = listOf(
      Bouyguestelecom.HMB4213H,
      Bouyguestelecom.HMB9213NW,
      Bouyguestelecom.UZW4020BYT
  )

  /**
   * Get all device specifications for BOXY devices.
   * Useful for boxy testing.
   */
  public fun getBoxyDevices(): List<String> = listOf(
      Boxy.YYC
  )

  /**
   * Get all device specifications for Bphone devices.
   * Useful for bphone testing.
   */
  public fun getBphoneDevices(): List<String> = listOf(
      Bphone.B2017,
      Bphone.BPHONE_A85_5G,
      Bphone.BPHONE_A_SERIES,
      Bphone.BPHONE_B86
  )

  /**
   * Get all device specifications for BPL devices.
   * Useful for bpl testing.
   */
  public fun getBplDevices(): List<String> = listOf(
      Bpl.IKEBUKURO,
      Bpl.OD0M_EA_T32,
      Bpl.R4_GTV,
      Bpl.REDWOOD,
      Bpl.SAMSEONG,
      Bpl.TAKAO,
      Bpl.TCL_EU
  )

  /**
   * Get all device specifications for bq devices.
   * Useful for bq testing.
   */
  public fun getBqDevices(): List<String> = listOf(
      Bq.AQUARIS_A45_SPROUT,
      Bq.AQUARIS_E10,
      Bq.AQUARIS_E10_3G,
      Bq.AQUARIS_E4,
      Bq.AQUARIS_E45,
      Bq.AQUARIS_E5,
      Bq.AQUARIS_E5_HD,
      Bq.AQUARIS_M10,
      Bq.AQUARIS_M10_FHD,
      Bq.AQUARIS_M45,
      Bq.AQUARIS_M5,
      Bq.AQUARIS_M55,
      Bq.AQUARIS_M8,
      Bq.AQUARIS_X5,
      Bq.AQUARIS_X5_PLUS,
      Bq.BARDOCK,
      Bq.BARDOCK_PRO,
      Bq.BQ_6051G,
      Bq.CHAOZU,
      Bq.CHAOZULITE,
      Bq.EDISON_3,
      Bq.EDISON_3_3G,
      Bq.EDISON_3_MINI,
      Bq.FREEZERLTE,
      Bq.JEICE,
      Bq.NAPPA,
      Bq.NAPPA_S,
      Bq.RADITZ,
      Bq.RADITZ_S,
      Bq.TENSHI,
      Bq.YAMCHA,
      Bq.YAMCHALITE,
      Bq.ZANGYA_SPROUT,
      Bq.ZANGYAPRO_SPROUT
  )

  /**
   * Get all device specifications for BQmobile devices.
   * Useful for bqmobile testing.
   */
  public fun getBqmobileDevices(): List<String> = listOf(
      Bqmobile.BQ6761,
      Bqmobile.BQ6861L
  )

  /**
   * Get all device specifications for BQru devices.
   * Useful for bqru testing.
   */
  public fun getBqruDevices(): List<String> = listOf(
      Bqru.BQ_1025L,
      Bqru.BQ_5046L,
      Bqru.BQ_7055L,
      Bqru.BQ_1036L,
      Bqru.BQ_8088L,
      Bqru.BQRU,
      Bqru.BQRU_1020L,
      Bqru.BQRU_1022L,
      Bqru.BQRU_1024L,
      Bqru.BQRU_1025L,
      Bqru.BQRU_1045,
      Bqru.BQRU_1045G_2019,
      Bqru.BQRU_1045G_A11,
      Bqru.BQRU_1077L,
      Bqru.BQRU_1077L_2019,
      Bqru.BQRU_1081G,
      Bqru.BQRU_1081G_2019,
      Bqru.BQRU_1082G,
      Bqru.BQRU_1082G_2019,
      Bqru.BQRU_1082G_2020,
      Bqru.BQRU_1083G,
      Bqru.BQRU_1083G_2019,
      Bqru.BQRU_1083G_2020,
      Bqru.BQRU_1084L,
      Bqru.BQRU_1085L,
      Bqru.BQRU_1085L_2020,
      Bqru.BQRU_4028,
      Bqru.BQRU_4030G,
      Bqru.BQRU_4500,
      Bqru.BQRU_4501G,
      Bqru.BQRU_4583,
      Bqru.BQRU_5000G,
      Bqru.BQRU_5002G,
      Bqru.BQRU_5007L,
      Bqru.BQRU_5010G,
      Bqru.BQRU_5011G,
      Bqru.BQRU_5016G,
      Bqru.BQRU_5031G,
      Bqru.BQRU_5035,
      Bqru.BQRU_5037,
      Bqru.BQRU_5044,
      Bqru.BQRU_5045L,
      Bqru.BQRU_5047L,
      Bqru.BQRU_5056,
      Bqru.BQRU_5058,
      Bqru.BQRU_5060,
      Bqru.BQRU_5060L,
      Bqru.BQRU_5060L_9832E,
      Bqru.BQRU_5201,
      Bqru.BQRU_5202,
      Bqru.BQRU_5203,
      Bqru.BQRU_5204,
      Bqru.BQRU_5206L,
      Bqru.BQRU_5211,
      Bqru.BQRU_5300G,
      Bqru.BQRU_5302G,
      Bqru.BQRU_5340,
      Bqru.BQRU_5500L,
      Bqru.BQRU_5508L,
      Bqru.BQRU_5512L,
      Bqru.BQRU_5514G,
      Bqru.BQRU_5514L,
      Bqru.BQRU_5515L,
      Bqru.BQRU_5516L,
      Bqru.BQRU_5517L,
      Bqru.BQRU_5518G,
      Bqru.BQRU_5519G,
      Bqru.BQRU_5519L,
      Bqru.BQRU_5520L,
      Bqru.BQRU_5522,
      Bqru.BQRU_5528L,
      Bqru.BQRU_5530L,
      Bqru.BQRU_5533G,
      Bqru.BQRU_5535L,
      Bqru.BQRU_5540L,
      Bqru.BQRU_5541L,
      Bqru.BQRU_5560L,
      Bqru.BQRU_5565L,
      Bqru.BQRU_5591,
      Bqru.BQRU_5700L,
      Bqru.BQRU_5701L,
      Bqru.BQRU_5707G,
      Bqru.BQRU_5730L,
      Bqru.BQRU_5731L,
      Bqru.BQRU_5732L,
      Bqru.BQRU_5740G,
      Bqru.BQRU_5740G_7731,
      Bqru.BQRU_5745L,
      Bqru.BQRU_5765L,
      Bqru.BQRU_6000L,
      Bqru.BQRU_6001L,
      Bqru.BQRU_6015L,
      Bqru.BQRU_6016L,
      Bqru.BQRU_6022G,
      Bqru.BQRU_6030G,
      Bqru.BQRU_6030G_7731,
      Bqru.BQRU_6035L,
      Bqru.BQRU_6040L,
      Bqru.BQRU_6042L,
      Bqru.BQRU_6045L,
      Bqru.BQRU_6061L,
      Bqru.BQRU_6065L,
      Bqru.BQRU_6200L,
      Bqru.BQRU_6353L,
      Bqru.BQRU_6424L,
      Bqru.BQRU_6630L,
      Bqru.BQRU_6631G,
      Bqru.BQRU_6631G_A11,
      Bqru.BQRU_6645L,
      Bqru.BQRU_6868L,
      Bqru.BQRU_7000G,
      Bqru.BQRU_7000G_2020,
      Bqru.BQRU_7036L,
      Bqru.BQRU_7038G,
      Bqru.BQRU_7040G,
      Bqru.BQRU_7040G_2020,
      Bqru.BQRU_7081,
      Bqru.BQRU_7082,
      Bqru.BQRU_7082G_2019,
      Bqru.BQRU_7082G_2020,
      Bqru.BQRU_7083,
      Bqru.BQRU_7083G_PLUS,
      Bqru.BQRU_7098G,
      Bqru.BQRU_7098G_2020,
      Bqru.BQRU_8068L,
      Bqru.BQRU_8068L_A11,
      Bqru.BQRU_8077L,
      Bqru.BQRU_9055L,
      Bqru.BQRU_1056L,
      Bqru.BQRU_4072,
      Bqru.BQRU_5003L,
      Bqru.BQRU_5005L,
      Bqru.BQRU_5009L,
      Bqru.BQRU_5012L,
      Bqru.BQRU_5033,
      Bqru.BQRU_5057,
      Bqru.BQRU_5059,
      Bqru.BQRU_5504,
      Bqru.BQRU_5510,
      Bqru.BQRU_5521L,
      Bqru.BQRU_5594,
      Bqru.BQRU_5702,
      Bqru.BQRU_6010G,
      Bqru.BQRU_6022G,
      Bqru.BQRU_6430L
  )

  /**
   * Get all device specifications for BrailleNote devices.
   * Useful for braillenote testing.
   */
  public fun getBraillenoteDevices(): List<String> = listOf(
      Braillenote.GRYPHON
  )

  /**
   * Get all device specifications for brand devices.
   * Useful for brand testing.
   */
  public fun getBrandDevices(): List<String> = listOf(
      Brand.DEVICE
  )

  /**
   * Get all device specifications for BRANDO devices.
   * Useful for brando testing.
   */
  public fun getBrandoDevices(): List<String> = listOf(
      Brando.REDWOOD
  )

  /**
   * Get all device specifications for Brandt devices.
   * Useful for brandt testing.
   */
  public fun getBrandtDevices(): List<String> = listOf(
      Brandt.B_ONE,
      Brandt.BPRIME,
      Brandt.BPRIMES,
      Brandt.BSTAR,
      Brandt.BSTAR_PLUS,
      Brandt.OD0M_EA_T32,
      Brandt.R3,
      Brandt.R3_GTV,
      Brandt.R4,
      Brandt.R4_GTV,
      Brandt.TAKAO,
      Brandt.VILEPARLE
  )

  /**
   * Get all device specifications for Brava devices.
   * Useful for brava testing.
   */
  public fun getBravaDevices(): List<String> = listOf(
      Brava.DU_600
  )

  /**
   * Get all device specifications for Brave devices.
   * Useful for brave testing.
   */
  public fun getBraveDevices(): List<String> = listOf(
      Brave.BT7X1,
      Brave.BT8X1,
      Brave.BTSL1,
      Brave.BTXS1,
      Brave.EXCEED,
      Brave.T2LITE,
      Brave.T2MAX,
      Brave.T2PRO
  )

  /**
   * Get all device specifications for BraveTechs devices.
   * Useful for bravetechs testing.
   */
  public fun getBravetechsDevices(): List<String> = listOf(
      Bravetechs.T3_PRO
  )

  /**
   * Get all device specifications for BRAVIS devices.
   * Useful for bravis testing.
   */
  public fun getBravisDevices(): List<String> = listOf(
      Bravis.A511_HARMONY,
      Bravis.A512_HARMONY_PRO,
      Bravis.BRAVIS_A506,
      Bravis.BRAVIS_X500,
      Bravis.IKEBUKURO,
      Bravis.N1_570_SPACE,
      Bravis.N1_550_CRUISER,
      Bravis.NB108,
      Bravis.NB753,
      Bravis.NB76,
      Bravis.NB851,
      Bravis.NB871,
      Bravis.SAMSEONG
  )

  /**
   * Get all device specifications for Bridgestone_Mobility_Solutions devices.
   * Useful for bridgestone_mobility_solutions testing.
   */
  public fun getBridgestoneMobilitySolutionsDevices(): List<String> = listOf(
      BridgestoneMobilitySolutions.POSEIDON
  )

  /**
   * Get all device specifications for Brighton devices.
   * Useful for brighton testing.
   */
  public fun getBrightonDevices(): List<String> = listOf(
      Brighton.MAL_FWTVTB
  )

  /**
   * Get all device specifications for Brightside devices.
   * Useful for brightside testing.
   */
  public fun getBrightsideDevices(): List<String> = listOf(
      Brightside.BS701,
      Brightside.KS_T01
  )

  /**
   * Get all device specifications for Brigmton devices.
   * Useful for brigmton testing.
   */
  public fun getBrigmtonDevices(): List<String> = listOf(
      Brigmton.BTPC_1023OC4G,
      Brigmton.BTPC_1025OC
  )

  /**
   * Get all device specifications for Briotouch devices.
   * Useful for briotouch testing.
   */
  public fun getBriotouchDevices(): List<String> = listOf(
      Briotouch.ULTRA_PLUS_BR
  )

  /**
   * Get all device specifications for Brisanet devices.
   * Useful for brisanet testing.
   */
  public fun getBrisanetDevices(): List<String> = listOf(
      Brisanet.IMTM4000RA
  )

  /**
   * Get all device specifications for Britania devices.
   * Useful for britania testing.
   */
  public fun getBritaniaDevices(): List<String> = listOf(
      Britania.SUNNYVALE,
      Britania.SW6H
  )

  /**
   * Get all device specifications for BRONDI devices.
   * Useful for brondi testing.
   */
  public fun getBrondiDevices(): List<String> = listOf(
      Brondi._850_4G,
      Brondi.AMICO_SMARTPHONE_POCKET,
      Brondi.AMICO_SMARTPHONE_XL,
      Brondi.AMICO_VERO_4G,
      Brondi.MIDNIGHT_SKY_EEA
  )

  /**
   * Get all device specifications for BROOKSTONE devices.
   * Useful for brookstone testing.
   */
  public fun getBrookstoneDevices(): List<String> = listOf(
      Brookstone.R1
  )

  /**
   * Get all device specifications for brown devices.
   * Useful for brown testing.
   */
  public fun getBrownDevices(): List<String> = listOf(
      Brown.BROWN_TAB1
  )

  /**
   * Get all device specifications for BRUHM devices.
   * Useful for bruhm testing.
   */
  public fun getBruhmDevices(): List<String> = listOf(
      Bruhm.SAMSEONG
  )

  /**
   * Get all device specifications for BTC devices.
   * Useful for btc testing.
   */
  public fun getBtcDevices(): List<String> = listOf(
      Btc.S5548
  )

  /**
   * Get all device specifications for Bubblegum devices.
   * Useful for bubblegum testing.
   */
  public fun getBubblegumDevices(): List<String> = listOf(
      Bubblegum.BUB6R_3T,
      Bubblegum.JUNIOR_7
  )

  /**
   * Get all device specifications for BUDDY_PHONE devices.
   * Useful for buddy_phone testing.
   */
  public fun getBuddyPhoneDevices(): List<String> = listOf(
      BuddyPhone.BP,
      BuddyPhone.P2
  )

  /**
   * Get all device specifications for BUFF devices.
   * Useful for buff testing.
   */
  public fun getBuffDevices(): List<String> = listOf(
      Buff.X_9_LTEVII_PRO
  )

  /**
   * Get all device specifications for BULSATCOM devices.
   * Useful for bulsatcom testing.
   */
  public fun getBulsatcomDevices(): List<String> = listOf(
      Bulsatcom.IMTM741,
      Bulsatcom.UPD_BJ00R
  )

  /**
   * Get all device specifications for Bundy devices.
   * Useful for bundy testing.
   */
  public fun getBundyDevices(): List<String> = listOf(
      Bundy.BTOUCH7_PLUS
  )

  /**
   * Get all device specifications for bush devices.
   * Useful for bush testing.
   */
  public fun getBushDevices(): List<String> = listOf(
      Bush.AC101BOXV2,
      Bush.AC101BOXV3,
      Bush.AC80OXV2,
      Bush.BUSH10NOU,
      Bush.EWHA,
      Bush.SINDANG
  )

  /**
   * Get all device specifications for BVS devices.
   * Useful for bvs testing.
   */
  public fun getBvsDevices(): List<String> = listOf(
      Bvs.SFO
  )

  /**
   * Get all device specifications for BWJBSW devices.
   * Useful for bwjbsw testing.
   */
  public fun getBwjbswDevices(): List<String> = listOf(
      Bwjbsw.KT802_US
  )

  /**
   * Get all device specifications for BYJUS devices.
   * Useful for byjus testing.
   */
  public fun getByjusDevices(): List<String> = listOf(
      Byjus.LRN10,
      Byjus.LRNS10GIL0
  )

  /**
   * Get all device specifications for Byybuo devices.
   * Useful for byybuo testing.
   */
  public fun getByybuoDevices(): List<String> = listOf(
      Byybuo.A10_EU,
      Byybuo.A10_L,
      Byybuo.BYYBUO_SMARTPAD_A10,
      Byybuo.BYYBUO_SMARTPAD_T10,
      Byybuo.SMARTPAD_A10_EU,
      Byybuo.SMARTPAD_A10_L,
      Byybuo.SMARTPAD_A70W,
      Byybuo.SMARTPAD_A70W_EU,
      Byybuo.SMARTPAD_K7,
      Byybuo.SMARTPAD_K7_EU,
      Byybuo.SMARTPAD_T10_EU,
      Byybuo.SMARTPAD_T20
  )

  /**
   * Get all device specifications for C5_Mobile devices.
   * Useful for c5_mobile testing.
   */
  public fun getC5MobileDevices(): List<String> = listOf(
      C5Mobile.NOA_X2_PLUS
  )

  /**
   * Get all device specifications for Cablecolor devices.
   * Useful for cablecolor testing.
   */
  public fun getCablecolorDevices(): List<String> = listOf(
      Cablecolor.GIU3A00
  )

  /**
   * Get all device specifications for Caixun devices.
   * Useful for caixun testing.
   */
  public fun getCaixunDevices(): List<String> = listOf(
      Caixun.COTTONGREEN,
      Caixun.MARINA,
      Caixun.MARTIN,
      Caixun.NAGATA,
      Caixun.PATRICK,
      Caixun.TAMACHI,
      Caixun.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for Callsky devices.
   * Useful for callsky testing.
   */
  public fun getCallskyDevices(): List<String> = listOf(
      Callsky.CPAD10
  )

  /**
   * Get all device specifications for Caltta devices.
   * Useful for caltta testing.
   */
  public fun getCalttaDevices(): List<String> = listOf(
      Caltta.E720
  )

  /**
   * Get all device specifications for CALUS devices.
   * Useful for calus testing.
   */
  public fun getCalusDevices(): List<String> = listOf(
      Calus.NOTE_16_PRO
  )

  /**
   * Get all device specifications for Camfone devices.
   * Useful for camfone testing.
   */
  public fun getCamfoneDevices(): List<String> = listOf(
      Camfone.HERO_13,
      Camfone.HONEY_Y2S
  )

  /**
   * Get all device specifications for Canal devices.
   * Useful for canal testing.
   */
  public fun getCanalDevices(): List<String> = listOf(
      Canal.CANAL_SAT_BCM
  )

  /**
   * Get all device specifications for CANAL-PLUS devices.
   * Useful for canal-plus testing.
   */
  public fun getCanalPlusDevices(): List<String> = listOf(
      CanalPlus.HY40A2
  )

  /**
   * Get all device specifications for CanalDigital devices.
   * Useful for canaldigital testing.
   */
  public fun getCanaldigitalDevices(): List<String> = listOf(
      Canaldigital.ONEPLACE2
  )

  /**
   * Get all device specifications for Candi devices.
   * Useful for candi testing.
   */
  public fun getCandiDevices(): List<String> = listOf(
      Candi.BLAZE
  )

  /**
   * Get all device specifications for CANDY devices.
   * Useful for candy testing.
   */
  public fun getCandyDevices(): List<String> = listOf(
      Candy.BROADWAY,
      Candy.DUPONT,
      Candy.HANYANG,
      Candy.JORDAN,
      Candy.MATEO,
      Candy.NIPPORI,
      Candy.PIONEER
  )

  /**
   * Get all device specifications for CAPTIVA devices.
   * Useful for captiva testing.
   */
  public fun getCaptivaDevices(): List<String> = listOf(
      Captiva.PAD_10_2_IN_1,
      Captiva.PAD_10_3G_PLUS
  )

  /**
   * Get all device specifications for CarbonMobile devices.
   * Useful for carbonmobile testing.
   */
  public fun getCarbonmobileDevices(): List<String> = listOf(
      Carbonmobile.C1M2BD_R2
  )

  /**
   * Get all device specifications for carp devices.
   * Useful for carp testing.
   */
  public fun getCarpDevices(): List<String> = listOf(
      Carp.KENTON,
      Carp.LASALLE
  )

  /**
   * Get all device specifications for Carrefour devices.
   * Useful for carrefour testing.
   */
  public fun getCarrefourDevices(): List<String> = listOf(
      Carrefour.CT1056_32GB,
      Carrefour.CT1085_32GB
  )

  /**
   * Get all device specifications for carrozzeria devices.
   * Useful for carrozzeria testing.
   */
  public fun getCarrozzeriaDevices(): List<String> = listOf(
      Carrozzeria.SDA_700TAB
  )

  /**
   * Get all device specifications for casio devices.
   * Useful for casio testing.
   */
  public fun getCasioDevices(): List<String> = listOf(
      Casio.AYU,
      Casio.DTX400,
      Casio.DTX450,
      Casio.ET_L10,
      Casio.ITG400,
      Casio.ITG600,
      Casio.ITG650,
      Casio.KINGYO,
      Casio.KOI,
      Casio.MEDAKA,
      Casio.TAI
  )

  /**
   * Get all device specifications for Casper devices.
   * Useful for casper testing.
   */
  public fun getCasperDevices(): List<String> = listOf(
      Casper.BARKING,
      Casper.BBL7551TC,
      Casper.BEAUDRY,
      Casper.CASPER_L10_4_5G,
      Casper.CASPER_S38,
      Casper.CASPER_VIA_A2,
      Casper.CASPER_VIA_G1,
      Casper.CASPER_VIA_G1_PLUS,
      Casper.CASPER_VIA_M3,
      Casper.ELLINIKO,
      Casper.L20,
      Casper.R1,
      Casper.R2,
      Casper.R3,
      Casper.R3_GTV,
      Casper.R4,
      Casper.S20,
      Casper.SUNNYVALE,
      Casper.SW6H,
      Casper.VIA_T7D,
      Casper.VIA_A1,
      Casper.VIA_A1_1,
      Casper.VIA_A3,
      Casper.VIA_A3_PLUS,
      Casper.VIA_A4,
      Casper.VIA_A40,
      Casper.VIA_E3,
      Casper.VIA_E30,
      Casper.VIA_E4,
      Casper.VIA_F1,
      Casper.VIA_F20,
      Casper.VIA_F3,
      Casper.VIA_F30,
      Casper.VIA_F30_PLUS,
      Casper.VIA_G3,
      Casper.VIA_G5,
      Casper.VIA_L30,
      Casper.VIA_L30_0,
      Casper.VIA_L40,
      Casper.VIA_L50,
      Casper.VIA_M30,
      Casper.VIA_M30_PLUS,
      Casper.VIA_M35,
      Casper.VIA_M4,
      Casper.VIA_M40,
      Casper.VIA_P2,
      Casper.VIA_P3,
      Casper.VIA_S,
      Casper.VIA_S10,
      Casper.VIA_S30,
      Casper.VIA_S30_0,
      Casper.VIA_S40,
      Casper.VIA_S48,
      Casper.VIA_S48_0,
      Casper.VIA_S50,
      Casper.VIA_X20,
      Casper.VIA_X30,
      Casper.VIA_X30_PLUS,
      Casper.VIA_X40,
      Casper.VIA_X45
  )

  /**
   * Get all device specifications for Cat devices.
   * Useful for cat testing.
   */
  public fun getCatDevices(): List<String> = listOf(
      Cat.BM1S1B,
      Cat.CATB15Q,
      Cat.CATS30,
      Cat.CATS31,
      Cat.CATS40,
      Cat.CATS41,
      Cat.CATS48C,
      Cat.CATS50,
      Cat.CATS52,
      Cat.CATS60,
      Cat.CATS61,
      Cat.S22FLIP,
      Cat.S42,
      Cat.S42G,
      Cat.S62,
      Cat.S62PRO,
      Cat.TOUGH
  )

  /**
   * Get all device specifications for CATCHTABLE devices.
   * Useful for catchtable testing.
   */
  public fun getCatchtableDevices(): List<String> = listOf(
      Catchtable.AZ101FC,
      Catchtable.AZ101FCN
  )

  /**
   * Get all device specifications for Cavion devices.
   * Useful for cavion testing.
   */
  public fun getCavionDevices(): List<String> = listOf(
      Cavion.BASE10_3G_SILVER,
      Cavion.CAVION_BASE_5_0,
      Cavion.M1092Q
  )

  /**
   * Get all device specifications for Caxilysh devices.
   * Useful for caxilysh testing.
   */
  public fun getCaxilyshDevices(): List<String> = listOf(
      Caxilysh.A10
  )

  /**
   * Get all device specifications for ccc devices.
   * Useful for ccc testing.
   */
  public fun getCccDevices(): List<String> = listOf(
      Ccc.TS302
  )

  /**
   * Get all device specifications for CECOTEC devices.
   * Useful for cecotec testing.
   */
  public fun getCecotecDevices(): List<String> = listOf(
      Cecotec.R3,
      Cecotec.R3_GTV,
      Cecotec.R4,
      Cecotec.R4_GTV
  )

  /**
   * Get all device specifications for Cedar devices.
   * Useful for cedar testing.
   */
  public fun getCedarDevices(): List<String> = listOf(
      Cedar.CT8X2,
      Cedar.CT8XEU
  )

  /**
   * Get all device specifications for Ceibal devices.
   * Useful for ceibal testing.
   */
  public fun getCeibalDevices(): List<String> = listOf(
      Ceibal.A102,
      Ceibal.ACRUX,
      Ceibal.ALFARD,
      Ceibal.BETELGEUSE,
      Ceibal.CEIBAL_HFP_LT,
      Ceibal.KIL_82WFDC,
      Ceibal.TC80RA1_3,
      Ceibal.TC80RA6_1,
      Ceibal.U800B
  )

  /**
   * Get all device specifications for Celero5G devices.
   * Useful for celero5g testing.
   */
  public fun getCelero5gDevices(): List<String> = listOf(
      Celero5g.JUPITER
  )

  /**
   * Get all device specifications for Cellacom devices.
   * Useful for cellacom testing.
   */
  public fun getCellacomDevices(): List<String> = listOf(
      Cellacom.CELLACOM_S62
  )

  /**
   * Get all device specifications for CellAllure devices.
   * Useful for cellallure testing.
   */
  public fun getCellallureDevices(): List<String> = listOf(
      Cellallure.BIENESTAR_SMART,
      Cellallure.EARN,
      Cellallure.FASHION_C,
      Cellallure.MIRACLE_Y
  )

  /**
   * Get all device specifications for Cellcomtv devices.
   * Useful for cellcomtv testing.
   */
  public fun getCellcomtvDevices(): List<String> = listOf(
      Cellcomtv.SEI800CC,
      Cellcomtv.TAI
  )

  /**
   * Get all device specifications for Cellecor devices.
   * Useful for cellecor testing.
   */
  public fun getCellecorDevices(): List<String> = listOf(
      Cellecor.S2,
      Cellecor.S3PRO
  )

  /**
   * Get all device specifications for CELLO devices.
   * Useful for cello testing.
   */
  public fun getCelloDevices(): List<String> = listOf(
      Cello.SADANG,
      Cello.T1045PC,
      Cello.T1045PN,
      Cello.TABATA,
      Cello.UENO
  )

  /**
   * Get all device specifications for Cellution devices.
   * Useful for cellution testing.
   */
  public fun getCellutionDevices(): List<String> = listOf(
      Cellution.COSMAS,
      Cellution.COSMAS_T,
      Cellution.COSMAS_TF,
      Cellution.COSMAS_X,
      Cellution.CT_COSMAS_V,
      Cellution.IRIS,
      Cellution.PADUA,
      Cellution.PADUA_1
  )

  /**
   * Get all device specifications for Centric devices.
   * Useful for centric testing.
   */
  public fun getCentricDevices(): List<String> = listOf(
      Centric.CENTRIC_L4
  )

  /**
   * Get all device specifications for CEPTER devices.
   * Useful for cepter testing.
   */
  public fun getCepterDevices(): List<String> = listOf(
      Cepter.BURBANK,
      Cepter.CEPTER_TAB_10L,
      Cepter.CEPTER_TAB_10S,
      Cepter.CEPTERTAB101,
      Cepter.CEPTERTAB1095,
      Cepter.CEPTERTAB10E,
      Cepter.CEPTERTABP12,
      Cepter.CTABERA101,
      Cepter.CTABEVOP12,
      Cepter.CTABNEXUS,
      Cepter.CTABTERRA128,
      Cepter.CTABTERRA256,
      Cepter.CTABTITAN12,
      Cepter.LAKESIDE,
      Cepter.NAGAI
  )

  /**
   * Get all device specifications for CG devices.
   * Useful for cg testing.
   */
  public fun getCgDevices(): List<String> = listOf(
      Cg.R1,
      Cg.R2,
      Cg.R3,
      Cg.R3_GTV,
      Cg.R4
  )

  /**
   * Get all device specifications for CHAINWAY devices.
   * Useful for chainway testing.
   */
  public fun getChainwayDevices(): List<String> = listOf(
      Chainway.C6000,
      Chainway.C61P,
      Chainway.C66,
      Chainway.C71,
      Chainway.C72,
      Chainway.C90,
      Chainway.MC50,
      Chainway.MC62,
      Chainway.MC95,
      Chainway.P80,
      Chainway.P80_PRO
  )

  /**
   * Get all device specifications for CHALLENGER devices.
   * Useful for challenger testing.
   */
  public fun getChallengerDevices(): List<String> = listOf(
      Challenger.BARKING,
      Challenger.ELLINIKO,
      Challenger.GANGBYEON,
      Challenger.LAVENDER,
      Challenger.MOUNTBAKER,
      Challenger.OSAKI,
      Challenger.R1,
      Challenger.R2,
      Challenger.R3,
      Challenger.R3_GTV,
      Challenger.R4_GTV,
      Challenger.STANFORD,
      Challenger.ZHONGSHAN
  )

  /**
   * Get all device specifications for Chanbly devices.
   * Useful for chanbly testing.
   */
  public fun getChanblyDevices(): List<String> = listOf(
      Chanbly.Q7
  )

  /**
   * Get all device specifications for Changhong devices.
   * Useful for changhong testing.
   */
  public fun getChanghongDevices(): List<String> = listOf(
      Changhong.HAPJEONG,
      Changhong.IKEBUKURO,
      Changhong.LONGSHAN,
      Changhong.REDWOOD,
      Changhong.SAMSEONG,
      Changhong.SINDORIM
  )

  /**
   * Get all device specifications for Channel_Master devices.
   * Useful for channel_master testing.
   */
  public fun getChannelMasterDevices(): List<String> = listOf(
      ChannelMaster.DWT765CHA
  )

  /**
   * Get all device specifications for CHCNAV devices.
   * Useful for chcnav testing.
   */
  public fun getChcnavDevices(): List<String> = listOf(
      Chcnav.HCE600,
      Chcnav.LT60,
      Chcnav.LT700,
      Chcnav.LT800
  )

  /**
   * Get all device specifications for CHEETAH devices.
   * Useful for cheetah testing.
   */
  public fun getCheetahDevices(): List<String> = listOf(
      Cheetah.DIPLOMAT
  )

  /**
   * Get all device specifications for CHEMIST_WAREHOUSE devices.
   * Useful for chemist_warehouse testing.
   */
  public fun getChemistWarehouseDevices(): List<String> = listOf(
      ChemistWarehouse.JR_MB603
  )

  /**
   * Get all device specifications for Cherry devices.
   * Useful for cherry testing.
   */
  public fun getCherryDevices(): List<String> = listOf(
      Cherry.CHERRY_AQUA_TAB_S1,
      Cherry.CHERRY_COMET,
      Cherry.CHERRY_MAGNUM_8S
  )

  /**
   * Get all device specifications for Cherry_Mobile devices.
   * Useful for cherry_mobile testing.
   */
  public fun getCherryMobileDevices(): List<String> = listOf(
      CherryMobile.A800,
      CherryMobile.A820,
      CherryMobile.A840,
      CherryMobile.A850,
      CherryMobile.A860,
      CherryMobile.A890,
      CherryMobile.A950,
      CherryMobile.AQUA_INFINITY,
      CherryMobile.AQUA_S10,
      CherryMobile.AQUA_S9,
      CherryMobile.AQUA_TAB_ULTRA,
      CherryMobile.CHERRY_FLARE_S6,
      CherryMobile.FLARE_A1_ROAM,
      CherryMobile.FLARE_HD_4,
      CherryMobile.FLARE_HD_5,
      CherryMobile.FLARE_J1_LITE,
      CherryMobile.FLARE_J2_MAX,
      CherryMobile.FLARE_J3_LITE,
      CherryMobile.FLARE_J3_MINI,
      CherryMobile.FLARE_J3S,
      CherryMobile.FLARE_J5_MINI,
      CherryMobile.FLARE_J6_PLUS,
      CherryMobile.FLARE_J7,
      CherryMobile.FLARE_J8_LTE,
      CherryMobile.FLARE_P1_MINI,
      CherryMobile.FLARE_P3_LITE,
      CherryMobile.FLARE_P3_PLUS,
      CherryMobile.FLARE_S5,
      CherryMobile.FLARE_S5_PLUS,
      CherryMobile.FLARE_S7,
      CherryMobile.FLARE_S7_LITE,
      CherryMobile.FLARE_S7_MAX,
      CherryMobile.FLARE_S7_MINI,
      CherryMobile.FLARE_S7_POWER,
      CherryMobile.FLARE_S7_PRIME,
      CherryMobile.FLARE_S8_DELUXE,
      CherryMobile.FLARE_X,
      CherryMobile.FLARE_Y3_MINI,
      CherryMobile.FLARE_Y7,
      CherryMobile.FLARE_Y7_LTE,
      CherryMobile.H1950,
      CherryMobile.H2050,
      CherryMobile.OMEGA_HD_DUO,
      CherryMobile.OMEGA_ICON_LITE_2,
      CherryMobile.OMEGA_LITE_3S,
      CherryMobile.OMEGA_LITE_4,
      CherryMobile.SUPERION_S2,
      CherryMobile.SUPERION_S2_PLUS,
      CherryMobile.X930,
      CherryMobile.X960,
      CherryMobile.X970
  )

  /**
   * Get all device specifications for Cherrymobile devices.
   * Useful for cherrymobile testing.
   */
  public fun getCherrymobileDevices(): List<String> = listOf(
      Cherrymobile.AQUA_S10_PRO,
      Cherrymobile.AQUA_S10_PRO_5G,
      Cherrymobile.AQUA_S9_MAX,
      Cherrymobile.AQUA_SV,
      Cherrymobile.FLARE_S8_PRIME,
      Cherrymobile.FLARE_S8_PRO,
      Cherrymobile.FLARE_Y6_PRO,
      Cherrymobile.FLARE_Y7_PRO,
      Cherrymobile.PULSE,
      Cherrymobile.SUPERION_TAB_PRO
  )

  /**
   * Get all device specifications for CHG_Tv_Hub devices.
   * Useful for chg_tv_hub testing.
   */
  public fun getChgTvHubDevices(): List<String> = listOf(
      ChgTvHub.UZX8020CHM
  )

  /**
   * Get all device specifications for CHIEKO devices.
   * Useful for chieko testing.
   */
  public fun getChiekoDevices(): List<String> = listOf(
      Chieko.LAKESIDE
  )

  /**
   * Get all device specifications for CHIMEI devices.
   * Useful for chimei testing.
   */
  public fun getChimeiDevices(): List<String> = listOf(
      Chimei.HONGKONG,
      Chimei.ZHONGSHAN
  )

  /**
   * Get all device specifications for CHiQ devices.
   * Useful for chiq testing.
   */
  public fun getChiqDevices(): List<String> = listOf(
      Chiq.DUNDAS,
      Chiq.LONGSHAN,
      Chiq.REDWOOD,
      Chiq.SAMSEONG,
      Chiq.SINDORIM
  )

  /**
   * Get all device specifications for CHOFSLIA devices.
   * Useful for chofslia testing.
   */
  public fun getChofsliaDevices(): List<String> = listOf(
      Chofslia.A6
  )

  /**
   * Get all device specifications for Chosunbiz devices.
   * Useful for chosunbiz testing.
   */
  public fun getChosunbizDevices(): List<String> = listOf(
      Chosunbiz.KPAD
  )

  /**
   * Get all device specifications for ChunghwaTelecom devices.
   * Useful for chunghwatelecom testing.
   */
  public fun getChunghwatelecomDevices(): List<String> = listOf(
      Chunghwatelecom.HAMIVIDEO
  )

  /**
   * Get all device specifications for CHUWI devices.
   * Useful for chuwi testing.
   */
  public fun getChuwiDevices(): List<String> = listOf(
      Chuwi.CH108Q,
      Chuwi.HI10_XPRO,
      Chuwi.HI10_XPRO_PAD,
      Chuwi.HI10_XPRO_PAD_EEA,
      Chuwi.HI9,
      Chuwi.HI9AIR,
      Chuwi.HI9PRO,
      Chuwi.HIPAD_AIR,
      Chuwi.HIPAD_11,
      Chuwi.HIPAD_MAX,
      Chuwi.HIPAD_XPRO,
      Chuwi.HIPAD_XPRO_EEA,
      Chuwi.HIPADPLUS,
      Chuwi.HIPADPRO,
      Chuwi.HIPADX,
      Chuwi.HIPADX,
      Chuwi.SURPAD
  )

  /**
   * Get all device specifications for CIBER devices.
   * Useful for ciber testing.
   */
  public fun getCiberDevices(): List<String> = listOf(
      Ciber.B610A103A,
      Ciber.B610A115,
      Ciber.B610A215
  )

  /**
   * Get all device specifications for Cidea devices.
   * Useful for cidea testing.
   */
  public fun getCideaDevices(): List<String> = listOf(
      Cidea.CM14000PLUS,
      Cidea.CM76_EEA,
      Cidea.CM77,
      Cidea.CM81_EEA,
      Cidea.CM82,
      Cidea.CM826,
      Cidea.CM90,
      Cidea.CM91_EEA,
      Cidea.CM92_EEA,
      Cidea.CM93,
      Cidea.P1100,
      Cidea.P1150
  )

  /**
   * Get all device specifications for CignalPlayTV devices.
   * Useful for cignalplaytv testing.
   */
  public fun getCignalplaytvDevices(): List<String> = listOf(
      Cignalplaytv.CIGSEI100
  )

  /**
   * Get all device specifications for CIK devices.
   * Useful for cik testing.
   */
  public fun getCikDevices(): List<String> = listOf(
      Cik.S4000
  )

  /**
   * Get all device specifications for CILICO devices.
   * Useful for cilico testing.
   */
  public fun getCilicoDevices(): List<String> = listOf(
      Cilico.C6_R,
      Cilico.C7X_R,
      Cilico.C80
  )

  /**
   * Get all device specifications for Ciontek devices.
   * Useful for ciontek testing.
   */
  public fun getCiontekDevices(): List<String> = listOf(
      Ciontek.CS20,
      Ciontek.CS30,
      Ciontek.CS50,
      Ciontek.CS50C
  )

  /**
   * Get all device specifications for CipherLab devices.
   * Useful for cipherlab testing.
   */
  public fun getCipherlabDevices(): List<String> = listOf(
      Cipherlab.RK25,
      Cipherlab.RK25WO,
      Cipherlab.RK26,
      Cipherlab.RK95,
      Cipherlab.RS10,
      Cipherlab.RS31,
      Cipherlab.RS35,
      Cipherlab.RS36,
      Cipherlab.RS38,
      Cipherlab.RS51_HS
  )

  /**
   * Get all device specifications for Cisco devices.
   * Useful for cisco testing.
   */
  public fun getCiscoDevices(): List<String> = listOf(
      Cisco._860,
      Cisco.CP_DX80
  )

  /**
   * Get all device specifications for CityNetTV devices.
   * Useful for citynettv testing.
   */
  public fun getCitynettvDevices(): List<String> = listOf(
      Citynettv.SEI900BUQC
  )

  /**
   * Get all device specifications for CIUSE_SRL devices.
   * Useful for ciuse_srl testing.
   */
  public fun getCiuseSrlDevices(): List<String> = listOf(
      CiuseSrl.CAB_TAB
  )

  /**
   * Get all device specifications for CJHV devices.
   * Useful for cjhv testing.
   */
  public fun getCjhvDevices(): List<String> = listOf(
      Cjhv.KR101
  )

  /**
   * Get all device specifications for Ckypad devices.
   * Useful for ckypad testing.
   */
  public fun getCkypadDevices(): List<String> = listOf(
      Ckypad.CPAD10EEA
  )

  /**
   * Get all device specifications for CLARESTA devices.
   * Useful for claresta testing.
   */
  public fun getClarestaDevices(): List<String> = listOf(
      Claresta.S6PLUS
  )

  /**
   * Get all device specifications for CLARMIN devices.
   * Useful for clarmin testing.
   */
  public fun getClarminDevices(): List<String> = listOf(
      Clarmin.CLARMIN_C1
  )

  /**
   * Get all device specifications for Claro devices.
   * Useful for claro testing.
   */
  public fun getClaroDevices(): List<String> = listOf(
      Claro.B866V2_V1_0_0,
      Claro.CLARO_VSB3918,
      Claro.SEI700CPR,
      Claro.SEI800CCOA,
      Claro.SEI810CCOA,
      Claro.SEI810CPR,
      Claro.SEI900CCOAS
  )

  /**
   * Get all device specifications for Classpro devices.
   * Useful for classpro testing.
   */
  public fun getClassproDevices(): List<String> = listOf(
      Classpro.IKEBUKURO,
      Classpro.LONGSHAN,
      Classpro.REDWOOD,
      Classpro.SAMSEONG
  )

  /**
   * Get all device specifications for Clearsounds devices.
   * Useful for clearsounds testing.
   */
  public fun getClearsoundsDevices(): List<String> = listOf(
      Clearsounds.CSTAAP8D
  )

  /**
   * Get all device specifications for ClearTouch devices.
   * Useful for cleartouch testing.
   */
  public fun getCleartouchDevices(): List<String> = listOf(
      Cleartouch.RK3588_T
  )

  /**
   * Get all device specifications for Clementoni devices.
   * Useful for clementoni testing.
   */
  public fun getClementoniDevices(): List<String> = listOf(
      Clementoni.CLEMPAD10_2023,
      Clementoni.CLEMPAD_2018,
      Clementoni.CLEMPAD_8,
      Clementoni.CLEMPAD_9,
      Clementoni.CLEMPHONE_7,
      Clementoni.MFC_2018,
      Clementoni.MFC_7,
      Clementoni.MFC_8,
      Clementoni.MFCLEMPAD_9,
      Clementoni.MFCLEMPADP_9,
      Clementoni.NEO_CLEMPAD_2021
  )

  /**
   * Get all device specifications for CLEVER devices.
   * Useful for clever testing.
   */
  public fun getCleverDevices(): List<String> = listOf(
      Clever.T45
  )

  /**
   * Get all device specifications for Clevertouch devices.
   * Useful for clevertouch testing.
   */
  public fun getClevertouchDevices(): List<String> = listOf(
      Clevertouch.MT9679,
      Clevertouch.RK3588_T
  )

  /**
   * Get all device specifications for Clickonica_Exclusive devices.
   * Useful for clickonica_exclusive testing.
   */
  public fun getClickonicaExclusiveDevices(): List<String> = listOf(
      ClickonicaExclusive.ITABX
  )

  /**
   * Get all device specifications for ClickTabDS devices.
   * Useful for clicktabds testing.
   */
  public fun getClicktabdsDevices(): List<String> = listOf(
      Clicktabds.F19
  )

  /**
   * Get all device specifications for Clide devices.
   * Useful for clide testing.
   */
  public fun getClideDevices(): List<String> = listOf(
      Clide.A10A,
      Clide.A10B
  )

  /**
   * Get all device specifications for CLIO devices.
   * Useful for clio testing.
   */
  public fun getClioDevices(): List<String> = listOf(
      Clio.NEO_4_PLUS
  )

  /**
   * Get all device specifications for Cloud devices.
   * Useful for cloud testing.
   */
  public fun getCloudDevices(): List<String> = listOf(
      Cloud.CYCLONE_C4,
      Cloud.STORM_C3,
      Cloud.STRATUS_C5,
      Cloud.STRATUS_C5_ELITE,
      Cloud.SUNSHINE_T1,
      Cloud.SUNSHINE_T1_ELITE,
      Cloud.TYPHOON_C6
  )

  /**
   * Get all device specifications for CLOUD_AiR-WiFi devices.
   * Useful for cloud_air-wifi testing.
   */
  public fun getCloudAirWifiDevices(): List<String> = listOf(
      CloudAirWifi.ATAB_1
  )

  /**
   * Get all device specifications for Cloud_Mobile devices.
   * Useful for cloud_mobile testing.
   */
  public fun getCloudMobileDevices(): List<String> = listOf(
      CloudMobile.STRATUS_C7,
      CloudMobile.STRATUS_C8,
      CloudMobile.SUNSHINE_T2_ELITE
  )

  /**
   * Get all device specifications for CloudFone devices.
   * Useful for cloudfone testing.
   */
  public fun getCloudfoneDevices(): List<String> = listOf(
      Cloudfone.EXCITE_PRIME_2,
      Cloudfone.GO_SP_2,
      Cloudfone.NEXT_INFINITY_PLUS,
      Cloudfone.NEXT_INFINITY_PRO,
      Cloudfone.THRILL_BOOST_2,
      Cloudfone.THRILL_BOOST_3
  )

  /**
   * Get all device specifications for Clover devices.
   * Useful for clover testing.
   */
  public fun getCloverDevices(): List<String> = listOf(
      Clover.G11,
      Clover.KD101
  )

  /**
   * Get all device specifications for CLOVERTEK devices.
   * Useful for clovertek testing.
   */
  public fun getClovertekDevices(): List<String> = listOf(
      Clovertek.FTAB,
      Clovertek.G65
  )

  /**
   * Get all device specifications for CMCC devices.
   * Useful for cmcc testing.
   */
  public fun getCmccDevices(): List<String> = listOf(
      Cmcc.M651G,
      Cmcc.M762G,
      Cmcc.M823_CMCC
  )

  /**
   * Get all device specifications for CMDC devices.
   * Useful for cmdc testing.
   */
  public fun getCmdcDevices(): List<String> = listOf(
      Cmdc.HS8916QC
  )

  /**
   * Get all device specifications for CNS devices.
   * Useful for cns testing.
   */
  public fun getCnsDevices(): List<String> = listOf(
      Cns.BCM72604
  )

  /**
   * Get all device specifications for COBIA devices.
   * Useful for cobia testing.
   */
  public fun getCobiaDevices(): List<String> = listOf(
      Cobia.R3,
      Cobia.R4
  )

  /**
   * Get all device specifications for Coby devices.
   * Useful for coby testing.
   */
  public fun getCobyDevices(): List<String> = listOf(
      Coby.DORADO,
      Coby.MID_CBY1108,
      Coby.MID7052,
      Coby.MID8072
  )

  /**
   * Get all device specifications for cocomm devices.
   * Useful for cocomm testing.
   */
  public fun getCocommDevices(): List<String> = listOf(
      Cocomm.F780,
      Cocomm.F900N0101
  )

  /**
   * Get all device specifications for COEX devices.
   * Useful for coex testing.
   */
  public fun getCoexDevices(): List<String> = listOf(
      Coex.SUNNYVALE,
      Coex.SW6H
  )

  /**
   * Get all device specifications for Cogeco devices.
   * Useful for cogeco testing.
   */
  public fun getCogecoDevices(): List<String> = listOf(
      Cogeco.M393GENA_C,
      Cogeco.UIW4020COG
  )

  /**
   * Get all device specifications for COIN devices.
   * Useful for coin testing.
   */
  public fun getCoinDevices(): List<String> = listOf(
      Coin._1100AS_PLUS,
      Coin._1200AS,
      Coin._1200AS_PLUS
  )

  /**
   * Get all device specifications for COLORROOM devices.
   * Useful for colorroom testing.
   */
  public fun getColorroomDevices(): List<String> = listOf(
      Colorroom.A30_PLUS,
      Colorroom.A5,
      Colorroom.C1,
      Colorroom.C10_ROW,
      Colorroom.C2,
      Colorroom.C20,
      Colorroom.C30_PRO,
      Colorroom.C3_PRO_EEA,
      Colorroom.C3_PRO_ROW,
      Colorroom.C3_ROW,
      Colorroom.C5,
      Colorroom.C5_EEA,
      Colorroom.C5_PRO,
      Colorroom.E07,
      Colorroom.E20,
      Colorroom.E20_ROW,
      Colorroom.E30_PRO,
      Colorroom.E5,
      Colorroom.K07_PRO_EEA,
      Colorroom.K10,
      Colorroom.K10C,
      Colorroom.K12,
      Colorroom.K12_EEA,
      Colorroom.K12E,
      Colorroom.K12E_EEA,
      Colorroom.K12E_ROW,
      Colorroom.T30E
  )

  /**
   * Get all device specifications for Colors devices.
   * Useful for colors testing.
   */
  public fun getColorsDevices(): List<String> = listOf(
      Colors.P52_PRIDE5C,
      Colors.P77_PRIDE_1E,
      Colors.P88_PRIDE_1X,
      Colors.P95_PRIDE_7S
  )

  /**
   * Get all device specifications for COLORVIEW devices.
   * Useful for colorview testing.
   */
  public fun getColorviewDevices(): List<String> = listOf(
      Colorview.LAVENDER,
      Colorview.MOUNTBAKER
  )

  /**
   * Get all device specifications for COMBUSTECH devices.
   * Useful for combustech testing.
   */
  public fun getCombustechDevices(): List<String> = listOf(
      Combustech.RK3588_T
  )

  /**
   * Get all device specifications for COMIO devices.
   * Useful for comio testing.
   */
  public fun getComioDevices(): List<String> = listOf(
      Comio.COMIOC1,
      Comio.COMIOC1PRO,
      Comio.COMIOC2,
      Comio.COMIOC2LITE,
      Comio.COMIOP1,
      Comio.COMIOS1,
      Comio.COMIOS1LITE,
      Comio.COMIOX1
  )

  /**
   * Get all device specifications for CommBox devices.
   * Useful for commbox testing.
   */
  public fun getCommboxDevices(): List<String> = listOf(
      Commbox.RK3576_U
  )

  /**
   * Get all device specifications for Compaq devices.
   * Useful for compaq testing.
   */
  public fun getCompaqDevices(): List<String> = listOf(
      Compaq.CT201,
      Compaq.CT211,
      Compaq.FIREBALL,
      Compaq.GUANDU,
      Compaq.MARINA,
      Compaq.MARTIN,
      Compaq.NAGATA,
      Compaq.Q5,
      Compaq.Q6,
      Compaq.QT10,
      Compaq.QTAB,
      Compaq.QTAB,
      Compaq.QTAB10,
      Compaq.QTAB10_1,
      Compaq.QTAB10_LTE,
      Compaq.QTAB10_PLUS,
      Compaq.QTAB10PLUS,
      Compaq.QTAB8,
      Compaq.QTAB8,
      Compaq.QTAB8_LTE,
      Compaq.QTAB_NOTE,
      Compaq.QTABPRO,
      Compaq.R1,
      Compaq.R2,
      Compaq.STANFORD,
      Compaq.ZHONGSHAN
  )

  /**
   * Get all device specifications for COMPARTIR devices.
   * Useful for compartir testing.
   */
  public fun getCompartirDevices(): List<String> = listOf(
      Compartir.M103H
  )

  /**
   * Get all device specifications for COMPUMAX devices.
   * Useful for compumax testing.
   */
  public fun getCompumaxDevices(): List<String> = listOf(
      Compumax.BLUEPAD10,
      Compumax.COMPUMAX,
      Compumax.MID1016_MK_64
  )

  /**
   * Get all device specifications for COMTECO devices.
   * Useful for comteco testing.
   */
  public fun getComtecoDevices(): List<String> = listOf(
      Comteco.DV8535_KBC
  )

  /**
   * Get all device specifications for CONCORD devices.
   * Useful for concord testing.
   */
  public fun getConcordDevices(): List<String> = listOf(
      Concord.A10,
      Concord.C_708,
      Concord.CONCORD_M15,
      Concord.CONCORD_M20,
      Concord.CONCORD_RANGE_HS,
      Concord.DREAM_EDITION_C_754,
      Concord.PLUS_7_C777,
      Concord.PLUS_M19_C779
  )

  /**
   * Get all device specifications for Condor devices.
   * Useful for condor testing.
   */
  public fun getCondorDevices(): List<String> = listOf(
      Condor.ALLURE_A8_PRO,
      Condor.ALLURE_M1,
      Condor.ALLURE_M1_PLUS,
      Condor.ALLURE_M2,
      Condor.ALLURE_M3,
      Condor.ALLURE_M3_LITE,
      Condor.ALLURE_X,
      Condor.GRIFFE_T1,
      Condor.GRIFFE_T5,
      Condor.GRIFFE_T6,
      Condor.GRIFFE_T7,
      Condor.GRIFFE_T8,
      Condor.GRIFFE_T9,
      Condor.GRIFFE_T9_PLUS,
      Condor.GT60,
      Condor.GT60_PRO,
      Condor.GT_70,
      Condor.IKEBUKURO,
      Condor.INFINITY_A4,
      Condor.INFINITY_E4,
      Condor.INFINITY_E5,
      Condor.INFINITY_E5_PRO,
      Condor.MATE_70,
      Condor.NOVA60,
      Condor.NOVA60_I,
      Condor.NOVA_70,
      Condor.NOVA_70I,
      Condor.NOVA_70SE,
      Condor.PAM524,
      Condor.PGN409,
      Condor.PGN511,
      Condor.PGN513,
      Condor.PGN514,
      Condor.PGN515,
      Condor.PGN516,
      Condor.PGN517,
      Condor.PGN518,
      Condor.PGN521,
      Condor.PGN522,
      Condor.PGN523,
      Condor.PGN527,
      Condor.PGN528,
      Condor.PGN605,
      Condor.PGN606,
      Condor.PGN607,
      Condor.PGN608,
      Condor.PGN609,
      Condor.PGN610,
      Condor.PGN611,
      Condor.PGN612,
      Condor.PGN613,
      Condor.PHQ520,
      Condor.PHQ526,
      Condor.PHS601,
      Condor.PLUME_L1_PLUS,
      Condor.PLUME_L2,
      Condor.PLUME_L2_PRO,
      Condor.PLUME_L3,
      Condor.PLUME_L3_PLUS,
      Condor.PLUME_L4,
      Condor.PLUME_L4_PRO,
      Condor.PLUME_L5,
      Condor.PLUME_L5_PRO,
      Condor.PLUME_L6_PRO,
      Condor.PLUME_L8_PRO,
      Condor.PLUME_P8_PRO,
      Condor.R2,
      Condor.R4,
      Condor.REDWOOD,
      Condor.SAMSEONG,
      Condor.SP414,
      Condor.SP530,
      Condor.SP531,
      Condor.SP620,
      Condor.SP622,
      Condor.SP638,
      Condor.SP641,
      Condor.TB105L,
      Condor.TB108W,
      Condor.TB109L,
      Condor.TB716,
      Condor.TB717G,
      Condor.TB717L,
      Condor.TB718,
      Condor.TB802L,
      Condor.TCL_EU,
      Condor.TFX711G,
      Condor.TFX712G,
      Condor.TFX713L,
      Condor.TFX714L,
      Condor.TGW102L,
      Condor.TGW801G,
      Condor.TGW801L,
      Condor.TMK715L
  )

  /**
   * Get all device specifications for CongoTelecom devices.
   * Useful for congotelecom testing.
   */
  public fun getCongotelecomDevices(): List<String> = listOf(
      Congotelecom.SPEED
  )

  /**
   * Get all device specifications for CONKER devices.
   * Useful for conker testing.
   */
  public fun getConkerDevices(): List<String> = listOf(
      Conker.ST_60,
      Conker.SX50
  )

  /**
   * Get all device specifications for Connex devices.
   * Useful for connex testing.
   */
  public fun getConnexDevices(): List<String> = listOf(
      Connex.CTAB_1044,
      Connex.CTAB1044HN,
      Connex.SEN_1055_ARM
  )

  /**
   * Get all device specifications for CONQUEST devices.
   * Useful for conquest testing.
   */
  public fun getConquestDevices(): List<String> = listOf(
      Conquest.CONQUEST_S20,
      Conquest.CONQUEST_S23,
      Conquest.CONQUEST_S16,
      Conquest.CONQUEST_S20,
      Conquest.F5,
      Conquest.S12PRO,
      Conquest.S21
  )

  /**
   * Get all device specifications for Consung devices.
   * Useful for consung testing.
   */
  public fun getConsungDevices(): List<String> = listOf(
      Consung.CS10L_PRO,
      Consung.N101B
  )

  /**
   * Get all device specifications for Contex devices.
   * Useful for contex testing.
   */
  public fun getContexDevices(): List<String> = listOf(
      Contex.TAMACHI,
      Contex.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for CONTI devices.
   * Useful for conti testing.
   */
  public fun getContiDevices(): List<String> = listOf(
      Conti.STANFORD,
      Conti.ZHONGSHAN
  )

  /**
   * Get all device specifications for Continental devices.
   * Useful for continental testing.
   */
  public fun getContinentalDevices(): List<String> = listOf(
      Continental.BANGBAE,
      Continental.CE10412_26,
      Continental.KOMAGOME,
      Continental.TAMACHI,
      Continental.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for ContinentalEdison devices.
   * Useful for continentaledison testing.
   */
  public fun getContinentaledisonDevices(): List<String> = listOf(
      Continentaledison.COTTONGREEN,
      Continentaledison.GUANDU,
      Continentaledison.KENTON,
      Continentaledison.LASALLE,
      Continentaledison.MARINA,
      Continentaledison.MARTIN,
      Continentaledison.NAGATA
  )

  /**
   * Get all device specifications for CONTINUUS devices.
   * Useful for continuus testing.
   */
  public fun getContinuusDevices(): List<String> = listOf(
      Continuus.STANFORD
  )

  /**
   * Get all device specifications for CONTIXO devices.
   * Useful for contixo testing.
   */
  public fun getContixoDevices(): List<String> = listOf(
      Contixo.CONTIXO_V8,
      Contixo.CONTIXO_V9,
      Contixo.K101A,
      Contixo.K103,
      Contixo.K103A,
      Contixo.K81,
      Contixo.V10,
      Contixo.V10A,
      Contixo.V10S,
      Contixo.V10X,
      Contixo.V11,
      Contixo.V8_A,
      Contixo.V8X,
      Contixo.V90,
      Contixo.V9X
  )

  /**
   * Get all device specifications for CONVERGE devices.
   * Useful for converge testing.
   */
  public fun getConvergeDevices(): List<String> = listOf(
      Converge.T7045PS
  )

  /**
   * Get all device specifications for COOCAA devices.
   * Useful for coocaa testing.
   */
  public fun getCoocaaDevices(): List<String> = listOf(
      Coocaa.YDA
  )

  /**
   * Get all device specifications for COOKIE devices.
   * Useful for cookie testing.
   */
  public fun getCookieDevices(): List<String> = listOf(
      Cookie.YS_CK0001
  )

  /**
   * Get all device specifications for COOLFAN devices.
   * Useful for coolfan testing.
   */
  public fun getCoolfanDevices(): List<String> = listOf(
      Coolfan.C107,
      Coolfan.OC106,
      Coolfan.OC106_EEA
  )

  /**
   * Get all device specifications for coolpad devices.
   * Useful for coolpad testing.
   */
  public fun getCoolpadDevices(): List<String> = listOf(
      Coolpad._1821,
      Coolpad._1825_I01,
      Coolpad._1826_I01,
      Coolpad._1901,
      Coolpad._1904,
      Coolpad._2021,
      Coolpad._2039,
      Coolpad._2040,
      Coolpad._2042,
      Coolpad._8750,
      Coolpad.A8,
      Coolpad.A8_831,
      Coolpad.A8_930,
      Coolpad.APOLLO,
      Coolpad.B770,
      Coolpad.C1_S02,
      Coolpad.C103,
      Coolpad.CLOVER,
      Coolpad.COOL_C1,
      Coolpad.COOLPAD5267,
      Coolpad.COOLPAD5370,
      Coolpad.COOLPAD7295A,
      Coolpad.COOLPAD8737A,
      Coolpad.COOLPAD_1803,
      Coolpad.COOLPAD_2041,
      Coolpad.COOLPAD_2041_S0,
      Coolpad.COOLPAD_2041_U0,
      Coolpad.COOLPAD_2042_U0,
      Coolpad.COOLPAD_C202,
      Coolpad.COOLPAD_C203,
      Coolpad.COOLPAD_COOL_X,
      Coolpad.COOLPAD_N7_PLUS,
      Coolpad.COOLPADE2,
      Coolpad.CP07,
      Coolpad.CP12,
      Coolpad.CP12P,
      Coolpad.CP12Q,
      Coolpad.CP12S,
      Coolpad.CP12T,
      Coolpad.CP32,
      Coolpad.CP32T,
      Coolpad.CP3320A,
      Coolpad.CP3503I,
      Coolpad.CP3503L,
      Coolpad.CP3504L,
      Coolpad.CP3505I,
      Coolpad.CP3505I_U00,
      Coolpad.CP3600I,
      Coolpad.CP3622A,
      Coolpad.CP3632A,
      Coolpad.CP3636A,
      Coolpad.CP3648A,
      Coolpad.CP3648AT,
      Coolpad.CP3667AT,
      Coolpad.CP3669AS,
      Coolpad.CP36T,
      Coolpad.CP8676_I03,
      Coolpad.CP8722_S00,
      Coolpad.CP8722_U00,
      Coolpad.CPY83_I00,
      Coolpad.CPY83_S00,
      Coolpad.CPY83_U00,
      Coolpad.E561_EU,
      Coolpad.K04L,
      Coolpad.K11,
      Coolpad.K12,
      Coolpad.K18,
      Coolpad.K2L_S00,
      Coolpad.K69V1_64,
      Coolpad.LITHIUM,
      Coolpad.MOBOK1,
      Coolpad.R108,
      Coolpad.VENTURA,
      Coolpad.VICTOR,
      Coolpad.X20,
      Coolpad.Y72_921,
      Coolpad.Y91,
      Coolpad.Z1
  )

  /**
   * Get all device specifications for COOP devices.
   * Useful for coop testing.
   */
  public fun getCoopDevices(): List<String> = listOf(
      Coop.MARTE
  )

  /**
   * Get all device specifications for COOPERS devices.
   * Useful for coopers testing.
   */
  public fun getCoopersDevices(): List<String> = listOf(
      Coopers.CP10,
      Coopers.CP20,
      Coopers.CP70K,
      Coopers.CP80,
      Coopers.CP81
  )

  /**
   * Get all device specifications for Coppernic devices.
   * Useful for coppernic testing.
   */
  public fun getCoppernicDevices(): List<String> = listOf(
      Coppernic.C_ONE_V2
  )

  /**
   * Get all device specifications for CoralPhone devices.
   * Useful for coralphone testing.
   */
  public fun getCoralphoneDevices(): List<String> = listOf(
      Coralphone.CORALNEURAL3
  )

  /**
   * Get all device specifications for Core_Innovations devices.
   * Useful for core_innovations testing.
   */
  public fun getCoreInnovationsDevices(): List<String> = listOf(
      CoreInnovations.CRTB7001,
      CoreInnovations.CTB1016G
  )

  /**
   * Get all device specifications for CORN devices.
   * Useful for corn testing.
   */
  public fun getCornDevices(): List<String> = listOf(
      Corn.C5,
      Corn.C55,
      Corn.C55_PRO,
      Corn.C60,
      Corn.C60_ULTRA,
      Corn.COCO10_ULTRA_4G,
      Corn.CORN_R10,
      Corn.CORN_STAR8,
      Corn.CORN_X5,
      Corn.CORN_X55,
      Corn.G60,
      Corn.G60_PRO_4G,
      Corn.NOTE1,
      Corn.PLAY25_PRO_4G,
      Corn.R10E,
      Corn.R10S,
      Corn.R20,
      Corn.R40,
      Corn.STAR10_3G,
      Corn.STAR10_PRO,
      Corn.STAR8,
      Corn.STAR8_3G,
      Corn.TRONIK_12,
      Corn.TRONIK_12S,
      Corn.TRONIK_13S,
      Corn.X5S,
      Corn.X60,
      Corn.Y60
  )

  /**
   * Get all device specifications for CosMedia devices.
   * Useful for cosmedia testing.
   */
  public fun getCosmediaDevices(): List<String> = listOf(
      Cosmedia.YYT
  )

  /**
   * Get all device specifications for COSMOS devices.
   * Useful for cosmos testing.
   */
  public fun getCosmosDevices(): List<String> = listOf(
      Cosmos.ARIES_8IN,
      Cosmos.LYNX_10IN,
      Cosmos.NOVA_10IN
  )

  /**
   * Get all device specifications for COSMOTE-TV devices.
   * Useful for cosmote-tv testing.
   */
  public fun getCosmoteTvDevices(): List<String> = listOf(
      CosmoteTv.HY44G
  )

  /**
   * Get all device specifications for Covia devices.
   * Useful for covia testing.
   */
  public fun getCoviaDevices(): List<String> = listOf(
      Covia.CP_L45S,
      Covia.CP_W5S,
      Covia.G06
  )

  /**
   * Get all device specifications for Cozyla devices.
   * Useful for cozyla testing.
   */
  public fun getCozylaDevices(): List<String> = listOf(
      Cozyla.CALENDAR
  )

  /**
   * Get all device specifications for CRAIG devices.
   * Useful for craig testing.
   */
  public fun getCraigDevices(): List<String> = listOf(
      Craig.CMP846
  )

  /**
   * Get all device specifications for Creato devices.
   * Useful for creato testing.
   */
  public fun getCreatoDevices(): List<String> = listOf(
      Creato.MDT1005_MK_32
  )

  /**
   * Get all device specifications for CredenceID devices.
   * Useful for credenceid testing.
   */
  public fun getCredenceidDevices(): List<String> = listOf(
      Credenceid.CREDENCEECO
  )

  /**
   * Get all device specifications for Crelander devices.
   * Useful for crelander testing.
   */
  public fun getCrelanderDevices(): List<String> = listOf(
      Crelander.A101,
      Crelander.T118,
      Crelander.W30,
      Crelander.Z103
  )

  /**
   * Get all device specifications for Crema devices.
   * Useful for crema testing.
   */
  public fun getCremaDevices(): List<String> = listOf(
      Crema.CREMA0810T
  )

  /**
   * Get all device specifications for Cricket devices.
   * Useful for cricket testing.
   */
  public fun getCricketDevices(): List<String> = listOf(
      Cricket.EC211001,
      Cricket.EC211002,
      Cricket.EC211003,
      Cricket.EC211004,
      Cricket.SL100EA,
      Cricket.SL101AE,
      Cricket.SL219C,
      Cricket.SN304AE,
      Cricket.SN509C,
      Cricket.U304AC,
      Cricket.U325AC,
      Cricket.U380AC,
      Cricket.U6080AC,
      Cricket.U705AC,
      Cricket.V350C,
      Cricket.WTCKT01,
      Cricket.ZON
  )

  /**
   * Get all device specifications for Cristor devices.
   * Useful for cristor testing.
   */
  public fun getCristorDevices(): List<String> = listOf(
      Cristor.REDWOOD
  )

  /**
   * Get all device specifications for CRONY devices.
   * Useful for crony testing.
   */
  public fun getCronyDevices(): List<String> = listOf(
      Crony.LONGSHAN
  )

  /**
   * Get all device specifications for CROSSCALL devices.
   * Useful for crosscall testing.
   */
  public fun getCrosscallDevices(): List<String> = listOf(
      Crosscall.CORE_M4,
      Crosscall.CORE_M4_GO,
      Crosscall.HS8909QC,
      Crosscall.HS8916QC,
      Crosscall.HS8917QC,
      Crosscall.HS8937QC,
      Crosscall.HS8952QC,
      Crosscall.HSSDM660QC,
      Crosscall.L751,
      Crosscall.L751_02,
      Crosscall.L752,
      Crosscall.L762,
      Crosscall.L768,
      Crosscall.L771,
      Crosscall.L780,
      Crosscall.L790,
      Crosscall.L810,
      Crosscall.L820
  )

  /**
   * Get all device specifications for CrownMustang devices.
   * Useful for crownmustang testing.
   */
  public fun getCrownmustangDevices(): List<String> = listOf(
      Crownmustang.MARTIN,
      Crownmustang.PATRICK
  )

  /**
   * Get all device specifications for CRUA devices.
   * Useful for crua testing.
   */
  public fun getCruaDevices(): List<String> = listOf(
      Crua.MATEO
  )

  /**
   * Get all device specifications for CryptoDATA devices.
   * Useful for cryptodata testing.
   */
  public fun getCryptodataDevices(): List<String> = listOf(
      Cryptodata.HIDR_S1_PRO
  )

  /**
   * Get all device specifications for ctc devices.
   * Useful for ctc testing.
   */
  public fun getCtcDevices(): List<String> = listOf(
      Ctc.STI6130D353
  )

  /**
   * Get all device specifications for CTL devices.
   * Useful for ctl testing.
   */
  public fun getCtlDevices(): List<String> = listOf(
      Ctl.CTL_IPTV_MRVL
  )

  /**
   * Get all device specifications for Ctroniq devices.
   * Useful for ctroniq testing.
   */
  public fun getCtroniqDevices(): List<String> = listOf(
      Ctroniq._4G_TABLET,
      Ctroniq.CTRONIQ_SNOOK_X10,
      Ctroniq.CTRONIQ_SNOOK_X10L,
      Ctroniq.SNOOK_X10,
      Ctroniq.SNOOK_X75,
      Ctroniq.SNOOK_X80
  )

  /**
   * Get all device specifications for CTV devices.
   * Useful for ctv testing.
   */
  public fun getCtvDevices(): List<String> = listOf(
      Ctv.SEI700CG
  )

  /**
   * Get all device specifications for CUBOT devices.
   * Useful for cubot testing.
   */
  public fun getCubotDevices(): List<String> = listOf(
      Cubot.A1,
      Cubot.A10,
      Cubot.A20,
      Cubot.A30,
      Cubot.C20,
      Cubot.C30,
      Cubot.CUBOT_A5,
      Cubot.CUBOT_CHEETAH_2,
      Cubot.CUBOT_ECHO,
      Cubot.CUBOT_H3,
      Cubot.CUBOT_J3,
      Cubot.CUBOT_J3_PRO,
      Cubot.CUBOT_J9,
      Cubot.CUBOT_MAGIC,
      Cubot.CUBOT_MANITO,
      Cubot.CUBOT_NOTE_PLUS,
      Cubot.CUBOT_NOTE_S,
      Cubot.CUBOT_NOVA,
      Cubot.CUBOT_POWER,
      Cubot.CUBOT_R11,
      Cubot.CUBOT_R9,
      Cubot.CUBOT_X18,
      Cubot.J10,
      Cubot.J20,
      Cubot.J5,
      Cubot.J7,
      Cubot.J8,
      Cubot.KING_KONG_3,
      Cubot.KING_KONG_CS,
      Cubot.KINGKONG_5,
      Cubot.KINGKONG_5_PRO,
      Cubot.KINGKONG_6,
      Cubot.KINGKONG_7,
      Cubot.KINGKONG_8,
      Cubot.KINGKONG_9,
      Cubot.KINGKONG_ACE_2,
      Cubot.KINGKONG_ACE_3,
      Cubot.KINGKONG_ES,
      Cubot.KINGKONG_MINI,
      Cubot.KINGKONG_MINI2,
      Cubot.KINGKONG_MINI2_PRO,
      Cubot.KINGKONG_POWER_3,
      Cubot.KINGKONG_POWER_5,
      Cubot.KINGKONG_STAR,
      Cubot.KINGKONG_STAR_2,
      Cubot.KINGKONG_X,
      Cubot.KINGKONGMINI3,
      Cubot.MAX_2,
      Cubot.MAX_3,
      Cubot.MAX_5,
      Cubot.NOTE_20,
      Cubot.NOTE_20_PRO,
      Cubot.NOTE_30,
      Cubot.NOTE_40,
      Cubot.NOTE_50,
      Cubot.NOTE_7,
      Cubot.NOTE_8,
      Cubot.NOTE_9,
      Cubot.P30,
      Cubot.P40,
      Cubot.P50,
      Cubot.P60,
      Cubot.P80,
      Cubot.POCKET,
      Cubot.POCKET_3,
      Cubot.QUEST,
      Cubot.QUEST_LITE,
      Cubot.R15,
      Cubot.R15_PRO,
      Cubot.R19,
      Cubot.RAINBOW,
      Cubot.RAINBOW_2,
      Cubot.TAB_10,
      Cubot.TAB_20,
      Cubot.TAB_40,
      Cubot.TAB_50,
      Cubot.TAB_60,
      Cubot.TAB_70,
      Cubot.TAB_KINGKONG,
      Cubot.TAB_KINGKONG_2,
      Cubot.X19,
      Cubot.X19_S,
      Cubot.X20,
      Cubot.X20_PRO,
      Cubot.X30,
      Cubot.X30P,
      Cubot.X50,
      Cubot.X5623_H6013_CUBOT,
      Cubot.X6069_CUBOT_5365U,
      Cubot.X70,
      Cubot.X90
  )

  /**
   * Get all device specifications for Custom devices.
   * Useful for custom testing.
   */
  public fun getCustomDevices(): List<String> = listOf(
      Custom.ARES,
      Custom.K_RANGER,
      Custom.P_RANGER,
      Custom.P_RANGER
  )

  /**
   * Get all device specifications for CVTE devices.
   * Useful for cvte testing.
   */
  public fun getCvteDevices(): List<String> = listOf(
      Cvte.RK3588_T
  )

  /**
   * Get all device specifications for CWELL devices.
   * Useful for cwell testing.
   */
  public fun getCwellDevices(): List<String> = listOf(
      Cwell.M10
  )

  /**
   * Get all device specifications for CWOWDEFU devices.
   * Useful for cwowdefu testing.
   */
  public fun getCwowdefuDevices(): List<String> = listOf(
      Cwowdefu.C10W_EEA,
      Cwowdefu.C18W,
      Cwowdefu.C18W_EEA,
      Cwowdefu.C28,
      Cwowdefu.C6,
      Cwowdefu.C73W,
      Cwowdefu.C77W,
      Cwowdefu.C77W_EEA,
      Cwowdefu.C80W,
      Cwowdefu.C82W,
      Cwowdefu.C82W_EEA,
      Cwowdefu.C84W,
      Cwowdefu.C86W,
      Cwowdefu.C86W_EEA,
      Cwowdefu.F12W,
      Cwowdefu.F13W,
      Cwowdefu.F13W_EEA,
      Cwowdefu.F35W,
      Cwowdefu.F80L,
      Cwowdefu.F80W,
      Cwowdefu.F80W_EEA,
      Cwowdefu.F81L,
      Cwowdefu.P12W,
      Cwowdefu.P12W_EEA,
      Cwowdefu.P15W,
      Cwowdefu.P15W_EEA,
      Cwowdefu.P16_C,
      Cwowdefu.P25L,
      Cwowdefu.P35W,
      Cwowdefu.P35W_EEA,
      Cwowdefu.P38W,
      Cwowdefu.P38W_EEA,
      Cwowdefu.P50L_EEA,
      Cwowdefu.P80L,
      Cwowdefu.S18,
      Cwowdefu.S28
  )

  /**
   * Get all device specifications for CX devices.
   * Useful for cx testing.
   */
  public fun getCxDevices(): List<String> = listOf(
      Cx.CX9011
  )

  /**
   * Get all device specifications for Cyrus devices.
   * Useful for cyrus testing.
   */
  public fun getCyrusDevices(): List<String> = listOf(
      Cyrus.CM17,
      Cyrus.CM17XA,
      Cyrus.CS22,
      Cyrus.CS22XA,
      Cyrus.CS22XA_EEA,
      Cyrus.CS40,
      Cyrus.CS45XA,
      Cyrus.CS45XA_EEA
  )

  /**
   * Get all device specifications for d_light devices.
   * Useful for d_light testing.
   */
  public fun getDLightDevices(): List<String> = listOf(
      DLight.M100,
      DLight.M1000,
      DLight.M200
  )

  /**
   * Get all device specifications for D-TECH devices.
   * Useful for d-tech testing.
   */
  public fun getDTechDevices(): List<String> = listOf(
      DTech.D5L,
      DTech.D5S,
      DTech.DT07,
      DTech.DT08_TAB4G,
      DTech.DT10_TAB4G,
      DTech.DT10_TAB4G_T101,
      DTech.LM_01
  )

  /**
   * Get all device specifications for DABLIU devices.
   * Useful for dabliu testing.
   */
  public fun getDabliuDevices(): List<String> = listOf(
      Dabliu.RK3588_E13R
  )

  /**
   * Get all device specifications for DAEWOO devices.
   * Useful for daewoo testing.
   */
  public fun getDaewooDevices(): List<String> = listOf(
      Daewoo.BEOMIL,
      Daewoo.DW_TN7RK16,
      Daewoo.LAVENDER,
      Daewoo.MOUNTBAKER,
      Daewoo.NEON,
      Daewoo.PIONEER,
      Daewoo.SUNNYVALE,
      Daewoo.SW6H,
      Daewoo.X7,
      Daewoo.X9
  )

  /**
   * Get all device specifications for DAHL devices.
   * Useful for dahl testing.
   */
  public fun getDahlDevices(): List<String> = listOf(
      Dahl.PEOPLE_PLUS
  )

  /**
   * Get all device specifications for DAHUA devices.
   * Useful for dahua testing.
   */
  public fun getDahuaDevices(): List<String> = listOf(
      Dahua.ELLINIKO,
      Dahua.HONGKONG,
      Dahua.MOUNTBAKER,
      Dahua.STANFORD,
      Dahua.ZHONGSHAN
  )

  /**
   * Get all device specifications for DAIICHI devices.
   * Useful for daiichi testing.
   */
  public fun getDaiichiDevices(): List<String> = listOf(
      Daiichi.MARTIN
  )

  /**
   * Get all device specifications for DAIKO devices.
   * Useful for daiko testing.
   */
  public fun getDaikoDevices(): List<String> = listOf(
      Daiko.OD0M_EA_T32
  )

  /**
   * Get all device specifications for Daiwa devices.
   * Useful for daiwa testing.
   */
  public fun getDaiwaDevices(): List<String> = listOf(
      Daiwa.CAPITOLHILL,
      Daiwa.KEONEAE,
      Daiwa.LAVENDER
  )

  /**
   * Get all device specifications for DAIYU devices.
   * Useful for daiyu testing.
   */
  public fun getDaiyuDevices(): List<String> = listOf(
      Daiyu.MEDIABOX
  )

  /**
   * Get all device specifications for DAMASCO devices.
   * Useful for damasco testing.
   */
  public fun getDamascoDevices(): List<String> = listOf(
      Damasco.ELLINIKO,
      Damasco.LAKESIDE,
      Damasco.LAVENDER,
      Damasco.MATEO,
      Damasco.MOUNTBAKER,
      Damasco.NAGAI,
      Damasco.PIONEER
  )

  /**
   * Get all device specifications for DANDOON devices.
   * Useful for dandoon testing.
   */
  public fun getDandoonDevices(): List<String> = listOf(
      Dandoon.A2
  )

  /**
   * Get all device specifications for Danew devices.
   * Useful for danew testing.
   */
  public fun getDanewDevices(): List<String> = listOf(
      Danew.D809PROPLUS,
      Danew.DANEW_KONNECT_556,
      Danew.DBOOK112_EEA,
      Danew.DBOOK_110,
      Danew.DBOOK_111,
      Danew.DSLIDE1013QC_V2,
      Danew.DSLIDE1013QC_V3,
      Danew.DSLIDE1013QC_V4,
      Danew.DSLIDE1016_V2,
      Danew.DSLIDE1019,
      Danew.DSLIDE716,
      Danew.DSLIDE807,
      Danew.DSLIDE808,
      Danew.DSLIDE_1020,
      Danew.DSLIDE_1020M,
      Danew.DSLIDE_1020PRO,
      Danew.DSLIDE_1021,
      Danew.DSLIDE_1021C,
      Danew.DSLIDE_1095,
      Danew.DSLIDE_113,
      Danew.DSLIDE_114,
      Danew.DSLIDE_115,
      Danew.DSLIDE_809_EEA,
      Danew.DSLIDE_809PRO,
      Danew.G27,
      Danew.KONNECT402,
      Danew.KONNECT602,
      Danew.KONNECT_508,
      Danew.KONNECT_509,
      Danew.KONNECT_557,
      Danew.KONNECT_601,
      Danew.KONNECT_607,
      Danew.KONNECT_608,
      Danew.T_ONE
  )

  /**
   * Get all device specifications for Dangbei devices.
   * Useful for dangbei testing.
   */
  public fun getDangbeiDevices(): List<String> = listOf(
      Dangbei.HIMALAYA,
      Dangbei.KHANDALA
  )

  /**
   * Get all device specifications for DANILUX devices.
   * Useful for danilux testing.
   */
  public fun getDaniluxDevices(): List<String> = listOf(
      Danilux.MOUNTBAKER
  )

  /**
   * Get all device specifications for Dany devices.
   * Useful for dany testing.
   */
  public fun getDanyDevices(): List<String> = listOf(
      Dany.MAXX_05,
      Dany.SIGNATURE_S8
  )

  /**
   * Get all device specifications for Daria devices.
   * Useful for daria testing.
   */
  public fun getDariaDevices(): List<String> = listOf(
      Daria.HORMOZ,
      Daria.QOQNOOS,
      Daria.ZAHEDAN
  )

  /**
   * Get all device specifications for Datalogic devices.
   * Useful for datalogic testing.
   */
  public fun getDatalogicDevices(): List<String> = listOf(
      Datalogic.DL35,
      Datalogic.M11,
      Datalogic.M1_HANDHELD,
      Datalogic.NEBULA_PDA,
      Datalogic.Q10,
      Datalogic.Q10A,
      Datalogic.SX5,
      Datalogic.TOMCAT_PDA
  )

  /**
   * Get all device specifications for Datamini devices.
   * Useful for datamini testing.
   */
  public fun getDataminiDevices(): List<String> = listOf(
      Datamini.T104G,
      Datamini.T104G_T610,
      Datamini.T8004G,
      Datamini.T84G,
      Datamini.T84G_T310,
      Datamini.T84G_T310_332,
      Datamini.TPOS74G_IGF720
  )

  /**
   * Get all device specifications for Datamini-TWG10 devices.
   * Useful for datamini-twg10 testing.
   */
  public fun getDataminiTwg10Devices(): List<String> = listOf(
      DataminiTwg10.K508101
  )

  /**
   * Get all device specifications for DATSUN devices.
   * Useful for datsun testing.
   */
  public fun getDatsunDevices(): List<String> = listOf(
      Datsun.DATSUN_D5001
  )

  /**
   * Get all device specifications for DAWLANCE devices.
   * Useful for dawlance testing.
   */
  public fun getDawlanceDevices(): List<String> = listOf(
      Dawlance.SW6H,
      Dawlance.UMEDA
  )

  /**
   * Get all device specifications for DayMark devices.
   * Useful for daymark testing.
   */
  public fun getDaymarkDevices(): List<String> = listOf(
      Daymark.IT119345,
      Daymark.IT119411
  )

  /**
   * Get all device specifications for DAZN devices.
   * Useful for dazn testing.
   */
  public fun getDaznDevices(): List<String> = listOf(
      Dazn.M393GENA_DAZN
  )

  /**
   * Get all device specifications for DCG devices.
   * Useful for dcg testing.
   */
  public fun getDcgDevices(): List<String> = listOf(
      Dcg.DCG_N10
  )

  /**
   * Get all device specifications for DCODE devices.
   * Useful for dcode testing.
   */
  public fun getDcodeDevices(): List<String> = listOf(
      Dcode.DCODE_CYPHER,
      Dcode.DS_X1,
      Dcode.DS_BD1,
      Dcode.DS_BD2,
      Dcode.DS_CL1,
      Dcode.DS_CL2_LITE,
      Dcode.DS_CL2_PRO,
      Dcode.DS_CL4,
      Dcode.DS_CL4_LITE,
      Dcode.DS_CL4_PRO
  )

  /**
   * Get all device specifications for Dcolor devices.
   * Useful for dcolor testing.
   */
  public fun getDcolorDevices(): List<String> = listOf(
      Dcolor.YHT,
      Dcolor.YUL
  )

  /**
   * Get all device specifications for DEC devices.
   * Useful for dec testing.
   */
  public fun getDecDevices(): List<String> = listOf(
      Dec.HONGKONG
  )

  /**
   * Get all device specifications for Decaview devices.
   * Useful for decaview testing.
   */
  public fun getDecaviewDevices(): List<String> = listOf(
      Decaview.CAPITOLHILL,
      Decaview.KEONEAE
  )

  /**
   * Get all device specifications for DeepHub devices.
   * Useful for deephub testing.
   */
  public fun getDeephubDevices(): List<String> = listOf(
      Deephub.RK3588_T
  )

  /**
   * Get all device specifications for DEERTiME devices.
   * Useful for deertime testing.
   */
  public fun getDeertimeDevices(): List<String> = listOf(
      Deertime.E10_EEA,
      Deertime.E15_EEA,
      Deertime.E15_US,
      Deertime.E6_EEA,
      Deertime.E6_US,
      Deertime.E9_EEA,
      Deertime.E9_US
  )

  /**
   * Get all device specifications for Delephas devices.
   * Useful for delephas testing.
   */
  public fun getDelephasDevices(): List<String> = listOf(
      Delephas.SEOCHO
  )

  /**
   * Get all device specifications for Dell devices.
   * Useful for dell testing.
   */
  public fun getDellDevices(): List<String> = listOf(
      Dell.BB,
      Dell.EP,
      Dell.SO,
      Dell.THUNDERBIRD,
      Dell.VENUE7,
      Dell.VENUE8,
      Dell.YELLOWTAIL
  )

  /**
   * Get all device specifications for DENKA devices.
   * Useful for denka testing.
   */
  public fun getDenkaDevices(): List<String> = listOf(
      Denka.R1,
      Denka.R2,
      Denka.TCL_EU
  )

  /**
   * Get all device specifications for DENS-TV devices.
   * Useful for dens-tv testing.
   */
  public fun getDensTvDevices(): List<String> = listOf(
      DensTv.B866V2FAV5_DENSTV
  )

  /**
   * Get all device specifications for DENSOWAVE devices.
   * Useful for densowave testing.
   */
  public fun getDensowaveDevices(): List<String> = listOf(
      Densowave.BHT_1700BWB_1_A7,
      Densowave.BHT_1700QWB_1_A7,
      Densowave.BHT_1700QWB_2_A7,
      Densowave.BHT_1700QWBG_1_A7,
      Densowave.BHT_1700QWBG_2_A7,
      Densowave.BHT_1800QWB_1_A7,
      Densowave.BHT_1800QWBG_1_A7,
      Densowave.BHT_M60_QW_A10,
      Densowave.BHT_M60_QWG_A10,
      Densowave.BHT_M70_QW_A10,
      Densowave.BHT_M70_QWG_A10,
      Densowave.BHT_M80_QW_A10,
      Densowave.BHT_M80_QWG_A10
  )

  /**
   * Get all device specifications for denver devices.
   * Useful for denver testing.
   */
  public fun getDenverDevices(): List<String> = listOf(
      Denver.SCQ_50001G,
      Denver.SDQ_55044L,
      Denver.SDQ_57004L,
      Denver.TAQ_104A,
      Denver.TAQ_703A,
      Denver.TAQ10,
      Denver.TAQ102,
      Denver.TAQ70,
      Denver.TAQ_10G,
      Denver.TIO_80,
      Denver.TIQ_1044,
      Denver.TIQ_1049,
      Denver.TIQ_70,
      Denver.TIQ102,
      Denver.TIQ_1048
  )

  /**
   * Get all device specifications for DEPLAY devices.
   * Useful for deplay testing.
   */
  public fun getDeplayDevices(): List<String> = listOf(
      Deplay.BS101_EEA,
      Deplay.BS703_EEA,
      Deplay.BS801_EEA,
      Deplay.E101GCM,
      Deplay.E108GCM,
      Deplay.LITE4_EEA,
      Deplay.PRO4
  )

  /**
   * Get all device specifications for DEPOINT devices.
   * Useful for depoint testing.
   */
  public fun getDepointDevices(): List<String> = listOf(
      Depoint.R3_GTV,
      Depoint.R4_GTV
  )

  /**
   * Get all device specifications for DeutscheTelekom devices.
   * Useful for deutschetelekom testing.
   */
  public fun getDeutschetelekomDevices(): List<String> = listOf(
      Deutschetelekom.CHEETAH,
      Deutschetelekom.HUBBS,
      Deutschetelekom.JAGUAR,
      Deutschetelekom.LEOPARD,
      Deutschetelekom.LION,
      Deutschetelekom.PUMA,
      Deutschetelekom.TIGER
  )

  /**
   * Get all device specifications for DEWSOD devices.
   * Useful for dewsod testing.
   */
  public fun getDewsodDevices(): List<String> = listOf(
      Dewsod.C9
  )

  /**
   * Get all device specifications for DEXP devices.
   * Useful for dexp testing.
   */
  public fun getDexpDevices(): List<String> = listOf(
      Dexp.A160,
      Dexp.A250,
      Dexp.A350,
      Dexp.A355,
      Dexp.A360,
      Dexp.A440,
      Dexp.A455,
      Dexp.A555,
      Dexp.AL250,
      Dexp.AL350,
      Dexp.AS155,
      Dexp.AS260,
      Dexp.AS360,
      Dexp.B11,
      Dexp.B17,
      Dexp.B18,
      Dexp.B21,
      Dexp.B27,
      Dexp.B28,
      Dexp.B31,
      Dexp.B340,
      Dexp.B355,
      Dexp.B38,
      Dexp.B450,
      Dexp.BL150,
      Dexp.BL155,
      Dexp.BL160,
      Dexp.BL250,
      Dexp.BL350,
      Dexp.BS155,
      Dexp.C18,
      Dexp.C37,
      Dexp.C38,
      Dexp.D11,
      Dexp.D21,
      Dexp.E110,
      Dexp.E170,
      Dexp.E180,
      Dexp.E210,
      Dexp.EX111,
      Dexp.G255,
      Dexp.G450,
      Dexp.G450_2021,
      Dexp.G550,
      Dexp.GL355,
      Dexp.GS155,
      Dexp.H110,
      Dexp.H210,
      Dexp.H270,
      Dexp.H28,
      Dexp.H310,
      Dexp.H370,
      Dexp.H410,
      Dexp.K11,
      Dexp.K17,
      Dexp.K18,
      Dexp.K21,
      Dexp.K28,
      Dexp.K28,
      Dexp.K31,
      Dexp.K31,
      Dexp.K38,
      Dexp.K41,
      Dexp.K41,
      Dexp.K48,
      Dexp.K51,
      Dexp.K61,
      Dexp.L110,
      Dexp.L180,
      Dexp.L210,
      Dexp.L270,
      Dexp.L310I,
      Dexp.L370I,
      Dexp.L470,
      Dexp.M110,
      Dexp.M170,
      Dexp.M210,
      Dexp.N180I,
      Dexp.N210,
      Dexp.N280,
      Dexp.N280I,
      Dexp.N310,
      Dexp.N370,
      Dexp.N380I,
      Dexp.N410,
      Dexp.N570,
      Dexp.P11,
      Dexp.P210,
      Dexp.P280,
      Dexp.P350,
      Dexp.P380,
      Dexp.P380I,
      Dexp.P410,
      Dexp.P510,
      Dexp.Q110,
      Dexp.Q180,
      Dexp.Q210,
      Dexp.Q280,
      Dexp.Q310,
      Dexp.R110,
      Dexp.R180,
      Dexp.S110,
      Dexp.S169,
      Dexp.S190,
      Dexp.S270I,
      Dexp.S280,
      Dexp.S290,
      Dexp.S370,
      Dexp.S470,
      Dexp.S570,
      Dexp.S670,
      Dexp.S770,
      Dexp.S770I,
      Dexp.SENIOR,
      Dexp.T155,
      Dexp.T21,
      Dexp.VA110,
      Dexp.VA210,
      Dexp.XL150,
      Dexp.Z250,
      Dexp.Z455
  )

  /**
   * Get all device specifications for DEYI devices.
   * Useful for deyi testing.
   */
  public fun getDeyiDevices(): List<String> = listOf(
      Deyi.DEYI_10M18,
      Deyi.DEYI10M18A53
  )

  /**
   * Get all device specifications for DFN devices.
   * Useful for dfn testing.
   */
  public fun getDfnDevices(): List<String> = listOf(
      Dfn.AMIGO7X3
  )

  /**
   * Get all device specifications for Dghrti devices.
   * Useful for dghrti testing.
   */
  public fun getDghrtiDevices(): List<String> = listOf(
      Dghrti.TAB20_EEA,
      Dghrti.TAB20_US,
      Dghrti.TAB30_EEA,
      Dghrti.TAB30_US,
      Dghrti.TAB50_EEA,
      Dghrti.TAB50_US
  )

  /**
   * Get all device specifications for DGO devices.
   * Useful for dgo testing.
   */
  public fun getDgoDevices(): List<String> = listOf(
      Dgo.HP46D
  )

  /**
   * Get all device specifications for DGTEC devices.
   * Useful for dgtec testing.
   */
  public fun getDgtecDevices(): List<String> = listOf(
      Dgtec.DG101HSTB,
      Dgtec.DG101SVCB,
      Dgtec.DG101TBLS,
      Dgtec.DG7TBIPSPA,
      Dgtec.DGIPS7
  )

  /**
   * Get all device specifications for Dialn devices.
   * Useful for dialn testing.
   */
  public fun getDialnDevices(): List<String> = listOf(
      Dialn.G10,
      Dialn.G65,
      Dialn.NEO,
      Dialn.NEOA,
      Dialn.NOVA,
      Dialn.NOVAA,
      Dialn.S10,
      Dialn.S8,
      Dialn.X10_PULSE,
      Dialn.X10G,
      Dialn.X10ULTRA,
      Dialn.X62,
      Dialn.X62A,
      Dialn.X62B,
      Dialn.X62C,
      Dialn.X62S,
      Dialn.X65A,
      Dialn.X65B,
      Dialn.X65C,
      Dialn.X68B,
      Dialn.X8G,
      Dialn.X8ULTRA
  )

  /**
   * Get all device specifications for Dialog devices.
   * Useful for dialog testing.
   */
  public fun getDialogDevices(): List<String> = listOf(
      Dialog.DIALOG_BLAZE_MINI,
      Dialog.DV8829_DIALOG,
      Dialog.N9106H_B_DIALOG,
      Dialog.SEI103
  )

  /**
   * Get all device specifications for Dialog-Blaze devices.
   * Useful for dialog-blaze testing.
   */
  public fun getDialogBlazeDevices(): List<String> = listOf(
      DialogBlaze.M50E_1A
  )

  /**
   * Get all device specifications for Dialog_TV devices.
   * Useful for dialog_tv testing.
   */
  public fun getDialogTvDevices(): List<String> = listOf(
      DialogTv.DV6067H_DIALOG
  )

  /**
   * Get all device specifications for Dicle devices.
   * Useful for dicle testing.
   */
  public fun getDicleDevices(): List<String> = listOf(
      Dicle.DICLE_DTAB_ACTIVE_S,
      Dicle.DICLE_DTAB_KPAD,
      Dicle.DICLE_DTAB_U1008,
      Dicle.DICLE_IPLAY40_PRO,
      Dicle.DICLE_TAB_LITE_M,
      Dicle.DTABPLUS,
      Dicle.TAB_MYPEN_P1,
      Dicle.TAB_ULTRA
  )

  /**
   * Get all device specifications for Dicle_Tab devices.
   * Useful for dicle_tab testing.
   */
  public fun getDicleTabDevices(): List<String> = listOf(
      DicleTab.ACTIVE,
      DicleTab.DTABC2
  )

  /**
   * Get all device specifications for DiDi devices.
   * Useful for didi testing.
   */
  public fun getDidiDevices(): List<String> = listOf(
      Didi.DDT_001
  )

  /**
   * Get all device specifications for DIDIK devices.
   * Useful for didik testing.
   */
  public fun getDidikDevices(): List<String> = listOf(
      Didik.DT24PLUS
  )

  /**
   * Get all device specifications for DIDIK_TAB devices.
   * Useful for didik_tab testing.
   */
  public fun getDidikTabDevices(): List<String> = listOf(
      DidikTab.DT24
  )

  /**
   * Get all device specifications for DIGGIO devices.
   * Useful for diggio testing.
   */
  public fun getDiggioDevices(): List<String> = listOf(
      Diggio.LAVENDER,
      Diggio.MOUNTBAKER,
      Diggio.STANFORD,
      Diggio.ZHONGSHAN
  )

  /**
   * Get all device specifications for DIGI devices.
   * Useful for digi testing.
   */
  public fun getDigiDevices(): List<String> = listOf(
      Digi.DIGI_C1,
      Digi.DIGI_K1,
      Digi.DIGI_K2,
      Digi.DIGI_R1,
      Digi.DIGI_R2A
  )

  /**
   * Get all device specifications for Digi_C2 devices.
   * Useful for digi_c2 testing.
   */
  public fun getDigiC2Devices(): List<String> = listOf(
      DigiC2.DIGI_C2
  )

  /**
   * Get all device specifications for Digi_R2 devices.
   * Useful for digi_r2 testing.
   */
  public fun getDigiR2Devices(): List<String> = listOf(
      DigiR2.DIGI_R2
  )

  /**
   * Get all device specifications for DIGICEL devices.
   * Useful for digicel testing.
   */
  public fun getDigicelDevices(): List<String> = listOf(
      Digicel.DL3,
      Digicel.DL3PLUS,
      Digicel.DL3PLUSPRO,
      Digicel.DL4_2022,
      Digicel.DL4_PLUS,
      Digicel.DL4S_TC,
      Digicel.DL5_PRO
  )

  /**
   * Get all device specifications for DigiDragon devices.
   * Useful for digidragon testing.
   */
  public fun getDigidragonDevices(): List<String> = listOf(
      Digidragon._708Z,
      Digidragon.DS502,
      Digidragon.DS571,
      Digidragon.DS6018,
      Digidragon.DS6261
  )

  /**
   * Get all device specifications for DigiKing devices.
   * Useful for digiking testing.
   */
  public fun getDigikingDevices(): List<String> = listOf(
      Digiking.CAPITOLHILL,
      Digiking.KENTON,
      Digiking.KEONEAE,
      Digiking.LASALLE
  )

  /**
   * Get all device specifications for digiland devices.
   * Useful for digiland testing.
   */
  public fun getDigilandDevices(): List<String> = listOf(
      Digiland.DL1001,
      Digiland.DL1050,
      Digiland.DL7006,
      Digiland.DL721_RB,
      Digiland.DL8006,
      Digiland.DL9002,
      Digiland.DL9003,
      Digiland.MDT9003,
      Digiland.MID1008,
      Digiland.MID1008L_EMMC,
      Digiland.MID1016,
      Digiland.MID1016_MA,
      Digiland.MID1032_MR,
      Digiland.MID1032_MR_32,
      Digiland.MID1109_MX,
      Digiland.MID713L_LP
  )

  /**
   * Get all device specifications for Digiquest devices.
   * Useful for digiquest testing.
   */
  public fun getDigiquestDevices(): List<String> = listOf(
      Digiquest.TAMACHI
  )

  /**
   * Get all device specifications for DIGIT devices.
   * Useful for digit testing.
   */
  public fun getDigitDevices(): List<String> = listOf(
      Digit.DIGIT_GLORY1,
      Digit.DIGIT_INFINITY,
      Digit.DIGIT_INFINITY_MAX,
      Digit.DIGITPLAY1,
      Digit.NOTE_14,
      Digit.NOTE_20
  )

  /**
   * Get all device specifications for digITS devices.
   * Useful for digits testing.
   */
  public fun getDigitsDevices(): List<String> = listOf(
      Digits.T1
  )

  /**
   * Get all device specifications for DIGMA devices.
   * Useful for digma testing.
   */
  public fun getDigmaDevices(): List<String> = listOf(
      Digma.CS1114ML,
      Digma.CS1194MG,
      Digma.CS1195MG,
      Digma.CS1196ML,
      Digma.CS1207MG,
      Digma.CS1210MG,
      Digma.CS1219PL,
      Digma.CS1232MG,
      Digma.CS1235PL,
      Digma.CS1272PL,
      Digma.CS3001ML,
      Digma.CS3242ML,
      Digma.CS6063ML,
      Digma.CS7113PL,
      Digma.CS7193MG,
      Digma.CS7204MG,
      Digma.CS7208MG,
      Digma.CS7216MG,
      Digma.CS7217PL,
      Digma.CS7234PL,
      Digma.CS8152ML,
      Digma.CS8205PG,
      Digma.CS8206MG,
      Digma.CS8218PL,
      Digma.CS8231PL,
      Digma.CS8233MG,
      Digma.CS8268PL,
      Digma.CS8271PL,
      Digma.HT4039PG,
      Digma.HT5035PG,
      Digma.LS4051MG,
      Digma.LS5040PL,
      Digma.LS5041PL,
      Digma.LS5053ML,
      Digma.LT4038PG,
      Digma.LT4049PG,
      Digma.LT4054MG,
      Digma.LT5052ML,
      Digma.NS1800ML,
      Digma.PS1135MG,
      Digma.PS1137MG,
      Digma.PS1150ML,
      Digma.PS1163MG,
      Digma.PS1164ML,
      Digma.PS1166ML,
      Digma.PS1173PL,
      Digma.PS1185MG,
      Digma.PS1187MG,
      Digma.PS1201PG,
      Digma.PS1202PL,
      Digma.PS1213PG,
      Digma.PS7159PG,
      Digma.PS7165MG,
      Digma.PS7180PG,
      Digma.PS7191PL,
      Digma.PS7192PL,
      Digma.PS7210PG,
      Digma.PS8156ML,
      Digma.PS8161PG,
      Digma.PS8162PL,
      Digma.PS8163PL,
      Digma.PS8181MG,
      Digma.PS8199ML,
      Digma.PS8212PG,
      Digma.PS9146MG,
      Digma.PS9167PG,
      Digma.PT1138MG,
      Digma.PT1139PL,
      Digma.RS1248PL,
      Digma.RS1249PL,
      Digma.RS1253PL,
      Digma.RS1267PL,
      Digma.TS1184MG,
      Digma.TS1186MG,
      Digma.TS1190ML,
      Digma.TS1215PG,
      Digma.TS1220PG,
      Digma.TS1221PL,
      Digma.TS1228PL,
      Digma.TS1229PL,
      Digma.TS1245PG,
      Digma.TS1246PG,
      Digma.TS1266RW,
      Digma.TS1269PL,
      Digma.TS1273PL,
      Digma.TS1277ML,
      Digma.TS7175MG,
      Digma.TS7177MG,
      Digma.TS7179ML,
      Digma.TS7198PG,
      Digma.TS7203MG,
      Digma.TS7203RW,
      Digma.TS7222PG,
      Digma.TS7224PL,
      Digma.TS7225PL,
      Digma.TS7243PG,
      Digma.TS7244PG,
      Digma.TS8211PG,
      Digma.TS8226PL,
      Digma.TS8227PL,
      Digma.TS8274AW,
      Digma.TS8275ML,
      Digma.TT1188PL,
      Digma.TT1192PG,
      Digma.TT1236PG,
      Digma.TT7174PG,
      Digma.TT7223PG,
      Digma.VS5035ML,
      Digma.VS5036PL,
      Digma.WS1250PL
  )

  /**
   * Get all device specifications for Dijitsu devices.
   * Useful for dijitsu testing.
   */
  public fun getDijitsuDevices(): List<String> = listOf(
      Dijitsu.DCT_90,
      Dijitsu.HONGKONG,
      Dijitsu.SMART_A11S
  )

  /**
   * Get all device specifications for DingDong devices.
   * Useful for dingdong testing.
   */
  public fun getDingdongDevices(): List<String> = listOf(
      Dingdong.IB101F_UAG
  )

  /**
   * Get all device specifications for DIRECTV devices.
   * Useful for directv testing.
   */
  public fun getDirectvDevices(): List<String> = listOf(
      Directv.HP40A,
      Directv.HYS0A,
      Directv.P21KW500
  )

  /**
   * Get all device specifications for DISH devices.
   * Useful for dish testing.
   */
  public fun getDishDevices(): List<String> = listOf(
      Dish.ATVMJ4,
      Dish.ATVWJ4,
      Dish.DISH_CABLE_BCM,
      Dish.DSH98123,
      Dish.EU001,
      Dish.M377_DISH,
      Dish.SL104D,
      Dish.SL201D,
      Dish.SN339D,
      Dish.SN339D_SMT,
      Dish.SNAP2,
      Dish.U653DS,
      Dish.U695DS
  )

  /**
   * Get all device specifications for DishTV devices.
   * Useful for dishtv testing.
   */
  public fun getDishtvDevices(): List<String> = listOf(
      Dishtv.SEI110,
      Dishtv.STB
  )

  /**
   * Get all device specifications for DishTV-NZ devices.
   * Useful for dishtv-nz testing.
   */
  public fun getDishtvNzDevices(): List<String> = listOf(
      DishtvNz.HICAST
  )

  /**
   * Get all device specifications for Disney devices.
   * Useful for disney testing.
   */
  public fun getDisneyDevices(): List<String> = listOf(
      Disney.FROZEN_G9
  )

  /**
   * Get all device specifications for Disney_Pixar devices.
   * Useful for disney_pixar testing.
   */
  public fun getDisneyPixarDevices(): List<String> = listOf(
      DisneyPixar.TOY_STORY
  )

  /**
   * Get all device specifications for Ditec devices.
   * Useful for ditec testing.
   */
  public fun getDitecDevices(): List<String> = listOf(
      Ditec.BLADE,
      Ditec.XP
  )

  /**
   * Get all device specifications for Ditecma devices.
   * Useful for ditecma testing.
   */
  public fun getDitecmaDevices(): List<String> = listOf(
      Ditecma.M1092RV5
  )

  /**
   * Get all device specifications for DIVA devices.
   * Useful for diva testing.
   */
  public fun getDivaDevices(): List<String> = listOf(
      Diva.T10K_PLUS,
      Diva.T7K_PLUS_SE3_EEA
  )

  /**
   * Get all device specifications for DIXON devices.
   * Useful for dixon testing.
   */
  public fun getDixonDevices(): List<String> = listOf(
      Dixon.ACK1010,
      Dixon.DFM48,
      Dixon.DN6015,
      Dixon.DN6023D,
      Dixon.DN6901,
      Dixon.KT5512,
      Dixon.L_5,
      Dixon.L1,
      Dixon.S5790,
      Dixon.S90,
      Dixon.TS_M105D,
      Dixon.TS_M105D_MKII,
      Dixon.TS_M105G_1,
      Dixon.TS_M704F_1,
      Dixon.TS_M704G,
      Dixon.TS_M103A
  )

  /**
   * Get all device specifications for DL devices.
   * Useful for dl testing.
   */
  public fun getDlDevices(): List<String> = listOf(
      Dl.TABKIDS_PLUS,
      Dl.TABLET_DL_2810,
      Dl.TABLET_DL_2811,
      Dl.TABLET_DL_2820,
      Dl.TABLET_DL_3721,
      Dl.TABLET_DL_3722,
      Dl.TABLET_DL_3723,
      Dl.TABLET_DL_3724,
      Dl.TABLET_DL_3725,
      Dl.TABLET_DL_4010,
      Dl.X_QUAD_PRO
  )

  /**
   * Get all device specifications for DMOAO devices.
   * Useful for dmoao testing.
   */
  public fun getDmoaoDevices(): List<String> = listOf(
      Dmoao.D11_EEA,
      Dmoao.D3_EEA,
      Dmoao.D3_US,
      Dmoao.D5_T_EEA,
      Dmoao.D5_T_US,
      Dmoao.D5_EEA,
      Dmoao.D5_US,
      Dmoao.D6_EEA,
      Dmoao.D6_US,
      Dmoao.DMOAO_D2_EEA,
      Dmoao.DMOAO_D2_US
  )

  /**
   * Get all device specifications for DNA devices.
   * Useful for dna testing.
   */
  public fun getDnaDevices(): List<String> = listOf(
      Dna.DCTIW384,
      Dna.M393GENA,
      Dna.M393VSB_DNA
  )

  /**
   * Get all device specifications for Do devices.
   * Useful for do testing.
   */
  public fun getDoDevices(): List<String> = listOf(
      Do.MATE6_PRO
  )

  /**
   * Get all device specifications for DOCOMO devices.
   * Useful for docomo testing.
   */
  public fun getDocomoDevices(): List<String> = listOf(
      Docomo.DM_01H,
      Docomo.DM_01J,
      Docomo.F01F,
      Docomo.F01H,
      Docomo.F01J,
      Docomo.F01K,
      Docomo.F01L,
      Docomo.F02E,
      Docomo.F02F,
      Docomo.F02G,
      Docomo.F02H,
      Docomo.F02K,
      Docomo.F02L,
      Docomo.F03F,
      Docomo.F03G,
      Docomo.F03H,
      Docomo.F03K,
      Docomo.F04E,
      Docomo.F04G,
      Docomo.F04H,
      Docomo.F04J,
      Docomo.F04K,
      Docomo.F05E,
      Docomo.F05F,
      Docomo.F05J,
      Docomo.F06E,
      Docomo.F07E,
      Docomo.F09E,
      Docomo.F10D,
      Docomo.F41A,
      Docomo.F42A,
      Docomo.F51A,
      Docomo.F52A,
      Docomo.JERID,
      Docomo.N_02E,
      Docomo.N_03E,
      Docomo.N_04E,
      Docomo.N_06E,
      Docomo.N_07D,
      Docomo.P_01K,
      Docomo.P_02E,
      Docomo.P_03E,
      Docomo.SH_01F,
      Docomo.SH_01FDQ,
      Docomo.SH_01G,
      Docomo.SH_01H,
      Docomo.SH_01K,
      Docomo.SH_01L,
      Docomo.SH_01M,
      Docomo.SH_02F,
      Docomo.SH_02G,
      Docomo.SH_02H,
      Docomo.SH_02J,
      Docomo.SH_02M,
      Docomo.SH_03G,
      Docomo.SH_03J,
      Docomo.SH_03K,
      Docomo.SH_04F,
      Docomo.SH_04G,
      Docomo.SH_04H,
      Docomo.SH_04L,
      Docomo.SH_05F,
      Docomo.SH_05G,
      Docomo.SH_06E,
      Docomo.SH_06F,
      Docomo.SH_07E,
      Docomo.SH_08E,
      Docomo.SH_51A,
      Docomo.SH_51B,
      Docomo.SH_51C,
      Docomo.SH_51D,
      Docomo.SH_51E,
      Docomo.SH_51F,
      Docomo.SH_52C,
      Docomo.SH_52D,
      Docomo.SH_52E,
      Docomo.SH_52F,
      Docomo.SH_53A,
      Docomo.SH_53C,
      Docomo.SH_53D,
      Docomo.SH_53E,
      Docomo.SH_54B,
      Docomo.SH_54D,
      Docomo.SH_54E,
      Docomo.SH02E,
      Docomo.SH04E,
      Docomo.SH09D,
      Docomo.SH10D,
      Docomo.SO_01E,
      Docomo.SO_01F,
      Docomo.SO_01G,
      Docomo.SO_01H,
      Docomo.SO_01J,
      Docomo.SO_01K,
      Docomo.SO_01L,
      Docomo.SO_01M,
      Docomo.SO_02E,
      Docomo.SO_02F,
      Docomo.SO_02G,
      Docomo.SO_02H,
      Docomo.SO_02J,
      Docomo.SO_02K,
      Docomo.SO_02L,
      Docomo.SO_03E,
      Docomo.SO_03F,
      Docomo.SO_03G,
      Docomo.SO_03H,
      Docomo.SO_03J,
      Docomo.SO_03K,
      Docomo.SO_03L,
      Docomo.SO_04D,
      Docomo.SO_04E,
      Docomo.SO_04F,
      Docomo.SO_04G,
      Docomo.SO_04H,
      Docomo.SO_04J,
      Docomo.SO_04K,
      Docomo.SO_05D,
      Docomo.SO_05F,
      Docomo.SO_05G,
      Docomo.SO_05K,
      Docomo.SO_41A,
      Docomo.SO_41B,
      Docomo.SO_51A,
      Docomo.SO_51B,
      Docomo.SO_51C,
      Docomo.SO_51D,
      Docomo.SO_51E,
      Docomo.SO_51F,
      Docomo.SO_52A,
      Docomo.SO_52B,
      Docomo.SO_52C,
      Docomo.SO_52D,
      Docomo.SO_52E,
      Docomo.SO_53B,
      Docomo.SO_53C,
      Docomo.SO_53D,
      Docomo.SO_54C
  )

  /**
   * Get all device specifications for DOEL devices.
   * Useful for doel testing.
   */
  public fun getDoelDevices(): List<String> = listOf(
      Doel.TT_7_0
  )

  /**
   * Get all device specifications for Dom-ru_MOVIX devices.
   * Useful for dom-ru_movix testing.
   */
  public fun getDomRuMovixDevices(): List<String> = listOf(
      DomRuMovix.SEI200
  )

  /**
   * Get all device specifications for DOMATON devices.
   * Useful for domaton testing.
   */
  public fun getDomatonDevices(): List<String> = listOf(
      Domaton.D102,
      Domaton.D718,
      Domaton.K111
  )

  /**
   * Get all device specifications for DOOGEE devices.
   * Useful for doogee testing.
   */
  public fun getDoogeeDevices(): List<String> = listOf(
      Doogee._1917,
      Doogee._1918,
      Doogee._1918D,
      Doogee._1918N,
      Doogee._1918T,
      Doogee._1918Y,
      Doogee._1928,
      Doogee._1928P,
      Doogee._1928S,
      Doogee._1928Y,
      Doogee._1929C,
      Doogee._1929H,
      Doogee._1929SC,
      Doogee._1929ST,
      Doogee.BL5000,
      Doogee.BL5500_LITE,
      Doogee.BL7000,
      Doogee.DOOGEE_X10,
      Doogee.F1C,
      Doogee.F1CK,
      Doogee.F1CT,
      Doogee.F1G,
      Doogee.F1P,
      Doogee.F1PS,
      Doogee.F1S,
      Doogee.F1SE,
      Doogee.F2PS,
      Doogee.M19H,
      Doogee.M21,
      Doogee.M21T,
      Doogee.M21TE,
      Doogee.M21TP,
      Doogee.M21TU,
      Doogee.M22,
      Doogee.M22C,
      Doogee.M22CT,
      Doogee.M22G,
      Doogee.M22GS,
      Doogee.M22GTS,
      Doogee.M22H,
      Doogee.M22P,
      Doogee.M23,
      Doogee.M23H,
      Doogee.M23HC_1,
      Doogee.M23HE,
      Doogee.M23HT,
      Doogee.M23S,
      Doogee.M23T,
      Doogee.M23U,
      Doogee.M23UT,
      Doogee.M24C,
      Doogee.M24CT,
      Doogee.M24P,
      Doogee.M24PS,
      Doogee.M24PT,
      Doogee.M24SE,
      Doogee.MIX,
      Doogee.N100,
      Doogee.N20,
      Doogee.N20PRO,
      Doogee.N30,
      Doogee.N40PRO,
      Doogee.P1,
      Doogee.P1_2,
      Doogee.P1D,
      Doogee.P1S_2,
      Doogee.P1T,
      Doogee.P2,
      Doogee.P2D,
      Doogee.P2T,
      Doogee.P2TH,
      Doogee.P3,
      Doogee.P3_PLUS,
      Doogee.P3C,
      Doogee.P3D_2,
      Doogee.P3G,
      Doogee.P3MINI,
      Doogee.P3MINI_KID,
      Doogee.P3MINIS,
      Doogee.P3PRO,
      Doogee.P3T,
      Doogee.P4,
      Doogee.P5S,
      Doogee.P7,
      Doogee.PT1,
      Doogee.PT2,
      Doogee.PT3,
      Doogee.RK1,
      Doogee.RK1KID,
      Doogee.RK1S,
      Doogee.RK2,
      Doogee.RK2KID,
      Doogee.S30,
      Doogee.S35,
      Doogee.S35H,
      Doogee.S35PRO,
      Doogee.S35T,
      Doogee.S40,
      Doogee.S40LITE,
      Doogee.S40PRO,
      Doogee.S51,
      Doogee.S55,
      Doogee.S55_LITE,
      Doogee.S58PRO,
      Doogee.S59,
      Doogee.S59PRO,
      Doogee.S60,
      Doogee.S60LITE,
      Doogee.S61,
      Doogee.S68PRO,
      Doogee.S70,
      Doogee.S70LITE,
      Doogee.S80,
      Doogee.S80LITE,
      Doogee.S86,
      Doogee.S86PRO,
      Doogee.S88PLUS,
      Doogee.S88PRO,
      Doogee.S89,
      Doogee.S89PRO,
      Doogee.S90C,
      Doogee.S90PRO,
      Doogee.S95,
      Doogee.S95PRO,
      Doogee.S96PRO,
      Doogee.S97PRO,
      Doogee.S98,
      Doogee.S98PRO,
      Doogee.SELFIE,
      Doogee.SHOOT_1,
      Doogee.T1,
      Doogee.T2,
      Doogee.T2U,
      Doogee.T530_DG_A54,
      Doogee.T591_DGA57_WE,
      Doogee.T596_DG_D5506_X60L,
      Doogee.T596_DG_X60L,
      Doogee.T758_DG_A67T_N,
      Doogee.T758_DG_M3T_N,
      Doogee.T766_DG_A66,
      Doogee.T766_DG_N_MIX,
      Doogee.T777_DG_M1_65_N,
      Doogee.V10,
      Doogee.V20,
      Doogee.X100,
      Doogee.X11,
      Doogee.X20,
      Doogee.X20L,
      Doogee.X30,
      Doogee.X50,
      Doogee.X50L,
      Doogee.X53,
      Doogee.X55,
      Doogee.X5602_FXKJ_K20,
      Doogee.X5MAX,
      Doogee.X5MAX_PRO,
      Doogee.X60,
      Doogee.X6069_DG_A50_37M65,
      Doogee.X60L,
      Doogee.X70,
      Doogee.X80,
      Doogee.X90,
      Doogee.X90L,
      Doogee.X93,
      Doogee.X95,
      Doogee.X95I,
      Doogee.X95PRO,
      Doogee.X96,
      Doogee.X96PRO,
      Doogee.X97PRO,
      Doogee.X9PRO,
      Doogee.Y6,
      Doogee.Y7,
      Doogee.Y7PLUS,
      Doogee.Y8,
      Doogee.Y8C,
      Doogee.Y8PLUS,
      Doogee.Y9PLUS,
      Doogee.ZN133S,
      Doogee.ZN133T,
      Doogee.ZN136T,
      Doogee.ZN137,
      Doogee.ZN138,
      Doogee.ZN138P,
      Doogee.ZN138PE,
      Doogee.ZN140,
      Doogee.ZN140S
  )

  /**
   * Get all device specifications for Doppio devices.
   * Useful for doppio testing.
   */
  public fun getDoppioDevices(): List<String> = listOf(
      Doppio.DOPPIO_SL558,
      Doppio.U500
  )

  /**
   * Get all device specifications for DORA devices.
   * Useful for dora testing.
   */
  public fun getDoraDevices(): List<String> = listOf(
      Dora.LONGSHAN,
      Dora.R1,
      Dora.R2,
      Dora.REDWOOD
  )

  /**
   * Get all device specifications for Doro devices.
   * Useful for doro testing.
   */
  public fun getDoroDevices(): List<String> = listOf(
      Doro._820MINI,
      Doro._825A,
      Doro.DORO_8020X,
      Doro.DSB0010,
      Doro.DSB0090,
      Doro.DSB0170,
      Doro.DSB0220,
      Doro.DSB0230,
      Doro.DSB0400,
      Doro.DSB0440,
      Doro.DSB0550,
      Doro.DSB0560,
      Doro.DSC0540,
      Doro.DTO0410,
      Doro.LIBERTO820
  )

  /**
   * Get all device specifications for Dragon_Touch devices.
   * Useful for dragon_touch testing.
   */
  public fun getDragonTouchDevices(): List<String> = listOf(
      DragonTouch.KIDZPAD_Y88X_8,
      DragonTouch.M7,
      DragonTouch.MAX_10,
      DragonTouch.MAX_10_EEA,
      DragonTouch.NOTEPAD_K10,
      DragonTouch.NOTEPAD102,
      DragonTouch.NOTEPAD102_EEA,
      DragonTouch.NOTEPAD_102,
      DragonTouch.NOTEPAD_GO_801,
      DragonTouch.NOTEPAD_Y80,
      DragonTouch.NOTEPADGO801,
      DragonTouch.S10M,
      DragonTouch.T10M,
      DragonTouch.T12M,
      DragonTouch.T12M_EEA,
      DragonTouch.X10A,
      DragonTouch.X7,
      DragonTouch.Y80,
      DragonTouch.Y88X_PLUS,
      DragonTouch.Y88X_PRO
  )

  /**
   * Get all device specifications for DragonTouch devices.
   * Useful for dragontouch testing.
   */
  public fun getDragontouchDevices(): List<String> = listOf(
      Dragontouch.MAX_10,
      Dragontouch.TULIP_D210,
      Dragontouch.V10
  )

  /**
   * Get all device specifications for DreamMaker devices.
   * Useful for dreammaker testing.
   */
  public fun getDreammakerDevices(): List<String> = listOf(
      Dreammaker.DPLAY
  )

  /**
   * Get all device specifications for Dreamstar devices.
   * Useful for dreamstar testing.
   */
  public fun getDreamstarDevices(): List<String> = listOf(
      Dreamstar.MARINA,
      Dreamstar.NAGATA,
      Dreamstar.YYZ
  )

  /**
   * Get all device specifications for DREAMTECH devices.
   * Useful for dreamtech testing.
   */
  public fun getDreamtechDevices(): List<String> = listOf(
      Dreamtech.DTECH10,
      Dreamtech.KIDDOTAB10,
      Dreamtech.STARPAD,
      Dreamtech.STARPAD_PLUS,
      Dreamtech.VOLTA_X
  )

  /**
   * Get all device specifications for DREAMVIEW devices.
   * Useful for dreamview testing.
   */
  public fun getDreamviewDevices(): List<String> = listOf(
      Dreamview.STANFORD
  )

  /**
   * Get all device specifications for Droidlogic devices.
   * Useful for droidlogic testing.
   */
  public fun getDroidlogicDevices(): List<String> = listOf(
      Droidlogic.AMPERE,
      Droidlogic.FRANKLIN,
      Droidlogic.OPPEN
  )

  /**
   * Get all device specifications for DSIC devices.
   * Useful for dsic testing.
   */
  public fun getDsicDevices(): List<String> = listOf(
      Dsic.DS6,
      Dsic.DS60S,
      Dsic.RD86QE
  )

  /**
   * Get all device specifications for dtab devices.
   * Useful for dtab testing.
   */
  public fun getDtabDevices(): List<String> = listOf(
      Dtab.D_01G,
      Dtab.D_01H,
      Dtab.D_01J,
      Dtab.D_01K,
      Dtab.D_02H,
      Dtab.D_02K,
      Dtab.D_41A,
      Dtab.D_51C,
      Dtab.TK_P617_3_3GHZ
  )

  /**
   * Get all device specifications for DTAC devices.
   * Useful for dtac testing.
   */
  public fun getDtacDevices(): List<String> = listOf(
      Dtac.DTACPHONES3,
      Dtac.DTACPHONET3,
      Dtac.DTACPHONEX3
  )

  /**
   * Get all device specifications for DTV devices.
   * Useful for dtv testing.
   */
  public fun getDtvDevices(): List<String> = listOf(
      Dtv.DIGITAL_LIFE_P3
  )

  /**
   * Get all device specifications for Dual devices.
   * Useful for dual testing.
   */
  public fun getDualDevices(): List<String> = listOf(
      Dual.KENTON,
      Dual.LASALLE
  )

  /**
   * Get all device specifications for DUNHOO devices.
   * Useful for dunhoo testing.
   */
  public fun getDunhooDevices(): List<String> = listOf(
      Dunhoo.UPAD2
  )

  /**
   * Get all device specifications for Dunns_Mobile devices.
   * Useful for dunns_mobile testing.
   */
  public fun getDunnsMobileDevices(): List<String> = listOf(
      DunnsMobile.ETAB_M9041G
  )

  /**
   * Get all device specifications for DUODUOGO devices.
   * Useful for duoduogo testing.
   */
  public fun getDuoduogoDevices(): List<String> = listOf(
      Duoduogo.S10,
      Duoduogo.S10_EEA,
      Duoduogo.S7_EEA,
      Duoduogo.S8,
      Duoduogo.TAB_A7,
      Duoduogo.TAB_S2,
      Duoduogo.TAB_S2_EEA
  )

  /**
   * Get all device specifications for Durabrand devices.
   * Useful for durabrand testing.
   */
  public fun getDurabrandDevices(): List<String> = listOf(
      Durabrand.BROADWAY,
      Durabrand.DUPONT,
      Durabrand.HANYANG,
      Durabrand.NIPPORI
  )

  /**
   * Get all device specifications for duubee devices.
   * Useful for duubee testing.
   */
  public fun getDuubeeDevices(): List<String> = listOf(
      Duubee.DT1052,
      Duubee.W1
  )

  /**
   * Get all device specifications for DWSUMMUS devices.
   * Useful for dwsummus testing.
   */
  public fun getDwsummusDevices(): List<String> = listOf(
      Dwsummus.MARINA,
      Dwsummus.SEOCHO
  )

  /**
   * Get all device specifications for DYANORA devices.
   * Useful for dyanora testing.
   */
  public fun getDyanoraDevices(): List<String> = listOf(
      Dyanora.STANFORD,
      Dyanora.ZHONGSHAN
  )

  /**
   * Get all device specifications for Dynalink devices.
   * Useful for dynalink testing.
   */
  public fun getDynalinkDevices(): List<String> = listOf(
      Dynalink.STI6130D350,
      Dynalink.XNA,
      Dynalink.YOC
  )

  /**
   * Get all device specifications for Dyon devices.
   * Useful for dyon testing.
   */
  public fun getDyonDevices(): List<String> = listOf(
      Dyon.BANGBAE,
      Dyon.CAPITOLHILL,
      Dyon.KEONEAE,
      Dyon.KOMAGOME,
      Dyon.STANFORD,
      Dyon.ZHONGSHAN
  )

  /**
   * Get all device specifications for e10 devices.
   * Useful for e10 testing.
   */
  public fun getE10Devices(): List<String> = listOf(
      E10.ETPAD
  )

  /**
   * Get all device specifications for e4u devices.
   * Useful for e4u testing.
   */
  public fun getE4uDevices(): List<String> = listOf(
      E4u.TAB900
  )

  /**
   * Get all device specifications for E-BODA devices.
   * Useful for e-boda testing.
   */
  public fun getEBodaDevices(): List<String> = listOf(
      EBoda.ECLIPSE_G400M
  )

  /**
   * Get all device specifications for E-LEAD devices.
   * Useful for e-lead testing.
   */
  public fun getELeadDevices(): List<String> = listOf(
      ELead.RSE
  )

  /**
   * Get all device specifications for E-tel devices.
   * Useful for e-tel testing.
   */
  public fun getETelDevices(): List<String> = listOf(
      ETel.E_TEL_I10,
      ETel.E_TEL_I20,
      ETel.E_TEL_Q7,
      ETel.M4
  )

  /**
   * Get all device specifications for E-Wealth_Mobile devices.
   * Useful for e-wealth_mobile testing.
   */
  public fun getEWealthMobileDevices(): List<String> = listOf(
      EWealthMobile.E508,
      EWealthMobile.E5701
  )

  /**
   * Get all device specifications for EACHPAI devices.
   * Useful for eachpai testing.
   */
  public fun getEachpaiDevices(): List<String> = listOf(
      Eachpai._706,
      Eachpai.Q8
  )

  /**
   * Get all device specifications for EACRUGGED devices.
   * Useful for eacrugged testing.
   */
  public fun getEacruggedDevices(): List<String> = listOf(
      Eacrugged.EP500,
      Eacrugged.RG80,
      Eacrugged.WOLF10R
  )

  /**
   * Get all device specifications for EAGIESOAR devices.
   * Useful for eagiesoar testing.
   */
  public fun getEagiesoarDevices(): List<String> = listOf(
      Eagiesoar.EE1010_EEA
  )

  /**
   * Get all device specifications for EagleSoar devices.
   * Useful for eaglesoar testing.
   */
  public fun getEaglesoarDevices(): List<String> = listOf(
      Eaglesoar.E_764_EEA,
      Eaglesoar.E10A_EEA,
      Eaglesoar.EE_35_EEA,
      Eaglesoar.EE_P30_EEA,
      Eaglesoar.EE10A,
      Eaglesoar.Z_766_EEA
  )

  /**
   * Get all device specifications for EANCOM devices.
   * Useful for eancom testing.
   */
  public fun getEancomDevices(): List<String> = listOf(
      Eancom.PIXBA2019
  )

  /**
   * Get all device specifications for EAS-ELECTRIC devices.
   * Useful for eas-electric testing.
   */
  public fun getEasElectricDevices(): List<String> = listOf(
      EasElectric.R1,
      EasElectric.R2
  )

  /**
   * Get all device specifications for EASYTECK devices.
   * Useful for easyteck testing.
   */
  public fun getEasyteckDevices(): List<String> = listOf(
      Easyteck.EK10,
      Easyteck.EK12
  )

  /**
   * Get all device specifications for ebox devices.
   * Useful for ebox testing.
   */
  public fun getEboxDevices(): List<String> = listOf(
      Ebox.DIW387EB,
      Ebox.STI6280D391
  )

  /**
   * Get all device specifications for ECHO devices.
   * Useful for echo testing.
   */
  public fun getEchoDevices(): List<String> = listOf(
      Echo.ECHO_FUSION,
      Echo.ECHO_HORIZON_LITE,
      Echo.ECHO_LOLLY,
      Echo.FEELING,
      Echo.HOLI,
      Echo.HORIZON_LITE_PLUS,
      Echo.HORIZON_M,
      Echo.LOOK,
      Echo.STELLAR_4G,
      Echo.SURF
  )

  /**
   * Get all device specifications for ECHOLINK devices.
   * Useful for echolink testing.
   */
  public fun getEcholinkDevices(): List<String> = listOf(
      Echolink.IAD,
      Echolink.SHINAGAWA
  )

  /**
   * Get all device specifications for ECHOSONIC devices.
   * Useful for echosonic testing.
   */
  public fun getEchosonicDevices(): List<String> = listOf(
      Echosonic.SHINAGAWA
  )

  /**
   * Get all device specifications for ecom devices.
   * Useful for ecom testing.
   */
  public fun getEcomDevices(): List<String> = listOf(
      Ecom.EX_HANDY10,
      Ecom.SMART_EX02
  )

  /**
   * Get all device specifications for ECONNECT devices.
   * Useful for econnect testing.
   */
  public fun getEconnectDevices(): List<String> = listOf(
      Econnect.SQ126G
  )

  /**
   * Get all device specifications for Ecopower devices.
   * Useful for ecopower testing.
   */
  public fun getEcopowerDevices(): List<String> = listOf(
      Ecopower.EP_A100
  )

  /**
   * Get all device specifications for ECOSTAR devices.
   * Useful for ecostar testing.
   */
  public fun getEcostarDevices(): List<String> = listOf(
      Ecostar.ELLINIKO,
      Ecostar.MOUNTBAKER,
      Ecostar.SHIBUYA,
      Ecostar.STANFORD,
      Ecostar.SW4H,
      Ecostar.ZHONGSHAN
  )

  /**
   * Get all device specifications for ECS devices.
   * Useful for ecs testing.
   */
  public fun getEcsDevices(): List<String> = listOf(
      Ecs.TU11MK2
  )

  /**
   * Get all device specifications for EDENWOOD devices.
   * Useful for edenwood testing.
   */
  public fun getEdenwoodDevices(): List<String> = listOf(
      Edenwood.BANGBAE,
      Edenwood.KENTON,
      Edenwood.KOMAGOME
  )

  /**
   * Get all device specifications for EDSTAR devices.
   * Useful for edstar testing.
   */
  public fun getEdstarDevices(): List<String> = listOf(
      Edstar.LC_TS08S
  )

  /**
   * Get all device specifications for EE devices.
   * Useful for ee testing.
   */
  public fun getEeDevices(): List<String> = listOf(
      Ee.HARRIER_MINI,
      Ee.HARRIER_TAB,
      Ee.HAWK_FROM_EE
  )

  /**
   * Get all device specifications for efioo devices.
   * Useful for efioo testing.
   */
  public fun getEfiooDevices(): List<String> = listOf(
      Efioo.EFIOOTABN7A
  )

  /**
   * Get all device specifications for EGBOK devices.
   * Useful for egbok testing.
   */
  public fun getEgbokDevices(): List<String> = listOf(
      Egbok.P803
  )

  /**
   * Get all device specifications for EGL devices.
   * Useful for egl testing.
   */
  public fun getEglDevices(): List<String> = listOf(
      Egl.EGL11QF6,
      Egl.EGL1529I,
      Egl.EGL15QF6,
      Egl.EGLMW1528I
  )

  /**
   * Get all device specifications for EGOBOO devices.
   * Useful for egoboo testing.
   */
  public fun getEgobooDevices(): List<String> = listOf(
      Egoboo.EB101,
      Egoboo.EB104
  )

  /**
   * Get all device specifications for EGOTEK devices.
   * Useful for egotek testing.
   */
  public fun getEgotekDevices(): List<String> = listOf(
      Egotek.EGO1003
  )

  /**
   * Get all device specifications for Ehlel devices.
   * Useful for ehlel testing.
   */
  public fun getEhlelDevices(): List<String> = listOf(
      Ehlel.EHLEL_C7PRO,
      Ehlel.EHLEL_HULAN21,
      Ehlel.EHLEL_DEFENDER_D23
  )

  /**
   * Get all device specifications for Einstein devices.
   * Useful for einstein testing.
   */
  public fun getEinsteinDevices(): List<String> = listOf(
      Einstein.ENTAB3
  )

  /**
   * Get all device specifications for EJBOARD devices.
   * Useful for ejboard testing.
   */
  public fun getEjboardDevices(): List<String> = listOf(
      Ejboard.RK3588_T
  )

  /**
   * Get all device specifications for EKINOX devices.
   * Useful for ekinox testing.
   */
  public fun getEkinoxDevices(): List<String> = listOf(
      Ekinox.E6,
      Ekinox.E8_ULTRA,
      Ekinox.K5
  )

  /**
   * Get all device specifications for EKO devices.
   * Useful for eko testing.
   */
  public fun getEkoDevices(): List<String> = listOf(
      Eko.BANGBAE,
      Eko.BRUNO,
      Eko.CAPITOLHILL,
      Eko.EXPO,
      Eko.GUANDU,
      Eko.ICN,
      Eko.KAITAK,
      Eko.KEONEAE,
      Eko.KOMAGOME,
      Eko.MARTIN,
      Eko.MOUNTBAKER,
      Eko.NIPPORI,
      Eko.PATRICK,
      Eko.SHILIN,
      Eko.STANFORD,
      Eko.TAMACHI,
      Eko.TENNOJI,
      Eko.YEONGDEUNGPO,
      Eko.ZHONGSHAN
  )

  /**
   * Get all device specifications for eks devices.
   * Useful for eks testing.
   */
  public fun getEksDevices(): List<String> = listOf(
      Eks.S5LS,
      Eks.X7
  )

  /**
   * Get all device specifications for eksX devices.
   * Useful for eksx testing.
   */
  public fun getEksxDevices(): List<String> = listOf(
      Eksx.X6
  )

  /**
   * Get all device specifications for EL devices.
   * Useful for el testing.
   */
  public fun getElDevices(): List<String> = listOf(
      El._6AT,
      El._6CS,
      El.D60_PRO,
      El.D68,
      El.PAD_S11,
      El.PAD_S7,
      El.PAD_S8,
      El.X60_PRO,
      El.X70,
      El.X80,
      El.Y10
  )

  /**
   * Get all device specifications for ELACTRON devices.
   * Useful for elactron testing.
   */
  public fun getElactronDevices(): List<String> = listOf(
      Elactron.R3,
      Elactron.R4
  )

  /**
   * Get all device specifications for ELDMandate devices.
   * Useful for eldmandate testing.
   */
  public fun getEldmandateDevices(): List<String> = listOf(
      Eldmandate._10BIZ332
  )

  /**
   * Get all device specifications for Elecson devices.
   * Useful for elecson testing.
   */
  public fun getElecsonDevices(): List<String> = listOf(
      Elecson.PRIMEX1
  )

  /**
   * Get all device specifications for ELECTRA devices.
   * Useful for electra testing.
   */
  public fun getElectraDevices(): List<String> = listOf(
      Electra.ELLINIKO
  )

  /**
   * Get all device specifications for ELECTROMAN devices.
   * Useful for electroman testing.
   */
  public fun getElectromanDevices(): List<String> = listOf(
      Electroman.HONGKONG,
      Electroman.STANFORD,
      Electroman.ZHONGSHAN
  )

  /**
   * Get all device specifications for Electroneum devices.
   * Useful for electroneum testing.
   */
  public fun getElectroneumDevices(): List<String> = listOf(
      Electroneum.ELECTRONEUMM1
  )

  /**
   * Get all device specifications for Element devices.
   * Useful for element testing.
   */
  public fun getElementDevices(): List<String> = listOf(
      Element.HONGKONG,
      Element.KAITAK,
      Element.KHARDI,
      Element.TENNOJI,
      Element.TIGER838
  )

  /**
   * Get all device specifications for Elephone devices.
   * Useful for elephone testing.
   */
  public fun getElephoneDevices(): List<String> = listOf(
      Elephone.A3_PRO,
      Elephone.A4,
      Elephone.A4_PRO,
      Elephone.A5,
      Elephone.A6_MAX,
      Elephone.A6_MINI,
      Elephone.A7H,
      Elephone.E10,
      Elephone.E10_PRO,
      Elephone.ELEPHONE_U,
      Elephone.P11,
      Elephone.P8_3D,
      Elephone.P8_MAX,
      Elephone.PX,
      Elephone.PX_PRO,
      Elephone.SOLDIER,
      Elephone.U3H,
      Elephone.U5,
      Elephone.U_PRO
  )

  /**
   * Get all device specifications for ELEVATE devices.
   * Useful for elevate testing.
   */
  public fun getElevateDevices(): List<String> = listOf(
      Elevate.G5,
      Elevate.G55_LITE,
      Elevate.G58,
      Elevate.G60,
      Elevate.G60X,
      Elevate.G62,
      Elevate.LUNA_G50,
      Elevate.V55,
      Elevate.V55C,
      Elevate.V57
  )

  /**
   * Get all device specifications for elevn devices.
   * Useful for elevn testing.
   */
  public fun getElevnDevices(): List<String> = listOf(
      Elevn.ELEVN_ETAB
  )

  /**
   * Get all device specifications for ELEXIA devices.
   * Useful for elexia testing.
   */
  public fun getElexiaDevices(): List<String> = listOf(
      Elexia.BANGBAE,
      Elexia.BRUNO,
      Elexia.KOMAGOME
  )

  /**
   * Get all device specifications for Elexus devices.
   * Useful for elexus testing.
   */
  public fun getElexusDevices(): List<String> = listOf(
      Elexus.G6_PRO
  )

  /**
   * Get all device specifications for ELINK devices.
   * Useful for elink testing.
   */
  public fun getElinkDevices(): List<String> = listOf(
      Elink.T201
  )

  /**
   * Get all device specifications for Elisa devices.
   * Useful for elisa testing.
   */
  public fun getElisaDevices(): List<String> = listOf(
      Elisa.STB_ELISA_B866V2F01
  )

  /**
   * Get all device specifications for ElisaElamus devices.
   * Useful for elisaelamus testing.
   */
  public fun getElisaelamusDevices(): List<String> = listOf(
      Elisaelamus.UZW4026ELE
  )

  /**
   * Get all device specifications for Elista devices.
   * Useful for elista testing.
   */
  public fun getElistaDevices(): List<String> = listOf(
      Elista.LAKESIDE
  )

  /**
   * Get all device specifications for Elitelux devices.
   * Useful for elitelux testing.
   */
  public fun getEliteluxDevices(): List<String> = listOf(
      Elitelux.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for Elo devices.
   * Useful for elo testing.
   */
  public fun getEloDevices(): List<String> = listOf(
      Elo._10IN_I_SERIES_4,
      Elo._10IN_I_SERIES_4_VALUE,
      Elo._15IN_I_SERIES_4,
      Elo._15IN_I_SERIES_4_USB_C,
      Elo._15IN_I_SERIES_4_USBC_V,
      Elo._15IN_I_SERIES_4_VALUE,
      Elo._22IN_I_SERIES_4,
      Elo._22IN_I_SERIES_4_VALUE,
      Elo.BACKPACK_4,
      Elo.BACKPACK_4_VALUE,
      Elo.ELO_I3_10STD,
      Elo.ELO_I3_15STD,
      Elo.ELO_I3_22STD,
      Elo.ELO_I3_PUCK,
      Elo.M50
  )

  /**
   * Get all device specifications for ELSONIC devices.
   * Useful for elsonic testing.
   */
  public fun getElsonicDevices(): List<String> = listOf(
      Elsonic.REDWOOD
  )

  /**
   * Get all device specifications for ELSYS devices.
   * Useful for elsys testing.
   */
  public fun getElsysDevices(): List<String> = listOf(
      Elsys.SEI103,
      Elsys.TAI
  )

  /**
   * Get all device specifications for Ematic devices.
   * Useful for ematic testing.
   */
  public fun getEmaticDevices(): List<String> = listOf(
      Ematic.DV8235,
      Ematic.EGQ101,
      Ematic.EGQ235SK,
      Ematic.EGQ236BD,
      Ematic.EGQ238BD,
      Ematic.EGQ239BD,
      Ematic.JETSTREAM,
      Ematic.PBSKD12,
      Ematic.PBSKD7001,
      Ematic.PBSKD7200
  )

  /**
   * Get all device specifications for Emerson devices.
   * Useful for emerson testing.
   */
  public fun getEmersonDevices(): List<String> = listOf(
      Emerson.EID_1400,
      Emerson.EID_1050,
      Emerson.EID_1061,
      Emerson.EID_9000
  )

  /**
   * Get all device specifications for emporia devices.
   * Useful for emporia testing.
   */
  public fun getEmporiaDevices(): List<String> = listOf(
      Emporia.E5MINI,
      Emporia.E6,
      Emporia.E6MINI,
      Emporia.E7LT,
      Emporia.S3,
      Emporia.S3MINI,
      Emporia.S4,
      Emporia.S5,
      Emporia.SE,
      Emporia.TAB1
  )

  /**
   * Get all device specifications for ENDO devices.
   * Useful for endo testing.
   */
  public fun getEndoDevices(): List<String> = listOf(
      Endo.FX438NA
  )

  /**
   * Get all device specifications for Energizer devices.
   * Useful for energizer testing.
   */
  public fun getEnergizerDevices(): List<String> = listOf(
      Energizer.ENERGYE500,
      Energizer.ENERGYE500S_EU,
      Energizer.H620SEU,
      Energizer.HARDCASEH500S,
      Energizer.HARDCASEH550S,
      Energizer.POWERMAXP490,
      Energizer.POWERMAXP490S_AP,
      Energizer.POWERMAXP490S_EU,
      Energizer.POWERMAXP550S,
      Energizer.POWERMAXP600S,
      Energizer.S550,
      Energizer.U505S,
      Energizer.U506S,
      Energizer.U608S,
      Energizer.U652S,
      Energizer.ULTIMATE_U710S
  )

  /**
   * Get all device specifications for EnergySistem devices.
   * Useful for energysistem testing.
   */
  public fun getEnergysistemDevices(): List<String> = listOf(
      Energysistem.ADELROTH
  )

  /**
   * Get all device specifications for ENGEL devices.
   * Useful for engel testing.
   */
  public fun getEngelDevices(): List<String> = listOf(
      Engel.BANGBAE,
      Engel.OSAKI
  )

  /**
   * Get all device specifications for ENGLAON devices.
   * Useful for englaon testing.
   */
  public fun getEnglaonDevices(): List<String> = listOf(
      Englaon.MOUNTBAKER,
      Englaon.STANFORD
  )

  /**
   * Get all device specifications for ENIE devices.
   * Useful for enie testing.
   */
  public fun getEnieDevices(): List<String> = listOf(
      Enie.E4PRO,
      Enie.EH3,
      Enie.ENIE_E2,
      Enie.SKT119,
      Enie.SKT706,
      Enie.VT8216
  )

  /**
   * Get all device specifications for enova devices.
   * Useful for enova testing.
   */
  public fun getEnovaDevices(): List<String> = listOf(
      Enova.ELLINIKO,
      Enova.N10,
      Enova.N50,
      Enova.N51,
      Enova.STANFORD,
      Enova.TAE08N10,
      Enova.ZHONGSHAN
  )

  /**
   * Get all device specifications for Entel devices.
   * Useful for entel testing.
   */
  public fun getEntelDevices(): List<String> = listOf(
      Entel.DIW585,
      Entel.DV8957X_KCE,
      Entel.M393VSB_ENTEL
  )

  /**
   * Get all device specifications for ENTITY devices.
   * Useful for entity testing.
   */
  public fun getEntityDevices(): List<String> = listOf(
      Entity.ENT11QF12,
      Entity.ENT15QF220,
      Entity.ENT75QF620,
      Entity.ENTG1011,
      Entity.ENTITY_G102IN1HARDKB,
      Entity.ENTITYG12PRO,
      Entity.G10_2IN1_GEN2,
      Entity.G10XM,
      Entity.HW304_HW291
  )

  /**
   * Get all device specifications for ENTV devices.
   * Useful for entv testing.
   */
  public fun getEntvDevices(): List<String> = listOf(
      Entv.SEOCHO,
      Entv.SHILIN
  )

  /**
   * Get all device specifications for EON devices.
   * Useful for eon testing.
   */
  public fun getEonDevices(): List<String> = listOf(
      Eon.DV8945C_KSU
  )

  /**
   * Get all device specifications for EON_Smart_Box devices.
   * Useful for eon_smart_box testing.
   */
  public fun getEonSmartBoxDevices(): List<String> = listOf(
      EonSmartBox.DV8519
  )

  /**
   * Get all device specifications for EONSmartBox devices.
   * Useful for eonsmartbox testing.
   */
  public fun getEonsmartboxDevices(): List<String> = listOf(
      Eonsmartbox.CHOTT0102,
      Eonsmartbox.CHSTB02,
      Eonsmartbox.KNSTB02
  )

  /**
   * Get all device specifications for EPI devices.
   * Useful for epi testing.
   */
  public fun getEpiDevices(): List<String> = listOf(
      Epi.TAB_001
  )

  /**
   * Get all device specifications for EPIC devices.
   * Useful for epic testing.
   */
  public fun getEpicDevices(): List<String> = listOf(
      Epic.MARTIN,
      Epic.PATRICK
  )

  /**
   * Get all device specifications for EPIK_Learning_Tab devices.
   * Useful for epik_learning_tab testing.
   */
  public fun getEpikLearningTabDevices(): List<String> = listOf(
      EpikLearningTab.ELT0801
  )

  /**
   * Get all device specifications for EPIKONE devices.
   * Useful for epikone testing.
   */
  public fun getEpikoneDevices(): List<String> = listOf(
      Epikone.K406,
      Epikone.K501,
      Epikone.K501_PLUS,
      Epikone.K503,
      Epikone.K503HD,
      Epikone.K503S,
      Epikone.K503T,
      Epikone.K504,
      Epikone.K506,
      Epikone.K511,
      Epikone.K536,
      Epikone.K545,
      Epikone.K546,
      Epikone.K600,
      Epikone.K601,
      Epikone.K604,
      Epikone.K605,
      Epikone.TX1000,
      Epikone.TX800,
      Epikone.X410,
      Epikone.X430,
      Epikone.X515,
      Epikone.X516,
      Epikone.X547,
      Epikone.X572,
      Epikone.X610,
      Epikone.X618,
      Epikone.X620,
      Epikone.X650,
      Epikone.X655
  )

  /**
   * Get all device specifications for Epson devices.
   * Useful for epson testing.
   */
  public fun getEpsonDevices(): List<String> = listOf(
      Epson.BUSHI,
      Epson.EMBT4,
      Epson.HIMALAYA,
      Epson.STI6200D101,
      Epson.STI6202D101,
      Epson.STI6290D101
  )

  /**
   * Get all device specifications for Equator devices.
   * Useful for equator testing.
   */
  public fun getEquatorDevices(): List<String> = listOf(
      Equator.AXIS
  )

  /**
   * Get all device specifications for EQUINOXE devices.
   * Useful for equinoxe testing.
   */
  public fun getEquinoxeDevices(): List<String> = listOf(
      Equinoxe.MARTIN
  )

  /**
   * Get all device specifications for ERGO devices.
   * Useful for ergo testing.
   */
  public fun getErgoDevices(): List<String> = listOf(
      Ergo.B501,
      Ergo.B502_BASIC,
      Ergo.BYCULLA,
      Ergo.LONGSHAN,
      Ergo.REDWOOD,
      Ergo.SW6H,
      Ergo.V540_LEVEL,
      Ergo.V550_VISION,
      Ergo.V551_AURA
  )

  /**
   * Get all device specifications for ERITO devices.
   * Useful for erito testing.
   */
  public fun getEritoDevices(): List<String> = listOf(
      Erito.R1
  )

  /**
   * Get all device specifications for eroc devices.
   * Useful for eroc testing.
   */
  public fun getErocDevices(): List<String> = listOf(
      Eroc.BOS
  )

  /**
   * Get all device specifications for ESLEY devices.
   * Useful for esley testing.
   */
  public fun getEsleyDevices(): List<String> = listOf(
      Esley.LAVENDER,
      Esley.MOUNTBAKER
  )

  /**
   * Get all device specifications for ESOL devices.
   * Useful for esol testing.
   */
  public fun getEsolDevices(): List<String> = listOf(
      Esol.INTERACTIVE_WHITE_BOARD,
      Esol.RK3588_T
  )

  /**
   * Get all device specifications for essential devices.
   * Useful for essential testing.
   */
  public fun getEssentialDevices(): List<String> = listOf(
      Essential.MATA
  )

  /**
   * Get all device specifications for ESSENTIELB devices.
   * Useful for essentielb testing.
   */
  public fun getEssentielbDevices(): List<String> = listOf(
      Essentielb.M16Q1A,
      Essentielb.M16Q1C,
      Essentielb.R1,
      Essentielb.R2,
      Essentielb.R3,
      Essentielb.R4,
      Essentielb.SMARTTAB1007,
      Essentielb.SMARTTAB1008,
      Essentielb.SMARTTAB_1004_XS,
      Essentielb.WOOZE_L,
      Essentielb.WOOZE_XL
  )

  /**
   * Get all device specifications for Estalky devices.
   * Useful for estalky testing.
   */
  public fun getEstalkyDevices(): List<String> = listOf(
      Estalky.E618
  )

  /**
   * Get all device specifications for eStar devices.
   * Useful for estar testing.
   */
  public fun getEstarDevices(): List<String> = listOf(
      Estar._1021W_URBAN,
      Estar.DIGNI_SMART,
      Estar.MARTIN,
      Estar.MID1020L,
      Estar.MID7388,
      Estar.MID7399,
      Estar.TAMACHI,
      Estar.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for Estelle devices.
   * Useful for estelle testing.
   */
  public fun getEstelleDevices(): List<String> = listOf(
      Estelle.EST_001_BLK
  )

  /**
   * Get all device specifications for ESTLA devices.
   * Useful for estla testing.
   */
  public fun getEstlaDevices(): List<String> = listOf(
      Estla.LONGSHAN,
      Estla.SINDORIM
  )

  /**
   * Get all device specifications for eSTREAM4K devices.
   * Useful for estream4k testing.
   */
  public fun getEstream4kDevices(): List<String> = listOf(
      Estream4k.KUNLUN,
      Estream4k.SEI400TV,
      Estream4k.SEI500ABB,
      Estream4k.SEI500AS,
      Estream4k.SEI500BR,
      Estream4k.SEI500BS,
      Estream4k.SEI500CB,
      Estream4k.SEI500L,
      Estream4k.SEI500MC,
      Estream4k.SEI500MN,
      Estream4k.SEI500RCN,
      Estream4k.SEI500SECV,
      Estream4k.SEI500TDS,
      Estream4k.SEI500TV
  )

  /**
   * Get all device specifications for eTalk devices.
   * Useful for etalk testing.
   */
  public fun getEtalkDevices(): List<String> = listOf(
      Etalk.KAZ_N20
  )

  /**
   * Get all device specifications for ETELPREMIUM devices.
   * Useful for etelpremium testing.
   */
  public fun getEtelpremiumDevices(): List<String> = listOf(
      Etelpremium.E26,
      Etelpremium.E65,
      Etelpremium.NOTE_25_ULTRA
  )

  /**
   * Get all device specifications for eTera devices.
   * Useful for etera testing.
   */
  public fun getEteraDevices(): List<String> = listOf(
      Etera.E980U
  )

  /**
   * Get all device specifications for ETERNITY devices.
   * Useful for eternity testing.
   */
  public fun getEternityDevices(): List<String> = listOf(
      Eternity.HEROSP001,
      Eternity.UWS68
  )

  /**
   * Get all device specifications for ETG devices.
   * Useful for etg testing.
   */
  public fun getEtgDevices(): List<String> = listOf(
      Etg.ETG_BT1121
  )

  /**
   * Get all device specifications for ethiotelecom devices.
   * Useful for ethiotelecom testing.
   */
  public fun getEthiotelecomDevices(): List<String> = listOf(
      Ethiotelecom.ET_B866W11A
  )

  /**
   * Get all device specifications for ETOE devices.
   * Useful for etoe testing.
   */
  public fun getEtoeDevices(): List<String> = listOf(
      Etoe.XNA,
      Etoe.YUL
  )

  /**
   * Get all device specifications for Eudora devices.
   * Useful for eudora testing.
   */
  public fun getEudoraDevices(): List<String> = listOf(
      Eudora.E10PRO,
      Eudora.E62PLUS,
      Eudora.E65PRO
  )

  /**
   * Get all device specifications for Euskaltel devices.
   * Useful for euskaltel testing.
   */
  public fun getEuskaltelDevices(): List<String> = listOf(
      Euskaltel.DCIW384EUS,
      Euskaltel.M392,
      Euskaltel.M393GENA_ESK,
      Euskaltel.UZE4052EKT
  )

  /**
   * Get all device specifications for EVERCOSS devices.
   * Useful for evercoss testing.
   */
  public fun getEvercossDevices(): List<String> = listOf(
      Evercoss.AT8B,
      Evercoss.EVERCOSS_A75B,
      Evercoss.EVERCOSS_M40A,
      Evercoss.EVERCOSS_M50_MAX,
      Evercoss.EVERCOSS_M50_STAR,
      Evercoss.EVERCOSS_M80,
      Evercoss.EVERCOSS_S45,
      Evercoss.EVERCOSS_S50,
      Evercoss.EVERCOSS_U6,
      Evercoss.EVERCOSS_U60,
      Evercoss.EVERCOSS_U6_PRIME,
      Evercoss.M53,
      Evercoss.M55,
      Evercoss.M55A,
      Evercoss.M55B,
      Evercoss.M55C,
      Evercoss.M6,
      Evercoss.M60,
      Evercoss.M6A,
      Evercoss.M70,
      Evercoss.R50A,
      Evercoss.R6,
      Evercoss.R70,
      Evercoss.S45B,
      Evercoss.S55A,
      Evercoss.S55B,
      Evercoss.S6,
      Evercoss.U50A,
      Evercoss.U50A_MAX,
      Evercoss.U50A_PLUS,
      Evercoss.U50C,
      Evercoss.U55,
      Evercoss.U6B,
      Evercoss.U6C,
      Evercoss.U70B,
      Evercoss.U70C,
      Evercoss.X7,
      Evercoss.X9
  )

  /**
   * Get all device specifications for EVEREST-EVERPAD devices.
   * Useful for everest-everpad testing.
   */
  public fun getEverestEverpadDevices(): List<String> = listOf(
      EverestEverpad.DC_M700,
      EverestEverpad.MID1032_MK,
      EverestEverpad.MID7015_MK,
      EverestEverpad.MID7015A_MK
  )

  /**
   * Get all device specifications for Everex devices.
   * Useful for everex testing.
   */
  public fun getEverexDevices(): List<String> = listOf(
      Everex.FINE_7B
  )

  /**
   * Get all device specifications for Everis devices.
   * Useful for everis testing.
   */
  public fun getEverisDevices(): List<String> = listOf(
      Everis.E0109,
      Everis.E0111,
      Everis.E0112,
      Everis.E0113,
      Everis.E0114,
      Everis.E0117,
      Everis.E0118,
      Everis.E0120
  )

  /**
   * Get all device specifications for EVERPAD devices.
   * Useful for everpad testing.
   */
  public fun getEverpadDevices(): List<String> = listOf(
      Everpad.EVERPAD_EW2021,
      Everpad.EW2010,
      Everpad.EW2020,
      Everpad.EW2022,
      Everpad.VORTEX_V10
  )

  /**
   * Get all device specifications for EVERTEK devices.
   * Useful for evertek testing.
   */
  public fun getEvertekDevices(): List<String> = listOf(
      Evertek.E7224HG,
      Evertek.E8224HG,
      Evertek.EVERTEK_M10_MAX,
      Evertek.EVERTEK_M10_PRO,
      Evertek.EVERTEK_M20S_MINI,
      Evertek.HERO,
      Evertek.M10,
      Evertek.M10_LITE,
      Evertek.M10_NANO,
      Evertek.M20,
      Evertek.M20_MINI,
      Evertek.M20_NANO,
      Evertek.M20_PRO,
      Evertek.M20_PRO,
      Evertek.M20_S,
      Evertek.P17,
      Evertek.P17_PRO,
      Evertek.P18_PRO,
      Evertek.V4,
      Evertek.V4_NANO,
      Evertek.V5,
      Evertek.V5_NANO,
      Evertek.V5_PLUS,
      Evertek.V8,
      Evertek.V9_PLUS
  )

  /**
   * Get all device specifications for EveryPhone devices.
   * Useful for everyphone testing.
   */
  public fun getEveryphoneDevices(): List<String> = listOf(
      Everyphone.EP172BZ,
      Everyphone.EP172PR
  )

  /**
   * Get all device specifications for EvocaTV devices.
   * Useful for evocatv testing.
   */
  public fun getEvocatvDevices(): List<String> = listOf(
      Evocatv.F511
  )

  /**
   * Get all device specifications for EVOFORCE1 devices.
   * Useful for evoforce1 testing.
   */
  public fun getEvoforce1Devices(): List<String> = listOf(
      Evoforce1.SEI800ABB,
      Evoforce1.SEI800AS,
      Evoforce1.SEI800BR,
      Evoforce1.SEI800BS,
      Evoforce1.SEI800CB,
      Evoforce1.SEI800ESTL,
      Evoforce1.SEI800MC,
      Evoforce1.SEI800MDCOM,
      Evoforce1.SEI800MOBI,
      Evoforce1.SEI800RCN,
      Evoforce1.SEI800SECV,
      Evoforce1.SEI800TDS,
      Evoforce1.SEI800TV
  )

  /**
   * Get all device specifications for EVOLVEO devices.
   * Useful for evolveo testing.
   */
  public fun getEvolveoDevices(): List<String> = listOf(
      Evolveo.EVOLVEOG2,
      Evolveo.EVOLVEOG4,
      Evolveo.EVOLVEOG8,
      Evolveo.STRONGPHONE_G7,
      Evolveo.STRONGPHONE_G9,
      Evolveo.STRONGPHONEG5
  )

  /**
   * Get all device specifications for EVOO devices.
   * Useful for evoo testing.
   */
  public fun getEvooDevices(): List<String> = listOf(
      Evoo.EV_A_101_3,
      Evoo.EV_A_116_1,
      Evoo.EV_A_133_1,
      Evoo.EV_A_156_1,
      Evoo.EVMFV2
  )

  /**
   * Get all device specifications for EVOPRO devices.
   * Useful for evopro testing.
   */
  public fun getEvoproDevices(): List<String> = listOf(
      Evopro.SEI500EV
  )

  /**
   * Get all device specifications for EVOTA devices.
   * Useful for evota testing.
   */
  public fun getEvotaDevices(): List<String> = listOf(
      Evota.MTK9679
  )

  /**
   * Get all device specifications for EVVO devices.
   * Useful for evvo testing.
   */
  public fun getEvvoDevices(): List<String> = listOf(
      Evvo.R1,
      Evvo.R2,
      Evvo.R4
  )

  /**
   * Get all device specifications for EVVOLI devices.
   * Useful for evvoli testing.
   */
  public fun getEvvoliDevices(): List<String> = listOf(
      Evvoli.R1,
      Evvoli.R2,
      Evvoli.R3,
      Evvoli.R4
  )

  /**
   * Get all device specifications for EWIS devices.
   * Useful for ewis testing.
   */
  public fun getEwisDevices(): List<String> = listOf(
      Ewis.OCTA_T700M,
      Ewis.OCTA_T700M_T2
  )

  /**
   * Get all device specifications for EXCEED devices.
   * Useful for exceed testing.
   */
  public fun getExceedDevices(): List<String> = listOf(
      Exceed.E10G22,
      Exceed.E10W10,
      Exceed.EX10S10,
      Exceed.EX10S4,
      Exceed.EX7S4,
      Exceed.EX7SL4,
      Exceed.EX7W1S,
      Exceed.EX7W4,
      Exceed.EX7X4,
      Exceed.EX8S1,
      Exceed.EXCEED_E22
  )

  /**
   * Get all device specifications for Exclusiv devices.
   * Useful for exclusiv testing.
   */
  public fun getExclusivDevices(): List<String> = listOf(
      Exclusiv.PATRICK
  )

  /**
   * Get all device specifications for Excotek devices.
   * Useful for excotek testing.
   */
  public fun getExcotekDevices(): List<String> = listOf(
      Excotek.X20_T616
  )

  /**
   * Get all device specifications for Exertis devices.
   * Useful for exertis testing.
   */
  public fun getExertisDevices(): List<String> = listOf(
      Exertis.SMB_H8009
  )

  /**
   * Get all device specifications for EXO devices.
   * Useful for exo testing.
   */
  public fun getExoDevices(): List<String> = listOf(
      Exo.EXO_WAVE_I716,
      Exo.EXO_WAVE_I726,
      Exo.WAVE_I007KIDS,
      Exo.WAVE_I007T,
      Exo.WAVE_I101G,
      Exo.WAVE_I101MC,
      Exo.WAVE_I101T4,
      Exo.WAVE_I101U
  )

  /**
   * Get all device specifications for Extreme devices.
   * Useful for extreme testing.
   */
  public fun getExtremeDevices(): List<String> = listOf(
      Extreme.INFINITY
  )

  /**
   * Get all device specifications for EyePay devices.
   * Useful for eyepay testing.
   */
  public fun getEyepayDevices(): List<String> = listOf(
      Eyepay.IG_EP100
  )

  /**
   * Get all device specifications for F150 devices.
   * Useful for f150 testing.
   */
  public fun getF150Devices(): List<String> = listOf(
      F150.AIR1,
      F150.AIR1_PRO,
      F150.B1,
      F150.B1_PRO,
      F150.B2021,
      F150.BISON2021,
      F150.H2022,
      F150.R2022
  )

  /**
   * Get all device specifications for F2 devices.
   * Useful for f2 testing.
   */
  public fun getF2Devices(): List<String> = listOf(
      F2.C8FINGER,
      F2.F80S_PLUS,
      F2.I8_ROKR,
      F2.LT5216,
      F2.Z8POCKET
  )

  /**
   * Get all device specifications for F2Mobile devices.
   * Useful for f2mobile testing.
   */
  public fun getF2mobileDevices(): List<String> = listOf(
      F2mobile.LT18
  )

  /**
   * Get all device specifications for F-Plus devices.
   * Useful for f-plus testing.
   */
  public fun getFPlusDevices(): List<String> = listOf(
      FPlus.R570E,
      FPlus.SA50_21620,
      FPlus.SA55_21624,
      FPlus.SH60_23230,
      FPlus.SH65_23248,
      FPlus.SP65_66440,
      FPlus.T1100
  )

  /**
   * Get all device specifications for FACETEL devices.
   * Useful for facetel testing.
   */
  public fun getFacetelDevices(): List<String> = listOf(
      Facetel.Q10_EEA,
      Facetel.Q10_PRO,
      Facetel.Q10_US,
      Facetel.Q10_T_EEA,
      Facetel.Q10_T_US,
      Facetel.Q3_EEA,
      Facetel.Q3_PRO,
      Facetel.Q3PRO,
      Facetel.Q3PRO_EEA,
      Facetel.Q6_US,
      Facetel.Q7_EEA,
      Facetel.Q7_US,
      Facetel.W3_T_EEA,
      Facetel.W3_T_US
  )

  /**
   * Get all device specifications for FACILOTAB devices.
   * Useful for facilotab testing.
   */
  public fun getFacilotabDevices(): List<String> = listOf(
      Facilotab.FACILOTAB_L_RUBIS
  )

  /**
   * Get all device specifications for Faiba devices.
   * Useful for faiba testing.
   */
  public fun getFaibaDevices(): List<String> = listOf(
      Faiba.M1
  )

  /**
   * Get all device specifications for Fairphone devices.
   * Useful for fairphone testing.
   */
  public fun getFairphoneDevices(): List<String> = listOf(
      Fairphone.FP2,
      Fairphone.FP3,
      Fairphone.FP4,
      Fairphone.FP5,
      Fairphone.FP6
  )

  /**
   * Get all device specifications for FAMIX devices.
   * Useful for famix testing.
   */
  public fun getFamixDevices(): List<String> = listOf(
      Famix.F10L,
      Famix.F11
  )

  /**
   * Get all device specifications for Famous_Fones devices.
   * Useful for famous_fones testing.
   */
  public fun getFamousFonesDevices(): List<String> = listOf(
      FamousFones.FAMOUS_5,
      FamousFones.FAMOUS_5PLUS,
      FamousFones.FAMOUS_RED_5PLUS,
      FamousFones.FAMOUS_TAB_10,
      FamousFones.RED_ROYAL_EDITION
  )

  /**
   * Get all device specifications for FancyDay devices.
   * Useful for fancyday testing.
   */
  public fun getFancydayDevices(): List<String> = listOf(
      Fancyday.C10
  )

  /**
   * Get all device specifications for FandU devices.
   * Useful for fandu testing.
   */
  public fun getFanduDevices(): List<String> = listOf(
      Fandu.MARINA,
      Fandu.NAGATA,
      Fandu.TAMACHI,
      Fandu.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for FANGOR devices.
   * Useful for fangor testing.
   */
  public fun getFangorDevices(): List<String> = listOf(
      Fangor.F_863,
      Fangor.F_C10,
      Fangor.F_X10
  )

  /**
   * Get all device specifications for FAREASTONE devices.
   * Useful for fareastone testing.
   */
  public fun getFareastoneDevices(): List<String> = listOf(
      Fareastone.SMART509,
      Fareastone.SMART550
  )

  /**
   * Get all device specifications for FASTLIFE devices.
   * Useful for fastlife testing.
   */
  public fun getFastlifeDevices(): List<String> = listOf(
      Fastlife.ZHONGSHAN
  )

  /**
   * Get all device specifications for Fastway devices.
   * Useful for fastway testing.
   */
  public fun getFastwayDevices(): List<String> = listOf(
      Fastway.DV8545_C_KIF
  )

  /**
   * Get all device specifications for FASTWD devices.
   * Useful for fastwd testing.
   */
  public fun getFastwdDevices(): List<String> = listOf(
      Fastwd.L231,
      Fastwd.L231_EEA,
      Fastwd.L251_EEA,
      Fastwd.M109_EEA,
      Fastwd.M20L,
      Fastwd.M518_EEA
  )

  /**
   * Get all device specifications for FATARUS devices.
   * Useful for fatarus testing.
   */
  public fun getFatarusDevices(): List<String> = listOf(
      Fatarus.K10
  )

  /**
   * Get all device specifications for FAVORITT devices.
   * Useful for favoritt testing.
   */
  public fun getFavorittDevices(): List<String> = listOf(
      Favoritt.R3,
      Favoritt.R4
  )

  /**
   * Get all device specifications for FCC devices.
   * Useful for fcc testing.
   */
  public fun getFccDevices(): List<String> = listOf(
      Fcc.GK738_3G,
      Fcc.GK788
  )

  /**
   * Get all device specifications for FCNT devices.
   * Useful for fcnt testing.
   */
  public fun getFcntDevices(): List<String> = listOf(
      Fcnt.A101FC,
      Fcnt.A401FC,
      Fcnt.A402FC,
      Fcnt.BZ02,
      Fcnt.BZ03,
      Fcnt.F_51F,
      Fcnt.F41B,
      Fcnt.F51B,
      Fcnt.F51C,
      Fcnt.F51E,
      Fcnt.F52B,
      Fcnt.F52E,
      Fcnt.F53E,
      Fcnt.FCG01,
      Fcnt.FCG02,
      Fcnt.FUJI,
      Fcnt.M06,
      Fcnt.M07,
      Fcnt.MR01
  )

  /**
   * Get all device specifications for FEITIAN devices.
   * Useful for feitian testing.
   */
  public fun getFeitianDevices(): List<String> = listOf(
      Feitian.F100
  )

  /**
   * Get all device specifications for Felux devices.
   * Useful for felux testing.
   */
  public fun getFeluxDevices(): List<String> = listOf(
      Felux.X_PRO
  )

  /**
   * Get all device specifications for Fengmi devices.
   * Useful for fengmi testing.
   */
  public fun getFengmiDevices(): List<String> = listOf(
      Fengmi.ANGLEEUHD
  )

  /**
   * Get all device specifications for FEONAL devices.
   * Useful for feonal testing.
   */
  public fun getFeonalDevices(): List<String> = listOf(
      Feonal.D105_EEA,
      Feonal.D106_EEA,
      Feonal.D115_EEA,
      Feonal.D118_EEA,
      Feonal.K118_EEA,
      Feonal.K711_EEA
  )

  /**
   * Get all device specifications for Fero devices.
   * Useful for fero testing.
   */
  public fun getFeroDevices(): List<String> = listOf(
      Fero.A4001_PLUS_2019,
      Fero.A5003_512,
      Fero.ROYALE_X2
  )

  /**
   * Get all device specifications for fezawio devices.
   * Useful for fezawio testing.
   */
  public fun getFezawioDevices(): List<String> = listOf(
      Fezawio.F10_EEA,
      Fezawio.F10_US,
      Fezawio.F11_EEA,
      Fezawio.F11_US
  )

  /**
   * Get all device specifications for FFF devices.
   * Useful for fff testing.
   */
  public fun getFffDevices(): List<String> = listOf(
      Fff.F3T10WD4
  )

  /**
   * Get all device specifications for FFFSMARTLIFE devices.
   * Useful for fffsmartlife testing.
   */
  public fun getFffsmartlifeDevices(): List<String> = listOf(
      Fffsmartlife.F3T10A3,
      Fffsmartlife.F3T10B1,
      Fffsmartlife.F3T7B1,
      Fffsmartlife.FFFTAB10,
      Fffsmartlife.FFFTAB10A0,
      Fffsmartlife.FFFTAB10A1,
      Fffsmartlife.FFFTAB10A2,
      Fffsmartlife.FFFTAB10A3,
      Fffsmartlife.FFFTAB10A4,
      Fffsmartlife.FFFTAB10B0,
      Fffsmartlife.FFFTAB10B1,
      Fffsmartlife.FFFTAB10B3,
      Fffsmartlife.FFFTAB7,
      Fffsmartlife.FFFTAB8
  )

  /**
   * Get all device specifications for FiestaDuo devices.
   * Useful for fiestaduo testing.
   */
  public fun getFiestaduoDevices(): List<String> = listOf(
      Fiestaduo.IX
  )

  /**
   * Get all device specifications for Figgers devices.
   * Useful for figgers testing.
   */
  public fun getFiggersDevices(): List<String> = listOf(
      Figgers.FIGGERS_DRAGONX,
      Figgers.FIGGERS_F3
  )

  /**
   * Get all device specifications for FIGI devices.
   * Useful for figi testing.
   */
  public fun getFigiDevices(): List<String> = listOf(
      Figi.FJ,
      Figi.FX,
      Figi.G6,
      Figi.MTWO,
      Figi.NOTE_11_PRO,
      Figi.NOTE_1_LITE,
      Figi.NOTE_1C,
      Figi.NOTE_3_PRO,
      Figi.NOTE_5,
      Figi.NOTE_7_PRO
  )

  /**
   * Get all device specifications for FIGO devices.
   * Useful for figo testing.
   */
  public fun getFigoDevices(): List<String> = listOf(
      Figo.ORBIT_LL,
      Figo.TELECELL
  )

  /**
   * Get all device specifications for FIREFLY_MOBILE devices.
   * Useful for firefly_mobile testing.
   */
  public fun getFireflyMobileDevices(): List<String> = listOf(
      FireflyMobile.INTENSE_XT
  )

  /**
   * Get all device specifications for Firehawk devices.
   * Useful for firehawk testing.
   */
  public fun getFirehawkDevices(): List<String> = listOf(
      Firehawk.FP_600,
      Firehawk.TOUGHDROID
  )

  /**
   * Get all device specifications for Fiteye devices.
   * Useful for fiteye testing.
   */
  public fun getFiteyeDevices(): List<String> = listOf(
      Fiteye.FIT_32
  )

  /**
   * Get all device specifications for FIVAHIVA devices.
   * Useful for fivahiva testing.
   */
  public fun getFivahivaDevices(): List<String> = listOf(
      Fivahiva.F_764,
      Fivahiva.F10A,
      Fivahiva.FF_35,
      Fivahiva.FF1010,
      Fivahiva.FF10A,
      Fivahiva.MM_P30,
      Fivahiva.YY_766,
      Fivahiva.YY_766_EEA
  )

  /**
   * Get all device specifications for FLASH devices.
   * Useful for flash testing.
   */
  public fun getFlashDevices(): List<String> = listOf(
      Flash.PRIME_1
  )

  /**
   * Get all device specifications for FLEXY devices.
   * Useful for flexy testing.
   */
  public fun getFlexyDevices(): List<String> = listOf(
      Flexy.PIONEER
  )

  /**
   * Get all device specifications for Flipkart devices.
   * Useful for flipkart testing.
   */
  public fun getFlipkartDevices(): List<String> = listOf(
      Flipkart.SHIBUYA,
      Flipkart.SW4H
  )

  /**
   * Get all device specifications for FLNET devices.
   * Useful for flnet testing.
   */
  public fun getFlnetDevices(): List<String> = listOf(
      Flnet.BA101,
      Flnet.BA201
  )

  /**
   * Get all device specifications for FLOW devices.
   * Useful for flow testing.
   */
  public fun getFlowDevices(): List<String> = listOf(
      Flow.B866V2F_FLOW,
      Flow.HP40A2,
      Flow.HP44H,
      Flow.M250_T,
      Flow.M393GENA_TECO
  )

  /**
   * Get all device specifications for fluo devices.
   * Useful for fluo testing.
   */
  public fun getFluoDevices(): List<String> = listOf(
      Fluo.N,
      Fluo.X2_MAX
  )

  /**
   * Get all device specifications for Fly devices.
   * Useful for fly testing.
   */
  public fun getFlyDevices(): List<String> = listOf(
      Fly.CIRRUS_13,
      Fly.CIRRUS_2,
      Fly.CIRRUS_3,
      Fly.CIRRUS_4,
      Fly.COMPACT_4G,
      Fly.FLYLIFE_CONNECT_101_3G_2,
      Fly.IQ4514_QUAD,
      Fly.IQ456,
      Fly.NIMBUS_16,
      Fly.NIMBUS_8,
      Fly.NIMBUS_9,
      Fly.SLIMLINE,
      Fly.STRATUS_6,
      Fly.VIEWMAX
  )

  /**
   * Get all device specifications for Fly_Tech devices.
   * Useful for fly_tech testing.
   */
  public fun getFlyTechDevices(): List<String> = listOf(
      FlyTech.T101
  )

  /**
   * Get all device specifications for FMC devices.
   * Useful for fmc testing.
   */
  public fun getFmcDevices(): List<String> = listOf(
      Fmc.BELFORD
  )

  /**
   * Get all device specifications for FNB devices.
   * Useful for fnb testing.
   */
  public fun getFnbDevices(): List<String> = listOf(
      Fnb.P809F52
  )

  /**
   * Get all device specifications for Fobem devices.
   * Useful for fobem testing.
   */
  public fun getFobemDevices(): List<String> = listOf(
      Fobem.MARINA,
      Fobem.NAGATA
  )

  /**
   * Get all device specifications for FOL devices.
   * Useful for fol testing.
   */
  public fun getFolDevices(): List<String> = listOf(
      Fol.MOUNTBAKER
  )

  /**
   * Get all device specifications for FOLG devices.
   * Useful for folg testing.
   */
  public fun getFolgDevices(): List<String> = listOf(
      Folg.FOLG_GT_10,
      Folg.FOLG_TAB_10,
      Folg.FOLG_TAB_10S,
      Folg.FT01,
      Folg.FT02,
      Folg.KS20,
      Folg.S18,
      Folg.S19,
      Folg.S30
  )

  /**
   * Get all device specifications for FONOS devices.
   * Useful for fonos testing.
   */
  public fun getFonosDevices(): List<String> = listOf(
      Fonos.M1,
      Fonos.O2,
      Fonos.O3
  )

  /**
   * Get all device specifications for FONOS_smart_electronics devices.
   * Useful for fonos_smart_electronics testing.
   */
  public fun getFonosSmartElectronicsDevices(): List<String> = listOf(
      FonosSmartElectronics.FONOS_O1
  )

  /**
   * Get all device specifications for FORCO devices.
   * Useful for forco testing.
   */
  public fun getForcoDevices(): List<String> = listOf(
      Forco.K1028G
  )

  /**
   * Get all device specifications for Formovie devices.
   * Useful for formovie testing.
   */
  public fun getFormovieDevices(): List<String> = listOf(
      Formovie.KOROLI
  )

  /**
   * Get all device specifications for FORMULER devices.
   * Useful for formuler testing.
   */
  public fun getFormulerDevices(): List<String> = listOf(
      Formuler.GTV
  )

  /**
   * Get all device specifications for Fortus devices.
   * Useful for fortus testing.
   */
  public fun getFortusDevices(): List<String> = listOf(
      Fortus.PAYTAB_PT10
  )

  /**
   * Get all device specifications for FOSSiBOT devices.
   * Useful for fossibot testing.
   */
  public fun getFossibotDevices(): List<String> = listOf(
      Fossibot.DT1_LITE,
      Fossibot.DT2,
      Fossibot.F101,
      Fossibot.F101_P,
      Fossibot.F101_PRO,
      Fossibot.F102,
      Fossibot.F105,
      Fossibot.F106_PRO,
      Fossibot.F109,
      Fossibot.F109_S,
      Fossibot.F112_PRO,
      Fossibot.FOSSIBOT_S2,
      Fossibot.S1,
      Fossibot.S3_PRO,
      Fossibot.TAB_12
  )

  /**
   * Get all device specifications for fossil devices.
   * Useful for fossil testing.
   */
  public fun getFossilDevices(): List<String> = listOf(
      Fossil.BLUEGILL,
      Fossil.DARTER,
      Fossil.FIREFISH,
      Fossil.GAR,
      Fossil.GILA,
      Fossil.GRANT,
      Fossil.HOKI,
      Fossil.MULLET,
      Fossil.RAY,
      Fossil.SHINER,
      Fossil.SOLE,
      Fossil.TRIGGERFISH
  )

  /**
   * Get all device specifications for FOUR devices.
   * Useful for four testing.
   */
  public fun getFourDevices(): List<String> = listOf(
      Four.S186_SKY_3,
      Four.S750
  )

  /**
   * Get all device specifications for FourMobile devices.
   * Useful for fourmobile testing.
   */
  public fun getFourmobileDevices(): List<String> = listOf(
      Fourmobile.S710_RUBY
  )

  /**
   * Get all device specifications for Fox_and_Sheep devices.
   * Useful for fox_and_sheep testing.
   */
  public fun getFoxAndSheepDevices(): List<String> = listOf(
      FoxAndSheep.KIDSTABLET1,
      FoxAndSheep.KIDSTABLETONE
  )

  /**
   * Get all device specifications for Foxtel devices.
   * Useful for foxtel testing.
   */
  public fun getFoxtelDevices(): List<String> = listOf(
      Foxtel.DWT765FXT
  )

  /**
   * Get all device specifications for Foxx devices.
   * Useful for foxx testing.
   */
  public fun getFoxxDevices(): List<String> = listOf(
      Foxx.A55AM,
      Foxx.V8
  )

  /**
   * Get all device specifications for FOXXD devices.
   * Useful for foxxd testing.
   */
  public fun getFoxxdDevices(): List<String> = listOf(
      Foxxd.A2023,
      Foxxd.A55,
      Foxxd.A551,
      Foxxd.A56,
      Foxxd.A5PRO,
      Foxxd.A62,
      Foxxd.A65,
      Foxxd.A65L,
      Foxxd.A65PLUS,
      Foxxd.A67L,
      Foxxd.AS65U,
      Foxxd.C10,
      Foxxd.FOXXD_C65,
      Foxxd.HTH_C67,
      Foxxd.HTH_S67,
      Foxxd.L590A,
      Foxxd.N5,
      Foxxd.P8,
      Foxxd.T55,
      Foxxd.T8,
      Foxxd.T8PLUS,
      Foxxd.T8PRO
  )

  /**
   * Get all device specifications for FPD devices.
   * Useful for fpd testing.
   */
  public fun getFpdDevices(): List<String> = listOf(
      Fpd.ELLINIKO,
      Fpd.HONGKONG,
      Fpd.KAPELLEN,
      Fpd.KHARDI,
      Fpd.LAVENDER,
      Fpd.MOUNTBAKER
  )

  /**
   * Get all device specifications for Fplus devices.
   * Useful for fplus testing.
   */
  public fun getFplusDevices(): List<String> = listOf(
      Fplus.H166,
      Fplus.LIFETABPLUS,
      Fplus.P670,
      Fplus.SA70
  )

  /**
   * Get all device specifications for FPS devices.
   * Useful for fps testing.
   */
  public fun getFpsDevices(): List<String> = listOf(
      Fps.HONGKONG
  )

  /**
   * Get all device specifications for FPT devices.
   * Useful for fpt testing.
   */
  public fun getFptDevices(): List<String> = listOf(
      Fpt.DV8236
  )

  /**
   * Get all device specifications for FPT_Telecom devices.
   * Useful for fpt_telecom testing.
   */
  public fun getFptTelecomDevices(): List<String> = listOf(
      FptTelecom.DV8536_KVF,
      FptTelecom.SEI500FPT,
      FptTelecom.SEI610FPT
  )

  /**
   * Get all device specifications for Free devices.
   * Useful for free testing.
   */
  public fun getFreeDevices(): List<String> = listOf(
      Free.FREE_LIBERTY_PLUS
  )

  /**
   * Get all device specifications for Freebox devices.
   * Useful for freebox testing.
   */
  public fun getFreeboxDevices(): List<String> = listOf(
      Freebox.FBX6LC,
      Freebox.FBX6LCV2,
      Freebox.FBX8AM
  )

  /**
   * Get all device specifications for Freemobile devices.
   * Useful for freemobile testing.
   */
  public fun getFreemobileDevices(): List<String> = listOf(
      Freemobile.FS500
  )

  /**
   * Get all device specifications for Freeski devices.
   * Useful for freeski testing.
   */
  public fun getFreeskiDevices(): List<String> = listOf(
      Freeski.C12
  )

  /**
   * Get all device specifications for freetel devices.
   * Useful for freetel testing.
   */
  public fun getFreetelDevices(): List<String> = listOf(
      Freetel.CRICKET_WAVE,
      Freetel.FTJ152A,
      Freetel.FTJ152B,
      Freetel.FTJ152C,
      Freetel.FTJ152D,
      Freetel.FTJ161A,
      Freetel.FTJ161B,
      Freetel.FTU161G,
      Freetel.ICE2,
      Freetel.PRIORI4,
      Freetel.PRIORI5,
      Freetel.RAIJIN,
      Freetel.SAKURA_FTE1,
      Freetel.SAMURAI_KIWAMI2,
      Freetel.SAMURAI_REI2
  )

  /**
   * Get all device specifications for FreeYond devices.
   * Useful for freeyond testing.
   */
  public fun getFreeyondDevices(): List<String> = listOf(
      Freeyond.F9,
      Freeyond.F9S,
      Freeyond.F9S_EEA,
      Freeyond.FREEYONDA5,
      Freeyond.FREEYONDP6,
      Freeyond.M5,
      Freeyond.M5A,
      Freeyond.M6
  )

  /**
   * Get all device specifications for FRESH devices.
   * Useful for fresh testing.
   */
  public fun getFreshDevices(): List<String> = listOf(
      Fresh.R3_GTV,
      Fresh.SHINAGAWA,
      Fresh.SW4H
  )

  /**
   * Get all device specifications for Frunsi devices.
   * Useful for frunsi testing.
   */
  public fun getFrunsiDevices(): List<String> = listOf(
      Frunsi.RUBENSTAB_T11,
      Frunsi.RUBENSTAB_T8,
      Frunsi.T11PRO
  )

  /**
   * Get all device specifications for FUEGO devices.
   * Useful for fuego testing.
   */
  public fun getFuegoDevices(): List<String> = listOf(
      Fuego.MARINA,
      Fuego.NAGATA
  )

  /**
   * Get all device specifications for FUJITSU devices.
   * Useful for fujitsu testing.
   */
  public fun getFujitsuDevices(): List<String> = listOf(
      Fujitsu.ARROWSM05,
      Fujitsu.ARROWSRX,
      Fujitsu.BZ01,
      Fujitsu.FARTM933KZ,
      Fujitsu.M01,
      Fujitsu.M01T,
      Fujitsu.M02,
      Fujitsu.M03,
      Fujitsu.M04,
      Fujitsu.M04P,
      Fujitsu.M357,
      Fujitsu.M555,
      Fujitsu.MX532,
      Fujitsu.PATIO600,
      Fujitsu.TONEM17,
      Fujitsu.YM901FJ
  )

  /**
   * Get all device specifications for Funai devices.
   * Useful for funai testing.
   */
  public fun getFunaiDevices(): List<String> = listOf(
      Funai.COCINA,
      Funai.DAITOU,
      Funai.FAS_K2150,
      Funai.FREESIA,
      Funai.PEACH
  )

  /**
   * Get all device specifications for FUNKER devices.
   * Useful for funker testing.
   */
  public fun getFunkerDevices(): List<String> = listOf(
      Funker.E500I
  )

  /**
   * Get all device specifications for FUSE4K devices.
   * Useful for fuse4k testing.
   */
  public fun getFuse4kDevices(): List<String> = listOf(
      Fuse4k.SEI700L,
      Fuse4k.SEI700TV
  )

  /**
   * Get all device specifications for Fusion5 devices.
   * Useful for fusion5 testing.
   */
  public fun getFusion5Devices(): List<String> = listOf(
      Fusion5.F104BV2_EEA,
      Fusion5.F104BV2_PRO,
      Fusion5.F104BVII_PRO,
      Fusion5.F104EV2,
      Fusion5.F104EV2_EEA,
      Fusion5.F104EVII,
      Fusion5.F104EVII_EEA,
      Fusion5.F104EVII_PRO,
      Fusion5.F104EVII_PRO_EEA,
      Fusion5.F105D_128,
      Fusion5.F105DVII,
      Fusion5.F202_8G,
      Fusion5.F202_8G_EEA,
      Fusion5.F202_UK,
      Fusion5.F202_US,
      Fusion5.F202_V2_EEA,
      Fusion5.F704BV2,
      Fusion5.FUSION5_F104BV2,
      Fusion5.FUSION5_F104E,
      Fusion5.FUSION5_F105D
  )

  /**
   * Get all device specifications for FUTURETAB devices.
   * Useful for futuretab testing.
   */
  public fun getFuturetabDevices(): List<String> = listOf(
      Futuretab.CP80K
  )

  /**
   * Get all device specifications for Fx_tec_Pro1X devices.
   * Useful for fx_tec_pro1x testing.
   */
  public fun getFxTecPro1xDevices(): List<String> = listOf(
      FxTecPro1x.QX1050
  )

  /**
   * Get all device specifications for Fxtec devices.
   * Useful for fxtec testing.
   */
  public fun getFxtecDevices(): List<String> = listOf(
      Fxtec.QX1000
  )

  /**
   * Get all device specifications for G_Anica devices.
   * Useful for g_anica testing.
   */
  public fun getGAnicaDevices(): List<String> = listOf(
      GAnica.HL_1088_A133P
  )

  /**
   * Get all device specifications for G-GUARD devices.
   * Useful for g-guard testing.
   */
  public fun getGGuardDevices(): List<String> = listOf(
      GGuard.HAMAMATSUCHO,
      GGuard.R3_GTV,
      GGuard.R4_GTV,
      GGuard.VILEPARLE,
      GGuard.XIAOYUSHAN
  )

  /**
   * Get all device specifications for g-mee devices.
   * Useful for g-mee testing.
   */
  public fun getGMeeDevices(): List<String> = listOf(
      GMee.CONNECT_2_US,
      GMee.CONNECTPRO,
      GMee.CONNECTPRO_L,
      GMee.G_MEE1,
      GMee.G_MEE_PLAY_PRO,
      GMee.PLAY2
  )

  /**
   * Get all device specifications for G-Tab devices.
   * Useful for g-tab testing.
   */
  public fun getGTabDevices(): List<String> = listOf(
      GTab.C10_PRO,
      GTab.C10_1,
      GTab.C10_2,
      GTab.C10X,
      GTab.C20,
      GTab.C3,
      GTab.C30,
      GTab.C9,
      GTab.F1,
      GTab.F10,
      GTab.F1_1,
      GTab.F2,
      GTab.F2X,
      GTab.F4,
      GTab.F8,
      GTab.F8_1,
      GTab.F8X,
      GTab.G5,
      GTab.G9,
      GTab.N271,
      GTab.N28,
      GTab.N281,
      GTab.P2000,
      GTab.P733,
      GTab.PAD10,
      GTab.PAD10_PRO,
      GTab.Q2,
      GTab.Q2S,
      GTab.Q3,
      GTab.Q4,
      GTab.Q5,
      GTab.Q6,
      GTab.S10,
      GTab.S12,
      GTab.S20,
      GTab.S3,
      GTab.S30,
      GTab.S30_1,
      GTab.S40,
      GTab.S40_1,
      GTab.S50,
      GTab.S50_PRO,
      GTab.S8,
      GTab.S8K_1,
      GTab.S8K_2,
      GTab.S8X,
      GTab.T10_1,
      GTab.T11_1,
      GTab.T11_PRO,
      GTab.T8_1,
      GTab.T8S_1,
      GTab.T9_1,
      GTab.TABLET
  )

  /**
   * Get all device specifications for G-TiDE devices.
   * Useful for g-tide testing.
   */
  public fun getGTideDevices(): List<String> = listOf(
      GTide.G_TIDE_H1_1,
      GTide.G_TIDE_H1_2,
      GTide.G_TIDE_H1_3,
      GTide.G_TIDE_H1_4,
      GTide.G_TIDE_H1_4G,
      GTide.G_TIDE_P1_2,
      GTide.G_TIDE_P1_4G,
      GTide.H2R,
      GTide.KLAP_S1,
      GTide.KLAP_S1_EEA,
      GTide.ZEAL1
  )

  /**
   * Get all device specifications for G-TiDE_Extreme devices.
   * Useful for g-tide_extreme testing.
   */
  public fun getGTideExtremeDevices(): List<String> = listOf(
      GTideExtreme.EX760
  )

  /**
   * Get all device specifications for G-Touch devices.
   * Useful for g-touch testing.
   */
  public fun getGTouchDevices(): List<String> = listOf(
      GTouch.SPEED_2021,
      GTouch.STELLA_OMEGA,
      GTouch.STELLA_OMEGA_PLUS,
      GTouch.STELLA_X_PLUS,
      GTouch.STELLA_XS
  )

  /**
   * Get all device specifications for Gangnam devices.
   * Useful for gangnam testing.
   */
  public fun getGangnamDevices(): List<String> = listOf(
      Gangnam.ANGLELAKE,
      Gangnam.WAIAWA
  )

  /**
   * Get all device specifications for GARAD devices.
   * Useful for garad testing.
   */
  public fun getGaradDevices(): List<String> = listOf(
      Garad.GARAD_FIRE
  )

  /**
   * Get all device specifications for GarantiaMOVIL devices.
   * Useful for garantiamovil testing.
   */
  public fun getGarantiamovilDevices(): List<String> = listOf(
      Garantiamovil.L604
  )

  /**
   * Get all device specifications for Gateway devices.
   * Useful for gateway testing.
   */
  public fun getGatewayDevices(): List<String> = listOf(
      Gateway.G1_715,
      Gateway.GAKM10822,
      Gateway.GATA30812,
      Gateway.GATA31012,
      Gateway.GATM10822,
      Gateway.GATM11022,
      Gateway.GATM11033,
      Gateway.GWAT10_1,
      Gateway.GWAT8_1
  )

  /**
   * Get all device specifications for GAZER devices.
   * Useful for gazer testing.
   */
  public fun getGazerDevices(): List<String> = listOf(
      Gazer.STANFORD,
      Gazer.ZHONGSHAN
  )

  /**
   * Get all device specifications for GDL devices.
   * Useful for gdl testing.
   */
  public fun getGdlDevices(): List<String> = listOf(
      Gdl.G200,
      Gdl.GIGAX_Y21,
      Gdl.Y30
  )

  /**
   * Get all device specifications for GDM devices.
   * Useful for gdm testing.
   */
  public fun getGdmDevices(): List<String> = listOf(
      Gdm.MB10,
      Gdm.P4R
  )

  /**
   * Get all device specifications for ge devices.
   * Useful for ge testing.
   */
  public fun getGeDevices(): List<String> = listOf(
      Ge.SYKLONE
  )

  /**
   * Get all device specifications for geanee devices.
   * Useful for geanee testing.
   */
  public fun getGeaneeDevices(): List<String> = listOf(
      Geanee.ADP_503G
  )

  /**
   * Get all device specifications for geaneePro devices.
   * Useful for geaneepro testing.
   */
  public fun getGeaneeproDevices(): List<String> = listOf(
      Geaneepro.JT07_90,
      Geaneepro.JT07_X,
      Geaneepro.JT08_X1,
      Geaneepro.JT10_90,
      Geaneepro.JT10_X,
      Geaneepro.JT10_X1,
      Geaneepro.JT10LTE_X1,
      Geaneepro.JT10LTE_X1S
  )

  /**
   * Get all device specifications for Gear devices.
   * Useful for gear testing.
   */
  public fun getGearDevices(): List<String> = listOf(
      Gear.FEEL_1008S,
      Gear.GEAR_PRO,
      Gear.GEAR_PRO2,
      Gear.GM7,
      Gear.SPACE_PRO
  )

  /**
   * Get all device specifications for Gear_Mobile devices.
   * Useful for gear_mobile testing.
   */
  public fun getGearMobileDevices(): List<String> = listOf(
      GearMobile.GM10,
      GearMobile.GM30
  )

  /**
   * Get all device specifications for GEECOO devices.
   * Useful for geecoo testing.
   */
  public fun getGeecooDevices(): List<String> = listOf(
      Geecoo.G4
  )

  /**
   * Get all device specifications for General_luxe devices.
   * Useful for general_luxe testing.
   */
  public fun getGeneralLuxeDevices(): List<String> = listOf(
      GeneralLuxe.SHAHIN_III
  )

  /**
   * Get all device specifications for generalmobile devices.
   * Useful for generalmobile testing.
   */
  public fun getGeneralmobileDevices(): List<String> = listOf(
      Generalmobile.ETAB5,
      Generalmobile.GM6_D_SPROUT,
      Generalmobile.GM6_S_SPROUT,
      Generalmobile.MEHMET
  )

  /**
   * Get all device specifications for GeneralSupreme devices.
   * Useful for generalsupreme testing.
   */
  public fun getGeneralsupremeDevices(): List<String> = listOf(
      Generalsupreme.LONGSHAN
  )

  /**
   * Get all device specifications for Geniatech devices.
   * Useful for geniatech testing.
   */
  public fun getGeniatechDevices(): List<String> = listOf(
      Geniatech.ENJOYTV
  )

  /**
   * Get all device specifications for Geniora devices.
   * Useful for geniora testing.
   */
  public fun getGenioraDevices(): List<String> = listOf(
      Geniora.GEN1
  )

  /**
   * Get all device specifications for Geoelectron devices.
   * Useful for geoelectron testing.
   */
  public fun getGeoelectronDevices(): List<String> = listOf(
      Geoelectron.P9IV_HANDHELD
  )

  /**
   * Get all device specifications for GeoMax devices.
   * Useful for geomax testing.
   */
  public fun getGeomaxDevices(): List<String> = listOf(
      Geomax.ZENIUS08
  )

  /**
   * Get all device specifications for GeOTM devices.
   * Useful for geotm testing.
   */
  public fun getGeotmDevices(): List<String> = listOf(
      Geotm.GEO10
  )

  /**
   * Get all device specifications for Geshem devices.
   * Useful for geshem testing.
   */
  public fun getGeshemDevices(): List<String> = listOf(
      Geshem.GS0882T,
      Geshem.GS0883T,
      Geshem.GS1081T,
      Geshem.GS109M2A,
      Geshem.GS109M3A,
      Geshem.GS81TE
  )

  /**
   * Get all device specifications for Get devices.
   * Useful for get testing.
   */
  public fun getGetDevices(): List<String> = listOf(
      Get.DCIW387GET
  )

  /**
   * Get all device specifications for Getac devices.
   * Useful for getac testing.
   */
  public fun getGetacDevices(): List<String> = listOf(
      Getac.ZX10,
      Getac.ZX70,
      Getac.ZX70G2,
      Getac.ZX80
  )

  /**
   * Get all device specifications for Getnord devices.
   * Useful for getnord testing.
   */
  public fun getGetnordDevices(): List<String> = listOf(
      Getnord.LYNX
  )

  /**
   * Get all device specifications for Gevo devices.
   * Useful for gevo testing.
   */
  public fun getGevoDevices(): List<String> = listOf(
      Gevo.GEVO_V10,
      Gevo.V20
  )

  /**
   * Get all device specifications for Gfast devices.
   * Useful for gfast testing.
   */
  public fun getGfastDevices(): List<String> = listOf(
      Gfast.MD_97_S464A
  )

  /**
   * Get all device specifications for GFIVE devices.
   * Useful for gfive testing.
   */
  public fun getGfiveDevices(): List<String> = listOf(
      Gfive.GPAD702,
      Gfive.PRESIDENT_GOLD_10,
      Gfive.PRESIDENT_GOLD_9,
      Gfive.SPEEDO_1,
      Gfive.STARK
  )

  /**
   * Get all device specifications for GGuard devices.
   * Useful for gguard testing.
   */
  public fun getGguardDevices(): List<String> = listOf(
      Gguard.SHIBUYA,
      Gguard.SW4H
  )

  /**
   * Get all device specifications for GHIA devices.
   * Useful for ghia testing.
   */
  public fun getGhiaDevices(): List<String> = listOf(
      Ghia.A7_3G,
      Ghia.A7_WF,
      Ghia.GA7133,
      Ghia.GA8N,
      Ghia.GA8N2,
      Ghia.GHIA_A1,
      Ghia.GHIA_A7,
      Ghia.GHIA_AXIS7,
      Ghia.GHIA_AXIS7P,
      Ghia.GHIA_L1,
      Ghia.GHIA_VECTOR_3G,
      Ghia.GK133,
      Ghia.GK133M24,
      Ghia.GK133M3,
      Ghia.GK133N3,
      Ghia.GK133P24,
      Ghia.GK133S3,
      Ghia.GK133T3,
      Ghia.GK133V3,
      Ghia.GK523A24,
      Ghia.GPND133,
      Ghia.GPND133V4,
      Ghia.GRINV1,
      Ghia.GS3G,
      Ghia.GTA7PLUS,
      Ghia.GTA7WF,
      Ghia.GTAB718,
      Ghia.GTABKIDS,
      Ghia.GTABPND,
      Ghia.GTKIDS7_100,
      Ghia.GTKIDS7A,
      Ghia.GTKIDS7B,
      Ghia.GTKIDS7R,
      Ghia.GTKIDS7V,
      Ghia.GTPND7,
      Ghia.GTTODD7,
      Ghia.GTVR10S,
      Ghia.GVLTE13,
      Ghia.GVPNT,
      Ghia.N2,
      Ghia.STANFORD,
      Ghia.TREO_TAB8G,
      Ghia.VECTOR10_1,
      Ghia.VECTOR_3G,
      Ghia.VECTOR_SLIM,
      Ghia.ZHONGSHAN
  )

  /**
   * Get all device specifications for GHIA_KIDS devices.
   * Useful for ghia_kids testing.
   */
  public fun getGhiaKidsDevices(): List<String> = listOf(
      GhiaKids.GTKIDS7
  )

  /**
   * Get all device specifications for GIGABYTE devices.
   * Useful for gigabyte testing.
   */
  public fun getGigabyteDevices(): List<String> = listOf(
      Gigabyte.HUANGSHAN
  )

  /**
   * Get all device specifications for Gigaset devices.
   * Useful for gigaset testing.
   */
  public fun getGigasetDevices(): List<String> = listOf(
      Gigaset.FG6Q,
      Gigaset.GIGASET_GS270,
      Gigaset.GIGASET_GS270_PLUS,
      Gigaset.GIGASET_GS4,
      Gigaset.GS100,
      Gigaset.GS110,
      Gigaset.GS160,
      Gigaset.GS170,
      Gigaset.GS180,
      Gigaset.GS185,
      Gigaset.GS190,
      Gigaset.GS195,
      Gigaset.GS280,
      Gigaset.GS290,
      Gigaset.GS3,
      Gigaset.GS370,
      Gigaset.GS370_PLUS,
      Gigaset.GS5,
      Gigaset.GS5_LITE,
      Gigaset.GS5_SENIOR,
      Gigaset.GS80,
      Gigaset.GX290,
      Gigaset.GX4,
      Gigaset.GX4_PRO,
      Gigaset.GX6,
      Gigaset.GX6_PRO,
      Gigaset.LION_S,
      Gigaset.MAXWELL_10,
      Gigaset.ME,
      Gigaset.MEPRO,
      Gigaset.UY8
  )

  /**
   * Get all device specifications for Gini devices.
   * Useful for gini testing.
   */
  public fun getGiniDevices(): List<String> = listOf(
      Gini.E6_PLUS,
      Gini.GINI_S5PRO
  )

  /**
   * Get all device specifications for Ginzzu devices.
   * Useful for ginzzu testing.
   */
  public fun getGinzzuDevices(): List<String> = listOf(
      Ginzzu.RS8502,
      Ginzzu.RS9602
  )

  /**
   * Get all device specifications for GIONEE devices.
   * Useful for gionee testing.
   */
  public fun getGioneeDevices(): List<String> = listOf(
      Gionee.F10,
      Gionee.F10_PLUS,
      Gionee.F205_PRO,
      Gionee.F8_NEO,
      Gionee.F9,
      Gionee.F9_PLUS,
      Gionee.GIONEE_BBL7332,
      Gionee.GIONEE_BBL7337A,
      Gionee.GIONEE_BBL7505,
      Gionee.GIONEE_BBL7515A,
      Gionee.GIONEE_BBL7516A,
      Gionee.GIONEE_BBL7516A01,
      Gionee.GIONEE_BJ17G16,
      Gionee.GIONEE_CBL7513,
      Gionee.GIONEE_F11,
      Gionee.GIONEE_G1602A,
      Gionee.GIONEE_G1605A,
      Gionee.GIONEE_GBL7319,
      Gionee.GIONEE_GBL7333,
      Gionee.GIONEE_GBL7335,
      Gionee.GIONEE_GBL7358,
      Gionee.GIONEE_GBL7359,
      Gionee.GIONEE_GBL7360,
      Gionee.GIONEE_GBL7370,
      Gionee.GIONEE_GBL7523,
      Gionee.GIONEE_GBL7529,
      Gionee.GIONEE_GBL7553,
      Gionee.GIONEE_GN9008,
      Gionee.GIONEE_H601,
      Gionee.GIONEE_H603,
      Gionee.GIONEE_M100,
      Gionee.GIONEE_M11,
      Gionee.GIONEE_M15,
      Gionee.GIONEE_M3,
      Gionee.GIONEE_MAX,
      Gionee.GIONEE_MAX_PRO,
      Gionee.GIONEE_P12,
      Gionee.GIONEE_P15,
      Gionee.GIONEE_SW17G01,
      Gionee.GIONEE_SW17G02,
      Gionee.GIONEE_SW17G03,
      Gionee.GIONEE_SW17G04,
      Gionee.GIONEE_SW17G07,
      Gionee.GIONEE_SW17G09,
      Gionee.GIONEE_SW17G13,
      Gionee.GIONEE_SW17G15,
      Gionee.GIONEE_SW17G18,
      Gionee.GIONEE_SW17W04,
      Gionee.GIONEE_SWG1608,
      Gionee.GIONEE_SWG1613,
      Gionee.GIONEE_SWW1609,
      Gionee.GIONEE_SWW1617,
      Gionee.GIONEE_SWW1618,
      Gionee.GIONEE_SWW1627,
      Gionee.GIONEE_SWW1631,
      Gionee.GIONEE_WBL5708,
      Gionee.GIONEE_WBL7352,
      Gionee.GIONEE_WBL7361,
      Gionee.GIONEE_WBL7365,
      Gionee.GIONEE_WBL7372,
      Gionee.GIONEE_WBL7511,
      Gionee.GIONEE_WBL7517,
      Gionee.GIONEE_WBL7519,
      Gionee.GIONEE_WBW5612,
      Gionee.GIONEE_WBW5613,
      Gionee.GIONEE_WBW5615,
      Gionee.GIONEE_WBW5616,
      Gionee.GIONEE_WBW5617,
      Gionee.GIONEE_WBW5620,
      Gionee.GN9006,
      Gionee.M5,
      Gionee.P15_PRO,
      Gionee.P61,
      Gionee.S12_LITE
  )

  /**
   * Get all device specifications for GLOBAL devices.
   * Useful for global testing.
   */
  public fun getGlobalDevices(): List<String> = listOf(
      Global.LAVENDER,
      Global.MOUNTBAKER,
      Global.STANFORD,
      Global.ZHONGSHAN
  )

  /**
   * Get all device specifications for GLOBAL_3 devices.
   * Useful for global_3 testing.
   */
  public fun getGlobal3Devices(): List<String> = listOf(
      Global3.GLOBAL3_B01
  )

  /**
   * Get all device specifications for GlobalSec devices.
   * Useful for globalsec testing.
   */
  public fun getGlobalsecDevices(): List<String> = listOf(
      Globalsec.BW819E_CR_EEA,
      Globalsec.BW819E_SK_EEA,
      Globalsec.TAB_TEN
  )

  /**
   * Get all device specifications for Globe devices.
   * Useful for globe testing.
   */
  public fun getGlobeDevices(): List<String> = listOf(
      Globe.SEI120G
  )

  /**
   * Get all device specifications for globe_ATV devices.
   * Useful for globe_atv testing.
   */
  public fun getGlobeAtvDevices(): List<String> = listOf(
      GlobeAtv.GLOBE_AP,
      GlobeAtv.GLOBE_EU,
      GlobeAtv.GLOBE_NA,
      GlobeAtv.GLOBE_SA
  )

  /**
   * Get all device specifications for GlobeStreamwatch devices.
   * Useful for globestreamwatch testing.
   */
  public fun getGlobestreamwatchDevices(): List<String> = listOf(
      Globestreamwatch.SEI530G
  )

  /**
   * Get all device specifications for Globus-Infocom-Limited devices.
   * Useful for globus-infocom-limited testing.
   */
  public fun getGlobusInfocomLimitedDevices(): List<String> = listOf(
      GlobusInfocomLimited.MTK9679
  )

  /**
   * Get all device specifications for GlocalMe devices.
   * Useful for glocalme testing.
   */
  public fun getGlocalmeDevices(): List<String> = listOf(
      Glocalme.P3S18,
      Glocalme.S20IQ19
  )

  /**
   * Get all device specifications for Glofiish devices.
   * Useful for glofiish testing.
   */
  public fun getGlofiishDevices(): List<String> = listOf(
      Glofiish.GPAD_U
  )

  /**
   * Get all device specifications for GLX devices.
   * Useful for glx testing.
   */
  public fun getGlxDevices(): List<String> = listOf(
      Glx.SHAHIN_IV
  )

  /**
   * Get all device specifications for gm devices.
   * Useful for gm testing.
   */
  public fun getGmDevices(): List<String> = listOf(
      Gm.AEGEAN,
      Gm.BURMESE,
      Gm.E_TAB20,
      Gm.E_TAB20_VARIANT,
      Gm.G008,
      Gm.G008_D,
      Gm.G100,
      Gm.G300,
      Gm.G301,
      Gm.G310,
      Gm.G312,
      Gm.G314,
      Gm.G316,
      Gm.G318,
      Gm.G501,
      Gm.G510,
      Gm.G512,
      Gm.G514,
      Gm.G518,
      Gm.G700,
      Gm.G702,
      Gm.G901,
      Gm.GM5_S_SPROUT,
      Gm.GM5_SPROUT,
      Gm.GM5PLUS_S_SPROUT,
      Gm.GM5PLUS_SPROUT,
      Gm.GM5PLUSTKC_S_SPROUT,
      Gm.GM8_D_SPROUT,
      Gm.GM8_GO,
      Gm.GM8_GO_SC,
      Gm.GM8_SPROUT,
      Gm.GM9PLUS_S,
      Gm.GM9PRO_D_SPROUT,
      Gm.GM9PRO_SPROUT
  )

  /**
   * Get all device specifications for GMMZ devices.
   * Useful for gmmz testing.
   */
  public fun getGmmzDevices(): List<String> = listOf(
      Gmmz.DONGLETV1
  )

  /**
   * Get all device specifications for Go3 devices.
   * Useful for go3 testing.
   */
  public fun getGo3Devices(): List<String> = listOf(
      Go3.HP44H
  )

  /**
   * Get all device specifications for GO_MD_USA devices.
   * Useful for go_md_usa testing.
   */
  public fun getGoMdUsaDevices(): List<String> = listOf(
      GoMdUsa.X23_PRO
  )

  /**
   * Get all device specifications for Goally devices.
   * Useful for goally testing.
   */
  public fun getGoallyDevices(): List<String> = listOf(
      Goally.P3_8
  )

  /**
   * Get all device specifications for GOBOX devices.
   * Useful for gobox testing.
   */
  public fun getGoboxDevices(): List<String> = listOf(
      Gobox.T2
  )

  /**
   * Get all device specifications for GOL devices.
   * Useful for gol testing.
   */
  public fun getGolDevices(): List<String> = listOf(
      Gol.F10,
      Gol.F10_PRIME,
      Gol.F11,
      Gol.F9,
      Gol.F9PRIME,
      Gol.TEAM_7_PLUS
  )

  /**
   * Get all device specifications for Goldentec devices.
   * Useful for goldentec testing.
   */
  public fun getGoldentecDevices(): List<String> = listOf(
      Goldentec.GT_METAL_TAB10,
      Goldentec.GT_TAB10,
      Goldentec.GT_TAB7
  )

  /**
   * Get all device specifications for GOLDTECH devices.
   * Useful for goldtech testing.
   */
  public fun getGoldtechDevices(): List<String> = listOf(
      Goldtech.GT10_B16,
      Goldtech.GT7_B16,
      Goldtech.JTTAB035
  )

  /**
   * Get all device specifications for GOMDUSA devices.
   * Useful for gomdusa testing.
   */
  public fun getGomdusaDevices(): List<String> = listOf(
      Gomdusa.X23_TAB
  )

  /**
   * Get all device specifications for GOME devices.
   * Useful for gome testing.
   */
  public fun getGomeDevices(): List<String> = listOf(
      Gome.GOME_C7,
      Gome.GOME_C7_NOTE,
      Gome.GOME_C7_NOTE_MINI
  )

  /**
   * Get all device specifications for GOMOBILE devices.
   * Useful for gomobile testing.
   */
  public fun getGomobileDevices(): List<String> = listOf(
      Gomobile.G860,
      Gomobile.GM,
      Gomobile.GO1452,
      Gomobile.GO_SMART
  )

  /**
   * Get all device specifications for Goo devices.
   * Useful for goo testing.
   */
  public fun getGooDevices(): List<String> = listOf(
      Goo.V12DN
  )

  /**
   * Get all device specifications for GOODEE devices.
   * Useful for goodee testing.
   */
  public fun getGoodeeDevices(): List<String> = listOf(
      Goodee.HIMALAYA
  )

  /**
   * Get all device specifications for GOODTEL devices.
   * Useful for goodtel testing.
   */
  public fun getGoodtelDevices(): List<String> = listOf(
      Goodtel.G10_EEA,
      Goodtel.G10_T_EEA,
      Goodtel.G10_T_US,
      Goodtel.G10_US,
      Goodtel.G2_A_EEA,
      Goodtel.G2_T_EEA,
      Goodtel.G2_T_US,
      Goodtel.G3,
      Goodtel.G3_US,
      Goodtel.G7,
      Goodtel.G7_EEA,
      Goodtel.G7_EEA_T,
      Goodtel.G7_T,
      Goodtel.G9_EEA,
      Goodtel.G9_US
  )

  /**
   * Get all device specifications for google devices.
   * Useful for google testing.
   */
  public fun getGoogleDevices(): List<String> = listOf(
      Google.AKITA,
      Google.ANGLER,
      Google.ASUKA_CHEETS,
      Google.ASURADA_CHEETS,
      Google.ATLAS_CHEETS,
      Google.ATOM,
      Google.AURORA,
      Google.AUTOMOTIVE_1024P_LANDSCAPE,
      Google.BANON_CHEETS,
      Google.BARBET,
      Google.BLUEJAY,
      Google.BOB_CHEETS,
      Google.BONITO,
      Google.BOREAL,
      Google.BRAMBLE,
      Google.BRASK_CHEETS,
      Google.BRYA_CHEETS,
      Google.BULLHEAD,
      Google.CAIMAN,
      Google.CAROLINE_CHEETS,
      Google.CAVE_CHEETS,
      Google.CELES_CHEETS,
      Google.CHEETAH,
      Google.CHELL_CHEETS,
      Google.CHERRY_CHEETS,
      Google.COMET,
      Google.CORAL,
      Google.CORSOLA_CHEETS,
      Google.CROSSHATCH,
      Google.CUPID_P1,
      Google.CYAN_CHEETS,
      Google.DEB,
      Google.DEDEDE_CHEETS,
      Google.DOVE_WATCH,
      Google.DRAGON,
      Google.DRALLION_CHEETS,
      Google.EDGAR_CHEETS,
      Google.ELM_CHEETS,
      Google.EMU64XA,
      Google.EOS,
      Google.EVE_CHEETS,
      Google.FELIX,
      Google.FIEVEL_CHEETS,
      Google.FIZZ_CHEETS,
      Google.FLAME,
      Google.FLO,
      Google.FLOUNDER,
      Google.FLOUNDER_LTE,
      Google.FUGU,
      Google.GANDOF_CHEETS,
      Google.GENERIC_X86,
      Google.GENERIC_X86_64,
      Google.GENERIC_X86_ARM,
      Google.GERALT_CHEETS,
      Google.GM4G_S_SPROUT,
      Google.GM4G_SPROUT,
      Google.GM4GTKC_S_SPROUT,
      Google.GROUPER,
      Google.GRUNT_CHEETS,
      Google.GUYBRUSH_CHEETS,
      Google.HAMMERHEAD,
      Google.HANA_CHEETS,
      Google.HATCH_CHEETS,
      Google.HELIOS,
      Google.HUSKY,
      Google.JERRY_CHEETS,
      Google.KALISTA_CHEETS,
      Google.KEFKA_CHEETS,
      Google.KEVIN_CHEETS,
      Google.KIRKWOOD,
      Google.KOMODO,
      Google.KUKUI_CHEETS,
      Google.LARS_CHEETS,
      Google.LULU_CHEETS,
      Google.LUNA,
      Google.LYNX,
      Google.MAGURO,
      Google.MAKO,
      Google.MANTA,
      Google.MARLIN,
      Google.MIGHTY_CHEETS,
      Google.MINNIE_CHEETS,
      Google.NAMI_CHEETS,
      Google.NAUTILUS_CHEETS,
      Google.NEXUS_10,
      Google.NEXUS_5,
      Google.NEXUS_5X,
      Google.NEXUS_6,
      Google.NEXUS_6P,
      Google.NEXUS_7,
      Google.NEXUS_7_2013,
      Google.NEXUS_9,
      Google.NISSA_CHEETS,
      Google.NOCTURNE_CHEETS,
      Google.ORIOLE,
      Google.P11,
      Google.P281,
      Google.PAINE_CHEETS,
      Google.PANTHER,
      Google.PIXEL,
      Google.PIXEL_2,
      Google.PIXEL_2_XL,
      Google.PIXEL_3,
      Google.PIXEL_3_XL,
      Google.PIXEL_3A,
      Google.PIXEL_3A_XL,
      Google.PIXEL_4,
      Google.PIXEL_4_XL,
      Google.PIXEL_4A,
      Google.PIXEL_5,
      Google.PIXEL_6,
      Google.PIXEL_6_PRO,
      Google.PIXEL_6A,
      Google.PIXEL_7,
      Google.PIXEL_7_PRO,
      Google.PIXEL_7A,
      Google.PIXEL_8,
      Google.PIXEL_8_PRO,
      Google.PIXEL_8A,
      Google.PIXEL_9,
      Google.PIXEL_9_PRO,
      Google.PIXEL_9_PRO_FOLD,
      Google.PIXEL_9_PRO_XL,
      Google.PIXEL_C,
      Google.PIXEL_FOLD,
      Google.PIXEL_TABLET,
      Google.PIXEL_XL,
      Google.PUFF_CHEETS,
      Google.PYRO_CHEETS,
      Google.R11,
      Google.R11BTWIFI,
      Google.RAMMUS_CHEETS,
      Google.RAURU_CHEETS,
      Google.RAVEN,
      Google.REDFIN,
      Google.REEF_CHEETS,
      Google.REKS_CHEETS,
      Google.RELM_CHEETS,
      Google.REX_CHEETS,
      Google.SABRINA,
      Google.SAILFISH,
      Google.SAMUS_CHEETS,
      Google.SAND_CHEETS,
      Google.SARGO,
      Google.SARIEN_CHEETS,
      Google.SCARLET_CHEETS,
      Google.SELENE,
      Google.SENTRY_CHEETS,
      Google.SETZER_CHEETS,
      Google.SHAMU,
      Google.SHIBA,
      Google.SKYRIM_CHEETS,
      Google.SNAPPY_CHEETS,
      Google.SOL,
      Google.SORAKA_CHEETS,
      Google.STARYU_CHEETS,
      Google.SUNFISH,
      Google.TANGORPRO,
      Google.TEGU,
      Google.TERRA_CHEETS,
      Google.TIGER_CHEETS,
      Google.TILAPIA,
      Google.TITAN_P1,
      Google.TOKAY,
      Google.TORO,
      Google.TROGDOR_CHEETS,
      Google.ULTIMA_CHEETS,
      Google.VOLTEER_CHEETS,
      Google.VSOC_X86_64,
      Google.WIZPIG_CHEETS,
      Google.YUNA_CHEETS
  )

  /**
   * Get all device specifications for GoPlus devices.
   * Useful for goplus testing.
   */
  public fun getGoplusDevices(): List<String> = listOf(
      Goplus.SEI700STL
  )

  /**
   * Get all device specifications for GOtv devices.
   * Useful for gotv testing.
   */
  public fun getGotvDevices(): List<String> = listOf(
      Gotv.GOFREETV,
      Gotv.HND,
      Gotv.HP4BA_GOTV
  )

  /**
   * Get all device specifications for Gowin devices.
   * Useful for gowin testing.
   */
  public fun getGowinDevices(): List<String> = listOf(
      Gowin.QT8_T310
  )

  /**
   * Get all device specifications for GPELECTRONIC devices.
   * Useful for gpelectronic testing.
   */
  public fun getGpelectronicDevices(): List<String> = listOf(
      Gpelectronic.YC_3135D,
      Gpelectronic.YC_83P,
      Gpelectronic.YC_83T
  )

  /**
   * Get all device specifications for GPLUS devices.
   * Useful for gplus testing.
   */
  public fun getGplusDevices(): List<String> = listOf(
      Gplus.GNE_N001S,
      Gplus.GNE_N003S,
      Gplus.GPLUS_A2_PLUS,
      Gplus.GPLUS_FW6950,
      Gplus.P10,
      Gplus.P10_2022,
      Gplus.P10_PLUS,
      Gplus.Q10,
      Gplus.S10,
      Gplus.T10,
      Gplus.X10,
      Gplus.X10_PLUS,
      Gplus.Z10
  )

  /**
   * Get all device specifications for GPX devices.
   * Useful for gpx testing.
   */
  public fun getGpxDevices(): List<String> = listOf(
      Gpx.TBDV1093
  )

  /**
   * Get all device specifications for Gradiente devices.
   * Useful for gradiente testing.
   */
  public fun getGradienteDevices(): List<String> = listOf(
      Gradiente.GTB_106
  )

  /**
   * Get all device specifications for GREATASIA devices.
   * Useful for greatasia testing.
   */
  public fun getGreatasiaDevices(): List<String> = listOf(
      Greatasia.E101GC,
      Greatasia.E101GC4G,
      Greatasia.E108GC,
      Greatasia.E10_A133_EEA,
      Greatasia.E10A133_EEA,
      Greatasia.E700_KIDS_EEA,
      Greatasia.E720_EEA,
      Greatasia.E9863,
      Greatasia.TK_P1197,
      Greatasia.TK_E109GCM,
      Greatasia.TK_E720_EEA
  )

  /**
   * Get all device specifications for greatwall devices.
   * Useful for greatwall testing.
   */
  public fun getGreatwallDevices(): List<String> = listOf(
      Greatwall.GWPAD_S11,
      Greatwall.GWPAD_S11_1,
      Greatwall.TABLET
  )

  /**
   * Get all device specifications for GREENHOUSE devices.
   * Useful for greenhouse testing.
   */
  public fun getGreenhouseDevices(): List<String> = listOf(
      Greenhouse.KANNAI,
      Greenhouse.PIHA,
      Greenhouse.SW6H,
      Greenhouse.UMEDA
  )

  /**
   * Get all device specifications for GreenLion devices.
   * Useful for greenlion testing.
   */
  public fun getGreenlionDevices(): List<String> = listOf(
      Greenlion.G_10_PRO,
      Greenlion.G_10_ULTRA,
      Greenlion.G_20ULTRA,
      Greenlion.G_30_ULTRA,
      Greenlion.G_8_PRO
  )

  /**
   * Get all device specifications for Greentel devices.
   * Useful for greentel testing.
   */
  public fun getGreentelDevices(): List<String> = listOf(
      Greentel.A10_PREMIUM,
      Greentel.A10PRO,
      Greentel.A8,
      Greentel.A9,
      Greentel.GREENTEL_A10,
      Greentel.TAB_X,
      Greentel.V2,
      Greentel.X1_LIGHT_LTE,
      Greentel.X2
  )

  /**
   * Get all device specifications for greentel_mobile devices.
   * Useful for greentel_mobile testing.
   */
  public fun getGreentelMobileDevices(): List<String> = listOf(
      GreentelMobile.X_MAX
  )

  /**
   * Get all device specifications for GRID devices.
   * Useful for grid testing.
   */
  public fun getGridDevices(): List<String> = listOf(
      Grid.GRID_GS6100
  )

  /**
   * Get all device specifications for Grolier devices.
   * Useful for grolier testing.
   */
  public fun getGrolierDevices(): List<String> = listOf(
      Grolier.GSR,
      Grolier.GSR2
  )

  /**
   * Get all device specifications for Grundig devices.
   * Useful for grundig testing.
   */
  public fun getGrundigDevices(): List<String> = listOf(
      Grundig.AKROPOLI,
      Grundig.KUNYANG,
      Grundig.MARTIN,
      Grundig.R4,
      Grundig.SHINAGAWA,
      Grundig.SINCHON,
      Grundig.WANCHAI
  )

  /**
   * Get all device specifications for Grunhelm devices.
   * Useful for grunhelm testing.
   */
  public fun getGrunhelmDevices(): List<String> = listOf(
      Grunhelm.IKEBUKURO,
      Grunhelm.LONGSHAN,
      Grunhelm.REDWOOD,
      Grunhelm.SAMSEONG
  )

  /**
   * Get all device specifications for GRUNKEL devices.
   * Useful for grunkel testing.
   */
  public fun getGrunkelDevices(): List<String> = listOf(
      Grunkel.MARTIN,
      Grunkel.TAMACHI,
      Grunkel.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for Gtel devices.
   * Useful for gtel testing.
   */
  public fun getGtelDevices(): List<String> = listOf(
      Gtel.A737_XPLORAZ,
      Gtel.DELTA_14,
      Gtel.GTEL_DELTA_16,
      Gtel.GTEL_INFINITY_8S,
      Gtel.GTEL_INFINITY_9,
      Gtel.GTEL_INFINITY_X,
      Gtel.GTEL_X5,
      Gtel.GTEL_X5PLUS,
      Gtel.GTEL_X6MINI,
      Gtel.GTEL_X6PLUS,
      Gtel.GTEL_X6PRO,
      Gtel.GTEL_X6S,
      Gtel.GTEL_X7PLUS,
      Gtel.GTEL_X7PRO,
      Gtel.GTEL_X7S,
      Gtel.INFINITY7PLUS,
      Gtel.INFINITY7PRO,
      Gtel.INFINITY_13,
      Gtel.MX6
  )

  /**
   * Get all device specifications for GTO devices.
   * Useful for gto testing.
   */
  public fun getGtoDevices(): List<String> = listOf(
      Gto.M1092R
  )

  /**
   * Get all device specifications for GTX devices.
   * Useful for gtx testing.
   */
  public fun getGtxDevices(): List<String> = listOf(
      Gtx.GTX_JACULUS,
      Gtx.GTX_JACULUS_01,
      Gtx.JACULUS_V2
  )

  /**
   * Get all device specifications for Guophone devices.
   * Useful for guophone testing.
   */
  public fun getGuophoneDevices(): List<String> = listOf(
      Guophone.GUOPHONE_XP9800
  )

  /**
   * Get all device specifications for H133 devices.
   * Useful for h133 testing.
   */
  public fun getH133Devices(): List<String> = listOf(
      H133.BETACRUX
  )

  /**
   * Get all device specifications for H800B devices.
   * Useful for h800b testing.
   */
  public fun getH800bDevices(): List<String> = listOf(
      H800b.RIGEL
  )

  /**
   * Get all device specifications for H819E devices.
   * Useful for h819e testing.
   */
  public fun getH819eDevices(): List<String> = listOf(
      H819e.MINTAKA
  )

  /**
   * Get all device specifications for HAAM devices.
   * Useful for haam testing.
   */
  public fun getHaamDevices(): List<String> = listOf(
      Haam.R3,
      Haam.R3_GTV,
      Haam.R4_GTV,
      Haam.VILEPARLE
  )

  /**
   * Get all device specifications for HAEHNE devices.
   * Useful for haehne testing.
   */
  public fun getHaehneDevices(): List<String> = listOf(
      Haehne.A863K_EEA
  )

  /**
   * Get all device specifications for HAFURY devices.
   * Useful for hafury testing.
   */
  public fun getHafuryDevices(): List<String> = listOf(
      Hafury.A7,
      Hafury.G20,
      Hafury.GT20,
      Hafury.HAFURY_MIX,
      Hafury.HAFURY_UMAX,
      Hafury.K30,
      Hafury.K30_PRO,
      Hafury.M20,
      Hafury.MEET,
      Hafury.NOTE_10,
      Hafury.V1
  )

  /**
   * Get all device specifications for Haier devices.
   * Useful for haier testing.
   */
  public fun getHaierDevices(): List<String> = listOf(
      Haier.A1,
      Haier.A3,
      Haier.A4_LITE,
      Haier.BROADWAY,
      Haier.BURRARD,
      Haier.DAAN,
      Haier.DETO,
      Haier.DUPONT,
      Haier.E13,
      Haier.E7,
      Haier.E9,
      Haier.HAIER_L52,
      Haier.HAIER_LEISURE_L7,
      Haier.HANYANG,
      Haier.HM_G553_FL,
      Haier.HONGIK,
      Haier.I4,
      Haier.I6_INFINITY,
      Haier.IRVINE,
      Haier.JORDAN,
      Haier.LE32U5000A,
      Haier.LE40U5000A,
      Haier.LE43U5000A,
      Haier.LE49U5000A,
      Haier.M53_52401,
      Haier.M5352401,
      Haier.NIPPORI,
      Haier.OMONIA,
      Haier.P10,
      Haier.P11,
      Haier.P20,
      Haier.P20_TABLET_PC,
      Haier.PAD1042,
      Haier.S5_SILK,
      Haier.SW4H_FF,
      Haier.TABLET_P20,
      Haier.TITAN_T3,
      Haier.TITAN_T5,
      Haier.UGUISUDANI,
      Haier.YONGCHUN,
      Haier.YQB
  )

  /**
   * Get all device specifications for Haitech devices.
   * Useful for haitech testing.
   */
  public fun getHaitechDevices(): List<String> = listOf(
      Haitech.A81G,
      Haitech.HIP_T66,
      Haitech.HPAD_M2,
      Haitech.HPAD_IP8045,
      Haitech.HPAD_IP8045_1
  )

  /**
   * Get all device specifications for HAKO devices.
   * Useful for hako testing.
   */
  public fun getHakoDevices(): List<String> = listOf(
      Hako.GMP,
      Hako.YXU
  )

  /**
   * Get all device specifications for Hamic devices.
   * Useful for hamic testing.
   */
  public fun getHamicDevices(): List<String> = listOf(
      Hamic.MIELS,
      Hamic.POCKET
  )

  /**
   * Get all device specifications for HAMLET devices.
   * Useful for hamlet testing.
   */
  public fun getHamletDevices(): List<String> = listOf(
      Hamlet.XZPAD412LTE,
      Hamlet.XZPAD412W,
      Hamlet.XZPAD414LTE,
      Hamlet.XZPAD414W
  )

  /**
   * Get all device specifications for Hammer devices.
   * Useful for hammer testing.
   */
  public fun getHammerDevices(): List<String> = listOf(
      Hammer.ENERGY_2_2022,
      Hammer.EXPLORER_PLUS,
      Hammer.HAMMER_BLADE_3,
      Hammer.HAMMER_BLADE_4,
      Hammer.HAMMER_BLADE_5G,
      Hammer.HAMMER_CONSTRUCTION,
      Hammer.HAMMER_EXPL_PRO,
      Hammer.HS2302X,
      Hammer.HS2401X,
      Hammer.HS2402,
      Hammer.HS2403X,
      Hammer.HS2404X,
      Hammer.HS2512
  )

  /**
   * Get all device specifications for HANASIS devices.
   * Useful for hanasis testing.
   */
  public fun getHanasisDevices(): List<String> = listOf(
      Hanasis.BLAZE
  )

  /**
   * Get all device specifications for Handheld devices.
   * Useful for handheld testing.
   */
  public fun getHandheldDevices(): List<String> = listOf(
      Handheld.ALBATROSS_EEA,
      Handheld.ALBATROSS_GL,
      Handheld.ALGIZ_RT10,
      Handheld.ALGIZ_RT8,
      Handheld.ALGIZRT7,
      Handheld.ALTA_EEA,
      Handheld.ALTA_GL,
      Handheld.NAUTIZ_X2,
      Handheld.NAUTIZ_X6,
      Handheld.NAUTIZ_X6P,
      Handheld.NAUTIZ_X9P
  )

  /**
   * Get all device specifications for Handheld-Wireless devices.
   * Useful for handheld-wireless testing.
   */
  public fun getHandheldWirelessDevices(): List<String> = listOf(
      HandheldWireless.C6,
      HandheldWireless.X6
  )

  /**
   * Get all device specifications for Handtop devices.
   * Useful for handtop testing.
   */
  public fun getHandtopDevices(): List<String> = listOf(
      Handtop.HTA11
  )

  /**
   * Get all device specifications for HANET devices.
   * Useful for hanet testing.
   */
  public fun getHanetDevices(): List<String> = listOf(
      Hanet.SMARTEDU
  )

  /**
   * Get all device specifications for HANKOOK_CREA devices.
   * Useful for hankook_crea testing.
   */
  public fun getHankookCreaDevices(): List<String> = listOf(
      HankookCrea.HANKOOK_CREA_RK3588
  )

  /**
   * Get all device specifications for Hannspree devices.
   * Useful for hannspree testing.
   */
  public fun getHannspreeDevices(): List<String> = listOf(
      Hannspree.HANNSPAD,
      Hannspree.HANNSPADPRO,
      Hannspree.HSG1351,
      Hannspree.HSG1376_MT8163,
      Hannspree.HSG1415,
      Hannspree.HSG1416A,
      Hannspree.MID1024_E,
      Hannspree.READER,
      Hannspree.RK3368_32
  )

  /**
   * Get all device specifications for Hansung devices.
   * Useful for hansung testing.
   */
  public fun getHansungDevices(): List<String> = listOf(
      Hansung.SEOCHO,
      Hansung.SHILIN
  )

  /**
   * Get all device specifications for HANYEAL devices.
   * Useful for hanyeal testing.
   */
  public fun getHanyealDevices(): List<String> = listOf(
      Hanyeal.E101GC
  )

  /**
   * Get all device specifications for HAOQIN devices.
   * Useful for haoqin testing.
   */
  public fun getHaoqinDevices(): List<String> = listOf(
      Haoqin.H10PRO,
      Haoqin.SPACETAB_H20,
      Haoqin.SPACETAB_H20_EEA
  )

  /**
   * Get all device specifications for HAOVM devices.
   * Useful for haovm testing.
   */
  public fun getHaovmDevices(): List<String> = listOf(
      Haovm.HP10,
      Haovm.HP10_EEA,
      Haovm.HP20,
      Haovm.P10_2024,
      Haovm.P10_PRO,
      Haovm.P20,
      Haovm.P9,
      Haovm.P9_EEA,
      Haovm.PS30,
      Haovm.T2000
  )

  /**
   * Get all device specifications for HARMON-TEC devices.
   * Useful for harmon-tec testing.
   */
  public fun getHarmonTecDevices(): List<String> = listOf(
      HarmonTec.HONGKONG,
      HarmonTec.MOUNTBAKER
  )

  /**
   * Get all device specifications for Hatch devices.
   * Useful for hatch testing.
   */
  public fun getHatchDevices(): List<String> = listOf(
      Hatch.HATCH_102S,
      Hatch.HATCH_103S
  )

  /**
   * Get all device specifications for Hathway devices.
   * Useful for hathway testing.
   */
  public fun getHathwayDevices(): List<String> = listOf(
      Hathway.SEI103,
      Hathway.SEI111H
  )

  /**
   * Get all device specifications for HAUS devices.
   * Useful for haus testing.
   */
  public fun getHausDevices(): List<String> = listOf(
      Haus.HAUS_JS410,
      Haus.JS420
  )

  /**
   * Get all device specifications for HBESTORE devices.
   * Useful for hbestore testing.
   */
  public fun getHbestoreDevices(): List<String> = listOf(
      Hbestore.HL_1068_A133
  )

  /**
   * Get all device specifications for HCN devices.
   * Useful for hcn testing.
   */
  public fun getHcnDevices(): List<String> = listOf(
      Hcn.IMT_H6300
  )

  /**
   * Get all device specifications for HD_PLUS devices.
   * Useful for hd_plus testing.
   */
  public fun getHdPlusDevices(): List<String> = listOf(
      HdPlus.SEI900HDPLUS
  )

  /**
   * Get all device specifications for HDC devices.
   * Useful for hdc testing.
   */
  public fun getHdcDevices(): List<String> = listOf(
      Hdc.H10_ONE,
      Hdc.H7_ONE,
      Hdc.T10_232,
      Hdc.T10I_4128,
      Hdc.T7I_232
  )

  /**
   * Get all device specifications for HEADWOLF devices.
   * Useful for headwolf testing.
   */
  public fun getHeadwolfDevices(): List<String> = listOf(
      Headwolf.F2A,
      Headwolf.F3A,
      Headwolf.F5A,
      Headwolf.F6,
      Headwolf.F7,
      Headwolf.FPAD1,
      Headwolf.FPAD2,
      Headwolf.FPAD3,
      Headwolf.FPAD5,
      Headwolf.HPAD1,
      Headwolf.HPAD1A,
      Headwolf.HPAD2,
      Headwolf.HPAD3,
      Headwolf.HPAD5,
      Headwolf.HPAD6,
      Headwolf.W5,
      Headwolf.W5A,
      Headwolf.W6A,
      Headwolf.W7,
      Headwolf.WPAD1,
      Headwolf.WPAD2
  )

  /**
   * Get all device specifications for HEATZ devices.
   * Useful for heatz testing.
   */
  public fun getHeatzDevices(): List<String> = listOf(
      Heatz.Z9910A
  )

  /**
   * Get all device specifications for HEC devices.
   * Useful for hec testing.
   */
  public fun getHecDevices(): List<String> = listOf(
      Hec.BROADWAY,
      Hec.DUPONT,
      Hec.HANYANG,
      Hec.NIPPORI
  )

  /**
   * Get all device specifications for Helgi devices.
   * Useful for helgi testing.
   */
  public fun getHelgiDevices(): List<String> = listOf(
      Helgi.RK3588_T
  )

  /**
   * Get all device specifications for Helio devices.
   * Useful for helio testing.
   */
  public fun getHelioDevices(): List<String> = listOf(
      Helio.HELIO_40,
      Helio.HELIO_50,
      Helio.HELIO_S5,
      Helio.HELIOS25,
      Helio.S10,
      Helio.WBL7519SY
  )

  /**
   * Get all device specifications for HELIX_INC devices.
   * Useful for helix_inc testing.
   */
  public fun getHelixIncDevices(): List<String> = listOf(
      HelixInc.C_TABLET
  )

  /**
   * Get all device specifications for HELLCAT devices.
   * Useful for hellcat testing.
   */
  public fun getHellcatDevices(): List<String> = listOf(
      Hellcat.TAB10_1,
      Hellcat.TAB8_1
  )

  /**
   * Get all device specifications for HelloPro devices.
   * Useful for hellopro testing.
   */
  public fun getHelloproDevices(): List<String> = listOf(
      Hellopro.PK81R
  )

  /**
   * Get all device specifications for HemiltonPro devices.
   * Useful for hemiltonpro testing.
   */
  public fun getHemiltonproDevices(): List<String> = listOf(
      Hemiltonpro.TAB1000
  )

  /**
   * Get all device specifications for HERCLS devices.
   * Useful for hercls testing.
   */
  public fun getHerclsDevices(): List<String> = listOf(
      Hercls.L925
  )

  /**
   * Get all device specifications for HERO devices.
   * Useful for hero testing.
   */
  public fun getHeroDevices(): List<String> = listOf(
      Hero.HERO_4ALL
  )

  /**
   * Get all device specifications for HexaByte devices.
   * Useful for hexabyte testing.
   */
  public fun getHexabyteDevices(): List<String> = listOf(
      Hexabyte.HB_X7
  )

  /**
   * Get all device specifications for HEZIRE devices.
   * Useful for hezire testing.
   */
  public fun getHezireDevices(): List<String> = listOf(
      Hezire.HBOOK_PRIME,
      Hezire.HBOOK_PRO
  )

  /**
   * Get all device specifications for Hi devices.
   * Useful for hi testing.
   */
  public fun getHiDevices(): List<String> = listOf(
      Hi.BOOST_MAX,
      Hi.BOOST_ULTRA,
      Hi.HMR5012,
      Hi.HMR5450
  )

  /**
   * Get all device specifications for HICel devices.
   * Useful for hicel testing.
   */
  public fun getHicelDevices(): List<String> = listOf(
      Hicel.STAR_1,
      Hicel.SUN1
  )

  /**
   * Get all device specifications for HiDPT devices.
   * Useful for hidpt testing.
   */
  public fun getHidptDevices(): List<String> = listOf(
      Hidpt.HI3751V350
  )

  /**
   * Get all device specifications for High_Q devices.
   * Useful for high_q testing.
   */
  public fun getHighQDevices(): List<String> = listOf(
      HighQ.ELT0704H,
      HighQ.ELT0706H,
      HighQ.ELT0802H
  )

  /**
   * Get all device specifications for HighScreen devices.
   * Useful for highscreen testing.
   */
  public fun getHighscreenDevices(): List<String> = listOf(
      Highscreen.BAY,
      Highscreen.BBL7353RV,
      Highscreen.EXPANSE,
      Highscreen.FESTXL,
      Highscreen.FESTXL_PRO,
      Highscreen.MAX3,
      Highscreen.POWERFIVE,
      Highscreen.POWERFIVEMAX2,
      Highscreen.POWERFIVEMAXLITE,
      Highscreen.POWERFOUR,
      Highscreen.POWERICEEVO,
      Highscreen.POWERICEMAX,
      Highscreen.POWERRAGE,
      Highscreen.POWERRAGEEVO,
      Highscreen.PRIMEL
  )

  /**
   * Get all device specifications for HIGRACE devices.
   * Useful for higrace testing.
   */
  public fun getHigraceDevices(): List<String> = listOf(
      Higrace.G15,
      Higrace.OC101,
      Higrace.OC101_EEA
  )

  /**
   * Get all device specifications for HiHi devices.
   * Useful for hihi testing.
   */
  public fun getHihiDevices(): List<String> = listOf(
      Hihi.HIHI_40KH_TAB,
      Hihi.HIHI_41KH_TAB_1_EEA,
      Hihi.HIHI_50KH_TAB_01_EEA
  )

  /**
   * Get all device specifications for Hikers devices.
   * Useful for hikers testing.
   */
  public fun getHikersDevices(): List<String> = listOf(
      Hikers.LAKESIDE
  )

  /**
   * Get all device specifications for HiKING devices.
   * Useful for hiking testing.
   */
  public fun getHikingDevices(): List<String> = listOf(
      Hiking.A19,
      Hiking.A20,
      Hiking.A21,
      Hiking.A22,
      Hiking.A23,
      Hiking.A26,
      Hiking.A27,
      Hiking.A28,
      Hiking.A30,
      Hiking.A40,
      Hiking.A42,
      Hiking.A43,
      Hiking.A44,
      Hiking.A45,
      Hiking.A46,
      Hiking.A51,
      Hiking.A55,
      Hiking.KIDS_1,
      Hiking.RUGGED_S1,
      Hiking.RUGGED_S2
  )

  /**
   * Get all device specifications for HIKVISION devices.
   * Useful for hikvision testing.
   */
  public fun getHikvisionDevices(): List<String> = listOf(
      Hikvision.DS_MDT202,
      Hikvision.DS_D5C65RB_A
  )

  /**
   * Get all device specifications for HIMADE devices.
   * Useful for himade testing.
   */
  public fun getHimadeDevices(): List<String> = listOf(
      Himade.SHILIN,
      Himade.SINDORIM
  )

  /**
   * Get all device specifications for HiMedia devices.
   * Useful for himedia testing.
   */
  public fun getHimediaDevices(): List<String> = listOf(
      Himedia.HIBOX
  )

  /**
   * Get all device specifications for HimeTV devices.
   * Useful for himetv testing.
   */
  public fun getHimetvDevices(): List<String> = listOf(
      Himetv.HIME_B866V2FAS
  )

  /**
   * Get all device specifications for Hipstreet devices.
   * Useful for hipstreet testing.
   */
  public fun getHipstreetDevices(): List<String> = listOf(
      Hipstreet._10DTB42,
      Hipstreet.LYF_LS_5507
  )

  /**
   * Get all device specifications for Hipstreet_Dtac devices.
   * Useful for hipstreet_dtac testing.
   */
  public fun getHipstreetDtacDevices(): List<String> = listOf(
      HipstreetDtac.JOEY_JET_2
  )

  /**
   * Get all device specifications for Hipstreet-LYF devices.
   * Useful for hipstreet-lyf testing.
   */
  public fun getHipstreetLyfDevices(): List<String> = listOf(
      HipstreetLyf.LS_4004,
      HipstreetLyf.LS_5017
  )

  /**
   * Get all device specifications for Hisense devices.
   * Useful for hisense testing.
   */
  public fun getHisenseDevices(): List<String> = listOf(
      Hisense.CHANGJIANG,
      Hisense.HAMAMATSUCHO,
      Hisense.HARAJUKU,
      Hisense.HELIUM3,
      Hisense.HENGSHAN,
      Hisense.HIRANO,
      Hisense.HLTE100E_11,
      Hisense.HLTE100E_12,
      Hisense.HLTE100E_14,
      Hisense.HLTE100E_20,
      Hisense.HLTE100E_21,
      Hisense.HLTE100E_22,
      Hisense.HLTE103E_20,
      Hisense.HLTE103E_22,
      Hisense.HLTE103E_24,
      Hisense.HLTE103E_30,
      Hisense.HLTE103E_31,
      Hisense.HLTE103E_32,
      Hisense.HLTE103E_33,
      Hisense.HLTE103E_40,
      Hisense.HLTE103E_41,
      Hisense.HLTE105E,
      Hisense.HLTE105E_02,
      Hisense.HLTE105E_03,
      Hisense.HLTE106E_01,
      Hisense.HLTE106E_30,
      Hisense.HLTE106E_31,
      Hisense.HLTE106E_40,
      Hisense.HLTE106E_41,
      Hisense.HLTE109E,
      Hisense.HLTE109E_01,
      Hisense.HLTE109E_02,
      Hisense.HLTE109E_03,
      Hisense.HLTE120E,
      Hisense.HLTE120E_01,
      Hisense.HLTE121E,
      Hisense.HLTE202N,
      Hisense.HLTE203T,
      Hisense.HLTE222E,
      Hisense.HLTE222E_01,
      Hisense.HLTE226E,
      Hisense.HLTE228E_01,
      Hisense.HLTE228E_02,
      Hisense.HLTE228E_10,
      Hisense.HLTE228E_11,
      Hisense.HLTE228E_12,
      Hisense.HLTE228E_14,
      Hisense.HLTE228E_20,
      Hisense.HLTE228E_22,
      Hisense.HLTE229E,
      Hisense.HLTE229E_01,
      Hisense.HLTE229E_10,
      Hisense.HLTE229E_11,
      Hisense.HLTE229E_12,
      Hisense.HLTE229E_30,
      Hisense.HLTE230E_01,
      Hisense.HLTE230E_20,
      Hisense.HLTE232E,
      Hisense.HLTE232E_01,
      Hisense.HLTE232E_10,
      Hisense.HLTE232E_12,
      Hisense.HLTE232E_20,
      Hisense.HLTE233E,
      Hisense.HLTE233E_01,
      Hisense.HLTE233E_10,
      Hisense.HLTE233E_11,
      Hisense.HLTE234E,
      Hisense.HLTE235E,
      Hisense.HLTE235E_12,
      Hisense.HLTE235E_20,
      Hisense.HLTE240E,
      Hisense.HLTE243E,
      Hisense.HLTE243E_01,
      Hisense.HLTE262E,
      Hisense.HLTE262E_01,
      Hisense.HLTE263E,
      Hisense.HLTE315E,
      Hisense.HLTE321E,
      Hisense.HLTE322E,
      Hisense.HLTE730T,
      Hisense.HNR500E,
      Hisense.HNR500E_02,
      Hisense.HNR500E_03,
      Hisense.HNR510E,
      Hisense.HS6580MT,
      Hisense.HS6735MT,
      Hisense.HS6737MT,
      Hisense.HS6739MT,
      Hisense.HS6763MT,
      Hisense.HS7331CSC,
      Hisense.HS7731CSP,
      Hisense.HS7731SP,
      Hisense.HS8909QC,
      Hisense.HS8916QC,
      Hisense.HS8917QC,
      Hisense.HS8929QC,
      Hisense.HS8937QC,
      Hisense.HS8953QC,
      Hisense.HSSC9850,
      Hisense.HSSDM450QC,
      Hisense.HUAIHE,
      Hisense.HUANGHE,
      Hisense.HUANGSHAN,
      Hisense.LAOHUSHAN,
      Hisense.LAOSHAN,
      Hisense.LUSHAN,
      Hisense.M470,
      Hisense.MOERAKI,
      Hisense.RK3028A,
      Hisense.RK3288,
      Hisense.SC9832E,
      Hisense.SC9863A,
      Hisense.SC9863A_RU,
      Hisense.SONGSHAN,
      Hisense.TAISHAN,
      Hisense.VISION2_1,
      Hisense.VISION2_5,
      Hisense.WUTAISHAN,
      Hisense.WUYISHAN,
      Hisense.XIAOYUSHAN,
      Hisense.XINHAOSHAN
  )

  /**
   * Get all device specifications for HISORL devices.
   * Useful for hisorl testing.
   */
  public fun getHisorlDevices(): List<String> = listOf(
      Hisorl.P50,
      Hisorl.P80_EEA,
      Hisorl.P80_ROW,
      Hisorl.T10P,
      Hisorl.T901_EEA,
      Hisorl.T901_ROW,
      Hisorl.TAB10_ROW,
      Hisorl.TAB_10,
      Hisorl.TB02_EEA,
      Hisorl.TB02_ROW,
      Hisorl.Y101P
  )

  /**
   * Get all device specifications for HiSTBAndroidV6 devices.
   * Useful for histbandroidv6 testing.
   */
  public fun getHistbandroidv6Devices(): List<String> = listOf(
      Histbandroidv6.HI3798MV200
  )

  /**
   * Get all device specifications for hitabt devices.
   * Useful for hitabt testing.
   */
  public fun getHitabtDevices(): List<String> = listOf(
      Hitabt.K30A,
      Hitabt.P30A,
      Hitabt.T30A_SY07PC01
  )

  /**
   * Get all device specifications for Hitachi devices.
   * Useful for hitachi testing.
   */
  public fun getHitachiDevices(): List<String> = listOf(
      Hitachi.BANGBAE,
      Hitachi.KOMAGOME,
      Hitachi.R1,
      Hitachi.R2,
      Hitachi.SAMSEONG
  )

  /**
   * Get all device specifications for HKC devices.
   * Useful for hkc testing.
   */
  public fun getHkcDevices(): List<String> = listOf(
      Hkc.BURBANK,
      Hkc.GANGBYEON,
      Hkc.KANNAI,
      Hkc.LAKESIDE,
      Hkc.MATEO,
      Hkc.NAGAI,
      Hkc.PANORMOU,
      Hkc.PIONEER
  )

  /**
   * Get all device specifications for HMD devices.
   * Useful for hmd testing.
   */
  public fun getHmdDevices(): List<String> = listOf(
      Hmd.AGTAH,
      Hmd.AGTH,
      Hmd.ARP,
      Hmd.ARW,
      Hmd.CMT,
      Hmd.LGD,
      Hmd.LGP,
      Hmd.LGR,
      Hmd.NHK,
      Hmd.NYX,
      Hmd.RCK,
      Hmd.SHK,
      Hmd.SNT,
      Hmd.TCT
  )

  /**
   * Get all device specifications for hoco devices.
   * Useful for hoco testing.
   */
  public fun getHocoDevices(): List<String> = listOf(
      Hoco.HOCO_HI10,
      Hoco.HOCO_HI11,
      Hoco.HOCO_HI12,
      Hoco.HOCO_HI14
  )

  /**
   * Get all device specifications for Hoffmann devices.
   * Useful for hoffmann testing.
   */
  public fun getHoffmannDevices(): List<String> = listOf(
      Hoffmann.X_GO,
      Hoffmann.X_MAX
  )

  /**
   * Get all device specifications for HOLO devices.
   * Useful for holo testing.
   */
  public fun getHoloDevices(): List<String> = listOf(
      Holo.VE0319,
      Holo.VE1983,
      Holo.X10,
      Holo.XPLAY3,
      Holo.XULTRA2,
      Holo.XULTRA3,
      Holo.XULTRAPLUS,
      Holo.XULTRAPLUS3
  )

  /**
   * Get all device specifications for Homatics devices.
   * Useful for homatics testing.
   */
  public fun getHomaticsDevices(): List<String> = listOf(
      Homatics.HND,
      Homatics.IAD,
      Homatics.ICN,
      Homatics.MIA,
      Homatics.SEI700HMG,
      Homatics.YQB,
      Homatics.YQX,
      Homatics.YYJ,
      Homatics.YZF
  )

  /**
   * Get all device specifications for HOME-ELITE devices.
   * Useful for home-elite testing.
   */
  public fun getHomeEliteDevices(): List<String> = listOf(
      HomeElite.R1,
      HomeElite.R2
  )

  /**
   * Get all device specifications for HOME-PLANET devices.
   * Useful for home-planet testing.
   */
  public fun getHomePlanetDevices(): List<String> = listOf(
      HomePlanet.R4
  )

  /**
   * Get all device specifications for Homeplustv devices.
   * Useful for homeplustv testing.
   */
  public fun getHomeplustvDevices(): List<String> = listOf(
      Homeplustv.HCA6010,
      Homeplustv.STB6252C,
      Homeplustv.VSB3918_APAC
  )

  /**
   * Get all device specifications for HOMETECH devices.
   * Useful for hometech testing.
   */
  public fun getHometechDevices(): List<String> = listOf(
      Hometech._7_PREMIUM_PRO,
      Hometech.ALFA10LT,
      Hometech.ALFA10MX,
      Hometech.ALFA10TB,
      Hometech.ALFA10TX,
      Hometech.ALFA10TX_PRO,
      Hometech.ALFA_10BS,
      Hometech.ALFA_10BT,
      Hometech.ALFA_10BT_V2,
      Hometech.ALFA_10YC,
      Hometech.ALFA_11_BT,
      Hometech.ALFA_12_GX_PRO,
      Hometech.ALFA_7M,
      Hometech.ALFA_7MRC,
      Hometech.ALFA_8SL,
      Hometech.ALFA_8ST,
      Hometech.ALFA_8TX,
      Hometech.HT_8MZ,
      Hometech.MID1032_MR_32,
      Hometech.MID7015_32
  )

  /**
   * Get all device specifications for HOMEZ devices.
   * Useful for homez testing.
   */
  public fun getHomezDevices(): List<String> = listOf(
      Homez.REDWOOD
  )

  /**
   * Get all device specifications for HOMII devices.
   * Useful for homii testing.
   */
  public fun getHomiiDevices(): List<String> = listOf(
      Homii.M6,
      Homii.XBOOK,
      Homii.XBOOK_12,
      Homii.XBOOK_PLUS,
      Homii.XBOOK_PRO,
      Homii.XBOOKKIDS
  )

  /**
   * Get all device specifications for HOMTOM devices.
   * Useful for homtom testing.
   */
  public fun getHomtomDevices(): List<String> = listOf(
      Homtom.C1,
      Homtom.C2,
      Homtom.H10,
      Homtom.H5,
      Homtom.HT70,
      Homtom.HT80,
      Homtom.P30_PRO,
      Homtom.S16,
      Homtom.S99,
      Homtom.Z11
  )

  /**
   * Get all device specifications for Honda devices.
   * Useful for honda testing.
   */
  public fun getHondaDevices(): List<String> = listOf(
      Honda.MSMNILE_AU,
      Honda.VCM30T30
  )

  /**
   * Get all device specifications for Honeywell devices.
   * Useful for honeywell testing.
   */
  public fun getHoneywellDevices(): List<String> = listOf(
      Honeywell._75E_L0N,
      Honeywell.CK62,
      Honeywell.CK65_L0_C,
      Honeywell.CK65_L0_N,
      Honeywell.CK67,
      Honeywell.CK75,
      Honeywell.CN80_L0_C,
      Honeywell.CN80_L0_N,
      Honeywell.CN80_L1_C,
      Honeywell.CT30P,
      Honeywell.CT37,
      Honeywell.CT40_L0_C,
      Honeywell.CT40_L0_CA,
      Honeywell.CT40_L1_C,
      Honeywell.CT40P_L0_F,
      Honeywell.CT40P_L1_F,
      Honeywell.CT45,
      Honeywell.CT45P,
      Honeywell.CT47,
      Honeywell.CT50L0N_CS13S,
      Honeywell.CT50L0N_CS15S,
      Honeywell.CT50L0N_CS16S,
      Honeywell.CT50LFN_CS16S,
      Honeywell.CT50LUN_CS13S,
      Honeywell.CT50LUN_CS16S,
      Honeywell.CT60_L0_C,
      Honeywell.CT60_L1_C,
      Honeywell.CT70,
      Honeywell.EDA10A,
      Honeywell.EDA40_1,
      Honeywell.EDA50_011,
      Honeywell.EDA50_111,
      Honeywell.EDA50_211,
      Honeywell.EDA50K_0,
      Honeywell.EDA50K_1,
      Honeywell.EDA51_0,
      Honeywell.EDA51_1,
      Honeywell.EDA51K_0,
      Honeywell.EDA51K_1,
      Honeywell.EDA52,
      Honeywell.EDA57,
      Honeywell.EDA5S,
      Honeywell.EDA61K_0C,
      Honeywell.EDA61K_0U,
      Honeywell.EDA61K_1C,
      Honeywell.EDA61K_1U,
      Honeywell.EDA70_0,
      Honeywell.EDA70_3,
      Honeywell.EDA71_0,
      Honeywell.EDA71_1,
      Honeywell.TA60A_L0_C,
      Honeywell.TA60A_L1_C,
      Honeywell.VM1A_L0_N,
      Honeywell.VM1A_L0_P,
      Honeywell.VM3A_L0_N,
      Honeywell.VM3A_L0_P
  )

  /**
   * Get all device specifications for HONKUAHG devices.
   * Useful for honkuahg testing.
   */
  public fun getHonkuahgDevices(): List<String> = listOf(
      Honkuahg.EV10
  )

  /**
   * Get all device specifications for HONOR devices.
   * Useful for honor testing.
   */
  public fun getHonorDevices(): List<String> = listOf(
      Honor.CHE1,
      Honor.HNABR_M,
      Honor.HNABR_Q,
      Honor.HNAGM,
      Honor.HNAGM3,
      Honor.HNALI_Q,
      Honor.HNALT_Q1,
      Honor.HNALT_Q2,
      Honor.HNALT_QL,
      Honor.HNANY_Q,
      Honor.HNANY_Q1,
      Honor.HNBRC_M,
      Honor.HNBRC_M1,
      Honor.HNBRP_Q,
      Honor.HNBRP_Q1,
      Honor.HNBVL,
      Honor.HNBVL_AN00,
      Honor.HNCGA_Q,
      Honor.HNCHE_H,
      Honor.HNCLK_M1,
      Honor.HNCLK_Q,
      Honor.HNCMA_Q,
      Honor.HNCRT_M1,
      Honor.HNCRT_M2,
      Honor.HNDNPX,
      Honor.HNDNYX,
      Honor.HNDVD_Q,
      Honor.HNELI,
      Honor.HNELIX,
      Honor.HNELN_Q,
      Honor.HNELN2_Q1,
      Honor.HNELP,
      Honor.HNELPX,
      Honor.HNFCPX,
      Honor.HNFNE,
      Honor.HNFRI,
      Honor.HNGFY_M,
      Honor.HNHEY_Q,
      Honor.HNHEY2_Q,
      Honor.HNHEY3_Q,
      Honor.HNHEY3_Q1,
      Honor.HNJDY_M1,
      Honor.HNKIW_Q,
      Honor.HNLGE,
      Honor.HNLLY_M1,
      Honor.HNLLY_Q,
      Honor.HNMAA,
      Honor.HNMAG,
      Honor.HNMAP,
      Honor.HNMBHX,
      Honor.HNMTN_Q,
      Honor.HNNDL_Q,
      Honor.HNNEM_H,
      Honor.HNNIC_M1,
      Honor.HNNTH,
      Honor.HNNTN,
      Honor.HNPGT,
      Honor.HNPLPX,
      Honor.HNPTPX,
      Honor.HNRBN_Q,
      Honor.HNREA,
      Honor.HNRKY_M1,
      Honor.HNRMO_Q,
      Honor.HNROD2_Q,
      Honor.HNROD2_Q1,
      Honor.HNROL_M,
      Honor.HNROL_M1,
      Honor.HNSCL_Q,
      Honor.HNTFY_Q,
      Honor.HNVCA_Q,
      Honor.HNVER,
      Honor.HNVNA_M,
      Honor.HNVNE_M,
      Honor.HNVNE_Q,
      Honor.HNWDY_M,
      Honor.HWAGS2,
      Honor.HWARE_Q,
      Honor.HWARE_QC,
      Honor.HWATH,
      Honor.HWAUM_Q,
      Honor.HWBKK_Q,
      Honor.HWBKL,
      Honor.HWBLN_H,
      Honor.HWBND_H,
      Honor.HWCAM_H,
      Honor.HWCAM_Q,
      Honor.HWCHE2,
      Honor.HWCHM_H,
      Honor.HWCHM_Q,
      Honor.HWCOL,
      Honor.HWCOR,
      Honor.HWDLI_Q,
      Honor.HWDRA_MG,
      Honor.HWDUA_M,
      Honor.HWDUK,
      Honor.HWFRD,
      Honor.HWG621_TL00,
      Honor.HWH30,
      Honor.HWHDL,
      Honor.HWHDN_H,
      Honor.HWHLK_H,
      Honor.HWHRY_H,
      Honor.HWHRY_HF,
      Honor.HWJAT_M,
      Honor.HWJDN2,
      Honor.HWJMM_Q,
      Honor.HWJSN_H,
      Honor.HWJSN_HM,
      Honor.HWKNT,
      Honor.HWKSA_M,
      Honor.HWLLD_H,
      Honor.HWLLD_H2,
      Honor.HWLND_Q,
      Honor.HWMAR,
      Honor.HWMYA_L6737,
      Honor.HWPCT,
      Honor.HWPLK,
      Honor.HWPRA_H,
      Honor.HWRNE,
      Honor.HWRVL,
      Honor.HWSTF,
      Honor.HWSTK_HF,
      Honor.HWTIT_L6735,
      Honor.HWTNY,
      Honor.HWTRT_Q,
      Honor.HWVNS_H,
      Honor.HWYAL,
      Honor.JMS_W09
  )

  /**
   * Get all device specifications for Hoowel devices.
   * Useful for hoowel testing.
   */
  public fun getHoowelDevices(): List<String> = listOf(
      Hoowel.LAKESIDE,
      Hoowel.NAGAI
  )

  /**
   * Get all device specifications for HOOZO devices.
   * Useful for hoozo testing.
   */
  public fun getHoozoDevices(): List<String> = listOf(
      Hoozo.F13,
      Hoozo.F13_EEA,
      Hoozo.HZ0010,
      Hoozo.HZ0010J,
      Hoozo.HZ0011,
      Hoozo.HZ1012,
      Hoozo.KTLA133,
      Hoozo.MA768,
      Hoozo.MBR05,
      Hoozo.MBR05_EEA,
      Hoozo.MID,
      Hoozo.MR768,
      Hoozo.MZ10863W,
      Hoozo.MZS10,
      Hoozo.T10A,
      Hoozo.YK_P30,
      Hoozo.YK_P30_EEA
  )

  /**
   * Get all device specifications for HOPE devices.
   * Useful for hope testing.
   */
  public fun getHopeDevices(): List<String> = listOf(
      Hope.HOPE_S25U
  )

  /**
   * Get all device specifications for Horion devices.
   * Useful for horion testing.
   */
  public fun getHorionDevices(): List<String> = listOf(
      Horion.M6APRO
  )

  /**
   * Get all device specifications for Horizon devices.
   * Useful for horizon testing.
   */
  public fun getHorizonDevices(): List<String> = listOf(
      Horizon.INTERACTIVE_WHITE_BOARD,
      Horizon.SHANDAO
  )

  /**
   * Get all device specifications for HOT devices.
   * Useful for hot testing.
   */
  public fun getHotDevices(): List<String> = listOf(
      Hot.DIW252_ALT_ME,
      Hot.DIW377_ALT_ME,
      Hot.DV8555_KIH,
      Hot.VSB3918_ALT_ME
  )

  /**
   * Get all device specifications for HotLight devices.
   * Useful for hotlight testing.
   */
  public fun getHotlightDevices(): List<String> = listOf(
      Hotlight.C108,
      Hotlight.TP1003
  )

  /**
   * Get all device specifications for HotPepper devices.
   * Useful for hotpepper testing.
   */
  public fun getHotpepperDevices(): List<String> = listOf(
      Hotpepper._15_PRO_MAX,
      Hotpepper._18_PRO,
      Hotpepper._19_PRO_MAX,
      Hotpepper.CASCABEL,
      Hotpepper.DT10_EEA,
      Hotpepper.HPP_GS1,
      Hotpepper.HPP_L55B,
      Hotpepper.HPPAP16,
      Hotpepper.HPPL60A,
      Hotpepper.HPPL63A,
      Hotpepper.HPPL67A,
      Hotpepper.K82A,
      Hotpepper.KR10,
      Hotpepper.KT10,
      Hotpepper.PULLA,
      Hotpepper.PUYA_PLUS,
      Hotpepper.STYLO_7PLUS,
      Hotpepper.T11_PRO,
      Hotpepper.VLE5
  )

  /**
   * Get all device specifications for HOTWAV devices.
   * Useful for hotwav testing.
   */
  public fun getHotwavDevices(): List<String> = listOf(
      Hotwav.COSMOS_U,
      Hotwav.CYBER_13,
      Hotwav.CYBER_13_PRO,
      Hotwav.CYBER_15,
      Hotwav.CYBER_7,
      Hotwav.CYBER_8,
      Hotwav.CYBER_9_PRO,
      Hotwav.CYBER_X,
      Hotwav.CYBER_X_PRO,
      Hotwav.H1,
      Hotwav.HOT_6,
      Hotwav.HYPER_7,
      Hotwav.HYPER_7_PRO,
      Hotwav.M5,
      Hotwav.M5_PLUS,
      Hotwav.M5I,
      Hotwav.M6,
      Hotwav.NOTE_12_2024,
      Hotwav.NOTE_12_EF,
      Hotwav.NOTE_13,
      Hotwav.NOTE_13_MAX,
      Hotwav.NOTE_13_PRO,
      Hotwav.NOTE_15,
      Hotwav.NOTE_15_PRO,
      Hotwav.NOTE_16,
      Hotwav.PAD_11_EEA,
      Hotwav.PAD_8,
      Hotwav.PEARL_K1,
      Hotwav.PEARL_K2,
      Hotwav.PEARL_K2_PRIME,
      Hotwav.PEARL_K3,
      Hotwav.SYMBOL,
      Hotwav.SYMBOL_MAX,
      Hotwav.SYMBOL_X,
      Hotwav.T5_PRO,
      Hotwav.T7,
      Hotwav.T7_PRO,
      Hotwav.TAB_R5,
      Hotwav.TAB_R6_PRO,
      Hotwav.TAB_R6_ULTRA,
      Hotwav.TAB_R7,
      Hotwav.TAB_R8,
      Hotwav.TAB_R9_PRO,
      Hotwav.W10,
      Hotwav.W10_PRO,
      Hotwav.W11
  )

  /**
   * Get all device specifications for HOTWIRE devices.
   * Useful for hotwire testing.
   */
  public fun getHotwireDevices(): List<String> = listOf(
      Hotwire.UIW4054HWC
  )

  /**
   * Get all device specifications for HOW devices.
   * Useful for how testing.
   */
  public fun getHowDevices(): List<String> = listOf(
      How._1001_G,
      How._1001_G_GO,
      How._704_G,
      How._705_G,
      How._705_G_GO,
      How.HT_705XS,
      How.HT704,
      How.HT705
  )

  /**
   * Get all device specifications for hp devices.
   * Useful for hp testing.
   */
  public fun getHpDevices(): List<String> = listOf(
      Hp._3645,
      Hp.ALMOND,
      Hp.ANDERSON_GW,
      Hp.BIRCH,
      Hp.BONSAI10,
      Hp.BULLDOG,
      Hp.FIR,
      Hp.FRANKY,
      Hp.HOLLY,
      Hp.HOUND,
      Hp.ILEX,
      Hp.KLONDIKE,
      Hp.MALAMUTE,
      Hp.MAPLE,
      Hp.MESQUITE,
      Hp.NAPA_GW,
      Hp.NEETU,
      Hp.PANGYO,
      Hp.PHOBOS,
      Hp.PINE,
      Hp.POODLE,
      Hp.RANGER,
      Hp.REDWOOD,
      Hp.SPRUCE,
      Hp.TORSA
  )

  /**
   * Get all device specifications for HPADIA10 devices.
   * Useful for hpadia10 testing.
   */
  public fun getHpadia10Devices(): List<String> = listOf(
      Hpadia10.GACRUX
  )

  /**
   * Get all device specifications for HQ devices.
   * Useful for hq testing.
   */
  public fun getHqDevices(): List<String> = listOf(
      Hq.TABLET_HQ_T616
  )

  /**
   * Get all device specifications for HTC devices.
   * Useful for htc testing.
   */
  public fun getHtcDevices(): List<String> = listOf(
      Htc.CP3DUG,
      Htc.DLPDTU,
      Htc.DLPDUG,
      Htc.DLPDWG,
      Htc.DLX,
      Htc.DLXPUL,
      Htc.DLXUB1,
      Htc.ENDEAVORU,
      Htc.ENRC2B,
      Htc.EVITA,
      Htc.HTC_A100,
      Htc.HTC_A101,
      Htc.HTC_A101_PLUS,
      Htc.HTC_A102,
      Htc.HTC_A103,
      Htc.HTC_A103_PLUS,
      Htc.HTC_A104,
      Htc.HTC_A11CHL,
      Htc.HTC_A11UL,
      Htc.HTC_A11UL8X26,
      Htc.HTC_A12UL,
      Htc.HTC_A13WL,
      Htc.HTC_A13WLPP,
      Htc.HTC_A15UL,
      Htc.HTC_A16DWGL,
      Htc.HTC_A16UL,
      Htc.HTC_A16WL,
      Htc.HTC_A17UHL,
      Htc.HTC_A31MG_DUG,
      Htc.HTC_A31UL,
      Htc.HTC_A32EUL,
      Htc.HTC_A32EUL_LA,
      Htc.HTC_A32EULATT,
      Htc.HTC_A32EWHL,
      Htc.HTC_A32EWL,
      Htc.HTC_A32EWLPP,
      Htc.HTC_A32MG_DUG,
      Htc.HTC_A32ML_DTUL,
      Htc.HTC_A32UL,
      Htc.HTC_A32UL_EMEA,
      Htc.HTC_A37_DUGL,
      Htc.HTC_A37DJ_DUGL,
      Htc.HTC_A3QHDUL,
      Htc.HTC_A3UL,
      Htc.HTC_A50CMG_DWG,
      Htc.HTC_A50CML_DTUL,
      Htc.HTC_A50CML_TUHL,
      Htc.HTC_A50DTUL,
      Htc.HTC_A50MGP_DUG,
      Htc.HTC_A50ML,
      Htc.HTC_A50ML_DTUL,
      Htc.HTC_A51BML_DTUL,
      Htc.HTC_A51BML_DWGL,
      Htc.HTC_A51BML_TUHL,
      Htc.HTC_A51CML_DTUL,
      Htc.HTC_A51CML_TUHL,
      Htc.HTC_A51DTUL,
      Htc.HTC_A51TUHL,
      Htc.HTC_A51UL,
      Htc.HTC_A52DTUL,
      Htc.HTC_A52DWGL,
      Htc.HTC_A52TUHL,
      Htc.HTC_A53ML_DTUL,
      Htc.HTC_A55ML_DTUL,
      Htc.HTC_A56DJ_PRO_DTWL,
      Htc.HTC_A56DJ_PRO_DUGL,
      Htc.HTC_A56DJ_PRO_UHL,
      Htc.HTC_A56DJDUGL,
      Htc.HTC_A56DJUHL,
      Htc.HTC_A56DJUL,
      Htc.HTC_A56DUGL,
      Htc.HTC_A56UHL,
      Htc.HTC_A5CHL,
      Htc.HTC_A5DUG,
      Htc.HTC_A5DWG,
      Htc.HTC_A5MGP_DUG,
      Htc.HTC_A5MGP_U,
      Htc.HTC_A5UL,
      Htc.HTC_ACAUHL,
      Htc.HTC_ACAWHL,
      Htc.HTC_ALPINE_DUGL,
      Htc.HTC_ALPINE_UHL,
      Htc.HTC_AT01,
      Htc.HTC_B2UL,
      Htc.HTC_B2WLJ,
      Htc.HTC_B3UHL,
      Htc.HTC_BOTDUGLS,
      Htc.HTC_BRE2DUGL,
      Htc.HTC_BRE2EXDUGL,
      Htc.HTC_BRE2PDUGL,
      Htc.HTC_BREEZE_DUGL,
      Htc.HTC_BREPDUGL,
      Htc.HTC_BREPUHL,
      Htc.HTC_BYMDUGL,
      Htc.HTC_E36_ML_UHL,
      Htc.HTC_E36_ML_UL,
      Htc.HTC_E56ML_DTUL,
      Htc.HTC_E56ML_TUHL,
      Htc.HTC_E66_DTWL,
      Htc.HTC_E66_DUGL,
      Htc.HTC_E66_UHL,
      Htc.HTC_ENODUGLS,
      Htc.HTC_EXODUGL,
      Htc.HTC_EYETUHL,
      Htc.HTC_EYEUL,
      Htc.HTC_EYEUL_ATT,
      Htc.HTC_FLHDUGL,
      Htc.HTC_H11DUGL,
      Htc.HTC_HAYDUGL,
      Htc.HTC_HIAEUHL,
      Htc.HTC_HIAEUL,
      Htc.HTC_HIAEWHL,
      Htc.HTC_HIAU_ML_TUHL,
      Htc.HTC_HIAUR2_ML_TUHL,
      Htc.HTC_HIAUR_ML_TUHL,
      Htc.HTC_HIMA_ACE_ML_DTUL,
      Htc.HTC_HIMAR2UHL,
      Htc.HTC_HIMARUHL,
      Htc.HTC_HIMAUHL,
      Htc.HTC_HIMAUL,
      Htc.HTC_HIMAULATT,
      Htc.HTC_HIMAWHL,
      Htc.HTC_HIMAWL,
      Htc.HTC_IMEDUGL,
      Htc.HTC_IMEUHL,
      Htc.HTC_IMEUHLJP,
      Htc.HTC_IMLDUGL,
      Htc.HTC_M4,
      Htc.HTC_M8,
      Htc.HTC_M8DUG,
      Htc.HTC_M8DWG,
      Htc.HTC_M8QLUL,
      Htc.HTC_M8TL,
      Htc.HTC_M8WHL,
      Htc.HTC_M8WL,
      Htc.HTC_MECDUG,
      Htc.HTC_MECDWG,
      Htc.HTC_MECTL,
      Htc.HTC_MECUL,
      Htc.HTC_MECUL_EMEA,
      Htc.HTC_MECWHL,
      Htc.HTC_MELSUHL,
      Htc.HTC_MEMUL,
      Htc.HTC_OCEDUGL,
      Htc.HTC_OCEUHL,
      Htc.HTC_OCLA1_SPROUT,
      Htc.HTC_OCLUHLJAPAN,
      Htc.HTC_OCLUL,
      Htc.HTC_OCMDTWL,
      Htc.HTC_OCMDUGL,
      Htc.HTC_OCNDTWL,
      Htc.HTC_OCNDUGL,
      Htc.HTC_OCNUHL,
      Htc.HTC_OCNUHLJAPAN,
      Htc.HTC_OCNWHL,
      Htc.HTC_PMEC2TUHL,
      Htc.HTC_PMEUHL,
      Htc.HTC_PMEUHLJAPAN,
      Htc.HTC_PMEWHL,
      Htc.HTC_PMEWL,
      Htc.HTC_RTX,
      Htc.HTC_RTXCMCC,
      Htc.HTC_RTXSPCS,
      Htc.HTC_SOODUGLS,
      Htc.HTC_SRCDUGL,
      Htc.HTC_TETDUGL,
      Htc.HTC_THUDUGL,
      Htc.HTC_TWRDUGLS,
      Htc.HTC_V01_U,
      Htc.HTC_V01A_DUG,
      Htc.HTC_V02_DUG,
      Htc.HTC_V02_U,
      Htc.HTC_V1_DUG,
      Htc.HTC_V1_U,
      Htc.HTC_V36BML_DUGL,
      Htc.HTC_V36BML_UHL,
      Htc.HTC_ZDDUGL,
      Htc.JEWEL,
      Htc.K2U,
      Htc.M7,
      Htc.M7CDTU,
      Htc.M7CDUG,
      Htc.M7CDWG,
      Htc.M7WLJ,
      Htc.M7WLS,
      Htc.M7WLV,
      Htc.PROTOU,
      Htc.T6DUG,
      Htc.T6TL,
      Htc.T6UL,
      Htc.T6WHL,
      Htc.VILLE,
      Htc.VILLEC2,
      Htc.WILDFIRE_E1,
      Htc.WILDFIRE_E,
      Htc.WILDFIRE_E1_PLUS,
      Htc.WILDFIRE_E2,
      Htc.WILDFIRE_E2_PLAY,
      Htc.WILDFIRE_E2_PLUS,
      Htc.WILDFIRE_E3,
      Htc.WILDFIRE_E3_LITE,
      Htc.WILDFIRE_E4,
      Htc.WILDFIRE_E4_PLUS,
      Htc.WILDFIRE_E5,
      Htc.WILDFIRE_E5_PLUS,
      Htc.WILDFIRE_E6,
      Htc.WILDFIRE_E6_PLUS,
      Htc.WILDFIRE_E6_STAR,
      Htc.WILDFIRE_E7,
      Htc.WILDFIRE_E_LITE,
      Htc.WILDFIRE_E_PLUS,
      Htc.WILDFIRE_E_STAR,
      Htc.WILDFIRE_E_ULTRA,
      Htc.WILDFIRE_R70,
      Htc.Z4U,
      Htc.ZARA
  )

  /**
   * Get all device specifications for htccn_chs devices.
   * Useful for htccn_chs testing.
   */
  public fun getHtccnChsDevices(): List<String> = listOf(
      HtccnChs.DLXU
  )

  /**
   * Get all device specifications for HUAVI devices.
   * Useful for huavi testing.
   */
  public fun getHuaviDevices(): List<String> = listOf(
      Huavi.GOLD_77,
      Huavi.KHATARH20PRO
  )

  /**
   * Get all device specifications for Huawei devices.
   * Useful for huawei testing.
   */
  public fun getHuaweiDevices(): List<String> = listOf(
      Huawei.DTAB01,
      Huawei.HW_01K,
      Huawei.HW_02L,
      Huawei.HW7D501L,
      Huawei.HWAGS_Q,
      Huawei.HWAGS2,
      Huawei.HWALE_H,
      Huawei.HWALE_Q,
      Huawei.HWALP,
      Huawei.HWAMN_M,
      Huawei.HWANE,
      Huawei.HWARS_Q,
      Huawei.HWATH,
      Huawei.HWATU_QC,
      Huawei.HWATU_QG,
      Huawei.HWBAC,
      Huawei.HWBAH_Q,
      Huawei.HWBAH2,
      Huawei.HWBEETHOVEN,
      Huawei.HWBG2,
      Huawei.HWBG2,
      Huawei.HWBGO,
      Huawei.HWBLA,
      Huawei.HWBLN_H,
      Huawei.HWBND_H,
      Huawei.HWBZT,
      Huawei.HWC199,
      Huawei.HWCAG_L6737M,
      Huawei.HWCAM_H,
      Huawei.HWCAM_Q,
      Huawei.HWCAN,
      Huawei.HWCAZ,
      Huawei.HWCHC_H,
      Huawei.HWCLT,
      Huawei.HWCMR,
      Huawei.HWCMR09,
      Huawei.HWCPN_Q,
      Huawei.HWCRO_L6737M,
      Huawei.HWCRO_U6580M,
      Huawei.HWCRR,
      Huawei.HWCUN_L6735,
      Huawei.HWCUN_U6582,
      Huawei.HWD2_0082,
      Huawei.HWD2_2010,
      Huawei.HWDIG_L8940,
      Huawei.HWDRA_M,
      Huawei.HWDRA_MG,
      Huawei.HWDUB_Q,
      Huawei.HWEDISON,
      Huawei.HWELE,
      Huawei.HWEML,
      Huawei.HWEVA,
      Huawei.HWEVR,
      Huawei.HWFDR,
      Huawei.HWFDR,
      Huawei.HWFDRA04L,
      Huawei.HWFIG_H,
      Huawei.HWFLA_H,
      Huawei.HWG510_0100,
      Huawei.HWG510_0200,
      Huawei.HWG525_U00,
      Huawei.HWG526_L11,
      Huawei.HWG526_L33,
      Huawei.HWG527_U081,
      Huawei.HWG535_L11,
      Huawei.HWG6_L11,
      Huawei.HWG6_L22,
      Huawei.HWG6_L33,
      Huawei.HWG6_U10,
      Huawei.HWG610_U00,
      Huawei.HWG610_U15,
      Huawei.HWG610_U20,
      Huawei.HWG615_U10,
      Huawei.HWG620_A2,
      Huawei.HWG620_L72,
      Huawei.HWG620S_L01,
      Huawei.HWG620S_L02,
      Huawei.HWG620S_L03,
      Huawei.HWG620S_UL00,
      Huawei.HWG629_UL,
      Huawei.HWG630_U10,
      Huawei.HWG630_U20,
      Huawei.HWG630_U251,
      Huawei.HWG7_L01,
      Huawei.HWG7_L03,
      Huawei.HWG7_L11,
      Huawei.HWG7_TL00,
      Huawei.HWG7_UL20,
      Huawei.HWG700_U10,
      Huawei.HWG700_U20,
      Huawei.HWG730_T00,
      Huawei.HWG730_U10,
      Huawei.HWG730_U251,
      Huawei.HWG735,
      Huawei.HWG740_L00,
      Huawei.HWG750_T20,
      Huawei.HWG750_U10,
      Huawei.HWGEMINI,
      Huawei.HWGRA,
      Huawei.HWH1611_Q,
      Huawei.HWH1621_Q,
      Huawei.HWH1711_Q,
      Huawei.HWH30_U10,
      Huawei.HWH60,
      Huawei.HWH710VL_Q,
      Huawei.HWH715BL_Q,
      Huawei.HWH892L,
      Huawei.HWHDN_H,
      Huawei.HWHMA,
      Huawei.HWHOL_U,
      Huawei.HWHWI,
      Huawei.HWINE,
      Huawei.HWJAT_M,
      Huawei.HWJDN,
      Huawei.HWJDN2,
      Huawei.HWJKM_H,
      Huawei.HWJKM_HM,
      Huawei.HWJMM,
      Huawei.HWKII_Q,
      Huawei.HWKOBE_Q,
      Huawei.HWLDN_Q,
      Huawei.HWLISZT,
      Huawei.HWLON,
      Huawei.HWLUA_L6735,
      Huawei.HWLUA_U6582,
      Huawei.HWLYA,
      Huawei.HWLYO_L6735,
      Huawei.HWMAR,
      Huawei.HWMHA,
      Huawei.HWMLA,
      Huawei.HWMOZART,
      Huawei.HWMRD_M,
      Huawei.HWMRD_M1,
      Huawei.HWMT1_U06,
      Huawei.HWMT2_L01,
      Huawei.HWMT2L03,
      Huawei.HWMT7,
      Huawei.HWMYA_L6737,
      Huawei.HWMYA_U6580,
      Huawei.HWNCE_L6750,
      Huawei.HWNEO,
      Huawei.HWNMO_H,
      Huawei.HWNXT,
      Huawei.HWP6_U06,
      Huawei.HWP6S_L04,
      Huawei.HWP7,
      Huawei.HWP7MINI,
      Huawei.HWP8MAX,
      Huawei.HWPAR,
      Huawei.HWPE,
      Huawei.HWPIC,
      Huawei.HWPLE703L,
      Huawei.HWPOT_H,
      Huawei.HWPOT_HF,
      Huawei.HWPRA_H,
      Huawei.HWRIO,
      Huawei.HWRIO_AL00,
      Huawei.HWRIO_CL00,
      Huawei.HWRIO_L01,
      Huawei.HWRNE,
      Huawei.HWS10101U,
      Huawei.HWS10201L,
      Huawei.HWS10201U,
      Huawei.HWS10201W,
      Huawei.HWS10231L,
      Huawei.HWS7601U,
      Huawei.HWS7701U,
      Huawei.HWS7701W,
      Huawei.HWS7721G,
      Huawei.HWS7721U,
      Huawei.HWS7951W,
      Huawei.HWS7961W,
      Huawei.HWS8301L,
      Huawei.HWS8701,
      Huawei.HWSCC_Q,
      Huawei.HWSCL_Q,
      Huawei.HWSCLU_Q,
      Huawei.HWSHT,
      Huawei.HWSLA_Q,
      Huawei.HWSNE,
      Huawei.HWSTK_HF,
      Huawei.HWT1701,
      Huawei.HWT1821L,
      Huawei.HWT1A21L,
      Huawei.HWTAG_L6753,
      Huawei.HWTGR_L,
      Huawei.HWTIT_AL00,
      Huawei.HWTIT_L6735,
      Huawei.HWTIT_U6582,
      Huawei.HWTRT_Q,
      Huawei.HWU9700L,
      Huawei.HWVCE,
      Huawei.HWVIE,
      Huawei.HWVKY,
      Huawei.HWVNS_H,
      Huawei.HWVNS_Q,
      Huawei.HWVTR,
      Huawei.HWWAS_H,
      Huawei.HWY221_U,
      Huawei.HWY300_0100,
      Huawei.HWY300_0151,
      Huawei.HWY320_U,
      Huawei.HWY321_U,
      Huawei.HWY330_U01,
      Huawei.HWY330_U05,
      Huawei.HWY330_U11,
      Huawei.HWY330_U15,
      Huawei.HWY336_U,
      Huawei.HWY340_U081,
      Huawei.HWY360_U,
      Huawei.HWY360_U6572,
      Huawei.HWY511_U,
      Huawei.HWY520_U,
      Huawei.HWY530_U00,
      Huawei.HWY530_U051,
      Huawei.HWY536A1,
      Huawei.HWY538,
      Huawei.HWY540_U,
      Huawei.HWY541_U,
      Huawei.HWY550_L01,
      Huawei.HWY550_L03,
      Huawei.HWY560_L,
      Huawei.HWY560_U,
      Huawei.HWY600_U,
      Huawei.HWY625_U,
      Huawei.HWY635,
      Huawei.HWYAL,
      Huawei.SAWFISH,
      Huawei.SAWSHARK,
      Huawei.STURGEON,
      Huawei.TT01
  )

  /**
   * Get all device specifications for Hublot devices.
   * Useful for hublot testing.
   */
  public fun getHublotDevices(): List<String> = listOf(
      Hublot.HALIBUT,
      Hublot.TURBOT
  )

  /**
   * Get all device specifications for hudl devices.
   * Useful for hudl testing.
   */
  public fun getHudlDevices(): List<String> = listOf(
      Hudl.HT7S3,
      Hudl.HTF8A4
  )

  /**
   * Get all device specifications for HUGEROCK devices.
   * Useful for hugerock testing.
   */
  public fun getHugerockDevices(): List<String> = listOf(
      Hugerock.E101
  )

  /**
   * Get all device specifications for Huion devices.
   * Useful for huion testing.
   */
  public fun getHuionDevices(): List<String> = listOf(
      Huion.KAMVASSLATE10,
      Huion.KAMVASSLATE10_EEA,
      Huion.KT1101,
      Huion.KT1201
  )

  /**
   * Get all device specifications for Human_Acadaemy devices.
   * Useful for human_acadaemy testing.
   */
  public fun getHumanAcadaemyDevices(): List<String> = listOf(
      HumanAcadaemy.HA_007
  )

  /**
   * Get all device specifications for Human_Academy devices.
   * Useful for human_academy testing.
   */
  public fun getHumanAcademyDevices(): List<String> = listOf(
      HumanAcademy.HA_008
  )

  /**
   * Get all device specifications for humaxdigital devices.
   * Useful for humaxdigital testing.
   */
  public fun getHumaxdigitalDevices(): List<String> = listOf(
      Humaxdigital.B604TNW,
      Humaxdigital.FVP4KGTR,
      Humaxdigital.H5MINI,
      Humaxdigital.VISION
  )

  /**
   * Get all device specifications for HuoSheng devices.
   * Useful for huosheng testing.
   */
  public fun getHuoshengDevices(): List<String> = listOf(
      Huosheng.HMS_PD_X1C_3
  )

  /**
   * Get all device specifications for Hurricane devices.
   * Useful for hurricane testing.
   */
  public fun getHurricaneDevices(): List<String> = listOf(
      Hurricane.CURVE,
      Hurricane.DZIRE,
      Hurricane.EXCITE,
      Hurricane.FLAME_PLUS,
      Hurricane.FUEL,
      Hurricane.ICON,
      Hurricane.IRIS,
      Hurricane.IRIS_PLUS,
      Hurricane.LINK,
      Hurricane.PULSE,
      Hurricane.RIDGE_PLUS,
      Hurricane.RUSH_PLUS,
      Hurricane.STORM,
      Hurricane.VORTEXPLUS,
      Hurricane.VULCAN
  )

  /**
   * Get all device specifications for HUSKEE devices.
   * Useful for huskee testing.
   */
  public fun getHuskeeDevices(): List<String> = listOf(
      Huskee.HELIOS,
      Huskee.HELIOS_PLUS
  )

  /**
   * Get all device specifications for HY devices.
   * Useful for hy testing.
   */
  public fun getHyDevices(): List<String> = listOf(
      Hy.HT10LA3MSGNA01,
      Hy.HT10LB4MSGNA01,
      Hy.HT10WB3MSG01,
      Hy.HT8WB3RBK01
  )

  /**
   * Get all device specifications for Hyatta devices.
   * Useful for hyatta testing.
   */
  public fun getHyattaDevices(): List<String> = listOf(
      Hyatta.MODEL_5,
      Hyatta.MODEL_6S
  )

  /**
   * Get all device specifications for HYF devices.
   * Useful for hyf testing.
   */
  public fun getHyfDevices(): List<String> = listOf(
      Hyf.SQ126G
  )

  /**
   * Get all device specifications for Hyjoy devices.
   * Useful for hyjoy testing.
   */
  public fun getHyjoyDevices(): List<String> = listOf(
      Hyjoy.KT1006,
      Hyjoy.P11,
      Hyjoy.P11_EEA
  )

  /**
   * Get all device specifications for HYKKER devices.
   * Useful for hykker testing.
   */
  public fun getHykkerDevices(): List<String> = listOf(
      Hykker.DV8038
  )

  /**
   * Get all device specifications for Hytera devices.
   * Useful for hytera testing.
   */
  public fun getHyteraDevices(): List<String> = listOf(
      Hytera.PDC550,
      Hytera.PDC680,
      Hytera.PNC460,
      Hytera.PNC550,
      Hytera.PNC560,
      Hytera.PTC680
  )

  /**
   * Get all device specifications for Hyundai devices.
   * Useful for hyundai testing.
   */
  public fun getHyundaiDevices(): List<String> = listOf(
      Hyundai._10LA2,
      Hyundai._10LB1,
      Hyundai._10LC1,
      Hyundai._7LB1,
      Hyundai._7WA1,
      Hyundai._8LAB1,
      Hyundai.BANGBAE,
      Hyundai.BRUNO,
      Hyundai.CAPITOLHILL,
      Hyundai.E435_PLUS,
      Hyundai.E465GO,
      Hyundai.E475,
      Hyundai.E485,
      Hyundai.E501,
      Hyundai.E502,
      Hyundai.E506,
      Hyundai.E551_LITE,
      Hyundai.E553,
      Hyundai.E554,
      Hyundai.E601F,
      Hyundai.E602,
      Hyundai.E603,
      Hyundai.ETERNITY_G25,
      Hyundai.GANGBYEON,
      Hyundai.GUANDU,
      Hyundai.H25568K,
      Hyundai.HANYANG,
      Hyundai.HDIT_IFPD,
      Hyundai.HONGKONG,
      Hyundai.HT0703K,
      Hyundai.HT0703W08,
      Hyundai.HT0704K08,
      Hyundai.HT0705W08,
      Hyundai.HT0802W16,
      Hyundai.HT1003X16,
      Hyundai.HT1004L16,
      Hyundai.HT1004X16,
      Hyundai.HT10LA1MSGNA02,
      Hyundai.HT10LA2MSGNA01,
      Hyundai.HT10LB2MBKLTM,
      Hyundai.HT10LB2MBKLTM02,
      Hyundai.HT10LB3MBKLTM,
      Hyundai.HT10LB3MBKWW,
      Hyundai.HT10LC1MBKLTM,
      Hyundai.HT10LC1MBKLTM01,
      Hyundai.HT10WB2MSG01,
      Hyundai.HT1G50K,
      Hyundai.HT2G50KBK,
      Hyundai.HT2G57K,
      Hyundai.HT2G57L,
      Hyundai.HT3G60L,
      Hyundai.HT7GB1MBK,
      Hyundai.HT7WB1RBK,
      Hyundai.HT7WC1PBK,
      Hyundai.HT8LA1RBKNA01,
      Hyundai.HT8LAB1PBKLTM,
      Hyundai.HT8LB1PBK01,
      Hyundai.HT8WB1RBK01,
      Hyundai.HT8WB1RBK02,
      Hyundai.HT8WB1RBK02A,
      Hyundai.HT8WB1RBK03,
      Hyundai.HY65PA1401NA,
      Hyundai.HY65PA1402NA,
      Hyundai.HY65PB1401NA,
      Hyundai.HY_BDL163G_001_EEA,
      Hyundai.HYTAB_PLUS_10LC2,
      Hyundai.HYUNDAI_ULTRA_LIVE_II,
      Hyundai.IKEBUKURO,
      Hyundai.KENTON,
      Hyundai.KEONEAE,
      Hyundai.KOMAGOME,
      Hyundai.KORAL_10WB1,
      Hyundai.KORAL_10X3,
      Hyundai.KORAL_10XL,
      Hyundai.KORAL_7W4X,
      Hyundai.KORAL_7WB1,
      Hyundai.KORAL_7WC1,
      Hyundai.KORAL_7WD1,
      Hyundai.KORAL_8WC1,
      Hyundai.L465,
      Hyundai.L503F,
      Hyundai.L503F_PLUS,
      Hyundai.L506,
      Hyundai.L553,
      Hyundai.L601F,
      Hyundai.L604,
      Hyundai.L610,
      Hyundai.L622,
      Hyundai.L651,
      Hyundai.L681,
      Hyundai.LASALLE,
      Hyundai.LAVENDER,
      Hyundai.LONGSHAN,
      Hyundai.MARINA,
      Hyundai.MARTIN,
      Hyundai.MOUNTBAKER,
      Hyundai.NAGATA,
      Hyundai.NIPPORI,
      Hyundai.R1,
      Hyundai.R2,
      Hyundai.R3,
      Hyundai.R4,
      Hyundai.REDWOOD,
      Hyundai.SAMSEONG,
      Hyundai.SEOUL_9,
      Hyundai.SEOUL_S8,
      Hyundai.SHINJUKU,
      Hyundai.SINDORIM,
      Hyundai.STANFORD,
      Hyundai.SUNNYVALE,
      Hyundai.SW4H,
      Hyundai.SW6H,
      Hyundai.TAMACHI,
      Hyundai.ULTRA_ACTIVE,
      Hyundai.ULTRA_DREAM,
      Hyundai.ULTRA_ENERGY_LITE,
      Hyundai.ULTRA_ENERGY_PLUS,
      Hyundai.ULTRA_LATITUDE,
      Hyundai.ULTRA_SHADOW,
      Hyundai.ULTRA_SHINE,
      Hyundai.ULTRA_STORM,
      Hyundai.ULTRA_STYLE,
      Hyundai.ULTRA_SYNC,
      Hyundai.ULTRA_TREND,
      Hyundai.ULTRA_VISION,
      Hyundai.ULTRA_VISION_PLUS,
      Hyundai.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for HYUNDAI-MAESTRO devices.
   * Useful for hyundai-maestro testing.
   */
  public fun getHyundaiMaestroDevices(): List<String> = listOf(
      HyundaiMaestro.HDT_7427GU,
      HyundaiMaestro.HDT_7433X,
      HyundaiMaestro.HDT_9421GU,
      HyundaiMaestro.HDT_9433X,
      HyundaiMaestro.HDT_1064GS,
      HyundaiMaestro.HDT_7433H_PLUS
  )

  /**
   * Get all device specifications for i3-Technologies devices.
   * Useful for i3-technologies testing.
   */
  public fun getI3TechnologiesDevices(): List<String> = listOf(
      I3Technologies.I3TOUCH_X3
  )

  /**
   * Get all device specifications for i5 devices.
   * Useful for i5 testing.
   */
  public fun getI5Devices(): List<String> = listOf(
      I5._10080,
      I5.V10
  )

  /**
   * Get all device specifications for I-Bridge devices.
   * Useful for i-bridge testing.
   */
  public fun getIBridgeDevices(): List<String> = listOf(
      IBridge.IBT01H_BDS,
      IBridge.IBT02H
  )

  /**
   * Get all device specifications for i-Buddie devices.
   * Useful for i-buddie testing.
   */
  public fun getIBuddieDevices(): List<String> = listOf(
      IBuddie.REALPAD_MA7BX2_1,
      IBuddie.TF10EA2_P8_1,
      IBuddie.TG08RK,
      IBuddie.TG08RK1,
      IBuddie.TP10RA1_1,
      IBuddie.TR10CS1_12,
      IBuddie.TU10MK1_1,
      IBuddie.TU11MK1_1,
      IBuddie.TU11MK1_2
  )

  /**
   * Get all device specifications for I_KALL devices.
   * Useful for i_kall testing.
   */
  public fun getIKallDevices(): List<String> = listOf(
      IKall.K510,
      IKall.S3,
      IKall.Z19,
      IKall.Z20
  )

  /**
   * Get all device specifications for I-life devices.
   * Useful for i-life testing.
   */
  public fun getILifeDevices(): List<String> = listOf(
      ILife.ITELL_K3102N,
      ILife.ITELL_K3500N,
      ILife.ITELL_K3800Q,
      ILife.MISA
  )

  /**
   * Get all device specifications for i-PLUS devices.
   * Useful for i-plus testing.
   */
  public fun getIPlusDevices(): List<String> = listOf(
      IPlus.NU60,
      IPlus.NU65,
      IPlus.NU70,
      IPlus.OMEGA7,
      IPlus.OMEGA8
  )

  /**
   * Get all device specifications for i-Scream devices.
   * Useful for i-scream testing.
   */
  public fun getIScreamDevices(): List<String> = listOf(
      IScream.HL106
  )

  /**
   * Get all device specifications for iBall devices.
   * Useful for iball testing.
   */
  public fun getIballDevices(): List<String> = listOf(
      Iball.AVID,
      Iball.BLAZE_V4,
      Iball.GORGEO_4GL,
      Iball.IBALL_SLIDE_BRACE_XJ,
      Iball.IBALL_SLIDE_CLEO_S9,
      Iball.IBALL_SLIDE_DAZZLE_I7,
      Iball.IMPRINT_4G,
      Iball.IT_KSA0003,
      Iball.IT_KSA0012,
      Iball.IT_KSA0066,
      Iball.NOVA_4G,
      Iball.PERFECT_10,
      Iball.SLIDE_DAZZLE_3500,
      Iball.SLIDE_ELAN_3X32,
      Iball.SLIDE_ELAN_4G2_PLUS,
      Iball.SLIDE_MAJESTIC_01,
      Iball.SLIDE_NIMBLE_4GF,
      Iball.SLIDE_SKYE_03,
      Iball.SLIDE_WINGS_4GP,
      Iball.SNAP_4G2,
      Iball.SPIRIT_X2,
      Iball.TWINKLE_I5
  )

  /**
   * Get all device specifications for iBao devices.
   * Useful for ibao testing.
   */
  public fun getIbaoDevices(): List<String> = listOf(
      Ibao.IS1
  )

  /**
   * Get all device specifications for IBG devices.
   * Useful for ibg testing.
   */
  public fun getIbgDevices(): List<String> = listOf(
      Ibg.HONGKONG,
      Ibg.MOUNTBAKER
  )

  /**
   * Get all device specifications for Ibirapita devices.
   * Useful for ibirapita testing.
   */
  public fun getIbirapitaDevices(): List<String> = listOf(
      Ibirapita.A81F
  )

  /**
   * Get all device specifications for ibowin devices.
   * Useful for ibowin testing.
   */
  public fun getIbowinDevices(): List<String> = listOf(
      Ibowin.M10ES11
  )

  /**
   * Get all device specifications for iBRIT devices.
   * Useful for ibrit testing.
   */
  public fun getIbritDevices(): List<String> = listOf(
      Ibrit.AF51,
      Ibrit.DIAMOND_PRO_MAX,
      Ibrit.I5,
      Ibrit.I5PLUS,
      Ibrit.IB6001,
      Ibrit.IBRIT_POWER6,
      Ibrit.MAX10,
      Ibrit.MAX10_1,
      Ibrit.MAX12,
      Ibrit.MAX12PRO,
      Ibrit.MAX15,
      Ibrit.POWER_X,
      Ibrit.SPEEDX,
      Ibrit.Z2
  )

  /**
   * Get all device specifications for iCare devices.
   * Useful for icare testing.
   */
  public fun getIcareDevices(): List<String> = listOf(
      Icare.ICARE10
  )

  /**
   * Get all device specifications for ICE devices.
   * Useful for ice testing.
   */
  public fun getIceDevices(): List<String> = listOf(
      Ice.STANFORD,
      Ice.ZHONGSHAN
  )

  /**
   * Get all device specifications for icon devices.
   * Useful for icon testing.
   */
  public fun getIconDevices(): List<String> = listOf(
      Icon.PORTAL_10I
  )

  /**
   * Get all device specifications for iCraig devices.
   * Useful for icraig testing.
   */
  public fun getIcraigDevices(): List<String> = listOf(
      Icraig.CMP838,
      Icraig.CMP840
  )

  /**
   * Get all device specifications for iData devices.
   * Useful for idata testing.
   */
  public fun getIdataDevices(): List<String> = listOf(
      Idata.I3,
      Idata.IDATA_50,
      Idata.IDATA_K1,
      Idata.IDATA_K1_EEA,
      Idata.IDATA_P1_MINI,
      Idata.IDATA_T1_UHF,
      Idata.IDATA_T2,
      Idata.K3PRO,
      Idata.K3S,
      Idata.K8,
      Idata.T1,
      Idata.T1PRO,
      Idata.T3_PRO
  )

  /**
   * Get all device specifications for IDC devices.
   * Useful for idc testing.
   */
  public fun getIdcDevices(): List<String> = listOf(
      Idc.EVO_G4
  )

  /**
   * Get all device specifications for IDEMIA devices.
   * Useful for idemia testing.
   */
  public fun getIdemiaDevices(): List<String> = listOf(
      Idemia.ID_SCREEN
  )

  /**
   * Get all device specifications for iDevice devices.
   * Useful for idevice testing.
   */
  public fun getIdeviceDevices(): List<String> = listOf(
      Idevice.UZBEKISTAN
  )

  /**
   * Get all device specifications for iFit devices.
   * Useful for ifit testing.
   */
  public fun getIfitDevices(): List<String> = listOf(
      Ifit.IFT1018
  )

  /**
   * Get all device specifications for iGET devices.
   * Useful for iget testing.
   */
  public fun getIgetDevices(): List<String> = listOf(
      Iget.IGET_SMART_G101,
      Iget.IGET_SMART_G102,
      Iget.IGET_SMART_L102,
      Iget.SMART_G81,
      Iget.SMART_G81H,
      Iget.SMART_L103,
      Iget.SMART_L104_EEA,
      Iget.SMART_L11,
      Iget.SMART_L206,
      Iget.SMART_L20X,
      Iget.SMART_L30,
      Iget.SMART_L31,
      Iget.SMART_L32,
      Iget.SMART_W101,
      Iget.SMART_W10X_EEA,
      Iget.SMART_W202,
      Iget.SMART_W203,
      Iget.SMART_W20X,
      Iget.SMART_W30_EEA,
      Iget.SMART_W31_EEA,
      Iget.SMART_W32,
      Iget.SMART_W84_EEA,
      Iget.SMART_W8_KIDS,
      Iget.SMART_W8X
  )

  /**
   * Get all device specifications for IHOME devices.
   * Useful for ihome testing.
   */
  public fun getIhomeDevices(): List<String> = listOf(
      Ihome.ELLINIKO,
      Ihome.HONGKONG,
      Ihome.MOUNTBAKER
  )

  /**
   * Get all device specifications for iHunt devices.
   * Useful for ihunt testing.
   */
  public fun getIhuntDevices(): List<String> = listOf(
      Ihunt.ALIEN_X_PRO_2021,
      Ihunt.ALIENXLITE2020,
      Ihunt.CYBER_DOG_4G,
      Ihunt.CYBER_SHARK,
      Ihunt.CYBER_WOLF_5G,
      Ihunt.IHUNT,
      Ihunt.IHUNT_FIT_RUNNER,
      Ihunt.IHUNT_LIKE_12,
      Ihunt.IHUNT_NOTE_ULTRA,
      Ihunt.IHUNT_P15000,
      Ihunt.IHUNT_S23_PLUS_EEA,
      Ihunt.IHUNT_S23_ULTRA,
      Ihunt.IHUNT_S24_PLUS,
      Ihunt.IHUNT_S24_ULTRA,
      Ihunt.IHUNT_S24_XTREME,
      Ihunt.IHUNT_S25_ULTRA,
      Ihunt.IHUNT_S60,
      Ihunt.IHUNTLIKE12PRO,
      Ihunt.IHUNTS22PLUS,
      Ihunt.IHUNTS22ULTRA,
      Ihunt.LIKE_8,
      Ihunt.LIKE_HI10_2021,
      Ihunt.LIKE_HI5,
      Ihunt.P10000_PRO,
      Ihunt.P11000_PRO,
      Ihunt.P15000_ULTRA,
      Ihunt.P15000PRO_5G,
      Ihunt.P22000_ULTRA,
      Ihunt.P25000_PRO,
      Ihunt.P32000_ULTRA,
      Ihunt.P8000_ULTRA,
      Ihunt.S10_TANK_2019,
      Ihunt.S10_TANK_2020,
      Ihunt.S10_TANK_PRO_2020,
      Ihunt.S21_PLUS_2021_EEA,
      Ihunt.S21_ULTRA_4G,
      Ihunt.S30_ULTRA_APEX_2021,
      Ihunt.S60_DISCOVERY_2019,
      Ihunt.S60_DISCOVERY_PLUS,
      Ihunt.TABLET_P15000,
      Ihunt.TABLET_PC_10_PRO_EEA,
      Ihunt.TABLET_PC_11_ULTRA,
      Ihunt.TABLET_PC_12_ULTRA,
      Ihunt.TABLET_X,
      Ihunt.TITAN_P11000_PRO,
      Ihunt.TITAN_P4000_PRO,
      Ihunt.TITAN_P6000_PRO,
      Ihunt.TITAN_P8000_PRO_2021,
      Ihunt.TITAN_X_EEA,
      Ihunt.TITANP6000
  )

  /**
   * Get all device specifications for IIIF150 devices.
   * Useful for iiif150 testing.
   */
  public fun getIiif150Devices(): List<String> = listOf(
      Iiif150.AIR1,
      Iiif150.AIR1_PRO,
      Iiif150.AIR1_ULTRA,
      Iiif150.AIR1_ULTRA_PRO,
      Iiif150.AIR3,
      Iiif150.AIR3S,
      Iiif150.B1,
      Iiif150.B1_PRO,
      Iiif150.B2,
      Iiif150.B2_PRO,
      Iiif150.B2_ULTRA,
      Iiif150.B3,
      Iiif150.B3C,
      Iiif150.RAPTOR
  )

  /**
   * Get all device specifications for iiyama devices.
   * Useful for iiyama testing.
   */
  public fun getIiyamaDevices(): List<String> = listOf(
      Iiyama.RK3588_T,
      Iiyama.TEXX13A
  )

  /**
   * Get all device specifications for IKALL devices.
   * Useful for ikall testing.
   */
  public fun getIkallDevices(): List<String> = listOf(
      Ikall.IKALL
  )

  /**
   * Get all device specifications for ikimobile devices.
   * Useful for ikimobile testing.
   */
  public fun getIkimobileDevices(): List<String> = listOf(
      Ikimobile.BLESSPLUS,
      Ikimobile.GO5_55
  )

  /**
   * Get all device specifications for IKON devices.
   * Useful for ikon testing.
   */
  public fun getIkonDevices(): List<String> = listOf(
      Ikon.CAPITOLHILL,
      Ikon.IK_1025,
      Ikon.IK_1028,
      Ikon.IK_1106,
      Ikon.IK_7108,
      Ikon.IK_869,
      Ikon.IK_T808,
      Ikon.IK_WT028I,
      Ikon.IK_WT1080,
      Ikon.IK_WT1088,
      Ikon.IK_WA024,
      Ikon.KEONEAE
  )

  /**
   * Get all device specifications for IKU devices.
   * Useful for iku testing.
   */
  public fun getIkuDevices(): List<String> = listOf(
      Iku.A10,
      Iku.A10S,
      Iku.A11,
      Iku.A12,
      Iku.A20,
      Iku.A21,
      Iku.A23,
      Iku.A25,
      Iku.A35,
      Iku.A36,
      Iku.A4,
      Iku.A40,
      Iku.A45,
      Iku.A50,
      Iku.A6,
      Iku.A6_2022,
      Iku.A70,
      Iku.A7_PLUS,
      Iku.IKU_A22,
      Iku.IKU_T3,
      Iku.IKU_T_MAX,
      Iku.K5,
      Iku.NOTE_10,
      Iku.T1,
      Iku.T4,
      Iku.T5,
      Iku.T6,
      Iku.T8,
      Iku.X1,
      Iku.X2,
      Iku.X3,
      Iku.X4,
      Iku.X5,
      Iku.X8,
      Iku.X9,
      Iku.Y2,
      Iku.Y3,
      Iku.Y7
  )

  /**
   * Get all device specifications for iLA devices.
   * Useful for ila testing.
   */
  public fun getIlaDevices(): List<String> = listOf(
      Ila.C3,
      Ila.E1_PLUS,
      Ila.E3,
      Ila.ILA_C1,
      Ila.ILA_E1,
      Ila.ILA_R1,
      Ila.ILA_SILK,
      Ila.ILA_X1,
      Ila.ILA_X2,
      Ila.ILA_X3,
      Ila.R1_LITE
  )

  /**
   * Get all device specifications for iMachine devices.
   * Useful for imachine testing.
   */
  public fun getImachineDevices(): List<String> = listOf(
      Imachine.I2
  )

  /**
   * Get all device specifications for imarflex devices.
   * Useful for imarflex testing.
   */
  public fun getImarflexDevices(): List<String> = listOf(
      Imarflex.CAPITOLHILL,
      Imarflex.KENTON,
      Imarflex.KEONEAE,
      Imarflex.LASALLE
  )

  /**
   * Get all device specifications for iMESH devices.
   * Useful for imesh testing.
   */
  public fun getImeshDevices(): List<String> = listOf(
      Imesh.IM_560
  )

  /**
   * Get all device specifications for imiia devices.
   * Useful for imiia testing.
   */
  public fun getImiiaDevices(): List<String> = listOf(
      Imiia.IAD,
      Imiia.KEONEAE,
      Imiia.MATEO,
      Imiia.PIONEER,
      Imiia.YUL
  )

  /**
   * Get all device specifications for iMin devices.
   * Useful for imin testing.
   */
  public fun getIminDevices(): List<String> = listOf(
      Imin.CRANE1,
      Imin.FALCON2,
      Imin.I22T01,
      Imin.LARK1,
      Imin.SWAN1PRO,
      Imin.SWAN2,
      Imin.SWAN2PRINTER,
      Imin.SWIFT1PRO,
      Imin.SWIFT2,
      Imin.SWIFT2PRO
  )

  /**
   * Get all device specifications for IMMER devices.
   * Useful for immer testing.
   */
  public fun getImmerDevices(): List<String> = listOf(
      Immer.HONGKONG
  )

  /**
   * Get all device specifications for IMO devices.
   * Useful for imo testing.
   */
  public fun getImoDevices(): List<String> = listOf(
      Imo.IMO_Q2_PLUS,
      Imo.IMO_Q2_PRO,
      Imo.IMO_Q3_PLUS,
      Imo.IMO_Q4_PRO,
      Imo.IMO_Q5,
      Imo.S2
  )

  /**
   * Get all device specifications for Imose devices.
   * Useful for imose testing.
   */
  public fun getImoseDevices(): List<String> = listOf(
      Imose.BAM_III,
      Imose.OMOTAB2,
      Imose.OMOTAB_2S,
      Imose.SEMPE
  )

  /**
   * Get all device specifications for imozen devices.
   * Useful for imozen testing.
   */
  public fun getImozenDevices(): List<String> = listOf(
      Imozen.TC605
  )

  /**
   * Get all device specifications for IMPECCA devices.
   * Useful for impecca testing.
   */
  public fun getImpeccaDevices(): List<String> = listOf(
      Impecca.GANGBYEON
  )

  /**
   * Get all device specifications for IMPERIAL devices.
   * Useful for imperial testing.
   */
  public fun getImperialDevices(): List<String> = listOf(
      Imperial.R3_GTV,
      Imperial.R4_GTV
  )

  /**
   * Get all device specifications for IMPEX devices.
   * Useful for impex testing.
   */
  public fun getImpexDevices(): List<String> = listOf(
      Impex.MARINA,
      Impex.NAGATA,
      Impex.OD0M_EA_T32,
      Impex.TAKAO
  )

  /**
   * Get all device specifications for Impression devices.
   * Useful for impression testing.
   */
  public fun getImpressionDevices(): List<String> = listOf(
      Impression.IMPAD_P101
  )

  /**
   * Get all device specifications for IMT devices.
   * Useful for imt testing.
   */
  public fun getImtDevices(): List<String> = listOf(
      Imt.GKL089
  )

  /**
   * Get all device specifications for iMUZ devices.
   * Useful for imuz testing.
   */
  public fun getImuzDevices(): List<String> = listOf(
      Imuz.EG104,
      Imuz.EG110,
      Imuz.EG125,
      Imuz.G10,
      Imuz.IM_B101H,
      Imuz.IM_H031,
      Imuz.IM_H092L,
      Imuz.IM_H092W,
      Imuz.IM_H261,
      Imuz.IM_H842,
      Imuz.IM_L101,
      Imuz.IM_L801,
      Imuz.IMH101,
      Imuz.MUPAD102,
      Imuz.MUPAD104,
      Imuz.MUPAD_K10,
      Imuz.MUPAD_L10,
      Imuz.MUPADT7,
      Imuz.RA10,
      Imuz.RG11
  )

  /**
   * Get all device specifications for INCLO devices.
   * Useful for inclo testing.
   */
  public fun getIncloDevices(): List<String> = listOf(
      Inclo.KHARDI,
      Inclo.PIONEER
  )

  /**
   * Get all device specifications for Inco devices.
   * Useful for inco testing.
   */
  public fun getIncoDevices(): List<String> = listOf(
      Inco.ECO_S,
      Inco.HORIZON,
      Inco.HORIZON_S
  )

  /**
   * Get all device specifications for Indibox devices.
   * Useful for indibox testing.
   */
  public fun getIndiboxDevices(): List<String> = listOf(
      Indibox.DV8219
  )

  /**
   * Get all device specifications for indigi devices.
   * Useful for indigi testing.
   */
  public fun getIndigiDevices(): List<String> = listOf(
      Indigi.G4I
  )

  /**
   * Get all device specifications for IndiHome devices.
   * Useful for indihome testing.
   */
  public fun getIndihomeDevices(): List<String> = listOf(
      Indihome.B866FV1_1,
      Indihome.HG680
  )

  /**
   * Get all device specifications for indurama devices.
   * Useful for indurama testing.
   */
  public fun getInduramaDevices(): List<String> = listOf(
      Indurama.ELLINIKO,
      Indurama.HONGKONG,
      Indurama.MOUNTBAKER,
      Indurama.SHINJUKU,
      Indurama.STANFORD,
      Indurama.SUNNYVALE,
      Indurama.SW4H,
      Indurama.ZHONGSHAN
  )

  /**
   * Get all device specifications for inefi devices.
   * Useful for inefi testing.
   */
  public fun getInefiDevices(): List<String> = listOf(
      Inefi.ANDROID_G17
  )

  /**
   * Get all device specifications for Infiniton devices.
   * Useful for infiniton testing.
   */
  public fun getInfinitonDevices(): List<String> = listOf(
      Infiniton.BANGBAE,
      Infiniton.BRUNO,
      Infiniton.KOMAGOME,
      Infiniton.NAGATA,
      Infiniton.SHILIN,
      Infiniton.TAMACHI,
      Infiniton.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for Infinix devices.
   * Useful for infinix testing.
   */
  public fun getInfinixDevices(): List<String> = listOf(
      Infinix.BARKING,
      Infinix.BEAUDRY,
      Infinix.IKEBUKURO,
      Infinix.INFINIX_PR652B,
      Infinix.INFINIX_PR652C,
      Infinix.INFINIX_X1101,
      Infinix.INFINIX_X1101B,
      Infinix.INFINIX_X1102,
      Infinix.INFINIX_X5010,
      Infinix.INFINIX_X521,
      Infinix.INFINIX_X521_PRO,
      Infinix.INFINIX_X522,
      Infinix.INFINIX_X551,
      Infinix.INFINIX_X5511,
      Infinix.INFINIX_X5511_13M,
      Infinix.INFINIX_X5514,
      Infinix.INFINIX_X5515,
      Infinix.INFINIX_X5515F,
      Infinix.INFINIX_X5515I,
      Infinix.INFINIX_X5516,
      Infinix.INFINIX_X5516B,
      Infinix.INFINIX_X5516C,
      Infinix.INFINIX_X552,
      Infinix.INFINIX_X552_95M,
      Infinix.INFINIX_X553,
      Infinix.INFINIX_X553_A1,
      Infinix.INFINIX_X554,
      Infinix.INFINIX_X559,
      Infinix.INFINIX_X559C,
      Infinix.INFINIX_X571,
      Infinix.INFINIX_X572,
      Infinix.INFINIX_X573,
      Infinix.INFINIX_X573B,
      Infinix.INFINIX_X600_5M,
      Infinix.INFINIX_X600_H533_5M,
      Infinix.INFINIX_X603,
      Infinix.INFINIX_X604_SPROUT,
      Infinix.INFINIX_X605_SPROUT,
      Infinix.INFINIX_X606,
      Infinix.INFINIX_X606B,
      Infinix.INFINIX_X606C,
      Infinix.INFINIX_X606D,
      Infinix.INFINIX_X608,
      Infinix.INFINIX_X609,
      Infinix.INFINIX_X609B,
      Infinix.INFINIX_X610,
      Infinix.INFINIX_X612,
      Infinix.INFINIX_X612B,
      Infinix.INFINIX_X620,
      Infinix.INFINIX_X622,
      Infinix.INFINIX_X623,
      Infinix.INFINIX_X624,
      Infinix.INFINIX_X624B,
      Infinix.INFINIX_X625,
      Infinix.INFINIX_X625C,
      Infinix.INFINIX_X625D,
      Infinix.INFINIX_X626,
      Infinix.INFINIX_X626B,
      Infinix.INFINIX_X626B_LTE,
      Infinix.INFINIX_X627STU,
      Infinix.INFINIX_X627V,
      Infinix.INFINIX_X650,
      Infinix.INFINIX_X650B,
      Infinix.INFINIX_X650C,
      Infinix.INFINIX_X650D,
      Infinix.INFINIX_X6511,
      Infinix.INFINIX_X6511B,
      Infinix.INFINIX_X6511E,
      Infinix.INFINIX_X6511G,
      Infinix.INFINIX_X6512,
      Infinix.INFINIX_X6515,
      Infinix.INFINIX_X6516,
      Infinix.INFINIX_X6517,
      Infinix.INFINIX_X652,
      Infinix.INFINIX_X6525,
      Infinix.INFINIX_X6525B,
      Infinix.INFINIX_X6525D,
      Infinix.INFINIX_X6526,
      Infinix.INFINIX_X6528,
      Infinix.INFINIX_X6528B,
      Infinix.INFINIX_X652A,
      Infinix.INFINIX_X652B,
      Infinix.INFINIX_X652C,
      Infinix.INFINIX_X653,
      Infinix.INFINIX_X6531,
      Infinix.INFINIX_X6531B,
      Infinix.INFINIX_X6532,
      Infinix.INFINIX_X6532C,
      Infinix.INFINIX_X653C,
      Infinix.INFINIX_X655,
      Infinix.INFINIX_X655C,
      Infinix.INFINIX_X655D,
      Infinix.INFINIX_X655F,
      Infinix.INFINIX_X656,
      Infinix.INFINIX_X657,
      Infinix.INFINIX_X657B,
      Infinix.INFINIX_X657C,
      Infinix.INFINIX_X658B,
      Infinix.INFINIX_X658E,
      Infinix.INFINIX_X659,
      Infinix.INFINIX_X659B,
      Infinix.INFINIX_X660,
      Infinix.INFINIX_X660B,
      Infinix.INFINIX_X660C,
      Infinix.INFINIX_X662,
      Infinix.INFINIX_X662B,
      Infinix.INFINIX_X663,
      Infinix.INFINIX_X663B,
      Infinix.INFINIX_X663C,
      Infinix.INFINIX_X665,
      Infinix.INFINIX_X665B,
      Infinix.INFINIX_X665C,
      Infinix.INFINIX_X665E,
      Infinix.INFINIX_X666,
      Infinix.INFINIX_X668,
      Infinix.INFINIX_X668C,
      Infinix.INFINIX_X669,
      Infinix.INFINIX_X669C,
      Infinix.INFINIX_X669D,
      Infinix.INFINIX_X670,
      Infinix.INFINIX_X671,
      Infinix.INFINIX_X6710,
      Infinix.INFINIX_X6711,
      Infinix.INFINIX_X6716,
      Infinix.INFINIX_X6716B,
      Infinix.INFINIX_X671B,
      Infinix.INFINIX_X672,
      Infinix.INFINIX_X6720,
      Infinix.INFINIX_X6720B,
      Infinix.INFINIX_X6725,
      Infinix.INFINIX_X6725B,
      Infinix.INFINIX_X6725C,
      Infinix.INFINIX_X6725D,
      Infinix.INFINIX_X6728,
      Infinix.INFINIX_X6731,
      Infinix.INFINIX_X6731B,
      Infinix.INFINIX_X6739,
      Infinix.INFINIX_X675,
      Infinix.INFINIX_X676B,
      Infinix.INFINIX_X676C,
      Infinix.INFINIX_X677,
      Infinix.INFINIX_X678B,
      Infinix.INFINIX_X680,
      Infinix.INFINIX_X680B,
      Infinix.INFINIX_X680C,
      Infinix.INFINIX_X680D,
      Infinix.INFINIX_X680F,
      Infinix.INFINIX_X6810,
      Infinix.INFINIX_X6811,
      Infinix.INFINIX_X6811B,
      Infinix.INFINIX_X6812,
      Infinix.INFINIX_X6812B,
      Infinix.INFINIX_X6815,
      Infinix.INFINIX_X6815B,
      Infinix.INFINIX_X6815C,
      Infinix.INFINIX_X6815D,
      Infinix.INFINIX_X6816C,
      Infinix.INFINIX_X6816D,
      Infinix.INFINIX_X6817,
      Infinix.INFINIX_X6819,
      Infinix.INFINIX_X6820,
      Infinix.INFINIX_X6821,
      Infinix.INFINIX_X6823,
      Infinix.INFINIX_X6823C,
      Infinix.INFINIX_X6825,
      Infinix.INFINIX_X6826,
      Infinix.INFINIX_X6826B,
      Infinix.INFINIX_X6826C,
      Infinix.INFINIX_X6827,
      Infinix.INFINIX_X682B,
      Infinix.INFINIX_X682C,
      Infinix.INFINIX_X683,
      Infinix.INFINIX_X6832,
      Infinix.INFINIX_X6833B,
      Infinix.INFINIX_X6835,
      Infinix.INFINIX_X6835B,
      Infinix.INFINIX_X6836,
      Infinix.INFINIX_X6837,
      Infinix.INFINIX_X6838,
      Infinix.INFINIX_X683B,
      Infinix.INFINIX_X6850B,
      Infinix.INFINIX_X6851,
      Infinix.INFINIX_X6851B,
      Infinix.INFINIX_X6852,
      Infinix.INFINIX_X6853,
      Infinix.INFINIX_X6855,
      Infinix.INFINIX_X6856,
      Infinix.INFINIX_X6857,
      Infinix.INFINIX_X6857B,
      Infinix.INFINIX_X6858,
      Infinix.INFINIX_X6860,
      Infinix.INFINIX_X6861,
      Infinix.INFINIX_X687,
      Infinix.INFINIX_X6870,
      Infinix.INFINIX_X6871,
      Infinix.INFINIX_X6873,
      Infinix.INFINIX_X6876,
      Infinix.INFINIX_X687B,
      Infinix.INFINIX_X6881,
      Infinix.INFINIX_X6882,
      Infinix.INFINIX_X6882B,
      Infinix.INFINIX_X6885,
      Infinix.INFINIX_X6886,
      Infinix.INFINIX_X688B,
      Infinix.INFINIX_X688C,
      Infinix.INFINIX_X689,
      Infinix.INFINIX_X689B,
      Infinix.INFINIX_X689C,
      Infinix.INFINIX_X689D,
      Infinix.INFINIX_X689F,
      Infinix.INFINIX_X690,
      Infinix.INFINIX_X690B,
      Infinix.INFINIX_X690C,
      Infinix.INFINIX_X692,
      Infinix.INFINIX_X693,
      Infinix.INFINIX_X695,
      Infinix.INFINIX_X695C,
      Infinix.INFINIX_X695D,
      Infinix.INFINIX_X6962,
      Infinix.INFINIX_X697,
      Infinix.INFINIX_X698,
      Infinix.INFINIX_X509,
      Infinix.INFINIX_X510_SPROUT,
      Infinix.LONGSHAN,
      Infinix.SAMSEONG,
      Infinix.X555,
      Infinix.X556,
      Infinix.X557,
      Infinix.X557_LITE,
      Infinix.X601,
      Infinix.X601_LTE,
      Infinix.X602
  )

  /**
   * Get all device specifications for InFocus devices.
   * Useful for infocus testing.
   */
  public fun getInfocusDevices(): List<String> = listOf(
      Infocus.A02,
      Infocus.A08,
      Infocus.AA2,
      Infocus.AB2,
      Infocus.AB5,
      Infocus.AG2,
      Infocus.AG5,
      Infocus.AH2,
      Infocus.AU8,
      Infocus.AY2,
      Infocus.D77,
      Infocus.FAT,
      Infocus.FOT,
      Infocus.G10,
      Infocus.G40,
      Infocus.G42,
      Infocus.HGO,
      Infocus.IF195A,
      Infocus.IF236A,
      Infocus.M320,
      Infocus.VN2,
      Infocus.VNA,
      Infocus.VZH,
      Infocus.ZD1,
      Infocus.ZM1
  )

  /**
   * Get all device specifications for INFONE devices.
   * Useful for infone testing.
   */
  public fun getInfoneDevices(): List<String> = listOf(
      Infone.INFONE_XE
  )

  /**
   * Get all device specifications for innex devices.
   * Useful for innex testing.
   */
  public fun getInnexDevices(): List<String> = listOf(
      Innex.EU_3588
  )

  /**
   * Get all device specifications for INNJOO devices.
   * Useful for innjoo testing.
   */
  public fun getInnjooDevices(): List<String> = listOf(
      Innjoo.F102,
      Innjoo.F106_PLUS,
      Innjoo.SUPERB,
      Innjoo.VOOM_TAB_LTE
  )

  /**
   * Get all device specifications for INNO-HIT devices.
   * Useful for inno-hit testing.
   */
  public fun getInnoHitDevices(): List<String> = listOf(
      InnoHit.MOUNTBAKER
  )

  /**
   * Get all device specifications for INNOCN devices.
   * Useful for innocn testing.
   */
  public fun getInnocnDevices(): List<String> = listOf(
      Innocn._32S1U_PRO,
      Innocn._32S2U_PRO,
      Innocn.YUL
  )

  /**
   * Get all device specifications for Innopia devices.
   * Useful for innopia testing.
   */
  public fun getInnopiaDevices(): List<String> = listOf(
      Innopia.IMTM5000R
  )

  /**
   * Get all device specifications for innos devices.
   * Useful for innos testing.
   */
  public fun getInnosDevices(): List<String> = listOf(
      Innos.BANDRA,
      Innos.BRUNO,
      Innos.CAPITOLHILL,
      Innos.KEONEAE,
      Innos.R2,
      Innos.SHILIN
  )

  /**
   * Get all device specifications for INNOVA devices.
   * Useful for innova testing.
   */
  public fun getInnovaDevices(): List<String> = listOf(
      Innova.CAPITOLHILL,
      Innova.ELLINIKO,
      Innova.HANYANG,
      Innova.HONGKONG,
      Innova.KENTON,
      Innova.KEONEAE,
      Innova.LASALLE,
      Innova.LAVENDER,
      Innova.MOUNTBAKER,
      Innova.NIPPORI,
      Innova.STANFORD,
      Innova.ZHONGSHAN
  )

  /**
   * Get all device specifications for INOI devices.
   * Useful for inoi testing.
   */
  public fun getInoiDevices(): List<String> = listOf(
      Inoi.A126,
      Inoi.A150,
      Inoi.A151,
      Inoi.A160,
      Inoi.A161,
      Inoi.A161_PLUS,
      Inoi.A170,
      Inoi.A171,
      Inoi.A180,
      Inoi.A181,
      Inoi.EASYPHONE,
      Inoi.INOI_1_LITE,
      Inoi.INOI_2,
      Inoi.INOI_2_2019,
      Inoi.INOI_2_2021,
      Inoi.INOI_2_LITE,
      Inoi.INOI_2_LITE_2019,
      Inoi.INOI_2_LITE_2021,
      Inoi.INOI_3,
      Inoi.INOI_3_LITE,
      Inoi.INOI_3_POWER,
      Inoi.INOI_5_2021,
      Inoi.INOI_5_LITE_2021,
      Inoi.INOI_5_PRO,
      Inoi.INOI_5I,
      Inoi.INOI_5I_LITE,
      Inoi.INOI_6I,
      Inoi.INOI_6I_LITE,
      Inoi.INOI_7_2020,
      Inoi.INOI_7_4_64_2021,
      Inoi.INOI_7I,
      Inoi.INOI_A14,
      Inoi.INOI_A34,
      Inoi.INOI_A35_ADVENTURE,
      Inoi.INOI_A75_ELEGANCE,
      Inoi.INOIPAD,
      Inoi.INOIPAD_MINI_3G,
      Inoi.INOIPAD_MINI_WI_FI,
      Inoi.INOIPAD_PRO,
      Inoi.NOTE_13S,
      Inoi.T100,
      Inoi.T107,
      Inoi.T107_PLUS,
      Inoi.T108,
      Inoi.T109
  )

  /**
   * Get all device specifications for INOVIO devices.
   * Useful for inovio testing.
   */
  public fun getInovioDevices(): List<String> = listOf(
      Inovio.EVO_TAB7
  )

  /**
   * Get all device specifications for Inrico devices.
   * Useful for inrico testing.
   */
  public fun getInricoDevices(): List<String> = listOf(
      Inrico.S300PLUS,
      Inrico.S350
  )

  /**
   * Get all device specifications for INSANE devices.
   * Useful for insane testing.
   */
  public fun getInsaneDevices(): List<String> = listOf(
      Insane.INSANE_V10
  )

  /**
   * Get all device specifications for Insignia devices.
   * Useful for insignia testing.
   */
  public fun getInsigniaDevices(): List<String> = listOf(
      Insignia.MID1023_MA,
      Insignia.NS_P08A7100,
      Insignia.NS_P10A6100,
      Insignia.NS_P10A7100,
      Insignia.NS_P11A8100
  )

  /**
   * Get all device specifications for Inspur devices.
   * Useful for inspur testing.
   */
  public fun getInspurDevices(): List<String> = listOf(
      Inspur.S905
  )

  /**
   * Get all device specifications for INSYS devices.
   * Useful for insys testing.
   */
  public fun getInsysDevices(): List<String> = listOf(
      Insys.GW2_L1049,
      Insys.HK9_4010,
      Insys.HN2_M16P,
      Insys.HN2_M16Q,
      Insys.IH8_S559,
      Insys.IH9_L614,
      Insys.WH2_9832
  )

  /**
   * Get all device specifications for intel devices.
   * Useful for intel testing.
   */
  public fun getIntelDevices(): List<String> = listOf(
      Intel.REDHOOKBAY
  )

  /**
   * Get all device specifications for Intelbras devices.
   * Useful for intelbras testing.
   */
  public fun getIntelbrasDevices(): List<String> = listOf(
      Intelbras.DV8038
  )

  /**
   * Get all device specifications for Intelkom devices.
   * Useful for intelkom testing.
   */
  public fun getIntelkomDevices(): List<String> = listOf(
      Intelkom.MEANIT_C10C11
  )

  /**
   * Get all device specifications for Intelligen devices.
   * Useful for intelligen testing.
   */
  public fun getIntelligenDevices(): List<String> = listOf(
      Intelligen.IN_101
  )

  /**
   * Get all device specifications for INTEX devices.
   * Useful for intex testing.
   */
  public fun getIntexDevices(): List<String> = listOf(
      Intex.AQUA_RING,
      Intex.AQUA_SUPREME_PLUS,
      Intex.INTEX_AQUA_A4_PLUS,
      Intex.INTEX_AQUA_LIONS_2,
      Intex.INTEX_AQUA_LIONS_3,
      Intex.INTEX_AQUA_LIONS_4G,
      Intex.INTEX_AQUA_S3,
      Intex.INTEX_AQUA_SELFIE,
      Intex.INTEX_AQUA_STYLE_3,
      Intex.INTEX_ELYT_DUAL,
      Intex.R1
  )

  /**
   * Get all device specifications for INTIGRAL devices.
   * Useful for intigral testing.
   */
  public fun getIntigralDevices(): List<String> = listOf(
      Intigral.HP40A
  )

  /**
   * Get all device specifications for Invens devices.
   * Useful for invens testing.
   */
  public fun getInvensDevices(): List<String> = listOf(
      Invens.K1,
      Invens.MAX5,
      Invens.MAX8,
      Invens.MAX9
  )

  /**
   * Get all device specifications for Inventus devices.
   * Useful for inventus testing.
   */
  public fun getInventusDevices(): List<String> = listOf(
      Inventus.BEIGE
  )

  /**
   * Get all device specifications for INVES devices.
   * Useful for inves testing.
   */
  public fun getInvesDevices(): List<String> = listOf(
      Inves.NAGATA,
      Inves.TAMACHI,
      Inves.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for ioutdoor devices.
   * Useful for ioutdoor testing.
   */
  public fun getIoutdoorDevices(): List<String> = listOf(
      Ioutdoor.POLAR3
  )

  /**
   * Get all device specifications for iPlus devices.
   * Useful for iplus testing.
   */
  public fun getIplusDevices(): List<String> = listOf(
      Iplus.IPLUS_P1,
      Iplus.IPLUS_P3
  )

  /**
   * Get all device specifications for IPRO devices.
   * Useful for ipro testing.
   */
  public fun getIproDevices(): List<String> = listOf(
      Ipro.AMBER5S_PLUS,
      Ipro.AMBER5S_PRO,
      Ipro.AMBER7S,
      Ipro.AMBER8,
      Ipro.AMBER8S,
      Ipro.AMBER8S_MATE,
      Ipro.AMBER8S_PLUS,
      Ipro.AMBER8S_PRO,
      Ipro.BENNY,
      Ipro.BENNY10,
      Ipro.BENNYM,
      Ipro.BEQUE7S,
      Ipro.IPRO_X1,
      Ipro.JADE8S,
      Ipro.KYLIN_5_0S,
      Ipro.MEGA,
      Ipro.MOBILEPHONE,
      Ipro.OPAL4S,
      Ipro.RUBY5S,
      Ipro.S100,
      Ipro.S100E,
      Ipro.S200M,
      Ipro.S300,
      Ipro.S401,
      Ipro.S401A,
      Ipro.S501,
      Ipro.S501A,
      Ipro.S501APLUS,
      Ipro.S501PRO,
      Ipro.SAMBA65S,
      Ipro.SODA6S,
      Ipro.Y100
  )

  /**
   * Get all device specifications for IPRODA devices.
   * Useful for iproda testing.
   */
  public fun getIprodaDevices(): List<String> = listOf(
      Iproda.T1045LI,
      Iproda.T1085P4LE
  )

  /**
   * Get all device specifications for IQ_TOUCH devices.
   * Useful for iq_touch testing.
   */
  public fun getIqTouchDevices(): List<String> = listOf(
      IqTouch.IMAX_EC1053
  )

  /**
   * Get all device specifications for iQandT devices.
   * Useful for iqandt testing.
   */
  public fun getIqandtDevices(): List<String> = listOf(
      Iqandt.G3
  )

  /**
   * Get all device specifications for iQOO devices.
   * Useful for iqoo testing.
   */
  public fun getIqooDevices(): List<String> = listOf(
      Iqoo._2009,
      Iqoo._2011,
      Iqoo._2012,
      Iqoo._2017,
      Iqoo._2018,
      Iqoo._2019,
      Iqoo._2022,
      Iqoo.I1928,
      Iqoo.I2126,
      Iqoo.I2127,
      Iqoo.I2201,
      Iqoo.I2202,
      Iqoo.I2203,
      Iqoo.I2207,
      Iqoo.I2208,
      Iqoo.I2212,
      Iqoo.I2213,
      Iqoo.I2214,
      Iqoo.I2216,
      Iqoo.I2217,
      Iqoo.I2218,
      Iqoo.I2219,
      Iqoo.I2220,
      Iqoo.I2221,
      Iqoo.I2223,
      Iqoo.I2301,
      Iqoo.I2302,
      Iqoo.I2304,
      Iqoo.I2305,
      Iqoo.I2306,
      Iqoo.I2401,
      Iqoo.I2403,
      Iqoo.I2404,
      Iqoo.I2405,
      Iqoo.I2407,
      Iqoo.I2409,
      Iqoo.I2410
  )

  /**
   * Get all device specifications for iQT devices.
   * Useful for iqt testing.
   */
  public fun getIqtDevices(): List<String> = listOf(
      Iqt.IQT_N8,
      Iqt.N3,
      Iqt.N6
  )

  /**
   * Get all device specifications for IQU devices.
   * Useful for iqu testing.
   */
  public fun getIquDevices(): List<String> = listOf(
      Iqu.IQUSMARTEASYT10W,
      Iqu.IQUSMARTEASYT8W,
      Iqu.SMARTEASY_Q50
  )

  /**
   * Get all device specifications for iQual devices.
   * Useful for iqual testing.
   */
  public fun getIqualDevices(): List<String> = listOf(
      Iqual.T10G,
      Iqual.T10L,
      Iqual.T10W,
      Iqual.T10W2,
      Iqual.T7G,
      Iqual.T7L,
      Iqual.T7W
  )

  /**
   * Get all device specifications for IRA devices.
   * Useful for ira testing.
   */
  public fun getIraDevices(): List<String> = listOf(
      Ira.IRA801,
      Ira.IRA_DUO_PLUS,
      Ira.IRA_W801,
      Ira.T1021,
      Ira.T1030A,
      Ira.T803,
      Ira.T808
  )

  /**
   * Get all device specifications for IRA_Explore_More devices.
   * Useful for ira_explore_more testing.
   */
  public fun getIraExploreMoreDevices(): List<String> = listOf(
      IraExploreMore.IRA_BHARATAB_1021,
      IraExploreMore.IRA_BIO,
      IraExploreMore.IRA_DUO_PRO_5G,
      IraExploreMore.IRA_T1029,
      IraExploreMore.IRA_T808,
      IraExploreMore.IRAT803
  )

  /**
   * Get all device specifications for iRainbow devices.
   * Useful for irainbow testing.
   */
  public fun getIrainbowDevices(): List<String> = listOf(
      Irainbow.B12017
  )

  /**
   * Get all device specifications for IRBIS devices.
   * Useful for irbis testing.
   */
  public fun getIrbisDevices(): List<String> = listOf(
      Irbis.SP514,
      Irbis.SP542,
      Irbis.SP554,
      Irbis.TZ151,
      Irbis.TZ165,
      Irbis.TZ170,
      Irbis.TZ175,
      Irbis.TZ179,
      Irbis.TZ195,
      Irbis.TZ197,
      Irbis.TZ198,
      Irbis.TZ199,
      Irbis.TZ200,
      Irbis.TZ711,
      Irbis.TZ718,
      Irbis.TZ719,
      Irbis.TZ720,
      Irbis.TZ722,
      Irbis.TZ725,
      Irbis.TZ727,
      Irbis.TZ728,
      Irbis.TZ737,
      Irbis.TZ754,
      Irbis.TZ772,
      Irbis.TZ773,
      Irbis.TZ777,
      Irbis.TZ797,
      Irbis.TZ832,
      Irbis.TZ855,
      Irbis.TZ856,
      Irbis.TZ897,
      Irbis.TZ960,
      Irbis.TZ963,
      Irbis.TZ965,
      Irbis.TZ968,
      Irbis.TZ969
  )

  /**
   * Get all device specifications for IRIE devices.
   * Useful for irie testing.
   */
  public fun getIrieDevices(): List<String> = listOf(
      Irie.FFF_TAB10H
  )

  /**
   * Get all device specifications for IRIS devices.
   * Useful for iris testing.
   */
  public fun getIrisDevices(): List<String> = listOf(
      Iris.ANAHEIM,
      Iris.BEOMIL,
      Iris.G7060,
      Iris.G7100,
      Iris.G8060,
      Iris.IS2PLUS,
      Iris.IS2S,
      Iris.IS6PLUS,
      Iris.N30,
      Iris.NEXT_P,
      Iris.NEXT_P_PLUS,
      Iris.NEXT_P_PRO,
      Iris.NEXT_U,
      Iris.SHINAGAWA,
      Iris.SW4H_FF,
      Iris.SW6H,
      Iris.UMEDA,
      Iris.V10,
      Iris.V50,
      Iris.VOX_4S,
      Iris.VOX_5S,
      Iris.VOX_ALPHA,
      Iris.VOX_ALPHA_PLUS,
      Iris.VOX_ENERGY,
      Iris.VOX_POP_PLUS,
      Iris.VOX_POP_PRO,
      Iris.VOX_STEEL_PLUS,
      Iris.VOX_STEEL_PLUS_V2
  )

  /**
   * Get all device specifications for IRIS_OHYAMA devices.
   * Useful for iris_ohyama testing.
   */
  public fun getIrisOhyamaDevices(): List<String> = listOf(
      IrisOhyama.APOLLO_8_4G,
      IrisOhyama.AQUAMAN_10_SMART_WIFI,
      IrisOhyama.IB_75UED01B,
      IrisOhyama.LUNA,
      IrisOhyama.ODIN,
      IrisOhyama.ODIN2,
      IrisOhyama.R4,
      IrisOhyama.TA10E1W63,
      IrisOhyama.TE083M3,
      IrisOhyama.TE084,
      IrisOhyama.TE08D1M64,
      IrisOhyama.TE08D2M64,
      IrisOhyama.TE102M3,
      IrisOhyama.TE103M3,
      IrisOhyama.TE104,
      IrisOhyama.TE10D1M64,
      IrisOhyama.TE10D2M64,
      IrisOhyama.TM082,
      IrisOhyama.TM083,
      IrisOhyama.TM102,
      IrisOhyama.TM103,
      IrisOhyama.TM152M4,
      IrisOhyama.TM152M8,
      IrisOhyama.TM153M6
  )

  /**
   * Get all device specifications for Iriver devices.
   * Useful for iriver testing.
   */
  public fun getIriverDevices(): List<String> = listOf(
      Iriver.SEOCHO
  )

  /**
   * Get all device specifications for iRULU devices.
   * Useful for irulu testing.
   */
  public fun getIruluDevices(): List<String> = listOf(
      Irulu.IRULU_X11
  )

  /**
   * Get all device specifications for isafe devices.
   * Useful for isafe testing.
   */
  public fun getIsafeDevices(): List<String> = listOf(
      Isafe.IS520_1,
      Isafe.IS910_1
  )

  /**
   * Get all device specifications for isafemobile devices.
   * Useful for isafemobile testing.
   */
  public fun getIsafemobileDevices(): List<String> = listOf(
      Isafemobile.IS330,
      Isafemobile.IS530,
      Isafemobile.IS540,
      Isafemobile.IS655,
      Isafemobile.IS880,
      Isafemobile.IS930,
      Isafemobile.IS940
  )

  /**
   * Get all device specifications for ISCED devices.
   * Useful for isced testing.
   */
  public fun getIscedDevices(): List<String> = listOf(
      Isced.ISCEDTAB21
  )

  /**
   * Get all device specifications for Iskon devices.
   * Useful for iskon testing.
   */
  public fun getIskonDevices(): List<String> = listOf(
      Iskon.HY44G,
      Iskon.WH220_ISKON
  )

  /**
   * Get all device specifications for ismart devices.
   * Useful for ismart testing.
   */
  public fun getIsmartDevices(): List<String> = listOf(
      Ismart.MID1016_MK
  )

  /**
   * Get all device specifications for iSTAR devices.
   * Useful for istar testing.
   */
  public fun getIstarDevices(): List<String> = listOf(
      Istar.BARKING,
      Istar.BEAUDRY
  )

  /**
   * Get all device specifications for iSWAG devices.
   * Useful for iswag testing.
   */
  public fun getIswagDevices(): List<String> = listOf(
      Iswag.ALPHA,
      Iswag.BLINK,
      Iswag.ISWAG_ACTIV,
      Iswag.ISWAG_KRONOSX,
      Iswag.ISWAG_MATRIX,
      Iswag.ISWAG_NEO,
      Iswag.ISWAG_VIPER,
      Iswag.STREAM7
  )

  /**
   * Get all device specifications for it devices.
   * Useful for it testing.
   */
  public fun getItDevices(): List<String> = listOf(
      It.IT_1101S
  )

  /**
   * Get all device specifications for ITAB devices.
   * Useful for itab testing.
   */
  public fun getItabDevices(): List<String> = listOf(
      Itab.ITAB_A1,
      Itab.ITAB_X38T,
      Itab.ITAB_X40L_PLUS
  )

  /**
   * Get all device specifications for Itel devices.
   * Useful for itel testing.
   */
  public fun getItelDevices(): List<String> = listOf(
      Itel.BARKING,
      Itel.BEAUDRY,
      Itel.IKEBUKURO,
      Itel.ITEL_A13PLUS,
      Itel.ITEL_A14,
      Itel.ITEL_A14S,
      Itel.ITEL_A15,
      Itel.ITEL_A16,
      Itel.ITEL_A16_PLUS,
      Itel.ITEL_A16S,
      Itel.ITEL_A20,
      Itel.ITEL_A22,
      Itel.ITEL_A22_PRO,
      Itel.ITEL_A23,
      Itel.ITEL_A23F,
      Itel.ITEL_A23S,
      Itel.ITEL_A32F,
      Itel.ITEL_A40,
      Itel.ITEL_A42PLUS,
      Itel.ITEL_A44,
      Itel.ITEL_A44_POWER,
      Itel.ITEL_A44_PRO,
      Itel.ITEL_A45,
      Itel.ITEL_A507LC,
      Itel.ITEL_A507LMO,
      Itel.ITEL_A507LMU,
      Itel.ITEL_A507LN,
      Itel.ITEL_A507LS,
      Itel.ITEL_A507LSP,
      Itel.ITEL_A507LSU,
      Itel.ITEL_A507LV,
      Itel.ITEL_A507LVU,
      Itel.ITEL_A507LX,
      Itel.ITEL_A507LXU,
      Itel.ITEL_A509WP,
      Itel.ITEL_A510W,
      Itel.ITEL_A511LP2,
      Itel.ITEL_A511LQ,
      Itel.ITEL_A512W,
      Itel.ITEL_A513W,
      Itel.ITEL_A52,
      Itel.ITEL_A52_LITE,
      Itel.ITEL_A52S_LITE,
      Itel.ITEL_A551L,
      Itel.ITEL_A551L_PRO,
      Itel.ITEL_A571L,
      Itel.ITEL_A571W,
      Itel.ITEL_A571WM,
      Itel.ITEL_A611W,
      Itel.ITEL_A611WP,
      Itel.ITEL_A62,
      Itel.ITEL_A631L,
      Itel.ITEL_A631W,
      Itel.ITEL_A631W_R2,
      Itel.ITEL_A632L,
      Itel.ITEL_A632W,
      Itel.ITEL_A632WM,
      Itel.ITEL_A6610L,
      Itel.ITEL_A661L,
      Itel.ITEL_A661W,
      Itel.ITEL_A661WP,
      Itel.ITEL_A662L,
      Itel.ITEL_A662LM,
      Itel.ITEL_A663L,
      Itel.ITEL_A663LC,
      Itel.ITEL_A665L,
      Itel.ITEL_A666L,
      Itel.ITEL_A666LN,
      Itel.ITEL_A667L,
      Itel.ITEL_A667LP,
      Itel.ITEL_A669L,
      Itel.ITEL_A671L,
      Itel.ITEL_A671LC,
      Itel.ITEL_A671N,
      Itel.ITEL_C671L,
      Itel.ITEL_IKP_31,
      Itel.ITEL_IT1460_PRO,
      Itel.ITEL_IT1520,
      Itel.ITEL_L5002,
      Itel.ITEL_L5002P,
      Itel.ITEL_L5002R,
      Itel.ITEL_L5006,
      Itel.ITEL_L5006C,
      Itel.ITEL_L5007,
      Itel.ITEL_L5007S,
      Itel.ITEL_L5502,
      Itel.ITEL_L5503,
      Itel.ITEL_L5503L,
      Itel.ITEL_L5505,
      Itel.ITEL_L6002P,
      Itel.ITEL_L6003P,
      Itel.ITEL_L6004,
      Itel.ITEL_L6004L,
      Itel.ITEL_L6005,
      Itel.ITEL_L6006,
      Itel.ITEL_L6006F,
      Itel.ITEL_L6006L,
      Itel.ITEL_L6006S,
      Itel.ITEL_L6501,
      Itel.ITEL_L6502,
      Itel.ITEL_L6503,
      Itel.ITEL_P10001L,
      Itel.ITEL_P10003L,
      Itel.ITEL_P10004L,
      Itel.ITEL_P10005L,
      Itel.ITEL_P11002L,
      Itel.ITEL_P1102GT,
      Itel.ITEL_P13,
      Itel.ITEL_P13_PLUS,
      Itel.ITEL_P31,
      Itel.ITEL_P32,
      Itel.ITEL_P551W,
      Itel.ITEL_P552W,
      Itel.ITEL_P651L,
      Itel.ITEL_P651W,
      Itel.ITEL_P661N,
      Itel.ITEL_P661W,
      Itel.ITEL_P662L,
      Itel.ITEL_P663L,
      Itel.ITEL_P663LN,
      Itel.ITEL_P665L,
      Itel.ITEL_P666L,
      Itel.ITEL_P671L,
      Itel.ITEL_P671LN,
      Itel.ITEL_P681L,
      Itel.ITEL_P681LM,
      Itel.ITEL_P682L,
      Itel.ITEL_P682LP,
      Itel.ITEL_P682LPN,
      Itel.ITEL_P683L,
      Itel.ITEL_PAD_2,
      Itel.ITEL_S11_PRO,
      Itel.ITEL_S11X,
      Itel.ITEL_S12,
      Itel.ITEL_S13,
      Itel.ITEL_S13PRO,
      Itel.ITEL_S21,
      Itel.ITEL_S32,
      Itel.ITEL_S32LTE,
      Itel.ITEL_S33,
      Itel.ITEL_S42,
      Itel.ITEL_S661L,
      Itel.ITEL_S661LN,
      Itel.ITEL_S661LP,
      Itel.ITEL_S661LPN,
      Itel.ITEL_S661W,
      Itel.ITEL_S662L,
      Itel.ITEL_S662LCN,
      Itel.ITEL_S663L,
      Itel.ITEL_S663LC,
      Itel.ITEL_S665L,
      Itel.ITEL_S665LN,
      Itel.ITEL_S666LN,
      Itel.ITEL_S667LN,
      Itel.ITEL_S681LN,
      Itel.ITEL_S685LN,
      Itel.ITEL_S686LN,
      Itel.ITEL_W4001,
      Itel.ITEL_W4001O,
      Itel.ITEL_W4001P,
      Itel.ITEL_W4001S,
      Itel.ITEL_W4002,
      Itel.ITEL_W4002P,
      Itel.ITEL_W4003,
      Itel.ITEL_W5001P,
      Itel.ITEL_W5002,
      Itel.ITEL_W5003,
      Itel.ITEL_W5004,
      Itel.ITEL_W5004D,
      Itel.ITEL_W5005,
      Itel.ITEL_W5005P,
      Itel.ITEL_W5006X,
      Itel.ITEL_W5008,
      Itel.ITEL_W5503,
      Itel.ITEL_W5504,
      Itel.ITEL_W5505,
      Itel.ITEL_W6001,
      Itel.ITEL_W6002,
      Itel.ITEL_W6002E,
      Itel.ITEL_W6003,
      Itel.ITEL_W6004,
      Itel.ITEL_W6004P,
      Itel.ITEL_W6501,
      Itel.ITEL_W6502,
      Itel.ITEL_W6503,
      Itel.ITEL_W7001,
      Itel.ITEL_W7002,
      Itel.ITEL_W7002P,
      Itel.ITEL_A11,
      Itel.ITEL_A12,
      Itel.ITEL_A21,
      Itel.ITEL_A31,
      Itel.ITEL_A41,
      Itel.ITEL_A41PLUS,
      Itel.ITEL_A51,
      Itel.ITEL_IT1407,
      Itel.ITEL_IT1408C,
      Itel.ITEL_IT1409,
      Itel.ITEL_IT1507C,
      Itel.ITEL_IT1508C,
      Itel.ITEL_IT1508PLUS,
      Itel.ITEL_IT1513,
      Itel.ITEL_IT1516PLUS,
      Itel.ITEL_IT1518,
      Itel.ITEL_IT1556,
      Itel.ITEL_IT1556PLUS,
      Itel.ITEL_IT1702,
      Itel.ITEL_IT1703,
      Itel.ITEL_P11,
      Itel.ITEL_P12,
      Itel.ITEL_P41,
      Itel.ITEL_PRIME4,
      Itel.ITEL_S41,
      Itel.P51,
      Itel.REDWOOD,
      Itel.S11,
      Itel.S11PLUS,
      Itel.S31,
      Itel.SAMSEONG,
      Itel.STANFORD,
      Itel.UMEDA
  )

  /**
   * Get all device specifications for ITELL devices.
   * Useful for itell testing.
   */
  public fun getItellDevices(): List<String> = listOf(
      Itell.ITELL_K4700Q
  )

  /**
   * Get all device specifications for ITOS devices.
   * Useful for itos testing.
   */
  public fun getItosDevices(): List<String> = listOf(
      Itos.IC_51,
      Itos.IC_51R,
      Itos.IC_58
  )

  /**
   * Get all device specifications for IUSA devices.
   * Useful for iusa testing.
   */
  public fun getIusaDevices(): List<String> = listOf(
      Iusa.TR10CS1_8
  )

  /**
   * Get all device specifications for IVA devices.
   * Useful for iva testing.
   */
  public fun getIvaDevices(): List<String> = listOf(
      Iva.LAMCY_L400
  )

  /**
   * Get all device specifications for IVIEW devices.
   * Useful for iview testing.
   */
  public fun getIviewDevices(): List<String> = listOf(
      Iview._1016TPC,
      Iview._816TPC,
      Iview.IVIEW_1170TPC
  )

  /**
   * Get all device specifications for iVOOMi devices.
   * Useful for ivoomi testing.
   */
  public fun getIvoomiDevices(): List<String> = listOf(
      Ivoomi.I2
  )

  /**
   * Get all device specifications for iWaylink devices.
   * Useful for iwaylink testing.
   */
  public fun getIwaylinkDevices(): List<String> = listOf(
      Iwaylink.MC401_GWL,
      Iwaylink.TC601_GWL,
      Iwaylink.TC601B_GWL
  )

  /**
   * Get all device specifications for IXTECH devices.
   * Useful for ixtech testing.
   */
  public fun getIxtechDevices(): List<String> = listOf(
      Ixtech.IX1011,
      Ixtech.IX1012,
      Ixtech.IX1013,
      Ixtech.IX701
  )

  /**
   * Get all device specifications for iYOU devices.
   * Useful for iyou testing.
   */
  public fun getIyouDevices(): List<String> = listOf(
      Iyou.A10,
      Iyou.A30
  )

  /**
   * Get all device specifications for IZZI devices.
   * Useful for izzi testing.
   */
  public fun getIzziDevices(): List<String> = listOf(
      Izzi.B820C_A15_ZTE,
      Izzi.B866V2FI
  )

  /**
   * Get all device specifications for izzi-telecom devices.
   * Useful for izzi-telecom testing.
   */
  public fun getIzziTelecomDevices(): List<String> = listOf(
      IzziTelecom.HP46A,
      IzziTelecom.HY40A1
  )

  /**
   * Get all device specifications for J-COM devices.
   * Useful for j-com testing.
   */
  public fun getJComDevices(): List<String> = listOf(
      JCom.SC40
  )

  /**
   * Get all device specifications for jAC devices.
   * Useful for jac testing.
   */
  public fun getJacDevices(): List<String> = listOf(
      Jac.BARKING,
      Jac.BEAUDRY
  )

  /**
   * Get all device specifications for JAM devices.
   * Useful for jam testing.
   */
  public fun getJamDevices(): List<String> = listOf(
      Jam.HONGKONG,
      Jam.MOUNTBAKER
  )

  /**
   * Get all device specifications for Jambo_Technology devices.
   * Useful for jambo_technology testing.
   */
  public fun getJamboTechnologyDevices(): List<String> = listOf(
      JamboTechnology.JP1,
      JamboTechnology.JP2
  )

  /**
   * Get all device specifications for Janam devices.
   * Useful for janam testing.
   */
  public fun getJanamDevices(): List<String> = listOf(
      Janam.XG200,
      Janam.XG4,
      Janam.XT2,
      Janam.XT200,
      Janam.XT3,
      Janam.XT30,
      Janam.XT40
  )

  /**
   * Get all device specifications for JapanTaxi devices.
   * Useful for japantaxi testing.
   */
  public fun getJapantaxiDevices(): List<String> = listOf(
      Japantaxi.IRIS_ITAB05
  )

  /**
   * Get all device specifications for JAY-tech devices.
   * Useful for jay-tech testing.
   */
  public fun getJayTechDevices(): List<String> = listOf(
      JayTech.TPC_G1010_EEA,
      JayTech.TPC_G1011LTE,
      JayTech.TPC_G109
  )

  /**
   * Get all device specifications for JCB devices.
   * Useful for jcb testing.
   */
  public fun getJcbDevices(): List<String> = listOf(
      Jcb.JCB_TP231
  )

  /**
   * Get all device specifications for JCI_JP devices.
   * Useful for jci_jp testing.
   */
  public fun getJciJpDevices(): List<String> = listOf(
      JciJp.VA_10J
  )

  /**
   * Get all device specifications for JCOM devices.
   * Useful for jcom testing.
   */
  public fun getJcomDevices(): List<String> = listOf(
      Jcom.STI6260D195,
      Jcom.XA401,
      Jcom.XA402
  )

  /**
   * Get all device specifications for JDS devices.
   * Useful for jds testing.
   */
  public fun getJdsDevices(): List<String> = listOf(
      Jds.AMIGO7XJDS
  )

  /**
   * Get all device specifications for Jeazans devices.
   * Useful for jeazans testing.
   */
  public fun getJeazansDevices(): List<String> = listOf(
      Jeazans.A13,
      Jeazans.KT1016
  )

  /**
   * Get all device specifications for Jenesis devices.
   * Useful for jenesis testing.
   */
  public fun getJenesisDevices(): List<String> = listOf(
      Jenesis.JT07_81B,
      Jenesis.JT10_81B
  )

  /**
   * Get all device specifications for JESY devices.
   * Useful for jesy testing.
   */
  public fun getJesyDevices(): List<String> = listOf(
      Jesy.JESY_J20
  )

  /**
   * Get all device specifications for jetfon devices.
   * Useful for jetfon testing.
   */
  public fun getJetfonDevices(): List<String> = listOf(
      Jetfon.MT1
  )

  /**
   * Get all device specifications for JETPOINT devices.
   * Useful for jetpoint testing.
   */
  public fun getJetpointDevices(): List<String> = listOf(
      Jetpoint.LONGSHAN,
      Jetpoint.REDWOOD
  )

  /**
   * Get all device specifications for jHon devices.
   * Useful for jhon testing.
   */
  public fun getJhonDevices(): List<String> = listOf(
      Jhon.H800
  )

  /**
   * Get all device specifications for JHZL devices.
   * Useful for jhzl testing.
   */
  public fun getJhzlDevices(): List<String> = listOf(
      Jhzl.J101_EEA
  )

  /**
   * Get all device specifications for Jide devices.
   * Useful for jide testing.
   */
  public fun getJideDevices(): List<String> = listOf(
      Jide.RM1G
  )

  /**
   * Get all device specifications for Jinga devices.
   * Useful for jinga testing.
   */
  public fun getJingaDevices(): List<String> = listOf(
      Jinga.GOALPLUS,
      Jinga.HIT4G,
      Jinga.JI55AG_189ID,
      Jinga.NEON,
      Jinga.PICASSONOTE,
      Jinga.TOUCH4G,
      Jinga.WINPRO
  )

  /**
   * Get all device specifications for Jio devices.
   * Useful for jio testing.
   */
  public fun getJioDevices(): List<String> = listOf(
      Jio.LS1542QW,
      Jio.LS1542QWN
  )

  /**
   * Get all device specifications for Jiuzhou devices.
   * Useful for jiuzhou testing.
   */
  public fun getJiuzhouDevices(): List<String> = listOf(
      Jiuzhou.DTP9503
  )

  /**
   * Get all device specifications for Jivi devices.
   * Useful for jivi testing.
   */
  public fun getJiviDevices(): List<String> = listOf(
      Jivi.XTREME_3
  )

  /**
   * Get all device specifications for JMGO devices.
   * Useful for jmgo testing.
   */
  public fun getJmgoDevices(): List<String> = listOf(
      Jmgo.SONGNI
  )

  /**
   * Get all device specifications for JOOYON devices.
   * Useful for jooyon testing.
   */
  public fun getJooyonDevices(): List<String> = listOf(
      Jooyon.J110A,
      Jooyon.SINDORIM
  )

  /**
   * Get all device specifications for JOOYONTECH devices.
   * Useful for jooyontech testing.
   */
  public fun getJooyontechDevices(): List<String> = listOf(
      Jooyontech.Q27CMA11
  )

  /**
   * Get all device specifications for JOVI devices.
   * Useful for jovi testing.
   */
  public fun getJoviDevices(): List<String> = listOf(
      Jovi.V2419B,
      Jovi.V2427B,
      Jovi.V2434B,
      Jovi.V2440B
  )

  /**
   * Get all device specifications for joyar devices.
   * Useful for joyar testing.
   */
  public fun getJoyarDevices(): List<String> = listOf(
      Joyar.JOYAR_MID
  )

  /**
   * Get all device specifications for JoyStar devices.
   * Useful for joystar testing.
   */
  public fun getJoystarDevices(): List<String> = listOf(
      Joystar.J6,
      Joystar.JOYSTAR_J10
  )

  /**
   * Get all device specifications for JOYSURF devices.
   * Useful for joysurf testing.
   */
  public fun getJoysurfDevices(): List<String> = listOf(
      Joysurf.TB_JS100A,
      Joysurf.TB_JS101A
  )

  /**
   * Get all device specifications for JP devices.
   * Useful for jp testing.
   */
  public fun getJpDevices(): List<String> = listOf(
      Jp.TR10CS2_3
  )

  /**
   * Get all device specifications for JP-IK devices.
   * Useful for jp-ik testing.
   */
  public fun getJpIkDevices(): List<String> = listOf(
      JpIk.JP_MOVE_S101
  )

  /**
   * Get all device specifications for JREN devices.
   * Useful for jren testing.
   */
  public fun getJrenDevices(): List<String> = listOf(
      Jren.J10,
      Jren.J10PLUS,
      Jren.J10PRO,
      Jren.J11,
      Jren.J11PLUS,
      Jren.JR_802,
      Jren.JR_J10A,
      Jren.JR_J71,
      Jren.JR_J8,
      Jren.JR_J1063,
      Jren.JR_J7
  )

  /**
   * Get all device specifications for JSW devices.
   * Useful for jsw testing.
   */
  public fun getJswDevices(): List<String> = listOf(
      Jsw.ELLINIKO
  )

  /**
   * Get all device specifications for JUEDUR devices.
   * Useful for juedur testing.
   */
  public fun getJuedurDevices(): List<String> = listOf(
      Juedur.R500_EEA,
      Juedur.R500_US,
      Juedur.R700_EEA,
      Juedur.R700_US,
      Juedur.R800_U_EEA,
      Juedur.R900_EEA,
      Juedur.R900_US
  )

  /**
   * Get all device specifications for JUMPER devices.
   * Useful for jumper testing.
   */
  public fun getJumperDevices(): List<String> = listOf(
      Jumper.EZPAD_M10,
      Jumper.EZPAD_M10S,
      Jumper.EZPAD_M11,
      Jumper.Z1
  )

  /**
   * Get all device specifications for juniper devices.
   * Useful for juniper testing.
   */
  public fun getJuniperDevices(): List<String> = listOf(
      Juniper.MS3A
  )

  /**
   * Get all device specifications for Junipers devices.
   * Useful for junipers testing.
   */
  public fun getJunipersDevices(): List<String> = listOf(
      Junipers.CT8
  )

  /**
   * Get all device specifications for Just5 devices.
   * Useful for just5 testing.
   */
  public fun getJust5Devices(): List<String> = listOf(
      Just5.KONROW,
      Just5.M503,
      Just5.MD_02P
  )

  /**
   * Get all device specifications for JUSTSYSTEMS devices.
   * Useful for justsystems testing.
   */
  public fun getJustsystemsDevices(): List<String> = listOf(
      Justsystems.SZJ201,
      Justsystems.SZJ202,
      Justsystems.SZJ203
  )

  /**
   * Get all device specifications for JUSYEA devices.
   * Useful for jusyea testing.
   */
  public fun getJusyeaDevices(): List<String> = listOf(
      Jusyea.J10_EEA,
      Jusyea.J10_US,
      Jusyea.J5_EEA,
      Jusyea.J6_EEA,
      Jusyea.J8,
      Jusyea.J8_EEA,
      Jusyea.J8_EEA_T,
      Jusyea.J8_T,
      Jusyea.J9_EEA
  )

  /**
   * Get all device specifications for JVC devices.
   * Useful for jvc testing.
   */
  public fun getJvcDevices(): List<String> = listOf(
      Jvc.ANAHEIM,
      Jvc.AV_08NT310,
      Jvc.AV_10NT310,
      Jvc.AV_11NT510,
      Jvc.BANGBAE,
      Jvc.BRUNO,
      Jvc.CUNDA,
      Jvc.ELLINIKO,
      Jvc.EXPO,
      Jvc.GANGBYEON,
      Jvc.GUANDU,
      Jvc.HONGKONG,
      Jvc.IKEBUKURO,
      Jvc.KOMAGOME,
      Jvc.LAVENDER,
      Jvc.MARTIN,
      Jvc.MATEO,
      Jvc.MOUNTBAKER,
      Jvc.MSTARNAPOLI_ATSC,
      Jvc.OSAKI,
      Jvc.PIONEER,
      Jvc.R1,
      Jvc.R2,
      Jvc.R4,
      Jvc.SADANG,
      Jvc.SAMSEONG,
      Jvc.SEOCHO,
      Jvc.SHILIN,
      Jvc.SINDORIM,
      Jvc.STANFORD,
      Jvc.SUGAMO,
      Jvc.SW6H,
      Jvc.TABATA,
      Jvc.TAMACHI,
      Jvc.TENNOJI,
      Jvc.YEONGDEUNGPO,
      Jvc.ZHONGSHAN
  )

  /**
   * Get all device specifications for jyonetsu_kakaku devices.
   * Useful for jyonetsu_kakaku testing.
   */
  public fun getJyonetsuKakakuDevices(): List<String> = listOf(
      JyonetsuKakaku.YMR8
  )

  /**
   * Get all device specifications for K-ELEC devices.
   * Useful for k-elec testing.
   */
  public fun getKElecDevices(): List<String> = listOf(
      KElec.BANGBAE,
      KElec.STANFORD,
      KElec.ZHONGSHAN
  )

  /**
   * Get all device specifications for K-touch devices.
   * Useful for k-touch testing.
   */
  public fun getKTouchDevices(): List<String> = listOf(
      KTouch.PACE_2_LITE,
      KTouch.S5
  )

  /**
   * Get all device specifications for KAAN devices.
   * Useful for kaan testing.
   */
  public fun getKaanDevices(): List<String> = listOf(
      Kaan.KAAN_A1,
      Kaan.KAAN_N2
  )

  /**
   * Get all device specifications for KAGIS devices.
   * Useful for kagis testing.
   */
  public fun getKagisDevices(): List<String> = listOf(
      Kagis.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for KAICOM devices.
   * Useful for kaicom testing.
   */
  public fun getKaicomDevices(): List<String> = listOf(
      Kaicom.K901,
      Kaicom.K901_2,
      Kaicom.W660
  )

  /**
   * Get all device specifications for kaliho devices.
   * Useful for kaliho testing.
   */
  public fun getKalihoDevices(): List<String> = listOf(
      Kaliho.H3
  )

  /**
   * Get all device specifications for Kalley devices.
   * Useful for kalley testing.
   */
  public fun getKalleyDevices(): List<String> = listOf(
      Kalley.BLACK,
      Kalley.BLACK_1,
      Kalley.BLACK_3,
      Kalley.BLACK_5,
      Kalley.BLACK_C_PLUS,
      Kalley.BLACK_E,
      Kalley.BLACK_G,
      Kalley.BLACK_G3,
      Kalley.BLACK_G_2,
      Kalley.BLACK_PRO,
      Kalley.BLACK_X,
      Kalley.BLACK_Z,
      Kalley.ELEMENT_5,
      Kalley.ELEMENT_MAX,
      Kalley.ELEMENT_PLAY,
      Kalley.ELEMENT_PRO_2,
      Kalley.R1,
      Kalley.R10G,
      Kalley.R2,
      Kalley.R3,
      Kalley.R3_GTV,
      Kalley.R4,
      Kalley.R4_GTV,
      Kalley.SILVER_MAX,
      Kalley.SILVER_MAX_LITE,
      Kalley.SILVER_MAX_PRO,
      Kalley.SILVER_MAX_PRO_2,
      Kalley.SMARTPHONE
  )

  /**
   * Get all device specifications for Kammunica devices.
   * Useful for kammunica testing.
   */
  public fun getKammunicaDevices(): List<String> = listOf(
      Kammunica.KAMMUNICA_500V,
      Kammunica.KAMMUNICA_800,
      Kammunica.KAMMUNICA_XD
  )

  /**
   * Get all device specifications for KanDao devices.
   * Useful for kandao testing.
   */
  public fun getKandaoDevices(): List<String> = listOf(
      Kandao.MT1001
  )

  /**
   * Get all device specifications for KANJI devices.
   * Useful for kanji testing.
   */
  public fun getKanjiDevices(): List<String> = listOf(
      Kanji.KANJI_AC05,
      Kanji.KJ_AC02,
      Kanji.KJ_OB02,
      Kanji.KJ_AC05,
      Kanji.KJ_ALFARK,
      Kanji.KJ_ARIZONA,
      Kanji.KJ_OB02,
      Kanji.KJ_YUBI,
      Kanji.MARTIN,
      Kanji.PATRICK
  )

  /**
   * Get all device specifications for KANSELIR devices.
   * Useful for kanselir testing.
   */
  public fun getKanselirDevices(): List<String> = listOf(
      Kanselir.KTB_168
  )

  /**
   * Get all device specifications for KaonMedia devices.
   * Useful for kaonmedia testing.
   */
  public fun getKaonmediaDevices(): List<String> = listOf(
      Kaonmedia.BKO_AT800,
      Kaonmedia.IC1110,
      Kaonmedia.KM_SH368AT,
      Kaonmedia.KSTB2019,
      Kaonmedia.KSTB2020,
      Kaonmedia.KSTB2100,
      Kaonmedia.KSTB4252,
      Kaonmedia.KSTB5043,
      Kaonmedia.KSTB6020,
      Kaonmedia.KSTB6043,
      Kaonmedia.KSTB6077,
      Kaonmedia.KSTB6130,
      Kaonmedia.SFCSTB2LITE
  )

  /**
   * Get all device specifications for KAPSYS devices.
   * Useful for kapsys testing.
   */
  public fun getKapsysDevices(): List<String> = listOf(
      Kapsys.R889,
      Kapsys.SMARTVISION3,
      Kapsys.SMARTVISION3US
  )

  /**
   * Get all device specifications for Karbonn devices.
   * Useful for karbonn testing.
   */
  public fun getKarbonnDevices(): List<String> = listOf(
      Karbonn.A1_INDIAN,
      Karbonn.A40_INDIAN,
      Karbonn.A40_INDIAN_PLUS,
      Karbonn.A41_POWER,
      Karbonn.AURA_POWER_4G_PLUS,
      Karbonn.AURANOTE4G,
      Karbonn.AURAPOWER4G,
      Karbonn.K9_SMART_PLUS,
      Karbonn.K9_SMART_YUVA,
      Karbonn.K9_VIRAAT_PLUS,
      Karbonn.K9SMART4G,
      Karbonn.PLATINUM_P9,
      Karbonn.PLATINUM_P9_PRO,
      Karbonn.STANFORD,
      Karbonn.TITANIUM_JUMBO,
      Karbonn.TITANIUM_JUMBO_2,
      Karbonn.TITANIUM_S9PLUS,
      Karbonn.X21
  )

  /**
   * Get all device specifications for Karma devices.
   * Useful for karma testing.
   */
  public fun getKarmaDevices(): List<String> = listOf(
      Karma.KG555_PRO,
      Karma.KG777PRO
  )

  /**
   * Get all device specifications for KAT devices.
   * Useful for kat testing.
   */
  public fun getKatDevices(): List<String> = listOf(
      Kat.SM1,
      Kat.SM1_TABLET
  )

  /**
   * Get all device specifications for KAZAM devices.
   * Useful for kazam testing.
   */
  public fun getKazamDevices(): List<String> = listOf(
      Kazam.KAZAM,
      Kazam.TORNADO_348,
      Kazam.TR6L5035
  )

  /**
   * Get all device specifications for Kbro devices.
   * Useful for kbro testing.
   */
  public fun getKbroDevices(): List<String> = listOf(
      Kbro.A1_3796,
      Kbro.A1B_72115,
      Kbro.A2_5751P,
      Kbro.A2_S905X4,
      Kbro.STI6160D19
  )

  /**
   * Get all device specifications for KCCL devices.
   * Useful for kccl testing.
   */
  public fun getKcclDevices(): List<String> = listOf(
      Kccl.N9109M
  )

  /**
   * Get all device specifications for KD_Interactive devices.
   * Useful for kd_interactive testing.
   */
  public fun getKdInteractiveDevices(): List<String> = listOf(
      KdInteractive.PIXI3_7_KD
  )

  /**
   * Get all device specifications for KDDI devices.
   * Useful for kddi testing.
   */
  public fun getKddiDevices(): List<String> = listOf(
      Kddi.ANK,
      Kddi.B3,
      Kddi.B5,
      Kddi.BOL,
      Kddi.C02AS,
      Kddi.C02AS5,
      Kddi.CV1,
      Kddi.DLXJ,
      Kddi.DQO,
      Kddi.ELSA,
      Kddi.FJL22_JP_KDI,
      Kddi.FJT21_JP_KDI,
      Kddi.FSP,
      Kddi.G2,
      Kddi.G3,
      Kddi.GTQ,
      Kddi.H02ST1,
      Kddi.HUR,
      Kddi.IVR,
      Kddi.JOAN,
      Kddi.JSG,
      Kddi.JUD,
      Kddi.JWT,
      Kddi.K015,
      Kddi.KXU,
      Kddi.KYL22,
      Kddi.KYT31,
      Kddi.KYV31,
      Kddi.KYV32,
      Kddi.KYV33,
      Kddi.KYV34,
      Kddi.KYV35,
      Kddi.KYV36,
      Kddi.KYV37,
      Kddi.KYY21,
      Kddi.KYY22,
      Kddi.KYY23,
      Kddi.KYY24,
      Kddi.LYV,
      Kddi.MZW,
      Kddi.NAX,
      Kddi.OBY,
      Kddi.OJ6,
      Kddi.P1,
      Kddi.PCZ,
      Kddi.QDA,
      Kddi.RCL,
      Kddi.SCL22,
      Kddi.SCL23,
      Kddi.SCL24,
      Kddi.SCT21,
      Kddi.SCV31,
      Kddi.SCV32,
      Kddi.SCV33,
      Kddi.SCV35,
      Kddi.SCV36,
      Kddi.SCV37,
      Kddi.SCV38,
      Kddi.SCV39,
      Kddi.SCV40,
      Kddi.SCV41,
      Kddi.SCV42,
      Kddi.SCV43,
      Kddi.SCV43_J,
      Kddi.SCV44,
      Kddi.SCV45,
      Kddi.SCV46,
      Kddi.SHL21,
      Kddi.SHL22,
      Kddi.SHL23,
      Kddi.SHL24,
      Kddi.SHL25,
      Kddi.SHT21,
      Kddi.SHT22,
      Kddi.SHV31,
      Kddi.SHV32,
      Kddi.SHV33,
      Kddi.SHV34,
      Kddi.SHV35,
      Kddi.SHV36,
      Kddi.SOG01,
      Kddi.SOG02,
      Kddi.SOG03,
      Kddi.SOG04,
      Kddi.SOG05,
      Kddi.SOG06,
      Kddi.SOG07,
      Kddi.SOG08,
      Kddi.SOG09,
      Kddi.SOG10,
      Kddi.SOG11,
      Kddi.SOG12,
      Kddi.SOG13,
      Kddi.SOG14,
      Kddi.SOL21,
      Kddi.SOL22,
      Kddi.SOL23,
      Kddi.SOL24,
      Kddi.SOL25,
      Kddi.SOL26,
      Kddi.SOT21,
      Kddi.SOT31,
      Kddi.SOV31,
      Kddi.SOV32,
      Kddi.SOV33,
      Kddi.SOV34,
      Kddi.SOV35,
      Kddi.SOV36,
      Kddi.SOV37,
      Kddi.SOV38,
      Kddi.SOV39,
      Kddi.SOV40,
      Kddi.SOV41,
      Kddi.SOV42,
      Kddi.SOV43,
      Kddi.STI6030D111,
      Kddi.TGD,
      Kddi.VIF,
      Kddi.WJG,
      Kddi.XIJ,
      Kddi.XKH,
      Kddi.XQ_FS,
      Kddi.YLI,
      Kddi.ZEE,
      Kddi.ZKO
  )

  /**
   * Get all device specifications for KDDI_u devices.
   * Useful for kddi_u testing.
   */
  public fun getKddiUDevices(): List<String> = listOf(
      KddiU.FSP_U,
      KddiU.KXU_U,
      KddiU.MZW_U,
      KddiU.PCZ_U,
      KddiU.SCV43_U
  )

  /**
   * Get all device specifications for KEFEYA devices.
   * Useful for kefeya testing.
   */
  public fun getKefeyaDevices(): List<String> = listOf(
      Kefeya.G2
  )

  /**
   * Get all device specifications for Keian devices.
   * Useful for keian testing.
   */
  public fun getKeianDevices(): List<String> = listOf(
      Keian.KI_Z101E
  )

  /**
   * Get all device specifications for Kelyx_KL783 devices.
   * Useful for kelyx_kl783 testing.
   */
  public fun getKelyxKl783Devices(): List<String> = listOf(
      KelyxKl783.AKS01_KL783
  )

  /**
   * Get all device specifications for KEMPLER_STRAUSS devices.
   * Useful for kempler_strauss testing.
   */
  public fun getKemplerStraussDevices(): List<String> = listOf(
      KemplerStrauss.ALUMINI_3_PLUS,
      KemplerStrauss.KEMPLER_9,
      KemplerStrauss.KEMPLER_P1,
      KemplerStrauss.KEMPLER_P1_AMATEUR_PLUS,
      KemplerStrauss.KEMPLER_P3,
      KemplerStrauss.KEMPLER_X,
      KemplerStrauss.P1_AMATEUR,
      KemplerStrauss.P1PRO,
      KemplerStrauss.ZKEMPLER,
      KemplerStrauss.ZKEMPLER11,
      KemplerStrauss.ZKEMPLER11PRO,
      KemplerStrauss.ZKEMPLER_11PRO,
      KemplerStrauss.ZKEMPLER_MAX,
      KemplerStrauss.ZKEMPLER_PLUS,
      KemplerStrauss.ZKEMPLER_PRO
  )

  /**
   * Get all device specifications for KemplerStruss devices.
   * Useful for kemplerstruss testing.
   */
  public fun getKemplerstrussDevices(): List<String> = listOf(
      Kemplerstruss.GANGBYEON,
      Kemplerstruss.KANDA
  )

  /**
   * Get all device specifications for KENBO devices.
   * Useful for kenbo testing.
   */
  public fun getKenboDevices(): List<String> = listOf(
      Kenbo.B19,
      Kenbo.K6,
      Kenbo.K7,
      Kenbo.O51,
      Kenbo.O61,
      Kenbo.O71
  )

  /**
   * Get all device specifications for KENSHI devices.
   * Useful for kenshi testing.
   */
  public fun getKenshiDevices(): List<String> = listOf(
      Kenshi.ARMOR_C1_MAX,
      Kenshi.ARMOR_C1S,
      Kenshi.ARMOR_C1W,
      Kenshi.ARMOR_H1S,
      Kenshi.ARMOR_H1W,
      Kenshi.ARMOR_H2S,
      Kenshi.ARMOR_I1_SLIM,
      Kenshi.ARMOR_I1W,
      Kenshi.ARMOR_I2W,
      Kenshi.ARMOR_P1_PRO,
      Kenshi.ARMOR_P1S,
      Kenshi.ARMOR_P1W,
      Kenshi.ARMOR_V1S,
      Kenshi.E10,
      Kenshi.E11,
      Kenshi.E12,
      Kenshi.E17,
      Kenshi.E18,
      Kenshi.E28,
      Kenshi.E38,
      Kenshi.H10,
      Kenshi.H11,
      Kenshi.H14,
      Kenshi.H15,
      Kenshi.H16,
      Kenshi.H17,
      Kenshi.H18,
      Kenshi.H19,
      Kenshi.H20,
      Kenshi.H21,
      Kenshi.H24,
      Kenshi.H34,
      Kenshi.H38,
      Kenshi.H44,
      Kenshi.KENSHI_K10,
      Kenshi.KP10,
      Kenshi.KP11,
      Kenshi.O8,
      Kenshi.PAD_LITE_E48,
      Kenshi.PAD_LITE_E58,
      Kenshi.PAD_PRO_E110,
      Kenshi.PAD_PRO_E111,
      Kenshi.PAD_PRO_E112
  )

  /**
   * Get all device specifications for KENWOOD devices.
   * Useful for kenwood testing.
   */
  public fun getKenwoodDevices(): List<String> = listOf(
      Kenwood.HONGKONG,
      Kenwood.LAVENDER,
      Kenwood.MOUNTBAKER,
      Kenwood.XP8800
  )

  /**
   * Get all device specifications for KEYENCE devices.
   * Useful for keyence testing.
   */
  public fun getKeyenceDevices(): List<String> = listOf(
      Keyence.BT_A2000,
      Keyence.BT_A600,
      Keyence.BTA700,
      Keyence.DX_A400,
      Keyence.DX_A600,
      Keyence.DXA800
  )

  /**
   * Get all device specifications for KGTEL devices.
   * Useful for kgtel testing.
   */
  public fun getKgtelDevices(): List<String> = listOf(
      Kgtel.A56,
      Kgtel.BETTER10,
      Kgtel.HELLO_10_PRO_4G,
      Kgtel.MATE20_PRO_4G,
      Kgtel.NOVA_10_PRO_4G,
      Kgtel.R10A,
      Kgtel.X55E,
      Kgtel.X5A
  )

  /**
   * Get all device specifications for Kiano devices.
   * Useful for kiano testing.
   */
  public fun getKianoDevices(): List<String> = listOf(
      Kiano.ELEGANCE_6
  )

  /**
   * Get all device specifications for Kickpi devices.
   * Useful for kickpi testing.
   */
  public fun getKickpiDevices(): List<String> = listOf(
      Kickpi.YYZ
  )

  /**
   * Get all device specifications for Kiddoboo devices.
   * Useful for kiddoboo testing.
   */
  public fun getKiddobooDevices(): List<String> = listOf(
      Kiddoboo.KB101,
      Kiddoboo.KB101B,
      Kiddoboo.KB102,
      Kiddoboo.KB80P
  )

  /**
   * Get all device specifications for KineticTV devices.
   * Useful for kinetictv testing.
   */
  public fun getKinetictvDevices(): List<String> = listOf(
      Kinetictv.DV8219
  )

  /**
   * Get all device specifications for Kingcomm devices.
   * Useful for kingcomm testing.
   */
  public fun getKingcommDevices(): List<String> = listOf(
      Kingcomm.C500
  )

  /**
   * Get all device specifications for KINHANK devices.
   * Useful for kinhank testing.
   */
  public fun getKinhankDevices(): List<String> = listOf(
      Kinhank.YEG
  )

  /**
   * Get all device specifications for Kinstone devices.
   * Useful for kinstone testing.
   */
  public fun getKinstoneDevices(): List<String> = listOf(
      Kinstone.CON_102,
      Kinstone.KINSTONE_SA070,
      Kinstone.KST102SA_EEA,
      Kinstone.KST102SF,
      Kinstone.KST102SF_EA,
      Kinstone.KST103RC,
      Kinstone.KST103SD,
      Kinstone.KST103SD_L,
      Kinstone.KST103SD_J
  )

  /**
   * Get all device specifications for KIOWA devices.
   * Useful for kiowa testing.
   */
  public fun getKiowaDevices(): List<String> = listOf(
      Kiowa.A5_CRISTAL,
      Kiowa.LAVENDER,
      Kiowa.MOUNTBAKER,
      Kiowa.S5_CRISTAL,
      Kiowa.X4_CRISTAL,
      Kiowa.ZHONGSHAN
  )

  /**
   * Get all device specifications for KIRISUN devices.
   * Useful for kirisun testing.
   */
  public fun getKirisunDevices(): List<String> = listOf(
      Kirisun.T650
  )

  /**
   * Get all device specifications for KIUNIT devices.
   * Useful for kiunit testing.
   */
  public fun getKiunitDevices(): List<String> = listOf(
      Kiunit.STANFORD,
      Kiunit.ZHONGSHAN
  )

  /**
   * Get all device specifications for KIVI devices.
   * Useful for kivi testing.
   */
  public fun getKiviDevices(): List<String> = listOf(
      Kivi.BANGBAE,
      Kivi.BRUNO,
      Kivi.KOMAGOME,
      Kivi.SHILIN,
      Kivi.STANFORD,
      Kivi.ZHONGSHAN
  )

  /**
   * Get all device specifications for KLIPAD devices.
   * Useful for klipad testing.
   */
  public fun getKlipadDevices(): List<String> = listOf(
      Klipad.KL2018R,
      Klipad.KL2108NBE,
      Klipad.KL2109NB_EEA,
      Klipad.KL3669_EEA,
      Klipad.KL3669A,
      Klipad.KL4889B,
      Klipad.KL4889C,
      Klipad.KL4890,
      Klipad.KL4891,
      Klipad.KL4898,
      Klipad.KL4898_A50,
      Klipad.KL500,
      Klipad.KL502,
      Klipad.KL503,
      Klipad.KL505,
      Klipad.KL601,
      Klipad.KL602,
      Klipad.KL605,
      Klipad.KL608,
      Klipad.KL628KO,
      Klipad.KL6889B,
      Klipad.KL7590,
      Klipad.KL7591,
      Klipad.KL8889,
      Klipad.KL9878,
      Klipad.KL9878A_EEA,
      Klipad.KL9878AE,
      Klipad.KLIPAD,
      Klipad.KLIPAD_KL600,
      Klipad.KLIPAD_KL600B,
      Klipad.KLIPAD_SMART_I746,
      Klipad.V355,
      Klipad.V355B,
      Klipad.V356
  )

  /**
   * Get all device specifications for KLIPAD-X-LARGE-TAB devices.
   * Useful for klipad-x-large-tab testing.
   */
  public fun getKlipadXLargeTabDevices(): List<String> = listOf(
      KlipadXLargeTab.KL_6888
  )

  /**
   * Get all device specifications for Kobo devices.
   * Useful for kobo testing.
   */
  public fun getKoboDevices(): List<String> = listOf(
      Kobo.LBP8,
      Kobo.MACALLAN,
      Kobo.ZEUS
  )

  /**
   * Get all device specifications for KODAK devices.
   * Useful for kodak testing.
   */
  public fun getKodakDevices(): List<String> = listOf(
      Kodak.KD10112TB,
      Kodak.KODAK_D40,
      Kodak.KODAK_D50L,
      Kodak.KODAK_D55L,
      Kodak.KODAK_D60LX,
      Kodak.KODAK_D61L,
      Kodak.KODAK_D65LX,
      Kodak.KODAK_KD50,
      Kodak.KODAK_SMARTWAY_L1,
      Kodak.KODAK_SMARTWAY_T2,
      Kodak.KODAKEKTRA,
      Kodak.L1_PRO,
      Kodak.MARINA,
      Kodak.NAGATA,
      Kodak.SMARTWAY_F1,
      Kodak.SMARTWAY_L2,
      Kodak.SMARTWAY_M2,
      Kodak.SMARTWAY_T1,
      Kodak.SMARTWAY_T3,
      Kodak.SMARTWAY_X2
  )

  /**
   * Get all device specifications for Kogan devices.
   * Useful for kogan testing.
   */
  public fun getKoganDevices(): List<String> = listOf(
      Kogan.AGORA_GO,
      Kogan.AGORA_XI,
      Kogan.COTTONGREEN,
      Kogan.HANYANG,
      Kogan.IKEBUKURO,
      Kogan.KAKT10164SA,
      Kogan.KATB10128WPA,
      Kogan.KATB1064CGRY,
      Kogan.KATB1064WGRY,
      Kogan.KATB21064CPA,
      Kogan.KATB2P1064WPA,
      Kogan.KOGAN_AGORA_9,
      Kogan.KOGAN_AGORA_XS,
      Kogan.LONGSHAN,
      Kogan.MARINA,
      Kogan.NAGATA,
      Kogan.NIPPORI,
      Kogan.REDWOOD,
      Kogan.SAMSEONG,
      Kogan.SHIBUYA,
      Kogan.SW4H,
      Kogan.SW4H_FF,
      Kogan.TAMACHI,
      Kogan.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for KOLIN devices.
   * Useful for kolin testing.
   */
  public fun getKolinDevices(): List<String> = listOf(
      Kolin.HONGKONG,
      Kolin.LONGSHAN,
      Kolin.REDWOOD
  )

  /**
   * Get all device specifications for Kolke devices.
   * Useful for kolke testing.
   */
  public fun getKolkeDevices(): List<String> = listOf(
      Kolke.KTK_611
  )

  /**
   * Get all device specifications for KONIC devices.
   * Useful for konic testing.
   */
  public fun getKonicDevices(): List<String> = listOf(
      Konic.MATEO
  )

  /**
   * Get all device specifications for KONKA devices.
   * Useful for konka testing.
   */
  public fun getKonkaDevices(): List<String> = listOf(
      Konka.BANDRA,
      Konka.CAPITOLHILL,
      Konka.KC516,
      Konka.KC516_PRO,
      Konka.KENTON,
      Konka.KEONEAE,
      Konka.KM7012BK,
      Konka.LASALLE,
      Konka.M27S,
      Konka.N15,
      Konka.N17,
      Konka.N7,
      Konka.RE1,
      Konka.RU1,
      Konka.SE1,
      Konka.SE2,
      Konka.SEOCHO,
      Konka.SP10,
      Konka.SP20,
      Konka.SP6,
      Konka.SP9,
      Konka.SUGAMO
  )

  /**
   * Get all device specifications for KONROW devices.
   * Useful for konrow testing.
   */
  public fun getKonrowDevices(): List<String> = listOf(
      Konrow.CITY,
      Konrow.CITY4,
      Konrow.CITY5,
      Konrow.EASY5,
      Konrow.EASY62,
      Konrow.EASY_5,
      Konrow.EASY_K55,
      Konrow.EASY_S55P,
      Konrow.EASY_S55P_2021,
      Konrow.K_TAB1005,
      Konrow.K_TAB703,
      Konrow.K_TAB801,
      Konrow.KONROW_SKY_LITE,
      Konrow.KONROW_SKY_PLUS,
      Konrow.KTAB704,
      Konrow.KTAB_1003,
      Konrow.KTAB_1004,
      Konrow.MUST,
      Konrow.NEOW,
      Konrow.SKY,
      Konrow.SKY55,
      Konrow.SKY63,
      Konrow.SKY_55,
      Konrow.SOFT5,
      Konrow.SOFT5P,
      Konrow.SWEET5
  )

  /**
   * Get all device specifications for Koobee devices.
   * Useful for koobee testing.
   */
  public fun getKoobeeDevices(): List<String> = listOf(
      Koobee.KOOBEE_F2,
      Koobee.KOOBEE_F2_PLUS,
      Koobee.KOOBEE_K10,
      Koobee.KOOBEE_K20,
      Koobee.KOOBEE_K60,
      Koobee.KOOBEE_S12,
      Koobee.KOOBEE_S16,
      Koobee.KOOBEE_S19,
      Koobee.SL004T
  )

  /**
   * Get all device specifications for KOODA devices.
   * Useful for kooda testing.
   */
  public fun getKoodaDevices(): List<String> = listOf(
      Kooda.SHIBUYA
  )

  /**
   * Get all device specifications for KOOLMAAX devices.
   * Useful for koolmaax testing.
   */
  public fun getKoolmaaxDevices(): List<String> = listOf(
      Koolmaax.GEMINI
  )

  /**
   * Get all device specifications for Kozen devices.
   * Useful for kozen testing.
   */
  public fun getKozenDevices(): List<String> = listOf(
      Kozen.D1,
      Kozen.T05
  )

  /**
   * Get all device specifications for KPN devices.
   * Useful for kpn testing.
   */
  public fun getKpnDevices(): List<String> = listOf(
      Kpn.M250_K,
      Kpn.M393VSB_KPN
  )

  /**
   * Get all device specifications for KRIP devices.
   * Useful for krip testing.
   */
  public fun getKripDevices(): List<String> = listOf(
      Krip.K4B,
      Krip.K4M,
      Krip.K5,
      Krip.K50,
      Krip.K51,
      Krip.K55G,
      Krip.K55H,
      Krip.K57,
      Krip.K58,
      Krip.K58B,
      Krip.K5B,
      Krip.K5C,
      Krip.K5D,
      Krip.K5M,
      Krip.K6,
      Krip.K60,
      Krip.K65,
      Krip.K66,
      Krip.K68,
      Krip.K69,
      Krip.K6B,
      Krip.KRIP_K4,
      Krip.KRIP_K55,
      Krip.KRIP_K700A
  )

  /**
   * Get all device specifications for KRONO devices.
   * Useful for krono testing.
   */
  public fun getKronoDevices(): List<String> = listOf(
      Krono.COLORS,
      Krono.KIDS_COLORS_PLUS,
      Krono.KIDS_FIVE,
      Krono.MATRIX_PRO,
      Krono.NET_ADVANCE,
      Krono.NET_ALPHA,
      Krono.NET_HIT,
      Krono.NET_K7,
      Krono.NET_K7_PLUS,
      Krono.NET_LITE,
      Krono.NET_MAX,
      Krono.NET_MAX_GO,
      Krono.NET_ONE,
      Krono.NET_R7,
      Krono.NET_TITAN,
      Krono.NET_VOLT,
      Krono.NET_X2,
      Krono.NET_Y,
      Krono.NETWORK,
      Krono.ULTRA
  )

  /**
   * Get all device specifications for Kross_Elegance devices.
   * Useful for kross_elegance testing.
   */
  public fun getKrossEleganceDevices(): List<String> = listOf(
      KrossElegance.KE_TB815
  )

  /**
   * Get all device specifications for KrossElegance devices.
   * Useful for krosselegance testing.
   */
  public fun getKrosseleganceDevices(): List<String> = listOf(
      Krosselegance.KE_TB1032OF,
      Krosselegance.KE_TB816OF
  )

  /**
   * Get all device specifications for Kruger_Matz devices.
   * Useful for kruger_matz testing.
   */
  public fun getKrugerMatzDevices(): List<String> = listOf(
      KrugerMatz.DRIVE9,
      KrugerMatz.DRIVE_6,
      KrugerMatz.DRIVE_6S,
      KrugerMatz.DRIVE_8,
      KrugerMatz.EAGLE_1066,
      KrugerMatz.EAGLE_1067,
      KrugerMatz.EAGLE_1068,
      KrugerMatz.EAGLE_1069,
      KrugerMatz.EAGLE_1072,
      KrugerMatz.EAGLE_1073,
      KrugerMatz.EAGLE_702,
      KrugerMatz.EAGLE_806,
      KrugerMatz.EAGLE_961,
      KrugerMatz.FLOW5PLUS,
      KrugerMatz.FLOW6LITE,
      KrugerMatz.FLOW7,
      KrugerMatz.FLOW_11,
      KrugerMatz.FLOW_5,
      KrugerMatz.FLOW_7S,
      KrugerMatz.FLOW_9,
      KrugerMatz.KM0708,
      KrugerMatz.KM08061,
      KrugerMatz.KM0807,
      KrugerMatz.KM0808,
      KrugerMatz.KM1008,
      KrugerMatz.KM1070,
      KrugerMatz.KM1074,
      KrugerMatz.KM1075,
      KrugerMatz.KM1076,
      KrugerMatz.LIVE_11,
      KrugerMatz.LIVE_12,
      KrugerMatz.LIVE_6PLUS,
      KrugerMatz.LIVE_7,
      KrugerMatz.LIVE_7S,
      KrugerMatz.LIVE_8,
      KrugerMatz.LIVE_9,
      KrugerMatz.LIVE_9S,
      KrugerMatz.MOVE8MINI,
      KrugerMatz.MOVE9,
      KrugerMatz.MOVE_8_1
  )

  /**
   * Get all device specifications for KrugerAndMatz devices.
   * Useful for krugerandmatz testing.
   */
  public fun getKrugerandmatzDevices(): List<String> = listOf(
      Krugerandmatz.CAPITOLHILL,
      Krugerandmatz.KEONEAE
  )

  /**
   * Get all device specifications for KT devices.
   * Useful for kt testing.
   */
  public fun getKtDevices(): List<String> = listOf(
      Kt.KG2100,
      Kt.KG3100,
      Kt.KG4100,
      Kt.KI1101,
      Kt.KSTB6188,
      Kt.MA4000,
      Kt.MA4100,
      Kt.MAR4510C,
      Kt.MAU4800D
  )

  /**
   * Get all device specifications for KTC devices.
   * Useful for ktc testing.
   */
  public fun getKtcDevices(): List<String> = listOf(
      Ktc.BLISS503,
      Ktc.CAPRICORN,
      Ktc.HONGKONG,
      Ktc.LAVENDER,
      Ktc.LEO,
      Ktc.MOUNTBAKER,
      Ktc.SAGITTARIUS,
      Ktc.STANFORD,
      Ktc.W83B_F2_RK3576,
      Ktc.ZHONGSHAN
  )

  /**
   * Get all device specifications for KTV devices.
   * Useful for ktv testing.
   */
  public fun getKtvDevices(): List<String> = listOf(
      Ktv.DV8219
  )

  /**
   * Get all device specifications for KUBIK devices.
   * Useful for kubik testing.
   */
  public fun getKubikDevices(): List<String> = listOf(
      Kubik.KUBIK_GENTA_10
  )

  /**
   * Get all device specifications for KULT devices.
   * Useful for kult testing.
   */
  public fun getKultDevices(): List<String> = listOf(
      Kult.KT05
  )

  /**
   * Get all device specifications for Kunfabo devices.
   * Useful for kunfabo testing.
   */
  public fun getKunfaboDevices(): List<String> = listOf(
      Kunfabo.F99PRO
  )

  /**
   * Get all device specifications for KUNFT devices.
   * Useful for kunft testing.
   */
  public fun getKunftDevices(): List<String> = listOf(
      Kunft.IKEBUKURO,
      Kunft.REDWOOD,
      Kunft.SAMSEONG
  )

  /**
   * Get all device specifications for Kuori devices.
   * Useful for kuori testing.
   */
  public fun getKuoriDevices(): List<String> = listOf(
      Kuori.KIVI
  )

  /**
   * Get all device specifications for Kurio devices.
   * Useful for kurio testing.
   */
  public fun getKurioDevices(): List<String> = listOf(
      Kurio.AQUAMAN_10_WIFI,
      Kurio.HULK_7_KIDS_WIFI,
      Kurio.K01023,
      Kurio.K01023US,
      Kurio.K01524,
      Kurio.PHOENIX_7_KD,
      Kurio.PIXI4_7_WIFI_KD,
      Kurio.U3A_10_WIFI_KD,
      Kurio.U3A_7_WIFI_REFRESH_KD
  )

  /**
   * Get all device specifications for KUU devices.
   * Useful for kuu testing.
   */
  public fun getKuuDevices(): List<String> = listOf(
      Kuu.UPAD2021
  )

  /**
   * Get all device specifications for KUVA devices.
   * Useful for kuva testing.
   */
  public fun getKuvaDevices(): List<String> = listOf(
      Kuva.PAD
  )

  /**
   * Get all device specifications for KXD devices.
   * Useful for kxd testing.
   */
  public fun getKxdDevices(): List<String> = listOf(
      Kxd._6CB,
      Kxd.A06,
      Kxd.A07,
      Kxd.A08,
      Kxd.A1,
      Kxd.A11,
      Kxd.A8,
      Kxd.BLUS_SEA_S25_PLUS,
      Kxd.D26,
      Kxd.D58,
      Kxd.D68S,
      Kxd.D70,
      Kxd.K30M,
      Kxd.T50,
      Kxd.T50Y,
      Kxd.T55,
      Kxd.T55S,
      Kxd.UNIVERSE_S24_PLUS,
      Kxd.W55Y,
      Kxd.X10,
      Kxd.X7G,
      Kxd.X7S,
      Kxd.Y20
  )

  /**
   * Get all device specifications for KYASTER devices.
   * Useful for kyaster testing.
   */
  public fun getKyasterDevices(): List<String> = listOf(
      Kyaster.KPAD_U2,
      Kyaster.KPAD_U2_P,
      Kyaster.KPAD_U4,
      Kyaster.KPAD_U4_EEA
  )

  /**
   * Get all device specifications for KYOCERA devices.
   * Useful for kyocera testing.
   */
  public fun getKyoceraDevices(): List<String> = listOf(
      Kyocera._404KC,
      Kyocera._503KC,
      Kyocera._602KC,
      Kyocera._704KC,
      Kyocera._705KC,
      Kyocera._901KC,
      Kyocera.A001KC,
      Kyocera.A201KC,
      Kyocera.C6530N,
      Kyocera.C6725,
      Kyocera.C6730,
      Kyocera.C6740,
      Kyocera.C6740N,
      Kyocera.C6742,
      Kyocera.C6742A,
      Kyocera.C6743,
      Kyocera.C6745,
      Kyocera.E6560,
      Kyocera.E6560C,
      Kyocera.E6560L,
      Kyocera.E6560T,
      Kyocera.E6762,
      Kyocera.E6782,
      Kyocera.E6790,
      Kyocera.E6790TM,
      Kyocera.E6810_3GB,
      Kyocera.E6820,
      Kyocera.E6820_3GB,
      Kyocera.E6820TM_3GB,
      Kyocera.E6830,
      Kyocera.E6833,
      Kyocera.E6910,
      Kyocera.E6920,
      Kyocera.E7110,
      Kyocera.KC_01,
      Kyocera.KC_100S,
      Kyocera.KC_S301AE,
      Kyocera.KC_S303,
      Kyocera.KC_S304,
      Kyocera.KC_S701,
      Kyocera.KC_S702,
      Kyocera.KC_T302DT,
      Kyocera.KC_T304,
      Kyocera.KCP01K,
      Kyocera.KY_51B,
      Kyocera.KY_51D,
      Kyocera.KY21L_RG100,
      Kyocera.KY21L_ST100,
      Kyocera.KY22L_SN300,
      Kyocera.KY22L_ST200,
      Kyocera.KY22M_RG100,
      Kyocera.KY23L_RG100,
      Kyocera.KY23M_RG100,
      Kyocera.KY24L_SN100,
      Kyocera.KY24L_ST100,
      Kyocera.KY24L_ST200,
      Kyocera.KY24L_ST300,
      Kyocera.KY24L_TB100,
      Kyocera.KY24L_TB200,
      Kyocera.KY24L_TB300,
      Kyocera.KYG01,
      Kyocera.KYT32,
      Kyocera.KYT33,
      Kyocera.KYT34,
      Kyocera.KYV38,
      Kyocera.KYV39,
      Kyocera.KYV40,
      Kyocera.KYV41,
      Kyocera.KYV42,
      Kyocera.KYV43,
      Kyocera.KYV44,
      Kyocera.KYV44_U2,
      Kyocera.KYV45,
      Kyocera.KYV46,
      Kyocera.KYV47,
      Kyocera.KYV48,
      Kyocera.S10_KC_SPROUT,
      Kyocera.S2_SPROUT,
      Kyocera.S4_KC_SPROUT,
      Kyocera.S6_KC_SPROUT,
      Kyocera.S8_KC_SPROUT,
      Kyocera.S9_KC_SPROUT,
      Kyocera.SKT01,
      Kyocera.X3_KC_SPROUT
  )

  /**
   * Get all device specifications for KYODO-TV devices.
   * Useful for kyodo-tv testing.
   */
  public fun getKyodoTvDevices(): List<String> = listOf(
      KyodoTv.KARAXKARA
  )

  /**
   * Get all device specifications for KZEN devices.
   * Useful for kzen testing.
   */
  public fun getKzenDevices(): List<String> = listOf(
      Kzen.LAMIA_L01
  )

  /**
   * Get all device specifications for LAIQ devices.
   * Useful for laiq testing.
   */
  public fun getLaiqDevices(): List<String> = listOf(
      Laiq.LAIQ_GLAM,
      Laiq.STARTRAIL
  )

  /**
   * Get all device specifications for Lamborghini devices.
   * Useful for lamborghini testing.
   */
  public fun getLamborghiniDevices(): List<String> = listOf(
      Lamborghini.SDIS1
  )

  /**
   * Get all device specifications for LAMZIEN devices.
   * Useful for lamzien testing.
   */
  public fun getLamzienDevices(): List<String> = listOf(
      Lamzien.LAMZIEN_P2
  )

  /**
   * Get all device specifications for Landbyte devices.
   * Useful for landbyte testing.
   */
  public fun getLandbyteDevices(): List<String> = listOf(
      Landbyte.LT6248
  )

  /**
   * Get all device specifications for LANDI devices.
   * Useful for landi testing.
   */
  public fun getLandiDevices(): List<String> = listOf(
      Landi.AN_LFC,
      Landi.M20,
      Landi.M20SE
  )

  /**
   * Get all device specifications for LandRover devices.
   * Useful for landrover testing.
   */
  public fun getLandroverDevices(): List<String> = listOf(
      Landrover.LREXPLORE,
      Landrover.LREXPLORER
  )

  /**
   * Get all device specifications for LANGO devices.
   * Useful for lango testing.
   */
  public fun getLangoDevices(): List<String> = listOf(
      Lango.OPS_8195A
  )

  /**
   * Get all device specifications for LANIX devices.
   * Useful for lanix testing.
   */
  public fun getLanixDevices(): List<String> = listOf(
      Lanix.ALPHA_1R,
      Lanix.ALPHA_1V,
      Lanix.ALPHA_3R,
      Lanix.ALPHA_3V,
      Lanix.ALPHA_5V,
      Lanix.ALPHA_950,
      Lanix.ALPHA_950XL,
      Lanix.ALPHA_9V,
      Lanix.ILIUM_ALPHA7,
      Lanix.ILIUM_ALPHA_1S,
      Lanix.ILIUM_ALPHA_1TT,
      Lanix.ILIUM_ALPHA_3,
      Lanix.ILIUM_ALPHA_5S,
      Lanix.ILIUM_ALPHA_5T,
      Lanix.ILIUM_ALPHA_9,
      Lanix.ILIUM_L1100,
      Lanix.ILIUM_L1120,
      Lanix.ILIUM_L1400,
      Lanix.ILIUM_L200,
      Lanix.ILIUM_L610,
      Lanix.ILIUM_L620,
      Lanix.ILIUM_L910,
      Lanix.ILIUM_L920,
      Lanix.ILIUM_LT510,
      Lanix.ILIUM_LT520,
      Lanix.ILIUM_M1,
      Lanix.ILIUM_M3,
      Lanix.ILIUM_M5,
      Lanix.ILIUM_M5S,
      Lanix.ILIUM_M7,
      Lanix.ILIUM_M7S,
      Lanix.ILIUM_M7T,
      Lanix.ILIUM_M7V,
      Lanix.ILIUM_M9,
      Lanix.ILIUM_M9S,
      Lanix.ILIUM_M9V,
      Lanix.ILIUM_PAD_E10SI_1,
      Lanix.ILIUM_PAD_RX8,
      Lanix.ILIUM_PAD_RX8_V5,
      Lanix.ILIUM_PADE10,
      Lanix.ILIUM_PADE8,
      Lanix.ILIUM_X110,
      Lanix.ILIUM_X200,
      Lanix.ILIUM_X210,
      Lanix.ILIUM_X220,
      Lanix.ILIUM_X500B,
      Lanix.ILIUM_X510,
      Lanix.ILIUM_X520,
      Lanix.ILIUM_X710,
      Lanix.ILIUMPAD_RX10,
      Lanix.ILIUMPAD_RX10V3,
      Lanix.ILIUMPAD_RX10V5,
      Lanix.ILIUMPAD_RX7,
      Lanix.ILIUMPAD_RX8V2,
      Lanix.L540,
      Lanix.M1R,
      Lanix.RX10PROV7,
      Lanix.RX10V6,
      Lanix.RX10V8,
      Lanix.RX10V9,
      Lanix.RX11,
      Lanix.RX7_V3,
      Lanix.RX7V4,
      Lanix.STANFORD,
      Lanix.X120C,
      Lanix.X1S,
      Lanix.X230,
      Lanix.X240,
      Lanix.X5,
      Lanix.X530,
      Lanix.X540,
      Lanix.X550,
      Lanix.X560,
      Lanix.X7,
      Lanix.X750,
      Lanix.X770,
      Lanix.X860,
      Lanix.ZHONGSHAN
  )

  /**
   * Get all device specifications for LARVAND devices.
   * Useful for larvand testing.
   */
  public fun getLarvandDevices(): List<String> = listOf(
      Larvand.M863TABH8
  )

  /**
   * Get all device specifications for LASER devices.
   * Useful for laser testing.
   */
  public fun getLaserDevices(): List<String> = listOf(
      Laser.MID_104GB_968,
      Laser.MID_1085A100,
      Laser.MID_1087,
      Laser.MID_1090IPS,
      Laser.MID_785A100,
      Laser.MID_1087V9,
      Laser.MID_1089IPS,
      Laser.MID_1089IPSA100,
      Laser.MID_1090IPSV9,
      Laser.MID_1099IPS,
      Laser.MID_1099IPS_V13,
      Laser.MID_787V9,
      Laser.MID_789A100,
      Laser.MID_799IPS,
      Laser.MID_799IPS_V13,
      Laser.MID_899IPS
  )

  /**
   * Get all device specifications for LAUNCH devices.
   * Useful for launch testing.
   */
  public fun getLaunchDevices(): List<String> = listOf(
      Launch.DIAGNOSTIC_TABLET,
      Launch.DIAGNOSTIC_TOOL,
      Launch.X_431PADVII
  )

  /**
   * Get all device specifications for LAVA devices.
   * Useful for lava testing.
   */
  public fun getLavaDevices(): List<String> = listOf(
      Lava.A3_MINI,
      Lava.A52,
      Lava.A76PLUS,
      Lava.A77,
      Lava.A97,
      Lava.A97_2GB_PLUS,
      Lava.AF9020,
      Lava.BE_U,
      Lava.IRIS30,
      Lava.IRIS40,
      Lava.IRIS42,
      Lava.IRIS50,
      Lava.IRIS50C,
      Lava.IRIS51,
      Lava.IRIS53,
      Lava.IRIS60,
      Lava.IRIS60C,
      Lava.IRIS65,
      Lava.IRIS702,
      Lava.IRIS80,
      Lava.IRIS820,
      Lava.IRIS821,
      Lava.IRIS870,
      Lava.IRIS88,
      Lava.IRIS880,
      Lava.IRIS88_GO,
      Lava.IRIS88_LITE,
      Lava.IRIS88S,
      Lava.IRIS90,
      Lava.LA79,
      Lava.LA82,
      Lava.LAVA_A3,
      Lava.LAVA_A44,
      Lava.LAVA_AURA_PLUS,
      Lava.LAVA_R1,
      Lava.LAVA_Z10,
      Lava.LAVAA1,
      Lava.LE000Z93P,
      Lava.LE9810,
      Lava.LE9820,
      Lava.LE9910,
      Lava.LE9920,
      Lava.LE9920_P,
      Lava.LE9930,
      Lava.LE9940_W,
      Lava.LEX402,
      Lava.LF9810_2GB,
      Lava.LH9810,
      Lava.LH9910,
      Lava.LH9930,
      Lava.LH9931,
      Lava.LH9950,
      Lava.LMG01,
      Lava.LMG02,
      Lava.LMX02,
      Lava.LMX04,
      Lava.LMX06,
      Lava.LN9810,
      Lava.LN9820,
      Lava.LN9910,
      Lava.LTN10RT,
      Lava.LTN8RT,
      Lava.LXX501,
      Lava.LXX503,
      Lava.LXX504,
      Lava.LXX505,
      Lava.LXX506,
      Lava.LXX507,
      Lava.LXX508,
      Lava.LXX510,
      Lava.LXX511,
      Lava.LXX513,
      Lava.LXX514,
      Lava.LXX515,
      Lava.LXX516,
      Lava.LXX517,
      Lava.LXX518,
      Lava.LXX522,
      Lava.LZG01,
      Lava.LZG401,
      Lava.LZG402_1,
      Lava.LZG402_OM,
      Lava.LZG403,
      Lava.LZG403_225,
      Lava.LZG403_25,
      Lava.LZG409,
      Lava.LZG410,
      Lava.LZX403,
      Lava.LZX406,
      Lava.LZX408,
      Lava.LZX414,
      Lava.LZX415,
      Lava.LZX417,
      Lava.LZX419,
      Lava.MAGNUM_PRO,
      Lava.P7,
      Lava.R1_LITE,
      Lava.R3,
      Lava.T101,
      Lava.T101N,
      Lava.T71_W,
      Lava.T71N,
      Lava.T71N_M,
      Lava.T81,
      Lava.T81_PB,
      Lava.T81N,
      Lava.V23GB,
      Lava.X10,
      Lava.X41_PLUS,
      Lava.X50_PLUS,
      Lava.X81,
      Lava.Z1,
      Lava.Z100,
      Lava.Z25,
      Lava.Z35,
      Lava.Z3_UP,
      Lava.Z3_UP_2,
      Lava.Z40,
      Lava.Z50,
      Lava.Z50_PRO,
      Lava.Z51,
      Lava.Z60,
      Lava.Z60S,
      Lava.Z61,
      Lava.Z61_2GB,
      Lava.Z61P,
      Lava.Z66,
      Lava.Z70,
      Lava.Z80,
      Lava.Z81,
      Lava.Z90,
      Lava.Z91,
      Lava.Z92,
      Lava.Z93P,
      Lava.ZX
  )

  /**
   * Get all device specifications for LaVieTab devices.
   * Useful for lavietab testing.
   */
  public fun getLavietabDevices(): List<String> = listOf(
      Lavietab.PC_TE307N1W,
      Lavietab.PC_TE510BAL,
      Lavietab.TE508BAW
  )

  /**
   * Get all device specifications for LAVIETabE devices.
   * Useful for lavietabe testing.
   */
  public fun getLavietabeDevices(): List<String> = listOf(
      Lavietabe.X704F
  )

  /**
   * Get all device specifications for LAZER devices.
   * Useful for lazer testing.
   */
  public fun getLazerDevices(): List<String> = listOf(
      Lazer.LZ_890
  )

  /**
   * Get all device specifications for LAZOR devices.
   * Useful for lazor testing.
   */
  public fun getLazorDevices(): List<String> = listOf(
      Lazor.INFINITYT10101
  )

  /**
   * Get all device specifications for LbQ devices.
   * Useful for lbq testing.
   */
  public fun getLbqDevices(): List<String> = listOf(
      Lbq.LBQ_F8V2
  )

  /**
   * Get all device specifications for LEADER devices.
   * Useful for leader testing.
   */
  public fun getLeaderDevices(): List<String> = listOf(
      Leader.KENTON,
      Leader.LASALLE
  )

  /**
   * Get all device specifications for leaderhub devices.
   * Useful for leaderhub testing.
   */
  public fun getLeaderhubDevices(): List<String> = listOf(
      Leaderhub.S19_EEA
  )

  /**
   * Get all device specifications for LEAGOO devices.
   * Useful for leagoo testing.
   */
  public fun getLeagooDevices(): List<String> = listOf(
      Leagoo.KIICAA_MIX,
      Leagoo.KIICAA_POWER,
      Leagoo.LEAPAD_X,
      Leagoo.M11,
      Leagoo.M12,
      Leagoo.M12A,
      Leagoo.M13,
      Leagoo.M9,
      Leagoo.M9_PRO,
      Leagoo.P1,
      Leagoo.P1_PRO,
      Leagoo.POWER_2,
      Leagoo.POWER_2_PRO,
      Leagoo.POWER_5,
      Leagoo.S11,
      Leagoo.S8,
      Leagoo.S8PRO,
      Leagoo.S9,
      Leagoo.T5,
      Leagoo.T5C,
      Leagoo.T8,
      Leagoo.T8S,
      Leagoo.XROVER,
      Leagoo.XROVER_C,
      Leagoo.Z10,
      Leagoo.Z9,
      Leagoo.Z9A
  )

  /**
   * Get all device specifications for LeBest devices.
   * Useful for lebest testing.
   */
  public fun getLebestDevices(): List<String> = listOf(
      Lebest.L2,
      Lebest.L3
  )

  /**
   * Get all device specifications for LeEco devices.
   * Useful for leeco testing.
   */
  public fun getLeecoDevices(): List<String> = listOf(
      Leeco.LE_S2,
      Leeco.LE_S2_NA,
      Leeco.LE_S2_WW,
      Leeco.LE_X2,
      Leeco.LE_X2_NA,
      Leeco.LE_ZL1
  )

  /**
   * Get all device specifications for Legamaster devices.
   * Useful for legamaster testing.
   */
  public fun getLegamasterDevices(): List<String> = listOf(
      Legamaster.ETX
  )

  /**
   * Get all device specifications for LEGEND devices.
   * Useful for legend testing.
   */
  public fun getLegendDevices(): List<String> = listOf(
      Legend.ACE_I,
      Legend.IPF10,
      Legend.NEBULAE
  )

  /**
   * Get all device specifications for LegendComfortable devices.
   * Useful for legendcomfortable testing.
   */
  public fun getLegendcomfortableDevices(): List<String> = listOf(
      Legendcomfortable.SEP011037
  )

  /**
   * Get all device specifications for LeiaInc devices.
   * Useful for leiainc testing.
   */
  public fun getLeiaincDevices(): List<String> = listOf(
      Leiainc.LUMEPAD
  )

  /**
   * Get all device specifications for Leica devices.
   * Useful for leica testing.
   */
  public fun getLeicaDevices(): List<String> = listOf(
      Leica.CSX8
  )

  /**
   * Get all device specifications for Lenovo devices.
   * Useful for lenovo testing.
   */
  public fun getLenovoDevices(): List<String> = listOf(
      Lenovo._701LV,
      Lenovo._702LV,
      Lenovo._7305F,
      Lenovo._7305I,
      Lenovo._7305X,
      Lenovo._7306F,
      Lenovo._7306X,
      Lenovo._801LV,
      Lenovo._8505F,
      Lenovo._8505FS,
      Lenovo._8505X,
      Lenovo._8505XC,
      Lenovo._8505XS,
      Lenovo._8705F,
      Lenovo._8705X,
      Lenovo.A10,
      Lenovo.A10_70F,
      Lenovo.A10_70L,
      Lenovo.A10_70LC,
      Lenovo.A1000,
      Lenovo.A1000F,
      Lenovo.A1000G,
      Lenovo.A1000LF,
      Lenovo.A1010A20,
      Lenovo.A101LV,
      Lenovo.A10_80HC,
      Lenovo.A2010_A,
      Lenovo.A2010L36,
      Lenovo.A2016A40,
      Lenovo.A2016B30,
      Lenovo.A2016B31,
      Lenovo.A2109A,
      Lenovo.A3000,
      Lenovo.A301LV,
      Lenovo.A319,
      Lenovo.A328,
      Lenovo.A3300_GV,
      Lenovo.A3300_H,
      Lenovo.A3300_HV,
      Lenovo.A3500F,
      Lenovo.A3500FL,
      Lenovo.A3500H,
      Lenovo.A3500HV,
      Lenovo.A369I,
      Lenovo.A5000,
      Lenovo.A5000E,
      Lenovo.A516_ROW,
      Lenovo.A526,
      Lenovo.A536,
      Lenovo.A5500_F,
      Lenovo.A5500_H,
      Lenovo.A5500_HV,
      Lenovo.A5S,
      Lenovo.A6010,
      Lenovo.A6020A40,
      Lenovo.A6020A41,
      Lenovo.A6020A46,
      Lenovo.A6020L36,
      Lenovo.A6020L37,
      Lenovo.A606,
      Lenovo.A6600A40,
      Lenovo.A6600D40,
      Lenovo.A680,
      Lenovo.A7_30F,
      Lenovo.A7_30GC,
      Lenovo.A7_30H,
      Lenovo.A7_30HC,
      Lenovo.A7000_A,
      Lenovo.A7000PLUS,
      Lenovo.A7010A48,
      Lenovo.A7020A40,
      Lenovo.A7020A48,
      Lenovo.A7600_F,
      Lenovo.A7600_H,
      Lenovo.A7600_HV,
      Lenovo.A7700,
      Lenovo.A8_50F,
      Lenovo.A8_50L,
      Lenovo.A8_50LC,
      Lenovo.A806,
      Lenovo.A850,
      Lenovo.A850P,
      Lenovo.A859_ROW,
      Lenovo.A889,
      Lenovo.A916,
      Lenovo.A936,
      Lenovo.A938T,
      Lenovo.AIO_3M_OTFP_M,
      Lenovo.AIO_OTFP,
      Lenovo.AIO_OTFP_M,
      Lenovo.AIRPLAYT,
      Lenovo.AK47,
      Lenovo.AK57,
      Lenovo.ANGUS3A4,
      Lenovo.ANGUS3A41,
      Lenovo.ARUBA,
      Lenovo.AUSTIN2018,
      Lenovo.B6000,
      Lenovo.B8000,
      Lenovo.B8080,
      Lenovo.BRADY_F,
      Lenovo.CAPRI,
      Lenovo.CAPRIP,
      Lenovo.CEBU,
      Lenovo.COFUD,
      Lenovo.CYPRUS64,
      Lenovo.D_42A,
      Lenovo.D_52C,
      Lenovo.DOOM,
      Lenovo.GUAM,
      Lenovo.GUAMP,
      Lenovo.HALO,
      Lenovo.HAWAII,
      Lenovo.HAWAIIP,
      Lenovo.HEART,
      Lenovo.J606F,
      Lenovo.J606L,
      Lenovo.J606N,
      Lenovo.J607F,
      Lenovo.J607Z,
      Lenovo.J706F,
      Lenovo.J706L,
      Lenovo.J716F,
      Lenovo.JAVA,
      Lenovo.JD20,
      Lenovo.JD2018,
      Lenovo.JD2019,
      Lenovo.K10A40,
      Lenovo.K10E70,
      Lenovo.K32C36,
      Lenovo.K33A42,
      Lenovo.K33A48,
      Lenovo.K33B36,
      Lenovo.K33B37,
      Lenovo.K350T,
      Lenovo.K5,
      Lenovo.K50_T5,
      Lenovo.K50A40,
      Lenovo.K52_E78,
      Lenovo.K53A48,
      Lenovo.K53B36,
      Lenovo.K5FP,
      Lenovo.K5FP_M,
      Lenovo.K5S,
      Lenovo.K606F,
      Lenovo.K80M,
      Lenovo.K9,
      Lenovo.K900_ROW,
      Lenovo.KINGDOM_ROW,
      Lenovo.KITON,
      Lenovo.KITONW,
      Lenovo.KRAFT_A6000,
      Lenovo.KUNLUN,
      Lenovo.KUNLUN2,
      Lenovo.L18011,
      Lenovo.L18021,
      Lenovo.L38082,
      Lenovo.L38083,
      Lenovo.LENOVO_A6_NOTE,
      Lenovo.LENOVO_K320T,
      Lenovo.LET02,
      Lenovo.MANNING,
      Lenovo.MARINO_F,
      Lenovo.MOBA,
      Lenovo.OLIVINE,
      Lenovo.P1A42,
      Lenovo.P2A42,
      Lenovo.P70_A,
      Lenovo.P780_ROW,
      Lenovo.PASSION,
      Lenovo.PASSIONC5,
      Lenovo.PB_6505M,
      Lenovo.PB_6505MC,
      Lenovo.PB_6505Y,
      Lenovo.PB1_750M,
      Lenovo.PB1_770M,
      Lenovo.PB1_770N,
      Lenovo.PB2,
      Lenovo.PB2_670M,
      Lenovo.PB2_670M1,
      Lenovo.PB2_670N,
      Lenovo.PB2_670Y,
      Lenovo.PB2PRO,
      Lenovo.PXA1L88H2,
      Lenovo.Q706F,
      Lenovo.Q706Z,
      Lenovo.S1A40,
      Lenovo.S1LA40,
      Lenovo.S5000,
      Lenovo.S580,
      Lenovo.S6000,
      Lenovo.S6000L,
      Lenovo.S650_ROW,
      Lenovo.S660,
      Lenovo.S7,
      Lenovo.S8_50F,
      Lenovo.S8_50L,
      Lenovo.S8_50LC,
      Lenovo.S820_ROW,
      Lenovo.S850,
      Lenovo.S860,
      Lenovo.S898TP,
      Lenovo.S920_ROW,
      Lenovo.S930_ROW,
      Lenovo.S960,
      Lenovo.S960_ROW,
      Lenovo.S968T,
      Lenovo.SCX35_SP7731GEA_TAICHI,
      Lenovo.SEOUL,
      Lenovo.SISLEYLR,
      Lenovo.SISLEYR,
      Lenovo.SPROUT,
      Lenovo.SUN,
      Lenovo.TAB2A7_10F,
      Lenovo.TAB2A7_20F,
      Lenovo.TB_7304F,
      Lenovo.TB_7304I,
      Lenovo.TB_7304N,
      Lenovo.TB_7304X,
      Lenovo.TB_7504F,
      Lenovo.TB_7504X,
      Lenovo.TB_7703F,
      Lenovo.TB_7703X,
      Lenovo.TB_8304F,
      Lenovo.TB_8304F1,
      Lenovo.TB_8504F,
      Lenovo.TB_8504L,
      Lenovo.TB_8504X,
      Lenovo.TB_8506F,
      Lenovo.TB_8506FS,
      Lenovo.TB_8506X,
      Lenovo.TB_8506XS,
      Lenovo.TB_8604F,
      Lenovo.TB_8703F,
      Lenovo.TB_8703N,
      Lenovo.TB_8703X,
      Lenovo.TB_8704F,
      Lenovo.TB_8704N,
      Lenovo.TB_8704V,
      Lenovo.TB_8704X,
      Lenovo.TB_8804F,
      Lenovo.TB_8X04F,
      Lenovo.TB_J616F,
      Lenovo.TB_J616X,
      Lenovo.TB_X103F,
      Lenovo.TB_X505F,
      Lenovo.TB_X505L,
      Lenovo.TB_X505X,
      Lenovo.TB_X605FC,
      Lenovo.TB_X605LC,
      Lenovo.TB_X607Z,
      Lenovo.TB125FU,
      Lenovo.TB128FU,
      Lenovo.TB128XU,
      Lenovo.TB132FU,
      Lenovo.TB2_X30F,
      Lenovo.TB2_X30L,
      Lenovo.TB2_X30M,
      Lenovo.TB3_710F,
      Lenovo.TB3_710I,
      Lenovo.TB3_730F,
      Lenovo.TB3_730M,
      Lenovo.TB3_730X,
      Lenovo.TB3_850F,
      Lenovo.TB3_850M,
      Lenovo.TB3_X70F,
      Lenovo.TB3_X70L,
      Lenovo.TB3_X70N,
      Lenovo.TB300FU,
      Lenovo.TB300XU,
      Lenovo.TB301FU,
      Lenovo.TB301XU,
      Lenovo.TB305FU,
      Lenovo.TB310FU,
      Lenovo.TB310XU,
      Lenovo.TB311FU,
      Lenovo.TB311XU,
      Lenovo.TB320FC,
      Lenovo.TB321FU,
      Lenovo.TB328FU,
      Lenovo.TB328XU,
      Lenovo.TB330FU,
      Lenovo.TB330FUP,
      Lenovo.TB330XU,
      Lenovo.TB330XUP,
      Lenovo.TB336FU,
      Lenovo.TB336ZU,
      Lenovo.TB350FU,
      Lenovo.TB350XU,
      Lenovo.TB351FU,
      Lenovo.TB352FU,
      Lenovo.TB360ZU,
      Lenovo.TB370FU,
      Lenovo.TB371FC,
      Lenovo.TB372FC,
      Lenovo.TB373FU,
      Lenovo.TB520FU,
      Lenovo.TB570FU,
      Lenovo.TB7104F,
      Lenovo.TB7104I,
      Lenovo.VEGA,
      Lenovo.X104F,
      Lenovo.X104F1,
      Lenovo.X104L,
      Lenovo.X104X,
      Lenovo.X2_AP,
      Lenovo.X2_EU,
      Lenovo.X2_TO,
      Lenovo.X304F,
      Lenovo.X304L,
      Lenovo.X304N,
      Lenovo.X304X,
      Lenovo.X306F,
      Lenovo.X306FA,
      Lenovo.X306V,
      Lenovo.X306X,
      Lenovo.X306XA,
      Lenovo.X3_ROW,
      Lenovo.X504F,
      Lenovo.X605F,
      Lenovo.X605L,
      Lenovo.X605M,
      Lenovo.X606F,
      Lenovo.X606FA,
      Lenovo.X606V,
      Lenovo.X606X,
      Lenovo.X606XA,
      Lenovo.X616M,
      Lenovo.X6C6F,
      Lenovo.X6C6L,
      Lenovo.X6C6NBF,
      Lenovo.X6C6NBX,
      Lenovo.X6C6X,
      Lenovo.X704A,
      Lenovo.X704F,
      Lenovo.X704L,
      Lenovo.X704V,
      Lenovo.X704Y,
      Lenovo.X705F,
      Lenovo.X705L,
      Lenovo.YETI,
      Lenovo.YOGA_A12,
      Lenovo.YT_J706F,
      Lenovo.YT_J706X,
      Lenovo.YT_X703F,
      Lenovo.YT_X703L,
      Lenovo.YT_X703X,
      Lenovo.YT_X705F,
      Lenovo.YT_X705L,
      Lenovo.YT_X705X,
      Lenovo.YT2,
      Lenovo.YT3,
      Lenovo.YT3_850F,
      Lenovo.YT3_850L,
      Lenovo.YT3_850M,
      Lenovo.YT3_X50F,
      Lenovo.YT3_X50L,
      Lenovo.YT3_X50M,
      Lenovo.Z2R,
      Lenovo.Z2T,
      Lenovo.ZIPPO,
      Lenovo.ZOOM_FDD,
      Lenovo.ZOOM_ROW
  )

  /**
   * Get all device specifications for LEOMO devices.
   * Useful for leomo testing.
   */
  public fun getLeomoDevices(): List<String> = listOf(
      Leomo.LMS
  )

  /**
   * Get all device specifications for LEOTEC devices.
   * Useful for leotec testing.
   */
  public fun getLeotecDevices(): List<String> = listOf(
      Leotec.MID1016_MK_32,
      Leotec.MID1016_MK_64
  )

  /**
   * Get all device specifications for LePan devices.
   * Useful for lepan testing.
   */
  public fun getLepanDevices(): List<String> = listOf(
      Lepan.UY8
  )

  /**
   * Get all device specifications for LESIA devices.
   * Useful for lesia testing.
   */
  public fun getLesiaDevices(): List<String> = listOf(
      Lesia.C5,
      Lesia.HOT_30,
      Lesia.K2S,
      Lesia.K6,
      Lesia.NEO_9,
      Lesia.SMART_7
  )

  /**
   * Get all device specifications for Letv devices.
   * Useful for letv testing.
   */
  public fun getLetvDevices(): List<String> = listOf(
      Letv.DEMETERDV,
      Letv.DEMETERUHD,
      Letv.LE_S2_WW,
      Letv.LE_X2,
      Letv.X3_HK,
      Letv.X600
  )

  /**
   * Get all device specifications for LEXA devices.
   * Useful for lexa testing.
   */
  public fun getLexaDevices(): List<String> = listOf(
      Lexa.NAGATA
  )

  /**
   * Get all device specifications for Lexibook devices.
   * Useful for lexibook testing.
   */
  public fun getLexibookDevices(): List<String> = listOf(
      Lexibook.LT10,
      Lexibook.LT10_01_EEA,
      Lexibook.LT10EN_09,
      Lexibook.MFC149,
      Lexibook.MFS100,
      Lexibook.TL70,
      Lexibook.TLN10FR
  )

  /**
   * Get all device specifications for LG_CNS devices.
   * Useful for lg_cns testing.
   */
  public fun getLgCnsDevices(): List<String> = listOf(
      LgCns.LPT_200AR
  )

  /**
   * Get all device specifications for LG_Electronics devices.
   * Useful for lg_electronics testing.
   */
  public fun getLgElectronicsDevices(): List<String> = listOf(
      LgElectronics.RK3588_T,
      LgElectronics.TR3DK,
      LgElectronics.TR3DQ_B
  )

  /**
   * Get all device specifications for lge devices.
   * Useful for lge testing.
   */
  public fun getLgeDevices(): List<String> = listOf(
      Lge.ACELM,
      Lge.ACEXLM,
      Lge.AKA,
      Lge.ALICEE,
      Lge.ALPHAAMZ,
      Lge.ALPHALM,
      Lge.ALPHAPLUS,
      Lge.ALTEV,
      Lge.ALTEV2,
      Lge.ANGELFISH,
      Lge.ANNA,
      Lge.AWIFI,
      Lge.AWIFI070U,
      Lge.B1,
      Lge.B1W,
      Lge.B2L,
      Lge.B2LDS,
      Lge.B2LDSN,
      Lge.B2LN,
      Lge.B2LSS,
      Lge.B2LSSN,
      Lge.B3,
      Lge.B5,
      Lge.B6,
      Lge.BASS,
      Lge.BBG,
      Lge.BETALM,
      Lge.C100,
      Lge.C100N,
      Lge.C50,
      Lge.C50DS,
      Lge.C50N,
      Lge.C70,
      Lge.C70DS,
      Lge.C70N,
      Lge.C70W,
      Lge.C90,
      Lge.C90N,
      Lge.C90NAS,
      Lge.CAYMAN,
      Lge.CAYMANLM,
      Lge.CAYMANSLM,
      Lge.CF,
      Lge.CF2,
      Lge.CV1,
      Lge.CV109,
      Lge.CV1S,
      Lge.CV3,
      Lge.CV3N,
      Lge.CV5A,
      Lge.CV5AN,
      Lge.CV7A,
      Lge.CV7AN,
      Lge.CV7AS,
      Lge.CV7AS_PR,
      Lge.D2,
      Lge.D3,
      Lge.DH0LM,
      Lge.DM_01G,
      Lge.DM_01K,
      Lge.DM_02H,
      Lge.E1Q,
      Lge.E2,
      Lge.E2N,
      Lge.E2NAC,
      Lge.E2NAS,
      Lge.E2NAV,
      Lge.E7IILTE,
      Lge.E7LTE,
      Lge.E7WIFI,
      Lge.E8LTE,
      Lge.E8WIFI,
      Lge.E9LTE,
      Lge.E9WIFI,
      Lge.E9WIFIN,
      Lge.ELSA,
      Lge.F6,
      Lge.F70N,
      Lge.FALCON,
      Lge.FH50LM,
      Lge.FLASHLM,
      Lge.FLASHLMDD,
      Lge.FX1SK,
      Lge.G2,
      Lge.G2M,
      Lge.G2MDS,
      Lge.G2MSS,
      Lge.G2MV,
      Lge.G3,
      Lge.G4STYLUS,
      Lge.G4STYLUSC,
      Lge.G4STYLUSDS,
      Lge.G4STYLUSDSN,
      Lge.G4STYLUSN,
      Lge.G4STYLUSW,
      Lge.GEEFHD,
      Lge.GEEFHD4G,
      Lge.GEEHDC,
      Lge.GEEHRC,
      Lge.GEEHRC4G,
      Lge.H1,
      Lge.HG2,
      Lge.HG2_IOT,
      Lge.JAG3GDS,
      Lge.JAG3GSS,
      Lge.JAGN,
      Lge.JAGNM,
      Lge.JETTALT,
      Lge.JOAN,
      Lge.JUDYLN,
      Lge.JUDYP,
      Lge.JUDYPN,
      Lge.K5,
      Lge.K5N,
      Lge.K6B,
      Lge.K6P,
      Lge.K7,
      Lge.K7N,
      Lge.L_01J,
      Lge.L_01K,
      Lge.L_01L,
      Lge.L_02K,
      Lge.L_03K,
      Lge.L_41A,
      Lge.L_51A,
      Lge.L_52A,
      Lge.L05E,
      Lge.L1E,
      Lge.L70P,
      Lge.L70PDS,
      Lge.L70PN,
      Lge.L9II,
      Lge.L_DCM,
      Lge.LENOK,
      Lge.LIGER,
      Lge.LM_X440IM,
      Lge.LM_X440ZM,
      Lge.LM_X440ZMW,
      Lge.LMX130IM,
      Lge.LO_1,
      Lge.LUCYE,
      Lge.LUV20DS,
      Lge.LUV20SS,
      Lge.LUV20TS,
      Lge.LUV30DS,
      Lge.LUV30SS,
      Lge.LUV50DS,
      Lge.LUV50SS,
      Lge.LUV50SSN,
      Lge.LUV80DS,
      Lge.LUV80SS,
      Lge.LUV90DS,
      Lge.LUV90SS,
      Lge.LV0,
      Lge.LV1,
      Lge.LV3,
      Lge.LV3N,
      Lge.LV517,
      Lge.LV517N,
      Lge.LV7,
      Lge.LV9,
      Lge.LV9N,
      Lge.M1,
      Lge.M13G,
      Lge.M1DS,
      Lge.M1V,
      Lge.M209,
      Lge.M209N,
      Lge.M216,
      Lge.M216N,
      Lge.M23G,
      Lge.M253,
      Lge.M253N,
      Lge.M4,
      Lge.MC90,
      Lge.MC90DS,
      Lge.MCAYMANLM,
      Lge.MCV150,
      Lge.MCV1S,
      Lge.MCV3,
      Lge.MCV5A,
      Lge.MCV7A,
      Lge.MDH10LM,
      Lge.MDH10XLM,
      Lge.MDH15LM,
      Lge.MDH30LM,
      Lge.MDH30XLM,
      Lge.MDH35LM,
      Lge.MDH40LM,
      Lge.MDH50LM,
      Lge.MDH5LM,
      Lge.ME0,
      Lge.ME1,
      Lge.ME1DS,
      Lge.MEH15LM,
      Lge.MEH20LM,
      Lge.MEH35LM,
      Lge.MFH10LM,
      Lge.MH2LM,
      Lge.MH3,
      Lge.MH3_PL,
      Lge.MH4,
      Lge.MH4_PR,
      Lge.MH4X,
      Lge.MH5LM,
      Lge.MH5LM_8M,
      Lge.MHN,
      Lge.MK6M,
      Lge.MK6P,
      Lge.MK6P55,
      Lge.MK6PN,
      Lge.MLV1,
      Lge.MLV3,
      Lge.MLV5,
      Lge.MLV5N,
      Lge.MLV7,
      Lge.MLV7N,
      Lge.MM1V,
      Lge.MM1VN,
      Lge.MME0,
      Lge.MME0N,
      Lge.MMH4,
      Lge.MMH45LM,
      Lge.MMH4P,
      Lge.MMH4P_PR,
      Lge.MMH4X,
      Lge.MMH55LM,
      Lge.MMH5LM,
      Lge.MMH6LM,
      Lge.MP1S3GDS,
      Lge.MP1S3GSS,
      Lge.MPH1,
      Lge.MSF3,
      Lge.MSF3N,
      Lge.MTH8,
      Lge.MW41LM,
      Lge.MY50,
      Lge.MY50DS,
      Lge.MY70,
      Lge.MY70DS,
      Lge.MY90,
      Lge.MY90DS,
      Lge.NARWHAL,
      Lge.NEMO,
      Lge.NEO11LM,
      Lge.NEO2ALP,
      Lge.NEO31LM,
      Lge.NEO4LM,
      Lge.OMEGA,
      Lge.P1,
      Lge.P1BDS3G,
      Lge.P1BDSN,
      Lge.P1BSSN,
      Lge.P1V,
      Lge.PH1,
      Lge.PH1N,
      Lge.PH2,
      Lge.PH2N,
      Lge.PHOENIX_SPROUT,
      Lge.PPLUS,
      Lge.RAINBOWLM,
      Lge.SF317,
      Lge.SF340,
      Lge.SF340N,
      Lge.SJR,
      Lge.SOLEMIOLT,
      Lge.SWORDFISH,
      Lge.T1LTE,
      Lge.T1WIFI,
      Lge.T1WIFIN,
      Lge.T8LTE,
      Lge.T8WI7U,
      Lge.T8WIFI,
      Lge.TF10,
      Lge.TF10W,
      Lge.TF840,
      Lge.TH10,
      Lge.TIGER6,
      Lge.TIGERS,
      Lge.TIMELM,
      Lge.TVG2,
      Lge.TVG2A,
      Lge.U2,
      Lge.V1,
      Lge.V10,
      Lge.V1DS,
      Lge.VEE3DS,
      Lge.VEE3E,
      Lge.VEE4SS,
      Lge.VEE5DS,
      Lge.VEE5NFC,
      Lge.VEE5SS,
      Lge.VEE7DS,
      Lge.VEE7E,
      Lge.VFP,
      Lge.VFP3G,
      Lge.VFPV,
      Lge.VU2KT,
      Lge.VU2SK,
      Lge.VU3,
      Lge.W3,
      Lge.W3C,
      Lge.W3DS,
      Lge.W3VOIP,
      Lge.W5,
      Lge.W55,
      Lge.W55DS,
      Lge.W55N,
      Lge.W5C,
      Lge.W5DS,
      Lge.W5N,
      Lge.W6,
      Lge.W6DS,
      Lge.W7,
      Lge.W7DS,
      Lge.W7DSN,
      Lge.W7N,
      Lge.WINGLM,
      Lge.WOOFER2,
      Lge.X10,
      Lge.X5,
      Lge.Y25,
      Lge.Y25C,
      Lge.Y30,
      Lge.Y30DSF,
      Lge.Y30F,
      Lge.Y50,
      Lge.Y50C,
      Lge.YG,
      Lge.Z2,
      Lge.ZEE
  )

  /**
   * Get all device specifications for LGHelloVision devices.
   * Useful for lghellovision testing.
   */
  public fun getLghellovisionDevices(): List<String> = listOf(
      Lghellovision.K1100UA,
      Lghellovision.K1200UA,
      Lghellovision.UCE4027CJH
  )

  /**
   * Get all device specifications for LGUplus devices.
   * Useful for lguplus testing.
   */
  public fun getLguplusDevices(): List<String> = listOf(
      Lguplus.UHD4K,
      Lguplus.UIE4057LGU,
      Lguplus.UTE7057LGU
  )

  /**
   * Get all device specifications for LIBERTON devices.
   * Useful for liberton testing.
   */
  public fun getLibertonDevices(): List<String> = listOf(
      Liberton.LONGSHAN,
      Liberton.REDWOOD
  )

  /**
   * Get all device specifications for Libre devices.
   * Useful for libre testing.
   */
  public fun getLibreDevices(): List<String> = listOf(
      Libre.W101,
      Libre.W808
  )

  /**
   * Get all device specifications for LIFE_Digital devices.
   * Useful for life_digital testing.
   */
  public fun getLifeDigitalDevices(): List<String> = listOf(
      LifeDigital.K3102_4G,
      LifeDigital.K3102_W
  )

  /**
   * Get all device specifications for Life_mobile devices.
   * Useful for life_mobile testing.
   */
  public fun getLifeMobileDevices(): List<String> = listOf(
      LifeMobile.LM1
  )

  /**
   * Get all device specifications for LIFEPHONE devices.
   * Useful for lifephone testing.
   */
  public fun getLifephoneDevices(): List<String> = listOf(
      Lifephone.LIFEPHONE_HERO,
      Lifephone.LIFEPHONE_IDOL,
      Lifephone.LIFEPHONE_STAR,
      Lifephone.LIFEPHONE_VISION
  )

  /**
   * Get all device specifications for Lincplus devices.
   * Useful for lincplus testing.
   */
  public fun getLincplusDevices(): List<String> = listOf(
      Lincplus.T3_US,
      Lincplus.T4,
      Lincplus.T4_EU
  )

  /**
   * Get all device specifications for LinkNet devices.
   * Useful for linknet testing.
   */
  public fun getLinknetDevices(): List<String> = listOf(
      Linknet.DCN88_72604_LN,
      Linknet.DMTS21LC,
      Linknet.DTC2140,
      Linknet.DTC2160,
      Linknet.DTC9565,
      Linknet.DTP2162,
      Linknet.DTP9718
  )

  /**
   * Get all device specifications for LINNEX devices.
   * Useful for linnex testing.
   */
  public fun getLinnexDevices(): List<String> = listOf(
      Linnex.LX50
  )

  /**
   * Get all device specifications for Linsar devices.
   * Useful for linsar testing.
   */
  public fun getLinsarDevices(): List<String> = listOf(
      Linsar.BANGBAE,
      Linsar.KOMAGOME,
      Linsar.SADANG,
      Linsar.UENO
  )

  /**
   * Get all device specifications for LINSAY devices.
   * Useful for linsay testing.
   */
  public fun getLinsayDevices(): List<String> = listOf(
      Linsay.F10XIPG,
      Linsay.F10XIPS,
      Linsay.F10XIPSQ,
      Linsay.F7UHD,
      Linsay.F_10XIPS,
      Linsay.LINSAY_F7HD4CORE
  )

  /**
   * Get all device specifications for LISTO devices.
   * Useful for listo testing.
   */
  public fun getListoDevices(): List<String> = listOf(
      Listo.WEBPAD1004,
      Listo.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for LitByLeia devices.
   * Useful for litbyleia testing.
   */
  public fun getLitbyleiaDevices(): List<String> = listOf(
      Litbyleia.LPD_10W
  )

  /**
   * Get all device specifications for LiteTEL devices.
   * Useful for litetel testing.
   */
  public fun getLitetelDevices(): List<String> = listOf(
      Litetel.X20
  )

  /**
   * Get all device specifications for LLOYD devices.
   * Useful for lloyd testing.
   */
  public fun getLloydDevices(): List<String> = listOf(
      Lloyd.R1,
      Lloyd.R2,
      Lloyd.R3,
      Lloyd.SW6H,
      Lloyd.UMEDA
  )

  /**
   * Get all device specifications for LNMBBS devices.
   * Useful for lnmbbs testing.
   */
  public fun getLnmbbsDevices(): List<String> = listOf(
      Lnmbbs.H11_EEA,
      Lnmbbs.L20,
      Lnmbbs.L20_EEA,
      Lnmbbs.L201_EEA,
      Lnmbbs.L211,
      Lnmbbs.L23,
      Lnmbbs.L23_EEA,
      Lnmbbs.L28_EEA,
      Lnmbbs.L60,
      Lnmbbs.L80_US,
      Lnmbbs.P40_EEA,
      Lnmbbs.P401
  )

  /**
   * Get all device specifications for LOGIC devices.
   * Useful for logic testing.
   */
  public fun getLogicDevices(): List<String> = listOf(
      Logic.L4T,
      Logic.L55A,
      Logic.L55B,
      Logic.L63A,
      Logic.L66,
      Logic.L66_LITE,
      Logic.L66_PRO,
      Logic.L68_ULTRA,
      Logic.LOGIC_G1L,
      Logic.LOGIC_L4T,
      Logic.LOGIC_L50,
      Logic.LOGIC_L50T,
      Logic.LOGIC_L55S,
      Logic.LOGIC_L55V_PLUS,
      Logic.LOGIC_L57,
      Logic.LOGIC_L5D,
      Logic.LOGIC_L60,
      Logic.LOGIC_L61,
      Logic.LOGIC_L63,
      Logic.LOGIC_L65,
      Logic.LOGIC_L65_LITE,
      Logic.LOGIC_L65T,
      Logic.LOGIC_L66M,
      Logic.LOGIC_L68,
      Logic.LOGIC_MV01,
      Logic.LOGIC_MV02,
      Logic.LOGIC_T10L_PLUS,
      Logic.LOGIC_T10M,
      Logic.LOGIC_X40,
      Logic.LOGIC_X50,
      Logic.LOGIC_X50X,
      Logic.LOGIC_X57A,
      Logic.MTK9679,
      Logic.RK3576_U,
      Logic.T10B,
      Logic.T10L,
      Logic.T3G,
      Logic.T3GPLUS,
      Logic.T4G,
      Logic.X4,
      Logic.X4G,
      Logic.X50A
  )

  /**
   * Get all device specifications for logic_instrumemt devices.
   * Useful for logic_instrumemt testing.
   */
  public fun getLogicInstrumemtDevices(): List<String> = listOf(
      LogicInstrumemt.LIFBN101
  )

  /**
   * Get all device specifications for Logicom devices.
   * Useful for logicom testing.
   */
  public fun getLogicomDevices(): List<String> = listOf(
      Logicom.AERO_EEA,
      Logicom.COMET_EEA,
      Logicom.CT1080,
      Logicom.ELIO,
      Logicom.EZY,
      Logicom.EZY_2,
      Logicom.FIVE_EEA,
      Logicom.FIVE_PRO,
      Logicom.FIVE_PRO_32,
      Logicom.FLOW_EEA,
      Logicom.GENERIC,
      Logicom.IDBOT53PLUS,
      Logicom.IDBOT553,
      Logicom.IDBOT553PLUS,
      Logicom.L_EMENT505,
      Logicom.L_EMENT551,
      Logicom.L_EMENT553,
      Logicom.L_EMENT_403,
      Logicom.LA_TAB_105,
      Logicom.LA_TAB_105_P,
      Logicom.LA_TAB_105_P_REV2,
      Logicom.LA_TAB_114,
      Logicom.LA_TAB_114_REV2,
      Logicom.LA_TAB_115,
      Logicom.LA_TAB_124_HD,
      Logicom.LA_TAB_124_HD_PLUS,
      Logicom.LA_TAB_127_HD_EEA,
      Logicom.LA_TAB_128,
      Logicom.LA_TAB_292,
      Logicom.LA_TAB_72,
      Logicom.LA_TAB_74,
      Logicom.LA_TAB_74_REV2_AF,
      Logicom.LA_TAB_74_REV2_EEA,
      Logicom.LA_TAB_75,
      Logicom.LA_TAB_90,
      Logicom.LA_TAB_LINK_101,
      Logicom.LA_TAB_LINK_71_P,
      Logicom.LA_TAB_LINK_73,
      Logicom.LA_TAB_LINK_74,
      Logicom.LA_TAB_STAND,
      Logicom.LATAB106,
      Logicom.LATAB109HD,
      Logicom.LE_CONNECT,
      Logicom.LE_FIZZ,
      Logicom.LE_HELLO,
      Logicom.LE_HOLA,
      Logicom.LE_HOLA_FR,
      Logicom.LE_LINK,
      Logicom.LE_OMEGA,
      Logicom.LE_PRIME,
      Logicom.LE_PULSE,
      Logicom.LE_SMOOTH,
      Logicom.LE_SPARK,
      Logicom.LE_WAVE,
      Logicom.LEFIT,
      Logicom.LEFITFR,
      Logicom.LELIFT,
      Logicom.LEMENTTAB1042,
      Logicom.LEMENTTAB1043,
      Logicom.LEMOOV,
      Logicom.LEMOOV2,
      Logicom.LEMUST,
      Logicom.LEMUST2,
      Logicom.LEUP,
      Logicom.LOGICOM_LEHOP,
      Logicom.LOGIKIDS11,
      Logicom.LOGIKIDS5,
      Logicom.LOGIKIDS7,
      Logicom.LOGIKIDS_10,
      Logicom.LOGIKIDS_11P,
      Logicom.LOGIKIDS_5_REV2,
      Logicom.LOGIKIDS_5_REV2_AF,
      Logicom.LS0591121F,
      Logicom.LT1012211F,
      Logicom.LUMA,
      Logicom.LUNAR_EEA,
      Logicom.LUNAR_PRO,
      Logicom.LYRA_PLUS_EEA,
      Logicom.M_BOT_TAB_10,
      Logicom.M_BOT_TAB_1150,
      Logicom.MBOTTAB103,
      Logicom.ONIX,
      Logicom.SENSE_EEA,
      Logicom.SMART_PRO_EEA,
      Logicom.SOLAR,
      Logicom.SOLAR_PRO,
      Logicom.TAB134,
      Logicom.TAB76,
      Logicom.TAB_80,
      Logicom.TAB_LINK_104,
      Logicom.TAB_STAND_PRO,
      Logicom.TAB_STAND_PRO_2,
      Logicom.TAB_XXL_14,
      Logicom.TABXL_14,
      Logicom.WAVE_2,
      Logicom.WAVE_2S,
      Logicom.YUNO
  )

  /**
   * Get all device specifications for Logik devices.
   * Useful for logik testing.
   */
  public fun getLogikDevices(): List<String> = listOf(
      Logik.SADANG,
      Logik.TABATA,
      Logik.UENO
  )

  /**
   * Get all device specifications for Logitec devices.
   * Useful for logitec testing.
   */
  public fun getLogitecDevices(): List<String> = listOf(
      Logitec.LZ_AA10
  )

  /**
   * Get all device specifications for Logitech devices.
   * Useful for logitech testing.
   */
  public fun getLogitechDevices(): List<String> = listOf(
      Logitech.GR0006
  )

  /**
   * Get all device specifications for louisvuitton devices.
   * Useful for louisvuitton testing.
   */
  public fun getLouisvuittonDevices(): List<String> = listOf(
      Louisvuitton.LING,
      Louisvuitton.SUNDIAL
  )

  /**
   * Get all device specifications for LP devices.
   * Useful for lp testing.
   */
  public fun getLpDevices(): List<String> = listOf(
      Lp.LP_LEGEND,
      Lp.LP_N60,
      Lp.LP_N_50,
      Lp.LP_N_57,
      Lp.LP_PRO1,
      Lp.LP_T70,
      Lp.LP_T70_LITE,
      Lp.LP_VYPER,
      Lp.N_57,
      Lp.N_57_PLUS,
      Lp.N_60,
      Lp.N60,
      Lp.T100,
      Lp.VYPER_PRO,
      Lp.W55
  )

  /**
   * Get all device specifications for LT devices.
   * Useful for lt testing.
   */
  public fun getLtDevices(): List<String> = listOf(
      Lt.HLTE227E,
      Lt.HS8909QC,
      Lt.HS8917QC,
      Lt.LT,
      Lt.LT_NOTE_10S,
      Lt.LT971,
      Lt.LT_6217,
      Lt.LT_6509,
      Lt.LT_8103,
      Lt.LT_8501,
      Lt.LT_9701,
      Lt.LT_9902,
      Lt.LT_9906,
      Lt.LT_C1500,
      Lt.LT_C2100,
      Lt.LT_C2200,
      Lt.LT_C3300,
      Lt.LT_C3500,
      Lt.LT_S10_LITE,
      Lt.LT_S9_NOTE,
      Lt.NOTE_30
  )

  /**
   * Get all device specifications for LT_mobile devices.
   * Useful for lt_mobile testing.
   */
  public fun getLtMobileDevices(): List<String> = listOf(
      LtMobile.LT_2003,
      LtMobile.LT_MOBILE_C26,
      LtMobile.LT_MOBILE_C60,
      LtMobile.LT_MOBILE_E16,
      LtMobile.LT_MOBILE_E18,
      LtMobile.LT_MOBILE_E6707,
      LtMobile.LT_MOBILE_S22,
      LtMobile.LT_MOBILE_S33
  )

  /**
   * Get all device specifications for LUCOMS devices.
   * Useful for lucoms testing.
   */
  public fun getLucomsDevices(): List<String> = listOf(
      Lucoms.HONGKONG,
      Lucoms.MOUNTBAKER,
      Lucoms.R1,
      Lucoms.R2,
      Lucoms.SINDORIM,
      Lucoms.STANFORD,
      Lucoms.ZHONGSHAN
  )

  /**
   * Get all device specifications for Lumigon devices.
   * Useful for lumigon testing.
   */
  public fun getLumigonDevices(): List<String> = listOf(
      Lumigon.LUMIGON_T3
  )

  /**
   * Get all device specifications for LUMIO devices.
   * Useful for lumio testing.
   */
  public fun getLumioDevices(): List<String> = listOf(
      Lumio.KHARDI
  )

  /**
   * Get all device specifications for Lumitel devices.
   * Useful for lumitel testing.
   */
  public fun getLumitelDevices(): List<String> = listOf(
      Lumitel.L9502,
      Lumitel.L9503
  )

  /**
   * Get all device specifications for LUMUS devices.
   * Useful for lumus testing.
   */
  public fun getLumusDevices(): List<String> = listOf(
      Lumus.INNOSR545,
      Lumus.NEOSR620
  )

  /**
   * Get all device specifications for LUNA devices.
   * Useful for luna testing.
   */
  public fun getLunaDevices(): List<String> = listOf(
      Luna.G6,
      Luna.G6E,
      Luna.LUNA_G9,
      Luna.LUNA_T10,
      Luna.LUNA_V6,
      Luna.LUNA_V6_3GB
  )

  /**
   * Get all device specifications for LUNAR devices.
   * Useful for lunar testing.
   */
  public fun getLunarDevices(): List<String> = listOf(
      Lunar.LUNAR_ECLIPSE_L1
  )

  /**
   * Get all device specifications for Lunnen devices.
   * Useful for lunnen testing.
   */
  public fun getLunnenDevices(): List<String> = listOf(
      Lunnen.TL42810L01,
      Lunnen.TL4648S01,
      Lunnen.TL62810G01,
      Lunnen.TL65611S01,
      Lunnen.TL85611B01
  )

  /**
   * Get all device specifications for LUO devices.
   * Useful for luo testing.
   */
  public fun getLuoDevices(): List<String> = listOf(
      Luo.P70_PRO,
      Luo.S15_PRO,
      Luo.S16_PRO,
      Luo.S17_PRO,
      Luo.S18_MAX
  )

  /**
   * Get all device specifications for LUSH_MINT devices.
   * Useful for lush_mint testing.
   */
  public fun getLushMintDevices(): List<String> = listOf(
      LushMint.LM5314G,
      LushMint.LM5514G
  )

  /**
   * Get all device specifications for LVILLE devices.
   * Useful for lville testing.
   */
  public fun getLvilleDevices(): List<String> = listOf(
      Lville.TP1005,
      Lville.TPC1013,
      Lville.TPC1013_EEA
  )

  /**
   * Get all device specifications for LW devices.
   * Useful for lw testing.
   */
  public fun getLwDevices(): List<String> = listOf(
      Lw.LW788
  )

  /**
   * Get all device specifications for LYF devices.
   * Useful for lyf testing.
   */
  public fun getLyfDevices(): List<String> = listOf(
      Lyf.C_451,
      Lyf.FL7008,
      Lyf.HL_L51P,
      Lyf.LS_4006,
      Lyf.LS_4008,
      Lyf.LS_4503,
      Lyf.LS_4505,
      Lyf.LS_5009,
      Lyf.LS_5010,
      Lyf.LS_5013,
      Lyf.LS_5016,
      Lyf.LS_5020,
      Lyf.LS_5505,
      Lyf.LS_5506,
      Lyf.LS_5512,
      Lyf.LS_6001,
      Lyf.LT_8001,
      Lyf.LT_8001_IRIS,
      Lyf.P839F30,
      Lyf.P839F50,
      Lyf.PANDA01A_MSM8952_64,
      Lyf.ZTE_T920,
      Lyf.ZX55Q05_64
  )

  /**
   * Get all device specifications for LYNKNEX devices.
   * Useful for lynknex testing.
   */
  public fun getLynknexDevices(): List<String> = listOf(
      Lynknex.LYNKNEX_PX5
  )

  /**
   * Get all device specifications for LYOTECH_LABS devices.
   * Useful for lyotech_labs testing.
   */
  public fun getLyotechLabsDevices(): List<String> = listOf(
      LyotechLabs.LFI_ONE
  )

  /**
   * Get all device specifications for LZU devices.
   * Useful for lzu testing.
   */
  public fun getLzuDevices(): List<String> = listOf(
      Lzu.D113,
      Lzu.D113_EEA
  )

  /**
   * Get all device specifications for M3 devices.
   * Useful for m3 testing.
   */
  public fun getM3Devices(): List<String> = listOf(
      M3.M3_SL10,
      M3.M3SL20,
      M3.M3SL20K,
      M3.M3SL20PLUS,
      M3.M3SM15N,
      M3.M3SM15X,
      M3.M3SM20,
      M3.M3UL20F,
      M3.M3UL20W,
      M3.M3UL20X,
      M3.M3US20W,
      M3.M3US20X
  )

  /**
   * Get all device specifications for M4TEL devices.
   * Useful for m4tel testing.
   */
  public fun getM4telDevices(): List<String> = listOf(
      M4tel.DREAMPLUS02A_S10A,
      M4tel.DREAMPLUS03A_S14A,
      M4tel.NOVA03A_S22A,
      M4tel.R2,
      M4tel.R2_PLUS
  )

  /**
   * Get all device specifications for M_HORSE devices.
   * Useful for m_horse testing.
   */
  public fun getMHorseDevices(): List<String> = listOf(
      MHorse.A9,
      MHorse.C67,
      MHorse.C68,
      MHorse.M2S,
      MHorse.PURE_3
  )

  /**
   * Get all device specifications for M-KOPA devices.
   * Useful for m-kopa testing.
   */
  public fun getMKopaDevices(): List<String> = listOf(
      MKopa.S34
  )

  /**
   * Get all device specifications for Mafe devices.
   * Useful for mafe testing.
   */
  public fun getMafeDevices(): List<String> = listOf(
      Mafe.V9,
      Mafe.Z2
  )

  /**
   * Get all device specifications for MAG devices.
   * Useful for mag testing.
   */
  public fun getMagDevices(): List<String> = listOf(
      Mag.LAVENDER,
      Mag.MAG425A,
      Mag.MAG500A,
      Mag.YHT
  )

  /**
   * Get all device specifications for MAGCH devices.
   * Useful for magch testing.
   */
  public fun getMagchDevices(): List<String> = listOf(
      Magch.M210,
      Magch.M321,
      Magch.M321_EEA,
      Magch.M610,
      Magch.M610_EEA,
      Magch.M820,
      Magch.M820_EEA,
      Magch.M821,
      Magch.M821_EEA,
      Magch.T7_PRO
  )

  /**
   * Get all device specifications for Magenta-TV devices.
   * Useful for magenta-tv testing.
   */
  public fun getMagentaTvDevices(): List<String> = listOf(
      MagentaTv.DV6067Y_TVSTICK,
      MagentaTv.HY44G
  )

  /**
   * Get all device specifications for MagentaTV devices.
   * Useful for magentatv testing.
   */
  public fun getMagentatvDevices(): List<String> = listOf(
      Magentatv.DV6067Y,
      Magentatv.HY44G,
      Magentatv.IMTM840A,
      Magentatv.SEI804DT
  )

  /**
   * Get all device specifications for MAGICworld devices.
   * Useful for magicworld testing.
   */
  public fun getMagicworldDevices(): List<String> = listOf(
      Magicworld.LONGSHAN
  )

  /**
   * Get all device specifications for MAGNAVOX devices.
   * Useful for magnavox testing.
   */
  public fun getMagnavoxDevices(): List<String> = listOf(
      Magnavox.MMP848
  )

  /**
   * Get all device specifications for MagneticNorth devices.
   * Useful for magneticnorth testing.
   */
  public fun getMagneticnorthDevices(): List<String> = listOf(
      Magneticnorth.MULTIPLE_APPLICATIONS_DISPLAY_TERMINAL
  )

  /**
   * Get all device specifications for MAGNUMTECH devices.
   * Useful for magnumtech testing.
   */
  public fun getMagnumtechDevices(): List<String> = listOf(
      Magnumtech.MG715
  )

  /**
   * Get all device specifications for MAJESTIC devices.
   * Useful for majestic testing.
   */
  public fun getMajesticDevices(): List<String> = listOf(
      Majestic.JACK,
      Majestic.JOE,
      Majestic.LASALLE,
      Majestic.TAB_714,
      Majestic.TAB_746,
      Majestic.TAB_611_3G,
      Majestic.TAB_711_4G,
      Majestic.TAB_720_PLUS,
      Majestic.TAB_811_4G,
      Majestic.TAB_812_4G,
      Majestic.TAB_814,
      Majestic.TAB_847_3G,
      Majestic.TAB_911_3G,
      Majestic.TAB_912_4G,
      Majestic.TAB_912_PRO_4G,
      Majestic.TAB_914,
      Majestic.TAB_915_4G,
      Majestic.TAB_916_4G,
      Majestic.TAB_918_PRO_4G,
      Majestic.TAB_920_PLUS_4G
  )

  /**
   * Get all device specifications for malata devices.
   * Useful for malata testing.
   */
  public fun getMalataDevices(): List<String> = listOf(
      Malata.UV350
  )

  /**
   * Get all device specifications for MANGO devices.
   * Useful for mango testing.
   */
  public fun getMangoDevices(): List<String> = listOf(
      Mango.HONGKONG,
      Mango.MOUNTBAKER
  )

  /**
   * Get all device specifications for MANTRA devices.
   * Useful for mantra testing.
   */
  public fun getMantraDevices(): List<String> = listOf(
      Mantra.MFSTAB,
      Mantra.MFSTAB_74G,
      Mantra.MFSTABII,
      Mantra.MFSTABIV,
      Mantra.MOXA7,
      Mantra.MOXA71
  )

  /**
   * Get all device specifications for mara devices.
   * Useful for mara testing.
   */
  public fun getMaraDevices(): List<String> = listOf(
      Mara.MARA_X,
      Mara.MARA_X_SC,
      Mara.MARA_Z_D_SPROUT,
      Mara.MARA_Z_SPROUT
  )

  /**
   * Get all device specifications for Mara_Phones devices.
   * Useful for mara_phones testing.
   */
  public fun getMaraPhonesDevices(): List<String> = listOf(
      MaraPhones.MARA_X1,
      MaraPhones.MARA_X1_D,
      MaraPhones.MARA_Z1,
      MaraPhones.MARA_Z1_D
  )

  /**
   * Get all device specifications for MaraPhones devices.
   * Useful for maraphones testing.
   */
  public fun getMaraphonesDevices(): List<String> = listOf(
      Maraphones.MARA_S,
      Maraphones.MARAPHONES_R
  )

  /**
   * Get all device specifications for MARCEL devices.
   * Useful for marcel testing.
   */
  public fun getMarcelDevices(): List<String> = listOf(
      Marcel.GUANDU,
      Marcel.MARTIN,
      Marcel.ORBITM20,
      Marcel.TAMACHI,
      Marcel.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for MarkaTab devices.
   * Useful for markatab testing.
   */
  public fun getMarkatabDevices(): List<String> = listOf(
      Markatab.MARKATAB_1,
      Markatab.SPEADTRUM
  )

  /**
   * Get all device specifications for MARQ devices.
   * Useful for marq testing.
   */
  public fun getMarqDevices(): List<String> = listOf(
      Marq.BANGBAE,
      Marq.DV6067H,
      Marq.GIONEE_MAX,
      Marq.KOMAGOME
  )

  /**
   * Get all device specifications for Marshall devices.
   * Useful for marshall testing.
   */
  public fun getMarshallDevices(): List<String> = listOf(
      Marshall.KB_1501
  )

  /**
   * Get all device specifications for Marvel devices.
   * Useful for marvel testing.
   */
  public fun getMarvelDevices(): List<String> = listOf(
      Marvel.AVENGERS
  )

  /**
   * Get all device specifications for MARVUE devices.
   * Useful for marvue testing.
   */
  public fun getMarvueDevices(): List<String> = listOf(
      Marvue.KIDPA_M7,
      Marvue.M11,
      Marvue.M12,
      Marvue.M15,
      Marvue.M8,
      Marvue.M81,
      Marvue.M8_PRO,
      Marvue.PAD_M10,
      Marvue.PAD_M30
  )

  /**
   * Get all device specifications for MASCOM devices.
   * Useful for mascom testing.
   */
  public fun getMascomDevices(): List<String> = listOf(
      Mascom.MASCOM_SS289,
      Mascom.MASCOM_WS517
  )

  /**
   * Get all device specifications for Masscom devices.
   * Useful for masscom testing.
   */
  public fun getMasscomDevices(): List<String> = listOf(
      Masscom.MASSTEL_X1,
      Masscom.MASSTEL_X3,
      Masscom.MASSTEL_X5
  )

  /**
   * Get all device specifications for Masstel devices.
   * Useful for masstel testing.
   */
  public fun getMasstelDevices(): List<String> = listOf(
      Masstel._3G_TABLET_PC,
      Masstel.MASSTEL_HAPI_15,
      Masstel.MASSTEL_HAPI_20,
      Masstel.MASSTEL_HAPI_30,
      Masstel.MASSTEL_S7,
      Masstel.MASSTEL_S9,
      Masstel.MASSTEL_TAB10,
      Masstel.MASSTEL_TAB10_4G,
      Masstel.MASSTEL_TAB10_WIFI,
      Masstel.MASSTEL_TAB11_PRO_4G,
      Masstel.MASSTEL_TAB8,
      Masstel.MASSTEL_TAB8_4G,
      Masstel.MASSTEL_TAB8_EDU,
      Masstel.MASSTEL_TAB_101,
      Masstel.MASSTEL_TAB_101PRO,
      Masstel.MASSTEL_TAB_104,
      Masstel.MASSTEL_TAB_10E,
      Masstel.MASSTEL_TAB_10M,
      Masstel.MASSTEL_TAB_10S,
      Masstel.MASSTEL_TAB_82,
      Masstel.MASSTEL_TAB_83,
      Masstel.MASSTEL_X6,
      Masstel.MASSTEL_X8,
      Masstel.TAB10_EDU,
      Masstel.TAB10_EDUV2,
      Masstel.TAB10ULTRA,
      Masstel.TAB7PLUS,
      Masstel.TAB8PLUS,
      Masstel.TAB8PRO,
      Masstel.TAB_10A,
      Masstel.TAB_81,
      Masstel.TAB_8A
  )

  /**
   * Get all device specifications for MASTER-G devices.
   * Useful for master-g testing.
   */
  public fun getMasterGDevices(): List<String> = listOf(
      MasterG.HONGKONG,
      MasterG.LAVENDER,
      MasterG.MARTIN,
      MasterG.MOUNTBAKER,
      MasterG.PATRICK,
      MasterG.R1,
      MasterG.R10G,
      MasterG.R2,
      MasterG.R3_GTV,
      MasterG.R4_GTV,
      MasterG.SENSE701
  )

  /**
   * Get all device specifications for MasterG devices.
   * Useful for masterg testing.
   */
  public fun getMastergDevices(): List<String> = listOf(
      Masterg.MATEO,
      Masterg.PIONEER
  )

  /**
   * Get all device specifications for MASTERTECH devices.
   * Useful for mastertech testing.
   */
  public fun getMastertechDevices(): List<String> = listOf(
      Mastertech._77_EV,
      Mastertech.LAVENDER,
      Mastertech.M2M_3T,
      Mastertech.MOUNTBAKER,
      Mastertech.R3,
      Mastertech.R4
  )

  /**
   * Get all device specifications for MauritiusTelcom devices.
   * Useful for mauritiustelcom testing.
   */
  public fun getMauritiustelcomDevices(): List<String> = listOf(
      Mauritiustelcom.MTIPTVBOX
  )

  /**
   * Get all device specifications for MauritiusTelecom devices.
   * Useful for mauritiustelecom testing.
   */
  public fun getMauritiustelecomDevices(): List<String> = listOf(
      Mauritiustelecom.HY44G
  )

  /**
   * Get all device specifications for Maxcom devices.
   * Useful for maxcom testing.
   */
  public fun getMaxcomDevices(): List<String> = listOf(
      Maxcom.MAXCOM_MS554,
      Maxcom.MS457,
      Maxcom.MS457PLUS,
      Maxcom.MS459,
      Maxcom.MS507_STRONG,
      Maxcom.MS515,
      Maxcom.MS571,
      Maxcom.MS571_PLUS,
      Maxcom.MS572,
      Maxcom.MS651
  )

  /**
   * Get all device specifications for MAXFONE devices.
   * Useful for maxfone testing.
   */
  public fun getMaxfoneDevices(): List<String> = listOf(
      Maxfone.MAX_1X
  )

  /**
   * Get all device specifications for MAXHUB devices.
   * Useful for maxhub testing.
   */
  public fun getMaxhubDevices(): List<String> = listOf(
      Maxhub.E3,
      Maxhub.RK3588_T
  )

  /**
   * Get all device specifications for Maximus devices.
   * Useful for maximus testing.
   */
  public fun getMaximusDevices(): List<String> = listOf(
      Maximus.D1,
      Maximus.D7,
      Maximus.G10_MAX,
      Maximus.NOIR_X,
      Maximus.P2,
      Maximus.P3,
      Maximus.P7,
      Maximus.P7_PLUS,
      Maximus.R1_PRO
  )

  /**
   * Get all device specifications for Maxis devices.
   * Useful for maxis testing.
   */
  public fun getMaxisDevices(): List<String> = listOf(
      Maxis.VFD710
  )

  /**
   * Get all device specifications for MAXLEGEN devices.
   * Useful for maxlegen testing.
   */
  public fun getMaxlegenDevices(): List<String> = listOf(
      Maxlegen.M621,
      Maxlegen.M621_EEA
  )

  /**
   * Get all device specifications for MAXON devices.
   * Useful for maxon testing.
   */
  public fun getMaxonDevices(): List<String> = listOf(
      Maxon.ACER_AC50,
      Maxon.MAXON_MX50,
      Maxon.SENWA_S40
  )

  /**
   * Get all device specifications for Maxpac devices.
   * Useful for maxpac testing.
   */
  public fun getMaxpacDevices(): List<String> = listOf(
      Maxpac.PARROT_3G
  )

  /**
   * Get all device specifications for MAXRON devices.
   * Useful for maxron testing.
   */
  public fun getMaxronDevices(): List<String> = listOf(
      Maxron.MXPAD,
      Maxron.MXULTRA
  )

  /**
   * Get all device specifications for MAXSONIC-ELITE devices.
   * Useful for maxsonic-elite testing.
   */
  public fun getMaxsonicEliteDevices(): List<String> = listOf(
      MaxsonicElite.STANFORD,
      MaxsonicElite.ZHONGSHAN
  )

  /**
   * Get all device specifications for MAXTRON devices.
   * Useful for maxtron testing.
   */
  public fun getMaxtronDevices(): List<String> = listOf(
      Maxtron.MAXTRON_GENIO,
      Maxtron.SMART
  )

  /**
   * Get all device specifications for Maxvi devices.
   * Useful for maxvi testing.
   */
  public fun getMaxviDevices(): List<String> = listOf(
      Maxvi.MS502_ORION
  )

  /**
   * Get all device specifications for MAXWELL devices.
   * Useful for maxwell testing.
   */
  public fun getMaxwellDevices(): List<String> = listOf(
      Maxwell.MARINA,
      Maxwell.NAGATA
  )

  /**
   * Get all device specifications for Maxwest devices.
   * Useful for maxwest testing.
   */
  public fun getMaxwestDevices(): List<String> = listOf(
      Maxwest.ASTRO_4_PRO,
      Maxwest.ASTRO_55R,
      Maxwest.ASTRO_55T,
      Maxwest.ASTRO_5_PRO,
      Maxwest.ASTRO_5P,
      Maxwest.ASTRO_5T,
      Maxwest.ASTRO_5X,
      Maxwest.ASTRO_63R,
      Maxwest.ASTRO_8Q,
      Maxwest.ASTRO_8R,
      Maxwest.GRAVITY_5_GO,
      Maxwest.GRAVITY_6P,
      Maxwest.GRAVITY_G6,
      Maxwest.MX_A100RWW,
      Maxwest.MX_A10R1WW,
      Maxwest.MX_A10RWW,
      Maxwest.MX_A10WW,
      Maxwest.MX_A4R,
      Maxwest.MX_A63,
      Maxwest.MX_A64,
      Maxwest.MX_A65,
      Maxwest.MX_A66WW,
      Maxwest.MX_A6T,
      Maxwest.MX_G55,
      Maxwest.MX_GG128WW,
      Maxwest.MX_GG64WW,
      Maxwest.MX_GG65,
      Maxwest.MX_NA65,
      Maxwest.MX_NG56,
      Maxwest.MX_NN62WW01,
      Maxwest.NITRO_4X,
      Maxwest.NITRO_55A,
      Maxwest.NITRO_55C,
      Maxwest.NITRO_55E,
      Maxwest.NITRO_55Q,
      Maxwest.NITRO_55R,
      Maxwest.NITRO_5C,
      Maxwest.NITRO_5P,
      Maxwest.NITRO_7Q,
      Maxwest.NITRO_8,
      Maxwest.PANDA_7,
      Maxwest.PANDA_KIDS_7,
      Maxwest.TAB_9G,
      Maxwest.TAB_MAX_7
  )

  /**
   * Get all device specifications for MAZE devices.
   * Useful for maze testing.
   */
  public fun getMazeDevices(): List<String> = listOf(
      Maze.ALPHA,
      Maze.ALPHA_X
  )

  /**
   * Get all device specifications for MAZE_SPEED devices.
   * Useful for maze_speed testing.
   */
  public fun getMazeSpeedDevices(): List<String> = listOf(
      MazeSpeed.M1582C,
      MazeSpeed.M1582C_MAX,
      MazeSpeed.M1586K,
      MazeSpeed.MP5184G,
      MazeSpeed.MS5314G,
      MazeSpeed.MS5414G,
      MazeSpeed.MS5424G,
      MazeSpeed.MS5514G,
      MazeSpeed.MS5539G,
      MazeSpeed.MS5614G,
      MazeSpeed.SSB10T323,
      MazeSpeed.SSB504R,
      MazeSpeed.SSB8C223,
      MazeSpeed.SSB8T323
  )

  /**
   * Get all device specifications for MBO devices.
   * Useful for mbo testing.
   */
  public fun getMboDevices(): List<String> = listOf(
      Mbo._16A_PRO,
      Mbo._24S_ULTRA
  )

  /**
   * Get all device specifications for mbs devices.
   * Useful for mbs testing.
   */
  public fun getMbsDevices(): List<String> = listOf(
      Mbs.BLUEFISH,
      Mbs.CORALIA,
      Mbs.ICEFISH,
      Mbs.LIONFISH,
      Mbs.TRITON
  )

  /**
   * Get all device specifications for MDC devices.
   * Useful for mdc testing.
   */
  public fun getMdcDevices(): List<String> = listOf(
      Mdc.PRIME_S
  )

  /**
   * Get all device specifications for Me_Mobile devices.
   * Useful for me_mobile testing.
   */
  public fun getMeMobileDevices(): List<String> = listOf(
      MeMobile.GRACE_9
  )

  /**
   * Get all device specifications for meanIT devices.
   * Useful for meanit testing.
   */
  public fun getMeanitDevices(): List<String> = listOf(
      Meanit.K17,
      Meanit.MEANIT_X10,
      Meanit.MEANIT_K20,
      Meanit.MEANIT_K28_EEA,
      Meanit.MEANIT_X1,
      Meanit.MEANIT_X2,
      Meanit.MEANIT_X20,
      Meanit.MEANIT_X4,
      Meanit.MEANIT_X40_EEA,
      Meanit.MEANIT_X50_EEA,
      Meanit.MEANIT_X6,
      Meanit.MTAB32_EEA,
      Meanit.SMARTPHONE_X5,
      Meanit.START_S5,
      Meanit.X3
  )

  /**
   * Get all device specifications for Meberry devices.
   * Useful for meberry testing.
   */
  public fun getMeberryDevices(): List<String> = listOf(
      Meberry.M7,
      Meberry.M7_EEA,
      Meberry.M7_US,
      Meberry.M7PRO,
      Meberry.M8_EEA,
      Meberry.M8_US
  )

  /**
   * Get all device specifications for Mecer devices.
   * Useful for mecer testing.
   */
  public fun getMecerDevices(): List<String> = listOf(
      Mecer.DX10_66,
      Mecer.DX10_66_LTE,
      Mecer.M17QF6_3GPLUS,
      Mecer.M17QF6_3G,
      Mecer.M17QF6_4G,
      Mecer.M17QF7_4G,
      Mecer.M76QF6,
      Mecer.M77QF6,
      Mecer.M86Q9_3G,
      Mecer.MF716,
      Mecer.MF716_PLUS,
      Mecer.MW16Q9_3G,
      Mecer.TF10EA2_11,
      Mecer.TF10MK1_3
  )

  /**
   * Get all device specifications for MECOOL devices.
   * Useful for mecool testing.
   */
  public fun getMecoolDevices(): List<String> = listOf(
      Mecool.BOS,
      Mecool.KA1,
      Mecool.KA2,
      Mecool.KD1,
      Mecool.KD2,
      Mecool.KM1,
      Mecool.KM3,
      Mecool.KM6,
      Mecool.KM7,
      Mecool.KM8,
      Mecool.KM9PRO,
      Mecool.KT1,
      Mecool.LAS,
      Mecool.YDA,
      Mecool.YYC,
      Mecool.YYT
  )

  /**
   * Get all device specifications for Mediabox devices.
   * Useful for mediabox testing.
   */
  public fun getMediaboxDevices(): List<String> = listOf(
      Mediabox.DV8235,
      Mediabox.JFK
  )

  /**
   * Get all device specifications for MEDIACOM devices.
   * Useful for mediacom testing.
   */
  public fun getMediacomDevices(): List<String> = listOf(
      Mediacom._10EDGE,
      Mediacom._1AEC,
      Mediacom._1AY,
      Mediacom._1AZ,
      Mediacom._1AZ2P_EEA,
      Mediacom._1AZ2T,
      Mediacom._1BEC_EEA,
      Mediacom._1BY,
      Mediacom._1CY,
      Mediacom._1DY,
      Mediacom._1DY4G_EEA,
      Mediacom._1EY4G,
      Mediacom._1HY4G,
      Mediacom._1IY4G,
      Mediacom._7BY,
      Mediacom._7DY,
      Mediacom._8AY,
      Mediacom._8BY,
      Mediacom._8CY,
      Mediacom.AZIMUT_4,
      Mediacom.M_PPXS5,
      Mediacom.M_PPXS7,
      Mediacom.M_SP10HXXH,
      Mediacom.M_SP10KID,
      Mediacom.M_SP10MXHL,
      Mediacom.M_SP1AGO3G,
      Mediacom.M_SP1AZ2TW,
      Mediacom.M_SP1AZ3,
      Mediacom.M_SP1AZ3L,
      Mediacom.M_SP1AZ3L2,
      Mediacom.M_SP1AZ3P,
      Mediacom.M_SP1EY_EEA,
      Mediacom.M_SP1X10,
      Mediacom.M_SP7HXAH,
      Mediacom.M_SP7XGO3G,
      Mediacom.M_SP8DY_EEA,
      Mediacom.M_SP8EY,
      Mediacom.M_SP8GY,
      Mediacom.M_SP8KID,
      Mediacom.SMARTPAD,
      Mediacom.SP1AZ4_L,
      Mediacom.SP1AZ4_P
  )

  /**
   * Get all device specifications for MediaTek devices.
   * Useful for mediatek testing.
   */
  public fun getMediatekDevices(): List<String> = listOf(
      Mediatek.M7332_EU,
      Mediatek.MT5862_512M
  )

  /**
   * Get all device specifications for MEDION devices.
   * Useful for medion testing.
   */
  public fun getMedionDevices(): List<String> = listOf(
      Medion.B4570,
      Medion.B5032,
      Medion.B5060,
      Medion.B5070,
      Medion.B5530,
      Medion.B5531,
      Medion.B5532,
      Medion.E1041X,
      Medion.E1042X,
      Medion.E1043X,
      Medion.E1050X,
      Medion.E1051X,
      Medion.E1053X,
      Medion.E1060X,
      Medion.E1070X,
      Medion.E1071X,
      Medion.E1081X,
      Medion.E1090X,
      Medion.E691X,
      Medion.LIFETAB_E10310,
      Medion.LIFETAB_E10316,
      Medion.LIFETAB_E10320,
      Medion.LIFETAB_E7310,
      Medion.LIFETAB_E7316,
      Medion.LIFETAB_P733X,
      Medion.LIFETAB_P831X,
      Medion.LIFETAB_P891X,
      Medion.LIFETAB_P970X,
      Medion.LIFETAB_S1033X,
      Medion.LIFETAB_S1034X,
      Medion.LIFETAB_S1036X,
      Medion.LIFETAB_S785X,
      Medion.LIFETAB_S831X,
      Medion.P1032X,
      Medion.P1035X,
      Medion.P1050X,
      Medion.P1060X,
      Medion.P1061X,
      Medion.P1071X,
      Medion.P1075X,
      Medion.P1091X,
      Medion.P740X,
      Medion.P850X,
      Medion.P851X,
      Medion.P852X,
      Medion.S1032X,
      Medion.S1035X,
      Medion.S5004,
      Medion.S9714,
      Medion.X1030X,
      Medion.X1031X
  )

  /**
   * Get all device specifications for MEFERI devices.
   * Useful for meferi testing.
   */
  public fun getMeferiDevices(): List<String> = listOf(
      Meferi.ME10,
      Meferi.ME40K,
      Meferi.ME61,
      Meferi.ME74
  )

  /**
   * Get all device specifications for Megacable devices.
   * Useful for megacable testing.
   */
  public fun getMegacableDevices(): List<String> = listOf(
      Megacable.B826C_A12_ZTE,
      Megacable.B866V2_ZTE,
      Megacable.B866V2F,
      Megacable.HP46A,
      Megacable.UCW4046MEG,
      Megacable.UIW4059MEG
  )

  /**
   * Get all device specifications for MegaFon devices.
   * Useful for megafon testing.
   */
  public fun getMegafonDevices(): List<String> = listOf(
      Megafon.MF8_ATV,
      Megafon.MFLOGIN3T
  )

  /**
   * Get all device specifications for MEIIGOO devices.
   * Useful for meiigoo testing.
   */
  public fun getMeiigooDevices(): List<String> = listOf(
      Meiigoo.MEIIGOO_S8
  )

  /**
   * Get all device specifications for Meitu devices.
   * Useful for meitu testing.
   */
  public fun getMeituDevices(): List<String> = listOf(
      Meitu.M6,
      Meitu.MAYA,
      Meitu.MAYAS,
      Meitu.MELODY,
      Meitu.TIFFANY,
      Meitu.VELA,
      Meitu.VICTORIA,
      Meitu.VICTORIAS,
      Meitu.VIVIAN
  )

  /**
   * Get all device specifications for MEIZE devices.
   * Useful for meize testing.
   */
  public fun getMeizeDevices(): List<String> = listOf(
      Meize.D105,
      Meize.D106,
      Meize.D115,
      Meize.D125_EEA,
      Meize.D126,
      Meize.D126_EEA
  )

  /**
   * Get all device specifications for Meizu devices.
   * Useful for meizu testing.
   */
  public fun getMeizuDevices(): List<String> = listOf(
      Meizu._15,
      Meizu._15LITE,
      Meizu._15PLUS,
      Meizu._16,
      Meizu._16S,
      Meizu._16TH,
      Meizu._16THPLUS,
      Meizu._16X,
      Meizu.M15,
      Meizu.M1813,
      Meizu.M1822,
      Meizu.M1852,
      Meizu.M6NOTE,
      Meizu.M8LITE,
      Meizu.MEIZU16SPRO,
      Meizu.MEIZU16T,
      Meizu.MEIZU16XS,
      Meizu.MEIZU17,
      Meizu.MEIZU17PRO,
      Meizu.MEIZU18,
      Meizu.MEIZU18PRO,
      Meizu.MEIZU18S,
      Meizu.MEIZU18SPRO,
      Meizu.MEIZU18X,
      Meizu.MEIZU20,
      Meizu.MEIZU20INF,
      Meizu.MEIZU20PRO,
      Meizu.MEIZU21,
      Meizu.MEIZU21NOTE,
      Meizu.MEIZU21PRO,
      Meizu.MEIZU6T,
      Meizu.MEIZU_M6,
      Meizu.MEIZU_MBLU,
      Meizu.MEIZU_MBLU22,
      Meizu.MEIZU_MBLU22PRO,
      Meizu.MEIZU_NOTE21,
      Meizu.MEIZU_NOTE21_PRO,
      Meizu.MEIZUC9,
      Meizu.MEIZUC9PRO,
      Meizu.MEIZUE3,
      Meizu.MEIZUM10,
      Meizu.MEIZUM6S,
      Meizu.MEIZUM6T,
      Meizu.MEIZUM8,
      Meizu.MEIZUM8C,
      Meizu.MEIZUNOTE8,
      Meizu.MEIZUNOTE9,
      Meizu.MEIZUS6,
      Meizu.NOTE9,
      Meizu.POLESTARPHONE,
      Meizu.PRO7H,
      Meizu.PRO7PLUS,
      Meizu.PRO7S,
      Meizu.X8
  )

  /**
   * Get all device specifications for Melefon devices.
   * Useful for melefon testing.
   */
  public fun getMelefonDevices(): List<String> = listOf(
      Melefon.GOOD
  )

  /**
   * Get all device specifications for Melita devices.
   * Useful for melita testing.
   */
  public fun getMelitaDevices(): List<String> = listOf(
      Melita.DV8955C_C_KMM
  )

  /**
   * Get all device specifications for MEMOREX devices.
   * Useful for memorex testing.
   */
  public fun getMemorexDevices(): List<String> = listOf(
      Memorex.MTAB_PRO_2600
  )

  /**
   * Get all device specifications for menfop devices.
   * Useful for menfop testing.
   */
  public fun getMenfopDevices(): List<String> = listOf(
      Menfop.HAIERP8B
  )

  /**
   * Get all device specifications for MengalTab devices.
   * Useful for mengaltab testing.
   */
  public fun getMengaltabDevices(): List<String> = listOf(
      Mengaltab.MENGALTAB_ECHAGUE_ANZATECH
  )

  /**
   * Get all device specifications for Mengdash devices.
   * Useful for mengdash testing.
   */
  public fun getMengdashDevices(): List<String> = listOf(
      Mengdash.M_Q58
  )

  /**
   * Get all device specifications for MEO devices.
   * Useful for meo testing.
   */
  public fun getMeoDevices(): List<String> = listOf(
      Meo.DIW377_MEO,
      Meo.DIW3930_MEO,
      Meo.DV8555_MEO,
      Meo.DV8985_MEO
  )

  /**
   * Get all device specifications for Meswao devices.
   * Useful for meswao testing.
   */
  public fun getMeswaoDevices(): List<String> = listOf(
      Meswao.MES_B3
  )

  /**
   * Get all device specifications for Metfone devices.
   * Useful for metfone testing.
   */
  public fun getMetfoneDevices(): List<String> = listOf(
      Metfone.MEDIABOX_B866V2F
  )

  /**
   * Get all device specifications for MetroPCS devices.
   * Useful for metropcs testing.
   */
  public fun getMetropcsDevices(): List<String> = listOf(
      Metropcs.C50,
      Metropcs.E2NAM,
      Metropcs.G4STYLUSN,
      Metropcs.HWY301A1,
      Metropcs.LV3,
      Metropcs.LV517,
      Metropcs.M1,
      Metropcs.M209N,
      Metropcs.PH2N,
      Metropcs.SF340N,
      Metropcs.W5
  )

  /**
   * Get all device specifications for Metz devices.
   * Useful for metz testing.
   */
  public fun getMetzDevices(): List<String> = listOf(
      Metz._86SG1,
      Metz.SHINAGAWA
  )

  /**
   * Get all device specifications for Mgears devices.
   * Useful for mgears testing.
   */
  public fun getMgearsDevices(): List<String> = listOf(
      Mgears.MSTICK4_EEA
  )

  /**
   * Get all device specifications for MGS devices.
   * Useful for mgs testing.
   */
  public fun getMgsDevices(): List<String> = listOf(
      Mgs.BANGBAE,
      Mgs.BRUNO,
      Mgs.KOMAGOME
  )

  /**
   * Get all device specifications for MHL devices.
   * Useful for mhl testing.
   */
  public fun getMhlDevices(): List<String> = listOf(
      Mhl.TRECFONE_A21S
  )

  /**
   * Get all device specifications for MI devices.
   * Useful for mi testing.
   */
  public fun getMiDevices(): List<String> = listOf(
      Mi.ALIOTHIN,
      Mi.ANGLEE,
      Mi.EVA
  )

  /**
   * Get all device specifications for Micromax devices.
   * Useful for micromax testing.
   */
  public fun getMicromaxDevices(): List<String> = listOf(
      Micromax.A107,
      Micromax.AQ5001,
      Micromax.B5_PRO,
      Micromax.BHARAT_5,
      Micromax.BHARAT_5_PLUS,
      Micromax.BHARAT_5_PRO,
      Micromax.C1,
      Micromax.C1A,
      Micromax.C2A,
      Micromax.C2APLUS,
      Micromax.E311,
      Micromax.E313,
      Micromax.E352,
      Micromax.E453,
      Micromax.E455,
      Micromax.E460,
      Micromax.E481,
      Micromax.E4816,
      Micromax.E484,
      Micromax.E485,
      Micromax.E6523,
      Micromax.E6533,
      Micromax.E6746,
      Micromax.E7446,
      Micromax.E7533,
      Micromax.E7544,
      Micromax.E7746,
      Micromax.F666,
      Micromax.HS1,
      Micromax.HS2,
      Micromax.HS3,
      Micromax.IKEBUKURO,
      Micromax.N4120,
      Micromax.N8301,
      Micromax.N8305,
      Micromax.P290,
      Micromax.P470,
      Micromax.P480,
      Micromax.P680,
      Micromax.P681,
      Micromax.P701,
      Micromax.P702,
      Micromax.P70221,
      Micromax.P802,
      Micromax.Q300,
      Micromax.Q301,
      Micromax.Q326,
      Micromax.Q334,
      Micromax.Q338,
      Micromax.Q340,
      Micromax.Q346,
      Micromax.Q349,
      Micromax.Q350,
      Micromax.Q3502,
      Micromax.Q354,
      Micromax.Q3551,
      Micromax.Q372,
      Micromax.Q380,
      Micromax.Q381,
      Micromax.Q385,
      Micromax.Q386,
      Micromax.Q391,
      Micromax.Q392,
      Micromax.Q394,
      Micromax.Q4001,
      Micromax.Q4002,
      Micromax.Q402,
      Micromax.Q402PLUS,
      Micromax.Q409,
      Micromax.Q409A,
      Micromax.Q413,
      Micromax.Q416,
      Micromax.Q417,
      Micromax.Q4202,
      Micromax.Q4204,
      Micromax.Q421,
      Micromax.Q4251,
      Micromax.Q426,
      Micromax.Q4260,
      Micromax.Q427,
      Micromax.Q4310,
      Micromax.Q4311,
      Micromax.Q437,
      Micromax.Q440,
      Micromax.Q452,
      Micromax.Q4601,
      Micromax.Q461,
      Micromax.Q462,
      Micromax.Q463,
      Micromax.Q465,
      Micromax.Q479,
      Micromax.R2,
      Micromax.TCL_EU
  )

  /**
   * Get all device specifications for Microtech devices.
   * Useful for microtech testing.
   */
  public fun getMicrotechDevices(): List<String> = listOf(
      Microtech.ETAB_LTE,
      Microtech.ETL101A_EEA,
      Microtech.ETW101GT_C_EEA,
      Microtech.ETW101GT_EEA
  )

  /**
   * Get all device specifications for MicroTouch devices.
   * Useful for microtouch testing.
   */
  public fun getMicrotouchDevices(): List<String> = listOf(
      Microtouch.IDC_SERIES
  )

  /**
   * Get all device specifications for Mightier devices.
   * Useful for mightier testing.
   */
  public fun getMightierDevices(): List<String> = listOf(
      Mightier.MT003_19,
      Mightier.MT003_20,
      Mightier.MT003_21,
      Mightier.MT004_20
  )

  /**
   * Get all device specifications for MIKU devices.
   * Useful for miku testing.
   */
  public fun getMikuDevices(): List<String> = listOf(
      Miku.TAB63A
  )

  /**
   * Get all device specifications for Mimio devices.
   * Useful for mimio testing.
   */
  public fun getMimioDevices(): List<String> = listOf(
      Mimio.RK3588_T
  )

  /**
   * Get all device specifications for MINDEO devices.
   * Useful for mindeo testing.
   */
  public fun getMindeoDevices(): List<String> = listOf(
      Mindeo.MS8389
  )

  /**
   * Get all device specifications for Minimal_Phone devices.
   * Useful for minimal_phone testing.
   */
  public fun getMinimalPhoneDevices(): List<String> = listOf(
      MinimalPhone.MP01
  )

  /**
   * Get all device specifications for MINISTER devices.
   * Useful for minister testing.
   */
  public fun getMinisterDevices(): List<String> = listOf(
      Minister.R1,
      Minister.R2
  )

  /**
   * Get all device specifications for MINIX devices.
   * Useful for minix testing.
   */
  public fun getMinixDevices(): List<String> = listOf(
      Minix.DV8553
  )

  /**
   * Get all device specifications for Mint devices.
   * Useful for mint testing.
   */
  public fun getMintDevices(): List<String> = listOf(
      Mint.M5CR,
      Mint.MINT_FOX,
      Mint.MINT_FUSION,
      Mint.MINT_TRITON,
      Mint.PEARL_NEO
  )

  /**
   * Get all device specifications for Mint_Mobile devices.
   * Useful for mint_mobile testing.
   */
  public fun getMintMobileDevices(): List<String> = listOf(
      MintMobile.EMERALD
  )

  /**
   * Get all device specifications for Mintt devices.
   * Useful for mintt testing.
   */
  public fun getMinttDevices(): List<String> = listOf(
      Mintt.BLAZE_3,
      Mintt.COOLMINTT_BLAZE_2,
      Mintt.COOLMINTT_NIU,
      Mintt.COOLMINTT_RIVAL,
      Mintt.COOLMINTT_RIVAL_2,
      Mintt.COOLMINTT_RIVAL_3,
      Mintt.COOLMINTT_X7,
      Mintt.COOLMINTT_X9,
      Mintt.MINTT_DIGI_2,
      Mintt.MINTT_M3,
      Mintt.MINTT_M5,
      Mintt.MINTT_T11,
      Mintt.MINTTPORO,
      Mintt.P25,
      Mintt.P25_PLUS,
      Mintt.T3,
      Mintt.ULTRAMINTT_A5,
      Mintt.ULTRAMINTT_A6,
      Mintt.ULTRAMINTT_X5,
      Mintt.ULTRAMINTT_X6,
      Mintt.ULTRAMINTT_Y3,
      Mintt.ULTRAMINTT_Y5,
      Mintt.ULTRAMINTTT10,
      Mintt.ULTRAMINTTT2
  )

  /**
   * Get all device specifications for Mione devices.
   * Useful for mione testing.
   */
  public fun getMioneDevices(): List<String> = listOf(
      Mione.M_701PLUS,
      Mione.MIONE_PRO_PLUS,
      Mione.MIONE_S20,
      Mione.MIONEI
  )

  /**
   * Get all device specifications for MioTab devices.
   * Useful for miotab testing.
   */
  public fun getMiotabDevices(): List<String> = listOf(
      Miotab.MIO_TAB_2019,
      Miotab.MIOTAB2017,
      Miotab.MP0101632,
      Miotab.MP0101635,
      Miotab.MP0101788,
      Miotab.MP0101789
  )

  /**
   * Get all device specifications for mipo devices.
   * Useful for mipo testing.
   */
  public fun getMipoDevices(): List<String> = listOf(
      Mipo.MIPO_M17,
      Mipo.MIPO_M25,
      Mipo.MIPO_M46_PLUS,
      Mipo.MIPO_M59
  )

  /**
   * Get all device specifications for Mira devices.
   * Useful for mira testing.
   */
  public fun getMiraDevices(): List<String> = listOf(
      Mira.X2
  )

  /**
   * Get all device specifications for miracle_tap devices.
   * Useful for miracle_tap testing.
   */
  public fun getMiracleTapDevices(): List<String> = listOf(
      MiracleTap.MIRACLE_TAP_10
  )

  /**
   * Get all device specifications for Mirage devices.
   * Useful for mirage testing.
   */
  public fun getMirageDevices(): List<String> = listOf(
      Mirage._62S,
      Mirage.MI_CH_82S
  )

  /**
   * Get all device specifications for Miramage devices.
   * Useful for miramage testing.
   */
  public fun getMiramageDevices(): List<String> = listOf(
      Miramage.BARKING,
      Miramage.BEAUDRY,
      Miramage.SURFACE
  )

  /**
   * Get all device specifications for mirarel devices.
   * Useful for mirarel testing.
   */
  public fun getMirarelDevices(): List<String> = listOf(
      Mirarel.KSR
  )

  /**
   * Get all device specifications for MIRAY devices.
   * Useful for miray testing.
   */
  public fun getMirayDevices(): List<String> = listOf(
      Miray.MIDM_F10,
      Miray.R1,
      Miray.R10G,
      Miray.R2,
      Miray.R3,
      Miray.R3_GTV,
      Miray.R4,
      Miray.R4_GTV,
      Miray.TM4G_1006,
      Miray.TM4G_806,
      Miray.TPM4G_105,
      Miray.TPM4G_E108,
      Miray.TPM4G_E108_A,
      Miray.TPM4G_E9863,
      Miray.VILEPARLE
  )

  /**
   * Get all device specifications for MIRO devices.
   * Useful for miro testing.
   */
  public fun getMiroDevices(): List<String> = listOf(
      Miro.A1,
      Miro.MIRO_S67
  )

  /**
   * Get all device specifications for MiTAC devices.
   * Useful for mitac testing.
   */
  public fun getMitacDevices(): List<String> = listOf(
      Mitac.CHIRON_PRO,
      Mitac.HERA_PRO,
      Mitac.SURFING_PRO
  )

  /**
   * Get all device specifications for MITO devices.
   * Useful for mito testing.
   */
  public fun getMitoDevices(): List<String> = listOf(
      Mito.A21,
      Mito.A67,
      Mito.MATEO,
      Mito.MITO_A16,
      Mito.MITO_A17,
      Mito.MITO_A19_1GB,
      Mito.MITO_A19_2GB,
      Mito.MITO_A35,
      Mito.MITO_A36_W1,
      Mito.MITO_A37_Z1,
      Mito.MITO_A37_Z1PLUS,
      Mito.MITO_T7,
      Mito.T8,
      Mito.T85
  )

  /**
   * Get all device specifications for mitsubishi devices.
   * Useful for mitsubishi testing.
   */
  public fun getMitsubishiDevices(): List<String> = listOf(
      Mitsubishi.AIVI2_R_FULL_DOM
  )

  /**
   * Get all device specifications for Mitsui devices.
   * Useful for mitsui testing.
   */
  public fun getMitsuiDevices(): List<String> = listOf(
      Mitsui.MC32020
  )

  /**
   * Get all device specifications for MITSUSHIBA devices.
   * Useful for mitsushiba testing.
   */
  public fun getMitsushibaDevices(): List<String> = listOf(
      Mitsushiba.TP_10_0232P3G
  )

  /**
   * Get all device specifications for mlab devices.
   * Useful for mlab testing.
   */
  public fun getMlabDevices(): List<String> = listOf(
      Mlab._8990,
      Mlab._9095,
      Mlab._9096,
      Mlab._9098,
      Mlab._9342,
      Mlab._9343,
      Mlab._9344,
      Mlab.MB4,
      Mlab.MB4_3G,
      Mlab.MB4_3G_PLUS_SE,
      Mlab.MB4_WIFI,
      Mlab.MB8715,
      Mlab.MB8717,
      Mlab.MB8866,
      Mlab.MLAB_GLOWY7,
      Mlab.MLAB_GLOWY8,
      Mlab.MLAB_KIDS_PLUS,
      Mlab.STUDIO_PHONE_10
  )

  /**
   * Get all device specifications for Mlink devices.
   * Useful for mlink testing.
   */
  public fun getMlinkDevices(): List<String> = listOf(
      Mlink.M6501B,
      Mlink.M761
  )

  /**
   * Get all device specifications for MLOGIX devices.
   * Useful for mlogix testing.
   */
  public fun getMlogixDevices(): List<String> = listOf(
      Mlogix._10ML_012G,
      Mlogix._8ML_08G
  )

  /**
   * Get all device specifications for MLS devices.
   * Useful for mls testing.
   */
  public fun getMlsDevices(): List<String> = listOf(
      Mls.IQ1012N,
      Mls.IQ1019N,
      Mls.IQ1060M,
      Mls.IQ1568,
      Mls.IQ181011N,
      Mls.IQ5011_E,
      Mls.IQ8011,
      Mls.IQ9013_4N,
      Mls.IQA27X_E,
      Mls.IQD10S,
      Mls.IQD700,
      Mls.IQE200,
      Mls.IQGW516,
      Mls.IQL550,
      Mls.IQL626,
      Mls.IQM960,
      Mls.IQM960L,
      Mls.IQN700,
      Mls.IQS1001,
      Mls.IQS300,
      Mls.IQS805,
      Mls.IQT1161,
      Mls.IQT800,
      Mls.IQW511T,
      Mls.IQW608,
      Mls.IQW626
  )

  /**
   * Get all device specifications for mMax devices.
   * Useful for mmax testing.
   */
  public fun getMmaxDevices(): List<String> = listOf(
      Mmax.M55
  )

  /**
   * Get all device specifications for MNC_NOW devices.
   * Useful for mnc_now testing.
   */
  public fun getMncNowDevices(): List<String> = listOf(
      MncNow.HP40A3
  )

  /**
   * Get all device specifications for Mobell devices.
   * Useful for mobell testing.
   */
  public fun getMobellDevices(): List<String> = listOf(
      Mobell.MBLTAB81,
      Mobell.NOVA_P3,
      Mobell.P41,
      Mobell.S41,
      Mobell.S51,
      Mobell.S61
  )

  /**
   * Get all device specifications for MOBI-Buckeye devices.
   * Useful for mobi-buckeye testing.
   */
  public fun getMobiBuckeyeDevices(): List<String> = listOf(
      MobiBuckeye.SEI800MOBI
  )

  /**
   * Get all device specifications for MOBI-SECTV devices.
   * Useful for mobi-sectv testing.
   */
  public fun getMobiSectvDevices(): List<String> = listOf(
      MobiSectv.SEI800MOBI
  )

  /**
   * Get all device specifications for Mobicel devices.
   * Useful for mobicel testing.
   */
  public fun getMobicelDevices(): List<String> = listOf(
      Mobicel._4U,
      Mobicel.ASTRO,
      Mobicel.BEAM,
      Mobicel.BERRY,
      Mobicel.BERRY1,
      Mobicel.BERRY_2,
      Mobicel.BERRY_PLUS,
      Mobicel.BERRY_PRO,
      Mobicel.BLINK,
      Mobicel.CANDY,
      Mobicel.CHROME_LTE,
      Mobicel.CLIK,
      Mobicel.CLIK_PLUS,
      Mobicel.COSMO,
      Mobicel.COSMO_LTE,
      Mobicel.DANDY,
      Mobicel.DANDY_ZAM,
      Mobicel.ECHO,
      Mobicel.EGO,
      Mobicel.EPIC_1,
      Mobicel.EPIC_2,
      Mobicel.EPIC_MAX,
      Mobicel.EPIC_PRO_1,
      Mobicel.EPIC_PRO_2,
      Mobicel.F40,
      Mobicel.F41,
      Mobicel.F50,
      Mobicel.F51,
      Mobicel.FAME,
      Mobicel.FAME_DS,
      Mobicel.FENDY_DS,
      Mobicel.FENDY_PLUS,
      Mobicel.FEVER,
      Mobicel.FEVER_PLUS_H,
      Mobicel.FEVER_PLUS_J,
      Mobicel.FORCE,
      Mobicel.FRIO,
      Mobicel.GEO,
      Mobicel.GLO,
      Mobicel.HERO,
      Mobicel.HERO_DS,
      Mobicel.HYPE,
      Mobicel.IX,
      Mobicel.IX_1,
      Mobicel.IX_PLUS,
      Mobicel.IX_PRO,
      Mobicel.LEGEND,
      Mobicel.LEGEND_MAX,
      Mobicel.LEGEND_MAX_2,
      Mobicel.LEGEND_PRO_1,
      Mobicel.LEGEND_PRO_LTE,
      Mobicel.MERCURY,
      Mobicel.MOBICEL_ICON,
      Mobicel.MOBICEL_R1,
      Mobicel.MOBICEL_R6,
      Mobicel.MX2_PLUS,
      Mobicel.MX3_PLUS,
      Mobicel.NEO_1,
      Mobicel.NEO_LTE,
      Mobicel.NEO_PLUS,
      Mobicel.OREO,
      Mobicel.P11,
      Mobicel.P11_PLUS,
      Mobicel.P12,
      Mobicel.P5,
      Mobicel.PULSE_1,
      Mobicel.PURE,
      Mobicel.PURE_MINI,
      Mobicel.PURE_PLUS,
      Mobicel.PX12,
      Mobicel.Q10,
      Mobicel.R1_PLUS,
      Mobicel.R1PLUS_1,
      Mobicel.R4,
      Mobicel.R4_LTE,
      Mobicel.R6_PLUS,
      Mobicel.R7,
      Mobicel.R7_1,
      Mobicel.R7_2,
      Mobicel.R8,
      Mobicel.R9_LITE,
      Mobicel.R9_PRO,
      Mobicel.REBEL,
      Mobicel.RIO_BN,
      Mobicel.RIO_RW,
      Mobicel.RIO_SS,
      Mobicel.RIO_ZAM,
      Mobicel.RUBY,
      Mobicel.RUSH,
      Mobicel.RX,
      Mobicel.RX17,
      Mobicel.RX_PLUS,
      Mobicel.RX_PRO,
      Mobicel.SMART_TAB_10,
      Mobicel.SMART_TAB_8,
      Mobicel.SWITCH,
      Mobicel.SWITCH1,
      Mobicel.SWITCH_GO,
      Mobicel.SWITCH_PLUS,
      Mobicel.TANGO_LITE,
      Mobicel.TITAN,
      Mobicel.TITAN_1,
      Mobicel.TRENDY_2,
      Mobicel.TRENDY_LITE,
      Mobicel.TRENDY_PLUS,
      Mobicel.U2,
      Mobicel.ULTRA,
      Mobicel.V1,
      Mobicel.V2_LTE,
      Mobicel.V4,
      Mobicel.VEGA,
      Mobicel.VENUS_G,
      Mobicel.VIBE,
      Mobicel.VX18,
      Mobicel.VX19,
      Mobicel.VX20,
      Mobicel.VX20_PRO,
      Mobicel.VX21,
      Mobicel.X1,
      Mobicel.X4,
      Mobicel.X6,
      Mobicel.X7,
      Mobicel.X9,
      Mobicel.Z4,
      Mobicel.ZOOM,
      Mobicel.ZOOM_1,
      Mobicel.ZOOM_H
  )

  /**
   * Get all device specifications for Mobicell devices.
   * Useful for mobicell testing.
   */
  public fun getMobicellDevices(): List<String> = listOf(
      Mobicell.ICE,
      Mobicell.SHIFT
  )

  /**
   * Get all device specifications for MobiIoT devices.
   * Useful for mobiiot testing.
   */
  public fun getMobiiotDevices(): List<String> = listOf(
      Mobiiot.MOBIGO2,
      Mobiiot.MOBIGO2L,
      Mobiiot.MOBIGO2P,
      Mobiiot.MOBIGO2PP,
      Mobiiot.MOBIGO2PQV,
      Mobiiot.MOBIPRINT4_PLUS,
      Mobiiot.MP5,
      Mobiiot.WM19,
      Mobiiot.WM58
  )

  /**
   * Get all device specifications for mobiistar devices.
   * Useful for mobiistar testing.
   */
  public fun getMobiistarDevices(): List<String> = listOf(
      Mobiistar.C1_LITE,
      Mobiistar.E1_SELFIE,
      Mobiistar.MOBIISTAR_C1,
      Mobiistar.MOBIISTAR_C1_SHINE,
      Mobiistar.MOBIISTAR_C2,
      Mobiistar.MOBIISTAR_E_SELFIE,
      Mobiistar.MOBIISTAR_X,
      Mobiistar.MOBIISTAR_ZUMBO_J2,
      Mobiistar.X1_DUAL,
      Mobiistar.X1_NOTCH,
      Mobiistar.X1_SELFIE,
      Mobiistar.XQ_DUAL,
      Mobiistar.ZUMBO_S_2017_LITE
  )

  /**
   * Get all device specifications for MobileDemand devices.
   * Useful for mobiledemand testing.
   */
  public fun getMobiledemandDevices(): List<String> = listOf(
      Mobiledemand.FLEX10AND
  )

  /**
   * Get all device specifications for Mobily devices.
   * Useful for mobily testing.
   */
  public fun getMobilyDevices(): List<String> = listOf(
      Mobily.QNBML
  )

  /**
   * Get all device specifications for Mobistel devices.
   * Useful for mobistel testing.
   */
  public fun getMobistelDevices(): List<String> = listOf(
      Mobistel.CYNUS_F10
  )

  /**
   * Get all device specifications for MobiVista devices.
   * Useful for mobivista testing.
   */
  public fun getMobivistaDevices(): List<String> = listOf(
      Mobivista.MVT_1001
  )

  /**
   * Get all device specifications for Mobiwire devices.
   * Useful for mobiwire testing.
   */
  public fun getMobiwireDevices(): List<String> = listOf(
      Mobiwire.CYGNUS_MINI,
      Mobiwire.EDJROMI,
      Mobiwire.GIYAFA,
      Mobiwire.H5032U,
      Mobiwire.H5111,
      Mobiwire.H5111L,
      Mobiwire.H5111L_MASCOM,
      Mobiwire.H5112,
      Mobiwire.H6681_PRO,
      Mobiwire.H6682,
      Mobiwire.H67A1,
      Mobiwire.HALONA,
      Mobiwire.HOTAH,
      Mobiwire.IKOSORA_PLUS,
      Mobiwire.K5P_4G,
      Mobiwire.K5P_4G_U,
      Mobiwire.KICKA6,
      Mobiwire.KICKA_4_PLUS,
      Mobiwire.KICKA_5,
      Mobiwire.KICKA_5_PLUS,
      Mobiwire.KICKA_5_U,
      Mobiwire.KICKA_ZOOM,
      Mobiwire.MOBIWIRE_VERDA,
      Mobiwire.SMART_E11,
      Mobiwire.SMART_E25,
      Mobiwire.SMART_N11,
      Mobiwire.SMART_N12,
      Mobiwire.SMART_P24,
      Mobiwire.SMART_T23,
      Mobiwire.SMART_V22,
      Mobiwire.SMART_V25,
      Mobiwire.V_LITE_2,
      Mobiwire.V_PRO_2,
      Mobiwire.V_SMART_2,
      Mobiwire.VERDA,
      Mobiwire.VODAFONE_PRO,
      Mobiwire.VODAFONE_SMART
  )

  /**
   * Get all device specifications for MOBODO devices.
   * Useful for mobodo testing.
   */
  public fun getMobodoDevices(): List<String> = listOf(
      Mobodo.MOBOK2
  )

  /**
   * Get all device specifications for mobulaa devices.
   * Useful for mobulaa testing.
   */
  public fun getMobulaaDevices(): List<String> = listOf(
      Mobulaa.K6,
      Mobulaa.NOTE1,
      Mobulaa.NOTE2,
      Mobulaa.NOTE4,
      Mobulaa.S11,
      Mobulaa.TAB_1
  )

  /**
   * Get all device specifications for Mobvoi devices.
   * Useful for mobvoi testing.
   */
  public fun getMobvoiDevices(): List<String> = listOf(
      Mobvoi.CATFISH,
      Mobvoi.CATFISH_EXT,
      Mobvoi.CATSHARK,
      Mobvoi.DACE,
      Mobvoi.MOONEYE,
      Mobvoi.RICEFISH,
      Mobvoi.ROVER,
      Mobvoi.RUBYFISH,
      Mobvoi.SKIPJACK,
      Mobvoi.TUNNY
  )

  /**
   * Get all device specifications for MobyData devices.
   * Useful for mobydata testing.
   */
  public fun getMobydataDevices(): List<String> = listOf(
      Mobydata.M63S,
      Mobydata.M72
  )

  /**
   * Get all device specifications for MODE devices.
   * Useful for mode testing.
   */
  public fun getModeDevices(): List<String> = listOf(
      Mode.MP1
  )

  /**
   * Get all device specifications for MODE-1 devices.
   * Useful for mode-1 testing.
   */
  public fun getMode1Devices(): List<String> = listOf(
      Mode1.MD_03P,
      Mode1.MD_04P,
      Mode1.MD_05P,
      Mode1.MD06P
  )

  /**
   * Get all device specifications for ModeEarnPhone devices.
   * Useful for modeearnphone testing.
   */
  public fun getModeearnphoneDevices(): List<String> = listOf(
      Modeearnphone.MEP2
  )

  /**
   * Get all device specifications for MojaTV devices.
   * Useful for mojatv testing.
   */
  public fun getMojatvDevices(): List<String> = listOf(
      Mojatv.SEI530BHT
  )

  /**
   * Get all device specifications for Mola_TV devices.
   * Useful for mola_tv testing.
   */
  public fun getMolaTvDevices(): List<String> = listOf(
      MolaTv.DV8235_P
  )

  /**
   * Get all device specifications for MOLVU devices.
   * Useful for molvu testing.
   */
  public fun getMolvuDevices(): List<String> = listOf(
      Molvu.M10PRO,
      Molvu.V7S
  )

  /**
   * Get all device specifications for Mondial devices.
   * Useful for mondial testing.
   */
  public fun getMondialDevices(): List<String> = listOf(
      Mondial.TB_MONDIAL_KID
  )

  /**
   * Get all device specifications for Monex devices.
   * Useful for monex testing.
   */
  public fun getMonexDevices(): List<String> = listOf(
      Monex.SHILIN
  )

  /**
   * Get all device specifications for MONOMAX devices.
   * Useful for monomax testing.
   */
  public fun getMonomaxDevices(): List<String> = listOf(
      Monomax.DV6071Z_KTM
  )

  /**
   * Get all device specifications for Mookia devices.
   * Useful for mookia testing.
   */
  public fun getMookiaDevices(): List<String> = listOf(
      Mookia.FF_P30,
      Mookia.M10A,
      Mookia.MM_35,
      Mookia.MM_35_EEA,
      Mookia.MM10A
  )

  /**
   * Get all device specifications for Moolah_Mobile devices.
   * Useful for moolah_mobile testing.
   */
  public fun getMoolahMobileDevices(): List<String> = listOf(
      MoolahMobile.T10,
      MoolahMobile.T100,
      MoolahMobile.T10_PRO
  )

  /**
   * Get all device specifications for Morep devices.
   * Useful for morep testing.
   */
  public fun getMorepDevices(): List<String> = listOf(
      Morep.MAVIC_10,
      Morep.MAVIC_30,
      Morep.MAVIC_PLUS,
      Morep.SMART_V1
  )

  /**
   * Get all device specifications for Mosambee devices.
   * Useful for mosambee testing.
   */
  public fun getMosambeeDevices(): List<String> = listOf(
      Mosambee.QPHONE2_4110
  )

  /**
   * Get all device specifications for MoshiMore devices.
   * Useful for moshimore testing.
   */
  public fun getMoshimoreDevices(): List<String> = listOf(
      Moshimore.RG1
  )

  /**
   * Get all device specifications for MoT devices.
   * Useful for mot testing.
   */
  public fun getMotDevices(): List<String> = listOf(
      Mot.S22_8A
  )

  /**
   * Get all device specifications for motorola devices.
   * Useful for motorola testing.
   */
  public fun getMotorolaDevices(): List<String> = listOf(
      Motorola.ADDISON,
      Motorola.AHANNAH,
      Motorola.AION,
      Motorola.AITO,
      Motorola.ALBUS,
      Motorola.ALI,
      Motorola.ALI_N,
      Motorola.ALJETER,
      Motorola.ALJETER_N,
      Motorola.ARCFOX,
      Motorola.ARUBA,
      Motorola.ASTRO,
      Motorola.ATHENE,
      Motorola.ATHENE_F,
      Motorola.ATHENE_T,
      Motorola.AUSTIN,
      Motorola.AVATRN,
      Motorola.BALI,
      Motorola.BANGKK,
      Motorola.BATHENA,
      Motorola.BECKHAM,
      Motorola.BERLIN,
      Motorola.BERLNA,
      Motorola.BLACKJACK,
      Motorola.BOGOTA,
      Motorola.BORAG,
      Motorola.BORAGO,
      Motorola.BORNEO,
      Motorola.BOSTON,
      Motorola.BRONCO,
      Motorola.BURTON,
      Motorola.CANCUN,
      Motorola.CANCUNF,
      Motorola.CANCUNN,
      Motorola.CAPRI,
      Motorola.CAPRIP,
      Motorola.CARP,
      Motorola.CDMA_SPYDER,
      Motorola.CEBU,
      Motorola.CEDRIC,
      Motorola.CHANNEL,
      Motorola.CHEF_SPROUT,
      Motorola.CLARK,
      Motorola.CLARK_DS,
      Motorola.COFUD,
      Motorola.COFUL,
      Motorola.CONDOR_CDMA,
      Motorola.CONDOR_UDSTV,
      Motorola.CONDOR_UMTS,
      Motorola.CONDOR_UMTSDS,
      Motorola.CORFU,
      Motorola.CORFUR,
      Motorola.CTWO,
      Motorola.CUSCO,
      Motorola.CUSCOI,
      Motorola.CYBERT,
      Motorola.CYPFQ,
      Motorola.CYPFR,
      Motorola.CYPRUS,
      Motorola.CYPRUS64,
      Motorola.DEEN,
      Motorola.DEEN_SPROUT,
      Motorola.DEF,
      Motorola.DENVER,
      Motorola.DEVON,
      Motorola.DEVONF,
      Motorola.DEVONN,
      Motorola.DOHA,
      Motorola.DOHA_N,
      Motorola.DUBAI,
      Motorola.ELLIS,
      Motorola.EQE,
      Motorola.EQS,
      Motorola.EVERT,
      Motorola.EVERT_N,
      Motorola.EVERT_NT,
      Motorola.EVOLVE,
      Motorola.FALCON_CDMA,
      Motorola.FALCON_UMTS,
      Motorola.FALCON_UMTSDS,
      Motorola.FIJI,
      Motorola.FIJISC,
      Motorola.FOGO,
      Motorola.FOGONA,
      Motorola.FOGOROW,
      Motorola.FOGOS,
      Motorola.FOLES,
      Motorola.GENEVN,
      Motorola.GHOST,
      Motorola.GINNA,
      Motorola.GMP,
      Motorola.GNEVAN,
      Motorola.GRIFFIN,
      Motorola.GUAM,
      Motorola.GUAMNA,
      Motorola.GUAMP,
      Motorola.HANNAH,
      Motorola.HANOIP,
      Motorola.HARPIA,
      Motorola.HARPIA_N,
      Motorola.HARPIA_T,
      Motorola.HAWAII,
      Motorola.HAWAIIP,
      Motorola.HAWAO,
      Motorola.HAWK35_UMTS,
      Motorola.HAWK40_UMTS,
      Motorola.HAYWARD,
      Motorola.HIPHI,
      Motorola.HIPHIC,
      Motorola.HIPHID,
      Motorola.HONGKONG,
      Motorola.IBIZA,
      Motorola.JAMES,
      Motorola.JAVA,
      Motorola.JETER,
      Motorola.KANE_SPROUT,
      Motorola.KANSAS,
      Motorola.KIEV,
      Motorola.KIEVV,
      Motorola.KINZIE,
      Motorola.KINZIE_UDS,
      Motorola.KUNGFU_M,
      Motorola.KYOTO,
      Motorola.LAKE,
      Motorola.LAKE_N,
      Motorola.LAMU,
      Motorola.LAMUL,
      Motorola.LEAP,
      Motorola.LIBER,
      Motorola.LIMA,
      Motorola.LION,
      Motorola.LISBON,
      Motorola.LONGSHAN,
      Motorola.LUX,
      Motorola.LUX_UDS,
      Motorola.LYNKCO,
      Motorola.LYRIQ,
      Motorola.M_51E,
      Motorola.MALMO,
      Motorola.MALTA,
      Motorola.MALTALSC,
      Motorola.MANAUS,
      Motorola.MANILA,
      Motorola.MERLIN,
      Motorola.MESSI,
      Motorola.MIAMI,
      Motorola.MILAN,
      Motorola.MILANF,
      Motorola.MINSK,
      Motorola.MOLA,
      Motorola.MONA,
      Motorola.MONAI,
      Motorola.MONTANA,
      Motorola.MONTANA_N,
      Motorola.MOTOTABG20,
      Motorola.MOTOTABG70,
      Motorola.MOTOTABG70LTE,
      Motorola.MOUNTBAKER,
      Motorola.NAIRO,
      Motorola.NAMATH,
      Motorola.NASH,
      Motorola.NICE,
      Motorola.NICKLAUS_F,
      Motorola.NICKLAUS_FN,
      Motorola.NIO,
      Motorola.NORA,
      Motorola.NORA_8917,
      Motorola.NORA_8917_N,
      Motorola.OBAKE,
      Motorola.OBAKE_MAXX,
      Motorola.OBAKEM,
      Motorola.OCEAN,
      Motorola.OCEAN_N,
      Motorola.OCEAN_T,
      Motorola.ODESSA,
      Motorola.OLSON,
      Motorola.ONELI,
      Motorola.OSPREY_CDMA,
      Motorola.OSPREY_U2,
      Motorola.OSPREY_UD2,
      Motorola.OSPREY_UDS,
      Motorola.OSPREY_UDSTV,
      Motorola.OSPREY_UMTS,
      Motorola.OTUS,
      Motorola.OTUS_DS,
      Motorola.OULU,
      Motorola.OWENS,
      Motorola.PANELL_D,
      Motorola.PANELL_DL,
      Motorola.PANELL_DT,
      Motorola.PANELL_S,
      Motorola.PARKER,
      Motorola.PAYTON,
      Motorola.PAYTON_SPROUT,
      Motorola.PENANG,
      Motorola.PENANGF,
      Motorola.PEREGRINE,
      Motorola.PERRY,
      Motorola.PERRY_F,
      Motorola.PETTYL,
      Motorola.PNANGN,
      Motorola.POKERP,
      Motorola.POTTER,
      Motorola.POTTER_N,
      Motorola.POTTER_NT,
      Motorola.PSTAR,
      Motorola.QUARK,
      Motorola.QUARK_UMTS,
      Motorola.R4,
      Motorola.RACER,
      Motorola.RAV,
      Motorola.REDWOOD,
      Motorola.RHANNAH,
      Motorola.RHODE,
      Motorola.RHODEC,
      Motorola.RHODEI,
      Motorola.RHODEP,
      Motorola.RIVER,
      Motorola.RIVER_N,
      Motorola.RJAMES_F,
      Motorola.RJAMES_GO,
      Motorola.ROBUSTA,
      Motorola.RTWO,
      Motorola.SABAHL,
      Motorola.SAIPAN,
      Motorola.SANDERS,
      Motorola.SANDERS_N,
      Motorola.SANDERS_NT,
      Motorola.SCORPION_MINI,
      Motorola.SCOUT,
      Motorola.SMELT,
      Motorola.SMI,
      Motorola.SMITH,
      Motorola.SOFIA,
      Motorola.SOFIAP,
      Motorola.SOFIAP_SPROUT,
      Motorola.SOFIAR,
      Motorola.SONGSHAN,
      Motorola.SORAP,
      Motorola.SPERRY,
      Motorola.STANFORD,
      Motorola.SURFNA,
      Motorola.SURNIA_CDMA,
      Motorola.SURNIA_UDS,
      Motorola.SURNIA_UDSTV,
      Motorola.SURNIA_UMTS,
      Motorola.TAIDO_ROW,
      Motorola.TAIDOS_ROW,
      Motorola.TAIPEI,
      Motorola.TANK,
      Motorola.TESLA,
      Motorola.THEA,
      Motorola.THEA_DS,
      Motorola.THEA_UMTSDS,
      Motorola.TITAN_UDSTV,
      Motorola.TITAN_UMTS,
      Motorola.TITAN_UMTSDS,
      Motorola.TONGA,
      Motorola.TROIKA,
      Motorola.TROIKA_SPROUT,
      Motorola.TUNDRA,
      Motorola.UMTS_SPYDER,
      Motorola.VANQUISH,
      Motorola.VANQUISH_U,
      Motorola.VEGAS,
      Motorola.VICKY,
      Motorola.VICTARA,
      Motorola.VIENNA,
      Motorola.WATSON,
      Motorola.WINGRAY,
      Motorola.WOODS_F,
      Motorola.WOODS_FN,
      Motorola.XPENG,
      Motorola.XT1663,
      Motorola.XT2261_1,
      Motorola.XT2261_2,
      Motorola.ZEEKR,
      Motorola.ZHONGSHAN
  )

  /**
   * Get all device specifications for MotorolaSolutions devices.
   * Useful for motorolasolutions testing.
   */
  public fun getMotorolasolutionsDevices(): List<String> = listOf(
      Motorolasolutions.LEXF10,
      Motorolasolutions.LEXL10IG,
      Motorolasolutions.LEXL11G_64
  )

  /**
   * Get all device specifications for MotSol devices.
   * Useful for motsol testing.
   */
  public fun getMotsolDevices(): List<String> = listOf(
      Motsol.MKZ_SDM660_64
  )

  /**
   * Get all device specifications for movado devices.
   * Useful for movado testing.
   */
  public fun getMovadoDevices(): List<String> = listOf(
      Movado.STARGAZER,
      Movado.TILEFISH,
      Movado.WEEVER
  )

  /**
   * Get all device specifications for Move devices.
   * Useful for move testing.
   */
  public fun getMoveDevices(): List<String> = listOf(
      Move.DV8919_KSM
  )

  /**
   * Get all device specifications for Movfast devices.
   * Useful for movfast testing.
   */
  public fun getMovfastDevices(): List<String> = listOf(
      Movfast.MFT1522,
      Movfast.MFT1621
  )

  /**
   * Get all device specifications for MOVIENET devices.
   * Useful for movienet testing.
   */
  public fun getMovienetDevices(): List<String> = listOf(
      Movienet.SFO
  )

  /**
   * Get all device specifications for Movistar devices.
   * Useful for movistar testing.
   */
  public fun getMovistarDevices(): List<String> = listOf(
      Movistar.HWT101
  )

  /**
   * Get all device specifications for MOVISUN devices.
   * Useful for movisun testing.
   */
  public fun getMovisunDevices(): List<String> = listOf(
      Movisun.ASTRO_PAD10,
      Movisun.ASTROA1,
      Movisun.TAB_S1
  )

  /**
   * Get all device specifications for Movitel devices.
   * Useful for movitel testing.
   */
  public fun getMovitelDevices(): List<String> = listOf(
      Movitel.M8416,
      Movitel.M8419,
      Movitel.M8420,
      Movitel.M8421,
      Movitel.M8422,
      Movitel.M8423,
      Movitel.M8424,
      Movitel.M8425,
      Movitel.M8426,
      Movitel.M9106,
      Movitel.M9107,
      Movitel.M9108,
      Movitel.M9109,
      Movitel.M9110,
      Movitel.M9111,
      Movitel.M9112,
      Movitel.M9113,
      Movitel.M9114,
      Movitel.M9116,
      Movitel.M9117
  )

  /**
   * Get all device specifications for Movix devices.
   * Useful for movix testing.
   */
  public fun getMovixDevices(): List<String> = listOf(
      Movix.MVX01,
      Movix.MVX02,
      Movix.MVX03,
      Movix.SEI700ER
  )

  /**
   * Get all device specifications for moxee devices.
   * Useful for moxee testing.
   */
  public fun getMoxeeDevices(): List<String> = listOf(
      Moxee.M2307,
      Moxee.MH_T6000,
      Moxee.MT_T800,
      Moxee.MT_T8B22,
      Moxee.T2310
  )

  /**
   * Get all device specifications for MOXNICE devices.
   * Useful for moxnice testing.
   */
  public fun getMoxniceDevices(): List<String> = listOf(
      Moxnice.P50_EEA,
      Moxnice.P50_ROW,
      Moxnice.P63
  )

  /**
   * Get all device specifications for mozaTab devices.
   * Useful for mozatab testing.
   */
  public fun getMozatabDevices(): List<String> = listOf(
      Mozatab.MTN_E1
  )

  /**
   * Get all device specifications for MPGIO devices.
   * Useful for mpgio testing.
   */
  public fun getMpgioDevices(): List<String> = listOf(
      Mpgio.ATHENA_A10,
      Mpgio.IKP104,
      Mpgio.LEGEND_A,
      Mpgio.LEGEND_EZ,
      Mpgio.LEGEND_NEW7,
      Mpgio.MAT10221,
      Mpgio.MAT10421,
      Mpgio.MAT80211B,
      Mpgio.MID,
      Mpgio.MLT156001,
      Mpgio.MLT703824,
      Mpgio.MPGIO_10,
      Mpgio.MPGIO_8
  )

  /**
   * Get all device specifications for MPORT devices.
   * Useful for mport testing.
   */
  public fun getMportDevices(): List<String> = listOf(
      Mport.RK3588_T
  )

  /**
   * Get all device specifications for MSI devices.
   * Useful for msi testing.
   */
  public fun getMsiDevices(): List<String> = listOf(
      Msi.CAOYA,
      Msi.ND52_GEN2
  )

  /**
   * Get all device specifications for MSOTA devices.
   * Useful for msota testing.
   */
  public fun getMsotaDevices(): List<String> = listOf(
      Msota.NOBBY_S500,
      Msota.NOBBY_X800
  )

  /**
   * Get all device specifications for MStar devices.
   * Useful for mstar testing.
   */
  public fun getMstarDevices(): List<String> = listOf(
      Mstar.WATERMELON
  )

  /**
   * Get all device specifications for Mswipe devices.
   * Useful for mswipe testing.
   */
  public fun getMswipeDevices(): List<String> = listOf(
      Mswipe.L200
  )

  /**
   * Get all device specifications for MTC devices.
   * Useful for mtc testing.
   */
  public fun getMtcDevices(): List<String> = listOf(
      Mtc.OSMARTPHONA,
      Mtc.OSMARTPHONA_TABLET,
      Mtc.SMART_RACE2_4G,
      Mtc.SMART_SPRINT_4G,
      Mtc.SMART_SURF2_4G
  )

  /**
   * Get all device specifications for MTEK devices.
   * Useful for mtek testing.
   */
  public fun getMtekDevices(): List<String> = listOf(
      Mtek.HONGKONG,
      Mtek.MOUNTBAKER,
      Mtek.STANFORD,
      Mtek.ZHONGSHAN
  )

  /**
   * Get all device specifications for mtel devices.
   * Useful for mtel testing.
   */
  public fun getMtelDevices(): List<String> = listOf(
      Mtel.HP44H_MTEL
  )

  /**
   * Get all device specifications for MTN devices.
   * Useful for mtn testing.
   */
  public fun getMtnDevices(): List<String> = listOf(
      Mtn.ALOLA_MAX,
      Mtn.G56
  )

  /**
   * Get all device specifications for MTR devices.
   * Useful for mtr testing.
   */
  public fun getMtrDevices(): List<String> = listOf(
      Mtr.MT9
  )

  /**
   * Get all device specifications for MTS devices.
   * Useful for mts testing.
   */
  public fun getMtsDevices(): List<String> = listOf(
      Mts.B866_MTS_IPTV,
      Mts.B866_MTS_OTT,
      Mts.DV8304C,
      Mts.DV9135_KRM,
      Mts.DV9157_C_KRM
  )

  /**
   * Get all device specifications for MTT devices.
   * Useful for mtt testing.
   */
  public fun getMttDevices(): List<String> = listOf(
      Mtt.L506
  )

  /**
   * Get all device specifications for mu devices.
   * Useful for mu testing.
   */
  public fun getMuDevices(): List<String> = listOf(
      Mu._8,
      Mu.MU6,
      Mu.MU_1
  )

  /**
   * Get all device specifications for MUJENYZ devices.
   * Useful for mujenyz testing.
   */
  public fun getMujenyzDevices(): List<String> = listOf(
      Mujenyz.A9
  )

  /**
   * Get all device specifications for Multilaser devices.
   * Useful for multilaser testing.
   */
  public fun getMultilaserDevices(): List<String> = listOf(
      Multilaser.ASTAR_OCOCCI,
      Multilaser.DI01_M7_WIFI,
      Multilaser.M10A,
      Multilaser.M10A_LITE,
      Multilaser.M10A_3G,
      Multilaser.M7SQC_PLUS,
      Multilaser.M9_3G,
      Multilaser.M9_3G_2,
      Multilaser.MARTIN,
      Multilaser.ML_CH_MS45_4G,
      Multilaser.ML_JI_M7_3G_PLUS,
      Multilaser.ML_JI03_M10_4G,
      Multilaser.ML_JI04_M7_4G,
      Multilaser.ML_JI05_M9_3G,
      Multilaser.ML_JI06_M10_3G,
      Multilaser.ML_JI07_M7S_LITE,
      Multilaser.ML_JI08_M7S_PLUS,
      Multilaser.ML_JI09_M9S_GO,
      Multilaser.ML_JI0A_M10_4G,
      Multilaser.ML_JI0G_M7_3G_PLUS,
      Multilaser.ML_JI11_M7_3G_PLUS,
      Multilaser.ML_JI16_M10_3G,
      Multilaser.ML_JI21_M7_3G_PLUS,
      Multilaser.ML_JI22_M7SQC_PLUS,
      Multilaser.ML_SO_M7_3G_PLUS,
      Multilaser.ML_SO_M9_3G,
      Multilaser.ML_SO06_M7S_LITE_KIDPAD,
      Multilaser.ML_SO06_M7SLITE,
      Multilaser.ML_SO07_M7S_PLUS,
      Multilaser.ML_SO0C_M10_4G_PRO_PLUS,
      Multilaser.ML_TI_MS40G,
      Multilaser.ML_TI_MS50G,
      Multilaser.ML_TI_MS50X,
      Multilaser.ML_TI_MS80,
      Multilaser.ML_TI0A_MS60X,
      Multilaser.ML_TI0B_MS60Z,
      Multilaser.ML_TI0C_MS60X,
      Multilaser.ML_TI0D_MS80X,
      Multilaser.ML_WI_M7_3G_PLUS,
      Multilaser.ML_WI_M9_3G,
      Multilaser.ML_WI0C_M10_4G,
      Multilaser.ML_WI0G_M8_4G,
      Multilaser.ML_WI16_M9_3G,
      Multilaser.ML_WI1B_M7_3G,
      Multilaser.ML_WI1C_M10_4G_T3,
      Multilaser.ML_WI23_MLX8,
      Multilaser.ML_GW0C_M10_4G,
      Multilaser.ML_JI0B_M10_4G,
      Multilaser.ML_JI0C_M10_4G_AC,
      Multilaser.ML_JI0D_M7_WIFI,
      Multilaser.ML_JI0E_M9_WIFI,
      Multilaser.ML_JI0F_M10_4G_PRO,
      Multilaser.ML_JI0H_M10_3G,
      Multilaser.ML_JI0I_M8_4G,
      Multilaser.ML_JI0L_M10_4G,
      Multilaser.ML_JI0M_M10_4G,
      Multilaser.ML_JI0N_M7_3G,
      Multilaser.ML_JI0O_M7_WIFI,
      Multilaser.ML_JI0S_M7_WIFI,
      Multilaser.ML_JI0T_M9_WIFI,
      Multilaser.ML_JI0U_M9_WIFI,
      Multilaser.ML_JI1D_M7_WIFI,
      Multilaser.ML_JI1G_M7_3G,
      Multilaser.ML_JI2D_M7_WIFI,
      Multilaser.ML_JI2G_M7_3G,
      Multilaser.ML_JI3D_M7_WIFI,
      Multilaser.ML_SO08_M9_WIFI,
      Multilaser.ML_SO09_MLX8_4G,
      Multilaser.ML_SO0A_M10A_LITE,
      Multilaser.ML_SO0B_M10_3G,
      Multilaser.ML_SO0C_ULTRA_10,
      Multilaser.ML_SO0E_M7_WIFI,
      Multilaser.ML_SO0F_M8_WIFI,
      Multilaser.ML_SO0G_M10_4G,
      Multilaser.ML_SO0G_M10_4G_PRO_PLUS,
      Multilaser.ML_SO0J_M8_4G,
      Multilaser.ML_SO0K_M10_4G_T3,
      Multilaser.ML_SO0K_U10_MTK,
      Multilaser.ML_SO0P_M7_WIFI,
      Multilaser.ML_SO0Q_M10_3G,
      Multilaser.ML_SO0R_M7_WIFI,
      Multilaser.ML_SO0S_M7_WIFI,
      Multilaser.ML_SO0T_M8_WIFI,
      Multilaser.ML_SO0U_M10_WIFI,
      Multilaser.ML_SO0V_M8_4G,
      Multilaser.ML_SO0W_M9_WIFI,
      Multilaser.ML_SO19_M8_4G,
      Multilaser.ML_SO1E_M7_WIFI,
      Multilaser.ML_SO1G_M10_4G_PRO,
      Multilaser.ML_SO1J_M8_4G,
      Multilaser.ML_SO1S_M7_WIFI,
      Multilaser.ML_SO1U_M10_WIFI,
      Multilaser.ML_SO2E_M7_WIFI,
      Multilaser.ML_SO5C_M10_4G_T1,
      Multilaser.ML_WI0A_M7_3G_PLUS,
      Multilaser.ML_WI0B_M7_3G,
      Multilaser.ML_WI12_M7_3G_PLUS,
      Multilaser.ML_WI1A_M7_3G_A10,
      Multilaser.ML_WI2A_M7_3G_A10,
      Multilaser.ML_WI3A_M7_3G_A10,
      Multilaser.ML_WI4A_M7_3G_A10,
      Multilaser.MLX8,
      Multilaser.MLX8_4G,
      Multilaser.MS40S,
      Multilaser.MS45S_A6,
      Multilaser.MS50L,
      Multilaser.MS50L_4G,
      Multilaser.MS50S,
      Multilaser.MS55M,
      Multilaser.MS60,
      Multilaser.MS60F,
      Multilaser.MS60F_PLUS,
      Multilaser.MULTILASER_E,
      Multilaser.MULTILASER_E_2,
      Multilaser.MULTILASER_E_LITE,
      Multilaser.MULTILASER_E_PRO,
      Multilaser.MULTILASER_F,
      Multilaser.MULTILASER_F2,
      Multilaser.MULTILASER_F_MAX_2,
      Multilaser.MULTILASER_F_PRO,
      Multilaser.MULTILASER_F_PRO_2,
      Multilaser.MULTILASER_G,
      Multilaser.MULTILASER_G_2,
      Multilaser.MULTILASER_G_3,
      Multilaser.MULTILASER_G_MAX,
      Multilaser.MULTILASER_G_MAX_2_SE_64,
      Multilaser.MULTILASER_G_PRO,
      Multilaser.MULTILASER_G_PRO_3S,
      Multilaser.MULTILASER_GMAX_2_128,
      Multilaser.MULTILASER_GMAX_2_64,
      Multilaser.MULTILASER_GPRO2,
      Multilaser.MULTILASER_H,
      Multilaser.MULTILASER_H_5G,
      Multilaser.OBA_CONECTA_4G,
      Multilaser.OBASMART_3,
      Multilaser.OBASMART_CONECTAMAX,
      Multilaser.WI0C_M10_4G_MON_CLA,
      Multilaser.ZHONGSHAN
  )

  /**
   * Get all device specifications for MULTISMART devices.
   * Useful for multismart testing.
   */
  public fun getMultismartDevices(): List<String> = listOf(
      Multismart.LAVENDER,
      Multismart.MOUNTBAKER
  )

  /**
   * Get all device specifications for MULTYNET devices.
   * Useful for multynet testing.
   */
  public fun getMultynetDevices(): List<String> = listOf(
      Multynet.MARINA,
      Multynet.NAGATA,
      Multynet.TAMACHI,
      Multynet.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for MundoPacifico devices.
   * Useful for mundopacifico testing.
   */
  public fun getMundopacificoDevices(): List<String> = listOf(
      Mundopacifico.S2000,
      Mundopacifico.S3001
  )

  /**
   * Get all device specifications for MwalimuPlus devices.
   * Useful for mwalimuplus testing.
   */
  public fun getMwalimuplusDevices(): List<String> = listOf(
      Mwalimuplus.MP01A3G
  )

  /**
   * Get all device specifications for My devices.
   * Useful for my testing.
   */
  public fun getMyDevices(): List<String> = listOf(
      My.TOKYO,
      My.YEOKSAM
  )

  /**
   * Get all device specifications for MyanmarNet devices.
   * Useful for myanmarnet testing.
   */
  public fun getMyanmarnetDevices(): List<String> = listOf(
      Myanmarnet.SEI140FT
  )

  /**
   * Get all device specifications for MyBox devices.
   * Useful for mybox testing.
   */
  public fun getMyboxDevices(): List<String> = listOf(
      Mybox.DV8020
  )

  /**
   * Get all device specifications for myPhone devices.
   * Useful for myphone testing.
   */
  public fun getMyphoneDevices(): List<String> = listOf(
      Myphone.FUN6LITE,
      Myphone.FUN_LTE,
      Myphone.HAMMER_ACTIVE2,
      Myphone.HAMMER_ACTIVE2_LTE,
      Myphone.HAMMER_AXE_PRO_OPM,
      Myphone.HAMMER_BLADE,
      Myphone.HAMMER_BLADE2_PRO,
      Myphone.HAMMER_ENERGY,
      Myphone.HAMMER_ENERGY_18X9,
      Myphone.HAMMER_ENERGY_2,
      Myphone.HAMMER_ENERGY_3G,
      Myphone.HAMMER_ENERGY_PLAY,
      Myphone.HAMMER_EXPLORER,
      Myphone.HAMMER_IRON_2,
      Myphone.HAMMER_IRON_3,
      Myphone.HAMMER_IRON_3_LTE,
      Myphone.HAMMER_IRON_3_LTEV2,
      Myphone.HAMMER_IRON_4,
      Myphone.HAMMERACTIVE,
      Myphone.HYKKER_MYTAB10,
      Myphone.MS2303X,
      Myphone.MS2401X,
      Myphone.MS2402X,
      Myphone.MYA17,
      Myphone.MYA18,
      Myphone.MYA1_PLUS,
      Myphone.MYG1,
      Myphone.MYP1,
      Myphone.MYPHONE_CITY,
      Myphone.MYPHONE_CITY_2,
      Myphone.MYPHONE_CITYXL,
      Myphone.MYPHONE_FUN_6,
      Myphone.MYPHONE_FUN_7_LTE,
      Myphone.MYPHONE_FUN_8,
      Myphone.MYPHONE_FUN_9,
      Myphone.MYPHONE_MY96_DTV,
      Myphone.MYPHONE_NOW_ESIM,
      Myphone.MYPHONE_POCKET_PRO,
      Myphone.MYPHONE_PRIME_2,
      Myphone.MYPHONE_PRIME_3,
      Myphone.MYPHONE_PRIME_5,
      Myphone.MYT10,
      Myphone.MYT5_DTV,
      Myphone.MYT6_DTV,
      Myphone.MYT6S,
      Myphone.MYT8,
      Myphone.MYT8S,
      Myphone.MYWX1_PLUS,
      Myphone.MYWX2,
      Myphone.MYWX2_PRO,
      Myphone.MYX12,
      Myphone.MYX2,
      Myphone.MYX8,
      Myphone.MYXI1_PLUS,
      Myphone.MYXI1_PRO,
      Myphone.MYXI3,
      Myphone.NB106M,
      Myphone.NB754,
      Myphone.NB961,
      Myphone.NEOCORE_E1R1,
      Myphone.PRIME_18X9,
      Myphone.PRIME_18X9_LTE,
      Myphone.PRIME_4_LITE,
      Myphone.PRIME_PLUS_EN,
      Myphone.Q_SMART_III_PLUS,
      Myphone.SMARTVIEW_7_3G,
      Myphone.SMARTVIEW_9_6_3G,
      Myphone.V4701_I01
  )

  /**
   * Get all device specifications for MyRepublic_STB_2023 devices.
   * Useful for myrepublic_stb_2023 testing.
   */
  public fun getMyrepublicStb2023Devices(): List<String> = listOf(
      MyrepublicStb2023.B866V2FAV3
  )

  /**
   * Get all device specifications for Myria devices.
   * Useful for myria testing.
   */
  public fun getMyriaDevices(): List<String> = listOf(
      Myria.MYRIA_GRAND_4G,
      Myria.MYRIA_L550,
      Myria.MYRIA_L600
  )

  /**
   * Get all device specifications for Myros devices.
   * Useful for myros testing.
   */
  public fun getMyrosDevices(): List<String> = listOf(
      Myros.E70_ULTRA
  )

  /**
   * Get all device specifications for MYSTIC devices.
   * Useful for mystic testing.
   */
  public fun getMysticDevices(): List<String> = listOf(
      Mystic.R1,
      Mystic.R2,
      Mystic.R3,
      Mystic.R3_GTV,
      Mystic.R4,
      Mystic.R4_GTV
  )

  /**
   * Get all device specifications for MyTab_pro devices.
   * Useful for mytab_pro testing.
   */
  public fun getMytabProDevices(): List<String> = listOf(
      MytabPro.MYTAB_PRO_13
  )

  /**
   * Get all device specifications for N_one devices.
   * Useful for n_one testing.
   */
  public fun getNOneDevices(): List<String> = listOf(
      NOne.NPAD_MINI,
      NOne.NPAD_ULTRA,
      NOne.NPADAIR,
      NOne.NPADPLUS,
      NOne.NPADQ,
      NOne.NPADS,
      NOne.NPADY,
      NOne.NPADY1,
      NOne.TAB005
  )

  /**
   * Get all device specifications for nabi devices.
   * Useful for nabi testing.
   */
  public fun getNabiDevices(): List<String> = listOf(
      Nabi.DMTAB_NV20A,
      Nabi.DMTAB_NV24A,
      Nabi.MT799,
      Nabi.NABI2S,
      Nabi.NBFP07PMKG,
      Nabi.NBTY07SMKG
  )

  /**
   * Get all device specifications for NAKAMICHI devices.
   * Useful for nakamichi testing.
   */
  public fun getNakamichiDevices(): List<String> = listOf(
      Nakamichi.STANFORD,
      Nakamichi.ZHONGSHAN
  )

  /**
   * Get all device specifications for Nanho devices.
   * Useful for nanho testing.
   */
  public fun getNanhoDevices(): List<String> = listOf(
      Nanho.F101
  )

  /**
   * Get all device specifications for nano devices.
   * Useful for nano testing.
   */
  public fun getNanoDevices(): List<String> = listOf(
      Nano.GANGBYEON,
      Nano.MARINA,
      Nano.MARTIN,
      Nano.NAGATA,
      Nano.OSAKI,
      Nano.TAMACHI,
      Nano.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for naomicase devices.
   * Useful for naomicase testing.
   */
  public fun getNaomicaseDevices(): List<String> = listOf(
      Naomicase.N4,
      Naomicase.N4MAX
  )

  /**
   * Get all device specifications for NAOMIPHONE devices.
   * Useful for naomiphone testing.
   */
  public fun getNaomiphoneDevices(): List<String> = listOf(
      Naomiphone.NAOMIPHONE_AMBAR
  )

  /**
   * Get all device specifications for Nasco devices.
   * Useful for nasco testing.
   */
  public fun getNascoDevices(): List<String> = listOf(
      Nasco.NAS_400,
      Nasco.NAS_503,
      Nasco.NAS_510,
      Nasco.POWER_PLUS
  )

  /**
   * Get all device specifications for Nautilus devices.
   * Useful for nautilus testing.
   */
  public fun getNautilusDevices(): List<String> = listOf(
      Nautilus.NFTM_LAR,
      Nautilus.NFTM_MED,
      Nautilus.NFTM_SMA
  )

  /**
   * Get all device specifications for NAVCITY devices.
   * Useful for navcity testing.
   */
  public fun getNavcityDevices(): List<String> = listOf(
      Navcity.NP_752GO,
      Navcity.NP752
  )

  /**
   * Get all device specifications for NAVITEL devices.
   * Useful for navitel testing.
   */
  public fun getNavitelDevices(): List<String> = listOf(
      Navitel.NAVITEL_T700_3G_NAVI,
      Navitel.NAVITEL_T757LTE,
      Navitel.NAVITEL_T797_4G,
      Navitel.T500_3G,
      Navitel.T505PRO,
      Navitel.T707_3G,
      Navitel.T737PRO,
      Navitel.T787_4G
  )

  /**
   * Get all device specifications for Navon devices.
   * Useful for navon testing.
   */
  public fun getNavonDevices(): List<String> = listOf(
      Navon.D455,
      Navon.INFINITY,
      Navon.IQ7_2018,
      Navon.NAVON_IQ8_2021,
      Navon.NAVON_SPT1100,
      Navon.PLATINUM103G2019,
      Navon.PLATINUM_10_3G_V2,
      Navon.PURE_MICRO,
      Navon.SKY,
      Navon.SPIRIT,
      Navon.SPIRIT_PLUS
  )

  /**
   * Get all device specifications for NAXA devices.
   * Useful for naxa testing.
   */
  public fun getNaxaDevices(): List<String> = listOf(
      Naxa.NID_1050,
      Naxa.NID_1055,
      Naxa.NID_1056,
      Naxa.NID_1070,
      Naxa.NID_7021,
      Naxa.NID_7022,
      Naxa.NID_7055,
      Naxa.NID_7056
  )

  /**
   * Get all device specifications for NEBULA devices.
   * Useful for nebula testing.
   */
  public fun getNebulaDevices(): List<String> = listOf(
      Nebula.CJU,
      Nebula.D2140_COSMOS,
      Nebula.DM8260,
      Nebula.DM8261,
      Nebula.TAIHANG
  )

  /**
   * Get all device specifications for NEC devices.
   * Useful for nec testing.
   */
  public fun getNecDevices(): List<String> = listOf(
      Nec._508T1W,
      Nec._708T1W,
      Nec.D000000039,
      Nec.LAVIET11112K1,
      Nec.LAVIET1111QHD1,
      Nec.LAVIET77SD1,
      Nec.LAVIET88HD1,
      Nec.LAVIETAB,
      Nec.LAVIETAB102K1,
      Nec.LAVIETAB10FHD3,
      Nec.LAVIETAB112K2,
      Nec.LAVIETAB11FHD1,
      Nec.LAVIETAB11QHD2,
      Nec.LAVIETAB143K1,
      Nec.LAVIETAB9QHD1,
      Nec.LAVIETABE10FHD1,
      Nec.LAVIETABE10FHD2,
      Nec.LAVIETABE7SD1,
      Nec.LAVIETABE8FHD1,
      Nec.LAVIETABE8HD1,
      Nec.LAVIETABT1212QHD1,
      Nec.PC_TE410JAW,
      Nec.PC_TE508HAW,
      Nec.PC_TE508S1_NEC,
      Nec.PC_TE510JAW,
      Nec.PC_TE510S1_NEC,
      Nec.PC_TS507N1S,
      Nec.PC_TS508FAM,
      Nec.TE507FAW
  )

  /**
   * Get all device specifications for NECNON devices.
   * Useful for necnon testing.
   */
  public fun getNecnonDevices(): List<String> = listOf(
      Necnon._3L_2,
      Necnon.M002K_2,
      Necnon.M002K_2,
      Necnon.M002N_3T,
      Necnon.M002Q_2,
      Necnon.M002U_2T
  )

  /**
   * Get all device specifications for Neffos devices.
   * Useful for neffos testing.
   */
  public fun getNeffosDevices(): List<String> = listOf(
      Neffos.A5,
      Neffos.C5,
      Neffos.C5_MAX,
      Neffos.C5_PLUS,
      Neffos.C5A,
      Neffos.C5S,
      Neffos.C7,
      Neffos.C7_LITE,
      Neffos.C7A,
      Neffos.C7S,
      Neffos.C9,
      Neffos.C9_MAX,
      Neffos.C9A,
      Neffos.C9S,
      Neffos.N1,
      Neffos.X1,
      Neffos.X1_LITE,
      Neffos.X1_MAX,
      Neffos.X20,
      Neffos.X20_PRO,
      Neffos.X9,
      Neffos.Y5,
      Neffos.Y50,
      Neffos.Y5_LITE,
      Neffos.Y5I,
      Neffos.Y5L,
      Neffos.Y5S,
      Neffos.Y6,
      Neffos.Y7
  )

  /**
   * Get all device specifications for NELATECH devices.
   * Useful for nelatech testing.
   */
  public fun getNelatechDevices(): List<String> = listOf(
      Nelatech.TAB8V1
  )

  /**
   * Get all device specifications for NEO devices.
   * Useful for neo testing.
   */
  public fun getNeoDevices(): List<String> = listOf(
      Neo.GF214_NEO
  )

  /**
   * Get all device specifications for neocore devices.
   * Useful for neocore testing.
   */
  public fun getNeocoreDevices(): List<String> = listOf(
      Neocore.NEOCORE_E2S,
      Neocore.NEOCORE_E1_2_EEA,
      Neocore.NEOCORE_E2,
      Neocore.NEOCORE_N1G1
  )

  /**
   * Get all device specifications for NEON devices.
   * Useful for neon testing.
   */
  public fun getNeonDevices(): List<String> = listOf(
      Neon.NEON_TAB_11
  )

  /**
   * Get all device specifications for NEONIQ devices.
   * Useful for neoniq testing.
   */
  public fun getNeoniqDevices(): List<String> = listOf(
      Neoniq.NQT_1013GIQ,
      Neoniq.NQT_1014GIQ,
      Neoniq.NQT_1014GIQA,
      Neoniq.NQT_73GIQ,
      Neoniq.NQT_73GIQ11
  )

  /**
   * Get all device specifications for Neoregent devices.
   * Useful for neoregent testing.
   */
  public fun getNeoregentDevices(): List<String> = listOf(
      Neoregent.KT1007_EEA
  )

  /**
   * Get all device specifications for NETBOX devices.
   * Useful for netbox testing.
   */
  public fun getNetboxDevices(): List<String> = listOf(
      Netbox.UIW4030DNM
  )

  /**
   * Get all device specifications for NETGREEN devices.
   * Useful for netgreen testing.
   */
  public fun getNetgreenDevices(): List<String> = listOf(
      Netgreen.M11QF8,
      Netgreen.M15QF6,
      Netgreen.M15QF6AR,
      Netgreen.M16QF11,
      Netgreen.M16QF11AR,
      Netgreen.M16QF9AR,
      Netgreen.M16QF9ES
  )

  /**
   * Get all device specifications for NETMAK devices.
   * Useful for netmak testing.
   */
  public fun getNetmakDevices(): List<String> = listOf(
      Netmak.NM_VELOCITY
  )

  /**
   * Get all device specifications for NETOGY devices.
   * Useful for netogy testing.
   */
  public fun getNetogyDevices(): List<String> = listOf(
      Netogy.YXU
  )

  /**
   * Get all device specifications for NETTV devices.
   * Useful for nettv testing.
   */
  public fun getNettvDevices(): List<String> = listOf(
      Nettv.SEI500NTV
  )

  /**
   * Get all device specifications for Newal devices.
   * Useful for newal testing.
   */
  public fun getNewalDevices(): List<String> = listOf(
      Newal.MARINA,
      Newal.NAGATA
  )

  /**
   * Get all device specifications for newbalance devices.
   * Useful for newbalance testing.
   */
  public fun getNewbalanceDevices(): List<String> = listOf(
      Newbalance.SHASTA
  )

  /**
   * Get all device specifications for NewBridge devices.
   * Useful for newbridge testing.
   */
  public fun getNewbridgeDevices(): List<String> = listOf(
      Newbridge.NBTB101,
      Newbridge.NBTB102
  )

  /**
   * Get all device specifications for NewBrige devices.
   * Useful for newbrige testing.
   */
  public fun getNewbrigeDevices(): List<String> = listOf(
      Newbrige.NBTB101B
  )

  /**
   * Get all device specifications for Newland devices.
   * Useful for newland testing.
   */
  public fun getNewlandDevices(): List<String> = listOf(
      Newland.NLS_MT6550_AM,
      Newland.NLS_MT6552_EEA,
      Newland.NLS_MT6552_GL,
      Newland.NLS_MT6555_GL,
      Newland.NLS_MT6755_GL,
      Newland.NLS_MT90_GL,
      Newland.NLS_MT9052_GL,
      Newland.NLS_MT9055_GL,
      Newland.NLS_MT93,
      Newland.NLS_MT95,
      Newland.NLS_N7,
      Newland.NLS_N7_GL,
      Newland.NLS_NFT10_GL,
      Newland.NLS_NQUIRE
  )

  /**
   * Get all device specifications for Newline devices.
   * Useful for newline testing.
   */
  public fun getNewlineDevices(): List<String> = listOf(
      Newline.RK3588_T,
      Newline.VELVET,
      Newline.Z24
  )

  /**
   * Get all device specifications for newspice devices.
   * Useful for newspice testing.
   */
  public fun getNewspiceDevices(): List<String> = listOf(
      Newspice.SPICE_F305,
      Newspice.SPICE_F311,
      Newspice.SPICE_F301,
      Newspice.SPICE_F302,
      Newspice.SPICE_K601,
      Newspice.SPICE_V801
  )

  /**
   * Get all device specifications for NEWSUN devices.
   * Useful for newsun testing.
   */
  public fun getNewsunDevices(): List<String> = listOf(
      Newsun.S20
  )

  /**
   * Get all device specifications for NEWTON devices.
   * Useful for newton testing.
   */
  public fun getNewtonDevices(): List<String> = listOf(
      Newton.H1
  )

  /**
   * Get all device specifications for NEXA devices.
   * Useful for nexa testing.
   */
  public fun getNexaDevices(): List<String> = listOf(
      Nexa.NEXAN5A
  )

  /**
   * Get all device specifications for Next devices.
   * Useful for next testing.
   */
  public fun getNextDevices(): List<String> = listOf(
      Next.ELLINIKO,
      Next.STANFORD,
      Next.YDA,
      Next.YYT,
      Next.ZHONGSHAN
  )

  /**
   * Get all device specifications for NEXT-G devices.
   * Useful for next-g testing.
   */
  public fun getNextGDevices(): List<String> = listOf(
      NextG.STANFORD,
      NextG.ZHONGSHAN
  )

  /**
   * Get all device specifications for NEXT_TECHNOLOGIES devices.
   * Useful for next_technologies testing.
   */
  public fun getNextTechnologiesDevices(): List<String> = listOf(
      NextTechnologies.N7526
  )

  /**
   * Get all device specifications for Nexta devices.
   * Useful for nexta testing.
   */
  public fun getNextaDevices(): List<String> = listOf(
      Nexta.SMART_STUDY_1
  )

  /**
   * Get all device specifications for Nextbit devices.
   * Useful for nextbit testing.
   */
  public fun getNextbitDevices(): List<String> = listOf(
      Nextbit.ETHER
  )

  /**
   * Get all device specifications for NextBook devices.
   * Useful for nextbook testing.
   */
  public fun getNextbookDevices(): List<String> = listOf(
      Nextbook.BRT81,
      Nextbook.NX16A10132S,
      Nextbook.NX16A10132SPS,
      Nextbook.NX16A11264,
      Nextbook.NX16A8116K,
      Nextbook.NX16A8116KP,
      Nextbook.NXA116QC164,
      Nextbook.NXA8QC116,
      Nextbook.NXM865FD
  )

  /**
   * Get all device specifications for NeXTbyMaxis_M1 devices.
   * Useful for nextbymaxis_m1 testing.
   */
  public fun getNextbymaxisM1Devices(): List<String> = listOf(
      NextbymaxisM1.VFD700
  )

  /**
   * Get all device specifications for Nextgear devices.
   * Useful for nextgear testing.
   */
  public fun getNextgearDevices(): List<String> = listOf(
      Nextgear.NEXTGEAR_N1
  )

  /**
   * Get all device specifications for NEXUS devices.
   * Useful for nexus testing.
   */
  public fun getNexusDevices(): List<String> = listOf(
      Nexus.LAVENDER,
      Nexus.MOUNTBAKER
  )

  /**
   * Get all device specifications for NEXWIN devices.
   * Useful for nexwin testing.
   */
  public fun getNexwinDevices(): List<String> = listOf(
      Nexwin.IFPD_RK3588
  )

  /**
   * Get all device specifications for NGM devices.
   * Useful for ngm testing.
   */
  public fun getNgmDevices(): List<String> = listOf(
      Ngm.E506,
      Ngm.R1,
      Ngm.R2
  )

  /**
   * Get all device specifications for NIKAI-PRO devices.
   * Useful for nikai-pro testing.
   */
  public fun getNikaiProDevices(): List<String> = listOf(
      NikaiPro.HONGKONG
  )

  /**
   * Get all device specifications for NIKKEI devices.
   * Useful for nikkei testing.
   */
  public fun getNikkeiDevices(): List<String> = listOf(
      Nikkei.IKEBUKURO,
      Nikkei.LONGSHAN,
      Nikkei.R3,
      Nikkei.R4,
      Nikkei.REDWOOD,
      Nikkei.SAMSEONG
  )

  /**
   * Get all device specifications for NIO devices.
   * Useful for nio testing.
   */
  public fun getNioDevices(): List<String> = listOf(
      Nio.DAVINCI,
      Nio.PICASSO
  )

  /**
   * Get all device specifications for NISATO devices.
   * Useful for nisato testing.
   */
  public fun getNisatoDevices(): List<String> = listOf(
      Nisato.R3,
      Nisato.R4
  )

  /**
   * Get all device specifications for nissan devices.
   * Useful for nissan testing.
   */
  public fun getNissanDevices(): List<String> = listOf(
      Nissan.AIVI2_B,
      Nissan.AIVI2_N_FULL
  )

  /**
   * Get all device specifications for Nixon devices.
   * Useful for nixon testing.
   */
  public fun getNixonDevices(): List<String> = listOf(
      Nixon.SCULPIN
  )

  /**
   * Get all device specifications for nJoy devices.
   * Useful for njoy testing.
   */
  public fun getNjoyDevices(): List<String> = listOf(
      Njoy.NJOY_THEIA_10
  )

  /**
   * Get all device specifications for NKJ_AQT100 devices.
   * Useful for nkj_aqt100 testing.
   */
  public fun getNkjAqt100Devices(): List<String> = listOf(
      NkjAqt100.NKJ_AQT100
  )

  /**
   * Get all device specifications for NOA devices.
   * Useful for noa testing.
   */
  public fun getNoaDevices(): List<String> = listOf(
      Noa.FRESH_4G,
      Noa.HUMMER_2019_R,
      Noa.N1,
      Noa.NOA_N10,
      Noa.NOA_N20,
      Noa.NOA_N7,
      Noa.NOA_N8,
      Noa.NOA_P1,
      Noa.SPRINT4G,
      Noa.VIVO4G_R
  )

  /**
   * Get all device specifications for Nobby devices.
   * Useful for nobby testing.
   */
  public fun getNobbyDevices(): List<String> = listOf(
      Nobby.NOBBY_S300_PRO
  )

  /**
   * Get all device specifications for NobleSkiodo devices.
   * Useful for nobleskiodo testing.
   */
  public fun getNobleskiodoDevices(): List<String> = listOf(
      Nobleskiodo.IKEBUKURO,
      Nobleskiodo.SUNNYVALE,
      Nobleskiodo.SW6H,
      Nobleskiodo.UMEDA
  )

  /**
   * Get all device specifications for Noblex devices.
   * Useful for noblex testing.
   */
  public fun getNoblexDevices(): List<String> = listOf(
      Noblex.A50UNS,
      Noblex.A60UNS,
      Noblex.ANAHEIM,
      Noblex.N405,
      Noblex.N503,
      Noblex.N504,
      Noblex.N551,
      Noblex.N552,
      Noblex.N601,
      Noblex.NOBLEX_B30,
      Noblex.NOBLEX_N52,
      Noblex.NOBLEX_N62,
      Noblex.R3,
      Noblex.SHINJUKU,
      Noblex.SONGSHAN,
      Noblex.SUNNYVALE,
      Noblex.SW4H,
      Noblex.SW6H,
      Noblex.TABLET,
      Noblex.TN11A6128
  )

  /**
   * Get all device specifications for NOBRAND devices.
   * Useful for nobrand testing.
   */
  public fun getNobrandDevices(): List<String> = listOf(
      Nobrand.STANFORD
  )

  /**
   * Get all device specifications for NODROPOUT devices.
   * Useful for nodropout testing.
   */
  public fun getNodropoutDevices(): List<String> = listOf(
      Nodropout.T25
  )

  /**
   * Get all device specifications for NOGA devices.
   * Useful for noga testing.
   */
  public fun getNogaDevices(): List<String> = listOf(
      Noga.NOGA101GHD,
      Noga.NOGA7G,
      Noga.NOGAPAD101GHD,
      Noga.NOGAPAD101XTREME,
      Noga.NOGAPAD7G
  )

  /**
   * Get all device specifications for Nokia devices.
   * Useful for nokia testing.
   */
  public fun getNokiaDevices(): List<String> = listOf(
      Nokia.A1N,
      Nokia.A1N_SPROUT,
      Nokia.AGT,
      Nokia.AGTA,
      Nokia.AKT,
      Nokia.ANT,
      Nokia.AOP,
      Nokia.AOP_SPROUT,
      Nokia.APO_SPROUT,
      Nokia.ARV_CUS,
      Nokia.ARV_VZW,
      Nokia.B2N,
      Nokia.B2N_SPROUT,
      Nokia.BGT,
      Nokia.BGT_SPROUT,
      Nokia.C1N,
      Nokia.CAP,
      Nokia.CAP_SPROUT,
      Nokia.CBL,
      Nokia.CO2_SPROUT,
      Nokia.CO2N_SPROUT,
      Nokia.COR,
      Nokia.COS,
      Nokia.CTL_SPROUT,
      Nokia.CYR,
      Nokia.D1C,
      Nokia.DDV_SPROUT,
      Nokia.DDVA_SPROUT,
      Nokia.DGC,
      Nokia.DGF,
      Nokia.DKT,
      Nokia.DM5,
      Nokia.DMN,
      Nokia.DPL_SPROUT,
      Nokia.DPL_VZW,
      Nokia.DPT,
      Nokia.DRD,
      Nokia.DRD_SPROUT,
      Nokia.DRDA_SPROUT,
      Nokia.DRG,
      Nokia.DRG_SPROUT,
      Nokia.DRK,
      Nokia.DRS,
      Nokia.DRS_SPROUT,
      Nokia.DRSA_SPROUT,
      Nokia.DRX,
      Nokia.DV6068H_NOKIA,
      Nokia.E1M,
      Nokia.E2M,
      Nokia.EAG,
      Nokia.ES2_SPROUT,
      Nokia.ES2N_SPROUT,
      Nokia.EVW,
      Nokia.FCN_SPROUT,
      Nokia.FRT,
      Nokia.GMR,
      Nokia.HKEA,
      Nokia.HND,
      Nokia.HPE,
      Nokia.IAD,
      Nokia.IRM_SPROUT,
      Nokia.IRS,
      Nokia.IRU,
      Nokia.LONGSHAN,
      Nokia.MATEO,
      Nokia.MGKA_SPROUT,
      Nokia.MKDA,
      Nokia.MNI,
      Nokia.MNR,
      Nokia.MNT,
      Nokia.NAGATA,
      Nokia.NB1,
      Nokia.NBL,
      Nokia.ND1,
      Nokia.NE1,
      Nokia.NOKIA_N1,
      Nokia.NVA,
      Nokia.ORO,
      Nokia.ORT,
      Nokia.PAN_SPROUT,
      Nokia.PANTHER_00EEE,
      Nokia.PDA,
      Nokia.PDA_SPROUT,
      Nokia.PGN,
      Nokia.PHR,
      Nokia.PHR_SPROUT,
      Nokia.PL2,
      Nokia.PL2_SPROUT,
      Nokia.PLE,
      Nokia.PMC_CUS,
      Nokia.PNX,
      Nokia.PNX_SPROUT,
      Nokia.PNXN,
      Nokia.QKS,
      Nokia.QKS_SPROUT,
      Nokia.R1,
      Nokia.R2,
      Nokia.R4,
      Nokia.RAV_VZW,
      Nokia.RDD,
      Nokia.REDWOOD,
      Nokia.RHD,
      Nokia.RKU,
      Nokia.RNN,
      Nokia.RNN_SPROUT,
      Nokia.RNNA_SPROUT,
      Nokia.ROGA,
      Nokia.ROGA_SPROUT,
      Nokia.ROO_SPROUT,
      Nokia.ROON_SPROUT,
      Nokia.RVOA,
      Nokia.RVTA,
      Nokia.SCP,
      Nokia.SCP_SPROUT,
      Nokia.SCPA_SPROUT,
      Nokia.SCT_SPROUT,
      Nokia.SCTA_SPROUT,
      Nokia.SCW,
      Nokia.SCW_SPROUT,
      Nokia.SDT,
      Nokia.SDW,
      Nokia.SDWA,
      Nokia.SFI,
      Nokia.SFIA,
      Nokia.SLD_SPROUT,
      Nokia.SLDA_SPROUT,
      Nokia.SNT_SPROUT,
      Nokia.STM,
      Nokia.STO,
      Nokia.SUS,
      Nokia.TAS,
      Nokia.TTG,
      Nokia.TTG_SPROUT,
      Nokia.VSI,
      Nokia.WSP_SPROUT,
      Nokia.WVR,
      Nokia.WVR_SPROUT,
      Nokia.YDU
  )

  /**
   * Get all device specifications for Nomi devices.
   * Useful for nomi testing.
   */
  public fun getNomiDevices(): List<String> = listOf(
      Nomi.I5012,
      Nomi.I5013,
      Nomi.I5014,
      Nomi.I5050,
      Nomi.I6030,
      Nomi.NOMI_C070011,
      Nomi.NOMI_C070012,
      Nomi.NOMI_C070014,
      Nomi.NOMI_C070014L,
      Nomi.NOMI_C070034,
      Nomi.NOMI_C070044,
      Nomi.NOMI_C080014,
      Nomi.NOMI_C080034,
      Nomi.NOMI_C101010_ULTRA2,
      Nomi.NOMI_C101012,
      Nomi.NOMI_C101014,
      Nomi.NOMI_C101030,
      Nomi.NOMI_C101034,
      Nomi.NOMI_C101040,
      Nomi.NOMI_C101044,
      Nomi.NOMI_I5001,
      Nomi.NOMI_I5510,
      Nomi.NOMI_I5532
  )

  /**
   * Get all device specifications for NOMU devices.
   * Useful for nomu testing.
   */
  public fun getNomuDevices(): List<String> = listOf(
      Nomu.G200,
      Nomu.M8,
      Nomu.S10,
      Nomu.S50_PRO,
      Nomu.T20,
      Nomu.V31,
      Nomu.V31D,
      Nomu.V31E,
      Nomu.V58
  )

  /**
   * Get all device specifications for Nook devices.
   * Useful for nook testing.
   */
  public fun getNookDevices(): List<String> = listOf(
      Nook.ST16C7BNN,
      Nook.ST18C10BNN,
      Nook.ST18C7BNN
  )

  /**
   * Get all device specifications for NORTH_TECH devices.
   * Useful for north_tech testing.
   */
  public fun getNorthTechDevices(): List<String> = listOf(
      NorthTech.NT_S10
  )

  /**
   * Get all device specifications for Noryox devices.
   * Useful for noryox testing.
   */
  public fun getNoryoxDevices(): List<String> = listOf(
      Noryox.HANDHELD_POS,
      Noryox.HANDHELD_POS
  )

  /**
   * Get all device specifications for NOS devices.
   * Useful for nos testing.
   */
  public fun getNosDevices(): List<String> = listOf(
      Nos.DV9161_KPN
  )

  /**
   * Get all device specifications for Nothing devices.
   * Useful for nothing testing.
   */
  public fun getNothingDevices(): List<String> = listOf(
      Nothing.ASTEROIDS,
      Nothing.GALAGA,
      Nothing.METROID,
      Nothing.PACMAN,
      Nothing.PACMANPRO,
      Nothing.PONG,
      Nothing.SPACEWAR,
      Nothing.TETRIS
  )

  /**
   * Get all device specifications for Novey devices.
   * Useful for novey testing.
   */
  public fun getNoveyDevices(): List<String> = listOf(
      Novey.ALPHA_A16,
      Novey.PRO_K10,
      Novey.START_S
  )

  /**
   * Get all device specifications for NOVINSUN devices.
   * Useful for novinsun testing.
   */
  public fun getNovinsunDevices(): List<String> = listOf(
      Novinsun.TN618
  )

  /**
   * Get all device specifications for NOVO devices.
   * Useful for novo testing.
   */
  public fun getNovoDevices(): List<String> = listOf(
      Novo.T596_DP_N_37M35
  )

  /**
   * Get all device specifications for NOVOJOY devices.
   * Useful for novojoy testing.
   */
  public fun getNovojoyDevices(): List<String> = listOf(
      Novojoy.NV10
  )

  /**
   * Get all device specifications for Now_E devices.
   * Useful for now_e testing.
   */
  public fun getNowEDevices(): List<String> = listOf(
      NowE.HK101
  )

  /**
   * Get all device specifications for NOWO devices.
   * Useful for nowo testing.
   */
  public fun getNowoDevices(): List<String> = listOf(
      Nowo.DV8535_KPN,
      Nowo.DV8935_KPN
  )

  /**
   * Get all device specifications for NowTV devices.
   * Useful for nowtv testing.
   */
  public fun getNowtvDevices(): List<String> = listOf(
      Nowtv._3103
  )

  /**
   * Get all device specifications for npls devices.
   * Useful for npls testing.
   */
  public fun getNplsDevices(): List<String> = listOf(
      Npls.UZX4020NPS
  )

  /**
   * Get all device specifications for NT devices.
   * Useful for nt testing.
   */
  public fun getNtDevices(): List<String> = listOf(
      Nt.HP40A
  )

  /**
   * Get all device specifications for NuAns devices.
   * Useful for nuans testing.
   */
  public fun getNuansDevices(): List<String> = listOf(
      Nuans.NEO2
  )

  /**
   * Get all device specifications for nubia devices.
   * Useful for nubia testing.
   */
  public fun getNubiaDevices(): List<String> = listOf(
      Nubia.K68,
      Nubia.K99J,
      Nubia.NUBIA_NB1001_UN,
      Nubia.NX503A,
      Nubia.NX505J,
      Nubia.NX507J,
      Nubia.NX508J,
      Nubia.NX510J,
      Nubia.NX511J,
      Nubia.NX512J,
      Nubia.NX513J,
      Nubia.NX523J_V1,
      Nubia.NX529J,
      Nubia.NX531J,
      Nubia.NX541J,
      Nubia.NX549J,
      Nubia.NX551J,
      Nubia.NX563J,
      Nubia.NX569J,
      Nubia.NX573J,
      Nubia.NX575J,
      Nubia.NX589J,
      Nubia.NX591J,
      Nubia.NX595J,
      Nubia.NX601J,
      Nubia.NX609J,
      Nubia.NX612J,
      Nubia.NX619J,
      Nubia.NX619J_EEA,
      Nubia.NX627J,
      Nubia.NX627J_EEA,
      Nubia.NX629J,
      Nubia.NX629J_EEA,
      Nubia.NX651J,
      Nubia.NX651J_EEA,
      Nubia.NX659J,
      Nubia.NX659J_EEA,
      Nubia.NX659J_RU,
      Nubia.NX659J_UN,
      Nubia.NX666J,
      Nubia.NX669J,
      Nubia.NX669J_EEA,
      Nubia.NX669J_UN,
      Nubia.NX679J,
      Nubia.NX679J_EEA,
      Nubia.NX679J_UN,
      Nubia.NX679S,
      Nubia.NX709J,
      Nubia.NX709J_EEA,
      Nubia.NX709J_UN,
      Nubia.NX709S,
      Nubia.NX709S_EEA,
      Nubia.NX709S_UN,
      Nubia.NX729J,
      Nubia.NX729J_EEA,
      Nubia.NX729J_UN,
      Nubia.NX769J,
      Nubia.NX789J,
      Nubia.NX907J,
      Nubia.P606F10,
      Nubia.P606F17,
      Nubia.P606F18,
      Nubia.P606F19,
      Nubia.P606F20,
      Nubia.P616F02,
      Nubia.P616F03,
      Nubia.P616F05,
      Nubia.P678F01,
      Nubia.P720F08,
      Nubia.P720F09,
      Nubia.P720F09_U,
      Nubia.P720F10,
      Nubia.P720F11,
      Nubia.P720F12,
      Nubia.P745F01,
      Nubia.P780F01,
      Nubia.P780F02,
      Nubia.P820F03,
      Nubia.P820F05,
      Nubia.P875N02,
      Nubia.P898A21,
      Nubia.P898P02,
      Nubia.P963F11,
      Nubia.PQ82A01,
      Nubia.PQ82A02,
      Nubia.PQ82A04,
      Nubia.PQ82A11,
      Nubia.PQ83A01,
      Nubia.PQ83A06,
      Nubia.PQ83F01,
      Nubia.PQ83P01,
      Nubia.PQ84A01,
      Nubia.PQ84A02,
      Nubia.Z6255,
      Nubia.Z6657,
      Nubia.Z6701S,
      Nubia.Z8900S
  )

  /**
   * Get all device specifications for Nubio_Lite devices.
   * Useful for nubio_lite testing.
   */
  public fun getNubioLiteDevices(): List<String> = listOf(
      NubioLite.LS032I,
      NubioLite.LS032M
  )

  /**
   * Get all device specifications for NURIBOM devices.
   * Useful for nuribom testing.
   */
  public fun getNuribomDevices(): List<String> = listOf(
      Nuribom.RK3588_T
  )

  /**
   * Get all device specifications for NUU devices.
   * Useful for nuu testing.
   */
  public fun getNuuDevices(): List<String> = listOf(
      Nuu.A6L_C,
      Nuu.A6L_G,
      Nuu.N5001L,
      Nuu.N5001WA,
      Nuu.N5002LA,
      Nuu.N5002LATC,
      Nuu.N5501LA,
      Nuu.N5501LE,
      Nuu.N5502LA,
      Nuu.N5702L,
      Nuu.N5L,
      Nuu.N6001LA,
      Nuu.N6501LA,
      Nuu.NUU_A1,
      Nuu.NUU_A3,
      Nuu.NUU_M2,
      Nuu.NUU_M3,
      Nuu.NUU_X5,
      Nuu.S5501LE,
      Nuu.S5502LA,
      Nuu.S5702LA,
      Nuu.S5704LE,
      Nuu.S6001LE,
      Nuu.S6003LA,
      Nuu.S6303LA,
      Nuu.S6303LA_GO,
      Nuu.S6304LA,
      Nuu.S6501LA,
      Nuu.S6503LE,
      Nuu.S6505LA,
      Nuu.S6512LA,
      Nuu.S6514LA,
      Nuu.S6601LA,
      Nuu.S6603LA,
      Nuu.S6701LA,
      Nuu.S6702XA,
      Nuu.S6703LA,
      Nuu.S6704LA,
      Nuu.S6707XA,
      Nuu.T0801LAV1,
      Nuu.T0801LAV2,
      Nuu.T0805LAV1,
      Nuu.T1001LA,
      Nuu.T1005LAV1,
      Nuu.X4
  )

  /**
   * Get all device specifications for NUVISION devices.
   * Useful for nuvision testing.
   */
  public fun getNuvisionDevices(): List<String> = listOf(
      Nuvision.TM800AM
  )

  /**
   * Get all device specifications for NVIDIA devices.
   * Useful for nvidia testing.
   */
  public fun getNvidiaDevices(): List<String> = listOf(
      Nvidia.DARCY,
      Nvidia.FOSTER,
      Nvidia.MDARCY,
      Nvidia.ROTH,
      Nvidia.SHIELDTABLET,
      Nvidia.SIF,
      Nvidia.TEGRANOTE
  )

  /**
   * Get all device specifications for NW devices.
   * Useful for nw testing.
   */
  public fun getNwDevices(): List<String> = listOf(
      Nw.NW1
  )

  /**
   * Get all device specifications for NYX_Mobile devices.
   * Useful for nyx_mobile testing.
   */
  public fun getNyxMobileDevices(): List<String> = listOf(
      NyxMobile.CLICK,
      NyxMobile.GLAM,
      NyxMobile.KIN,
      NyxMobile.NYX_SHADE,
      NyxMobile.REX
  )

  /**
   * Get all device specifications for O2 devices.
   * Useful for o2 testing.
   */
  public fun getO2Devices(): List<String> = listOf(
      O2.O2TV_B866V2
  )

  /**
   * Get all device specifications for OALE devices.
   * Useful for oale testing.
   */
  public fun getOaleDevices(): List<String> = listOf(
      Oale.APEX1,
      Oale.APEX2,
      Oale.APEX3,
      Oale.DBX,
      Oale.P2,
      Oale.P3,
      Oale.P5S,
      Oale.XS2_LTE
  )

  /**
   * Get all device specifications for Oangcc devices.
   * Useful for oangcc testing.
   */
  public fun getOangccDevices(): List<String> = listOf(
      Oangcc.A13_EEA,
      Oangcc.A13_US,
      Oangcc.A6_EEA,
      Oangcc.A6_US,
      Oangcc.A9_EEA,
      Oangcc.A9_EEA,
      Oangcc.A9_US,
      Oangcc.TAB_A8_EEA,
      Oangcc.TAB_A6,
      Oangcc.TAB_A6_EEA,
      Oangcc.TAB_A8_EEA_T,
      Oangcc.TAB_A8_T
  )

  /**
   * Get all device specifications for OASE devices.
   * Useful for oase testing.
   */
  public fun getOaseDevices(): List<String> = listOf(
      Oase.EL_P1
  )

  /**
   * Get all device specifications for OASYS devices.
   * Useful for oasys testing.
   */
  public fun getOasysDevices(): List<String> = listOf(
      Oasys.TEG9300,
      Oasys.TEG9300_4,
      Oasys.TEG9300_5,
      Oasys.TEG9300_M
  )

  /**
   * Get all device specifications for Octopus devices.
   * Useful for octopus testing.
   */
  public fun getOctopusDevices(): List<String> = listOf(
      Octopus.OCTOPUS_ONE
  )

  /**
   * Get all device specifications for Odea devices.
   * Useful for odea testing.
   */
  public fun getOdeaDevices(): List<String> = listOf(
      Odea.A10_EEA,
      Odea.A10_ROW,
      Odea.A11_ROW,
      Odea.A12_ROW,
      Odea.S11_EEA,
      Odea.S11_ROW
  )

  /**
   * Get all device specifications for Odido devices.
   * Useful for odido testing.
   */
  public fun getOdidoDevices(): List<String> = listOf(
      Odido.SEI800TFAS
  )

  /**
   * Get all device specifications for ODO devices.
   * Useful for odo testing.
   */
  public fun getOdoDevices(): List<String> = listOf(
      Odo.A7008
  )

  /**
   * Get all device specifications for odotpad devices.
   * Useful for odotpad testing.
   */
  public fun getOdotpadDevices(): List<String> = listOf(
      Odotpad.PS8
  )

  /**
   * Get all device specifications for ODS devices.
   * Useful for ods testing.
   */
  public fun getOdsDevices(): List<String> = listOf(
      Ods.TA2C_DR9,
      Ods.TA2C_DR94G,
      Ods.TA2C_NF8
  )

  /**
   * Get all device specifications for ODYS devices.
   * Useful for odys testing.
   */
  public fun getOdysDevices(): List<String> = listOf(
      Odys.FALCON_10_PLUS_3G,
      Odys.GOAL_10_PLUS_3G,
      Odys.JUNIOR_8_PRO,
      Odys.MAVEN_T10_PRO,
      Odys.NOTETAB_PRO,
      Odys.PACE10,
      Odys.T1011S,
      Odys.T1021,
      Odys.THANOS_10,
      Odys.TITAN_10_LTE
  )

  /**
   * Get all device specifications for OFD devices.
   * Useful for ofd testing.
   */
  public fun getOfdDevices(): List<String> = listOf(
      Ofd.D01
  )

  /**
   * Get all device specifications for OK devices.
   * Useful for ok testing.
   */
  public fun getOkDevices(): List<String> = listOf(
      Ok.BANGBAE,
      Ok.IKEBUKURO,
      Ok.KAITAK,
      Ok.LONGSHAN,
      Ok.OSAKI,
      Ok.REDWOOD,
      Ok.SAMSEONG,
      Ok.SHINAGAWA,
      Ok.UMEDA
  )

  /**
   * Get all device specifications for OKAPI devices.
   * Useful for okapi testing.
   */
  public fun getOkapiDevices(): List<String> = listOf(
      Okapi.OKAPI10,
      Okapi.OKAPI10_PRO,
      Okapi.OKAPI10_PRO_MAX,
      Okapi.OKAPI10_S,
      Okapi.OKAPI_TAB8,
      Okapi.OKAPI_TAB8_PRO
  )

  /**
   * Get all device specifications for okayseamedia devices.
   * Useful for okayseamedia testing.
   */
  public fun getOkayseamediaDevices(): List<String> = listOf(
      Okayseamedia.TK706,
      Okayseamedia.TK708,
      Okayseamedia.TK708_EEA
  )

  /**
   * Get all device specifications for Okin devices.
   * Useful for okin testing.
   */
  public fun getOkinDevices(): List<String> = listOf(
      Okin.FP2901,
      Okin.FP290101
  )

  /**
   * Get all device specifications for OKSI devices.
   * Useful for oksi testing.
   */
  public fun getOksiDevices(): List<String> = listOf(
      Oksi.GT1001
  )

  /**
   * Get all device specifications for okulaku devices.
   * Useful for okulaku testing.
   */
  public fun getOkulakuDevices(): List<String> = listOf(
      Okulaku.K10,
      Okulaku.ZIDS701
  )

  /**
   * Get all device specifications for OKV devices.
   * Useful for okv testing.
   */
  public fun getOkvDevices(): List<String> = listOf(
      Okv.RK3588_T
  )

  /**
   * Get all device specifications for OLAX devices.
   * Useful for olax testing.
   */
  public fun getOlaxDevices(): List<String> = listOf(
      Olax.MAGIC_Q1,
      Olax.MAGIC_Q8,
      Olax.OCEAN_F8,
      Olax.OCEAN_K10,
      Olax.OCEAN_K8,
      Olax.OCEAN_K8_PRO
  )

  /**
   * Get all device specifications for Olike devices.
   * Useful for olike testing.
   */
  public fun getOlikeDevices(): List<String> = listOf(
      Olike.E1,
      Olike.E3
  )

  /**
   * Get all device specifications for OLIMPO devices.
   * Useful for olimpo testing.
   */
  public fun getOlimpoDevices(): List<String> = listOf(
      Olimpo.R3,
      Olimpo.R3_GTV,
      Olimpo.R4,
      Olimpo.R4_GTV
  )

  /**
   * Get all device specifications for Olive devices.
   * Useful for olive testing.
   */
  public fun getOliveDevices(): List<String> = listOf(
      Olive.BRUNO,
      Olive.SHILIN
  )

  /**
   * Get all device specifications for OLLA devices.
   * Useful for olla testing.
   */
  public fun getOllaDevices(): List<String> = listOf(
      Olla.M5,
      Olla.M6,
      Olla.M8,
      Olla.NOTE3
  )

  /**
   * Get all device specifications for Olympia devices.
   * Useful for olympia testing.
   */
  public fun getOlympiaDevices(): List<String> = listOf(
      Olympia.NEO,
      Olympia.NEO_MINI,
      Olympia.TREK
  )

  /**
   * Get all device specifications for OMAX devices.
   * Useful for omax testing.
   */
  public fun getOmaxDevices(): List<String> = listOf(
      Omax._7PAN
  )

  /**
   * Get all device specifications for OMIX devices.
   * Useful for omix testing.
   */
  public fun getOmixDevices(): List<String> = listOf(
      Omix.MIXTAB_PRO,
      Omix.MIXTAB_PRO_2,
      Omix.OMIX_X4,
      Omix.X2032,
      Omix.X3,
      Omix.X300,
      Omix.X400,
      Omix.X5,
      Omix.X500,
      Omix.X6,
      Omix.X600,
      Omix.X600_NFC,
      Omix.X7,
      Omix.X700
  )

  /**
   * Get all device specifications for ONDA devices.
   * Useful for onda testing.
   */
  public fun getOndaDevices(): List<String> = listOf(
      Onda.T9S
  )

  /**
   * Get all device specifications for ONDA_TLC devices.
   * Useful for onda_tlc testing.
   */
  public fun getOndaTlcDevices(): List<String> = listOf(
      OndaTlc.T7_PRO
  )

  /**
   * Get all device specifications for OneLern devices.
   * Useful for onelern testing.
   */
  public fun getOnelernDevices(): List<String> = listOf(
      Onelern.ONELERNDB009,
      Onelern.ONELERNDB010
  )

  /**
   * Get all device specifications for OnePlus devices.
   * Useful for oneplus testing.
   */
  public fun getOneplusDevices(): List<String> = listOf(
      Oneplus.A0001,
      Oneplus.CEBU,
      Oneplus.DUBAI,
      Oneplus.EDINBURGH,
      Oneplus.NORD,
      Oneplus.ONEPLUS,
      Oneplus.ONEPLUS2,
      Oneplus.ONEPLUS3,
      Oneplus.ONEPLUS5T,
      Oneplus.ONEPLUS6,
      Oneplus.ONEPLUS6T,
      Oneplus.ONEPLUS6TSINGLE,
      Oneplus.ONEPLUS7,
      Oneplus.ONEPLUS7PRO,
      Oneplus.ONEPLUS7PRONR,
      Oneplus.ONEPLUS7PROTMO,
      Oneplus.ONEPLUS7T,
      Oneplus.ONEPLUS7TPRO,
      Oneplus.ONEPLUS7TPRONR,
      Oneplus.ONEPLUS7TTMO,
      Oneplus.ONEPLUS8,
      Oneplus.ONEPLUS8T,
      Oneplus.ONEPLUS8TMO,
      Oneplus.ONEPLUS8TTMO,
      Oneplus.ONEPLUS8VISIBLE,
      Oneplus.ONEPLUS8VZW,
      Oneplus.ONEPLUS9,
      Oneplus.ONEPLUS9PROTMO,
      Oneplus.ONEPLUS9R,
      Oneplus.ONEPLUS9TMO,
      Oneplus.ONEPLUS_DOSA_IN,
      Oneplus.ONEPLUSN10,
      Oneplus.ONEPLUSN100,
      Oneplus.ONEPLUSN100METRO,
      Oneplus.ONEPLUSN100TMO,
      Oneplus.ONEPLUSN10METRO,
      Oneplus.ONEPLUSN10TMO,
      Oneplus.ONEPLUSN200,
      Oneplus.ONEPLUSN200TMO,
      Oneplus.OP5154L1,
      Oneplus.OP5155L1,
      Oneplus.OP5159L1,
      Oneplus.OP515AL1,
      Oneplus.OP515BL1,
      Oneplus.OP516EL1,
      Oneplus.OP535DL1,
      Oneplus.OP555BL1,
      Oneplus.OP5565,
      Oneplus.OP5566L1,
      Oneplus.OP5567L1,
      Oneplus.OP556FL1,
      Oneplus.OP557AL1,
      Oneplus.OP5911,
      Oneplus.OP591BL1,
      Oneplus.OP5927,
      Oneplus.OP5929L1,
      Oneplus.OP5943L1,
      Oneplus.OP594DL1,
      Oneplus.OP5955L1,
      Oneplus.OP5958L1,
      Oneplus.OP595DL1,
      Oneplus.OP5961L1,
      Oneplus.OP5973L1,
      Oneplus.OP59BCL1,
      Oneplus.OP5CF9L1,
      Oneplus.OP5CFBL1,
      Oneplus.OP5D06L1,
      Oneplus.OP5D0DL1,
      Oneplus.OP5D2BL1,
      Oneplus.OP5D35L1,
      Oneplus.OP5D3BL1,
      Oneplus.OP5D3FL1,
      Oneplus.OP5D49L1,
      Oneplus.OP5D55L1,
      Oneplus.OP5D77L1,
      Oneplus.OP5DA6L1,
      Oneplus.OP5DAAL1,
      Oneplus.OP5E93L1,
      Oneplus.OP60EBL1,
      Oneplus.OP60EDL1,
      Oneplus.OP60F5L1,
      Oneplus.OP60F9L1,
      Oneplus.OP612BL1,
      Oneplus.OP6131L1,
      Oneplus.OP613BL1,
      Oneplus.OP615AL1,
      Oneplus.OP615EL1,
      Oneplus.OP6190L1,
      Oneplus.OP6195L1,
      Oneplus.OP7PRONRSPR,
      Oneplus.OPWE242,
      Oneplus.OPWWE231,
      Oneplus.OPWWE234,
      Oneplus.OPWWE251,
      Oneplus.SHIBUYA
  )

  /**
   * Get all device specifications for ONERugged devices.
   * Useful for onerugged testing.
   */
  public fun getOneruggedDevices(): List<String> = listOf(
      Onerugged.M185QE,
      Onerugged.M86XE,
      Onerugged.MP1T,
      Onerugged.MPC80T
  )

  /**
   * Get all device specifications for OneScreen devices.
   * Useful for onescreen testing.
   */
  public fun getOnescreenDevices(): List<String> = listOf(
      Onescreen.RK3588_T,
      Onescreen.WANDR
  )

  /**
   * Get all device specifications for ONIDA devices.
   * Useful for onida testing.
   */
  public fun getOnidaDevices(): List<String> = listOf(
      Onida.LASALLE,
      Onida.R3,
      Onida.R4_GTV
  )

  /**
   * Get all device specifications for Onkyo devices.
   * Useful for onkyo testing.
   */
  public fun getOnkyoDevices(): List<String> = listOf(
      Onkyo.GRAVITY_128,
      Onkyo.RAI_ZIN2R_64,
      Onkyo.RAI_ZIN_32
  )

  /**
   * Get all device specifications for onn devices.
   * Useful for onn testing.
   */
  public fun getOnnDevices(): List<String> = listOf(
      Onn._100005207,
      Onn._100005208,
      Onn._100005208_CA,
      Onn._100005209,
      Onn._100011885,
      Onn._100011886,
      Onn._100011886A,
      Onn._100011886CA,
      Onn._100015685_A,
      Onn._100015685_E,
      Onn._100044018,
      Onn._100044018G,
      Onn._100044018P,
      Onn._100071483,
      Onn._100071483A,
      Onn._100071485,
      Onn._100071485A,
      Onn._100071486,
      Onn._100092980,
      Onn._100092980A,
      Onn._100110603,
      Onn._100135794,
      Onn._100135920,
      Onn._100135923,
      Onn._100135925,
      Onn.COFFEY,
      Onn.M17QF21W,
      Onn.MID1035_MQ,
      Onn.MID1105_MP,
      Onn.MID1108_MS_64,
      Onn.MID7015_MK_32,
      Onn.MID7018_MR_32,
      Onn.MID7019_MR_32,
      Onn.MID7021_MQ,
      Onn.MID8011,
      Onn.MID8016_MK_32,
      Onn.ONA19TB002,
      Onn.ONA19TB003,
      Onn.ONA19TB007,
      Onn.ONN11TABLETPRO,
      Onn.ONN12TABLETPRO,
      Onn.PM1042T_W,
      Onn.PM106A,
      Onn.PM82T,
      Onn.PP86A_W,
      Onn.PP86AW,
      Onn.SNA,
      Onn.STEPHEN,
      Onn.STI6140D360,
      Onn.TBBVNC100005207,
      Onn.TBBVNC100005208,
      Onn.W723,
      Onn.XNA,
      Onn.YOC
  )

  /**
   * Get all device specifications for ONYX devices.
   * Useful for onyx testing.
   */
  public fun getOnyxDevices(): List<String> = listOf(
      Onyx.BOOX
  )

  /**
   * Get all device specifications for Ooredoo devices.
   * Useful for ooredoo testing.
   */
  public fun getOoredooDevices(): List<String> = listOf(
      Ooredoo.DIW387OOR
  )

  /**
   * Get all device specifications for Opay devices.
   * Useful for opay testing.
   */
  public fun getOpayDevices(): List<String> = listOf(
      Opay.M1_LITE
  )

  /**
   * Get all device specifications for OPEL devices.
   * Useful for opel testing.
   */
  public fun getOpelDevices(): List<String> = listOf(
      Opel.SMARTJ5_M,
      Opel.SMARTKIDS
  )

  /**
   * Get all device specifications for Opel_Mobile devices.
   * Useful for opel_mobile testing.
   */
  public fun getOpelMobileDevices(): List<String> = listOf(
      OpelMobile.EASY_SMART_2,
      OpelMobile.OMS5525B,
      OpelMobile.OMS55Q23B,
      OpelMobile.OMS65E24B,
      OpelMobile.OMS65Q23B,
      OpelMobile.OMS65R24B,
      OpelMobile.OMSX6524B,
      OpelMobile.SMART_J2,
      OpelMobile.SMARTX6,
      OpelMobile.SMARTZ6
  )

  /**
   * Get all device specifications for OpelMobile devices.
   * Useful for opelmobile testing.
   */
  public fun getOpelmobileDevices(): List<String> = listOf(
      Opelmobile.OMR60Q23O,
      Opelmobile.OMS60R24B,
      Opelmobile.OPELMOBILE_OMSJ523B,
      Opelmobile.SMART55R,
      Opelmobile.SMARTJX,
      Opelmobile.SMARTX1
  )

  /**
   * Get all device specifications for open_fhd_ATV devices.
   * Useful for open_fhd_atv testing.
   */
  public fun getOpenFhdAtvDevices(): List<String> = listOf(
      OpenFhdAtv.OPEN_FHD_AP,
      OpenFhdAtv.OPEN_FHD_SA
  )

  /**
   * Get all device specifications for open_uhd_ATV devices.
   * Useful for open_uhd_atv testing.
   */
  public fun getOpenUhdAtvDevices(): List<String> = listOf(
      OpenUhdAtv.OPEN_UHD_AP,
      OpenUhdAtv.OPEN_UHD_HK
  )

  /**
   * Get all device specifications for OPPO devices.
   * Useful for oppo testing.
   */
  public fun getOppoDevices(): List<String> = listOf(
      Oppo._1201,
      Oppo._1206,
      Oppo.A11W,
      Oppo.A1601,
      Oppo.A1603,
      Oppo.A31U,
      Oppo.A33,
      Oppo.A33W,
      Oppo.A37,
      Oppo.A37F,
      Oppo.A51,
      Oppo.A53,
      Oppo.A57,
      Oppo.A59,
      Oppo.A73,
      Oppo.A73T,
      Oppo.A77,
      Oppo.A79,
      Oppo.A79K,
      Oppo.A79KT,
      Oppo.A79T,
      Oppo.A83,
      Oppo.A83T,
      Oppo.BELUGA,
      Oppo.CPH1605,
      Oppo.CPH1607,
      Oppo.CPH1609,
      Oppo.CPH1611,
      Oppo.CPH1613,
      Oppo.CPH1701,
      Oppo.CPH1707,
      Oppo.CPH1715,
      Oppo.CPH1717,
      Oppo.CPH1719,
      Oppo.CPH1721,
      Oppo.CPH1723,
      Oppo.CPH1725,
      Oppo.CPH1727,
      Oppo.CPH1729,
      Oppo.CPH1801,
      Oppo.CPH1803,
      Oppo.CPH1805,
      Oppo.CPH1809,
      Oppo.CPH1819,
      Oppo.CPH1821,
      Oppo.CPH1823,
      Oppo.CPH1825,
      Oppo.CPH1827,
      Oppo.CPH1831,
      Oppo.CPH1833,
      Oppo.CPH1835,
      Oppo.CPH1837,
      Oppo.CPH1851,
      Oppo.CPH1853,
      Oppo.CPH1859,
      Oppo.CPH1861,
      Oppo.CPH1871,
      Oppo.CPH1875,
      Oppo.CPH1877,
      Oppo.CPH1879,
      Oppo.CPH1881,
      Oppo.CPH1893,
      Oppo.CPH1901,
      Oppo.CPH1903,
      Oppo.CPH1905,
      Oppo.CPH1909,
      Oppo.CPH1920,
      Oppo.F1F,
      Oppo.N1,
      Oppo.N1MINI,
      Oppo.N1T,
      Oppo.N1W,
      Oppo.N3,
      Oppo.N5117,
      Oppo.OP4679,
      Oppo.OP4699,
      Oppo.OP46B1,
      Oppo.OP46C3,
      Oppo.OP46F1,
      Oppo.OP46F3,
      Oppo.OP47CFL1,
      Oppo.OP47DD,
      Oppo.OP47DDL1,
      Oppo.OP4845,
      Oppo.OP4845L1,
      Oppo.OP4847,
      Oppo.OP4847L1,
      Oppo.OP4863,
      Oppo.OP486B,
      Oppo.OP486C,
      Oppo.OP4883,
      Oppo.OP48A1,
      Oppo.OP48A1L1,
      Oppo.OP4A43,
      Oppo.OP4A47,
      Oppo.OP4A4D,
      Oppo.OP4A54,
      Oppo.OP4A57,
      Oppo.OP4A77,
      Oppo.OP4A7A,
      Oppo.OP4A89,
      Oppo.OP4A9D,
      Oppo.OP4AA7,
      Oppo.OP4AB5,
      Oppo.OP4ABB,
      Oppo.OP4ACF,
      Oppo.OP4AD9,
      Oppo.OP4ADD,
      Oppo.OP4AE7,
      Oppo.OP4AF7,
      Oppo.OP4B65L1,
      Oppo.OP4B83L1,
      Oppo.OP4B9B,
      Oppo.OP4B9EL1,
      Oppo.OP4BA1L1,
      Oppo.OP4BA2L1,
      Oppo.OP4BA5L1,
      Oppo.OP4BAFL1,
      Oppo.OP4BDCL1,
      Oppo.OP4BFB,
      Oppo.OP4C2DL1,
      Oppo.OP4C41L1,
      Oppo.OP4C45L1,
      Oppo.OP4C4BL1,
      Oppo.OP4C51L1,
      Oppo.OP4C5FL1,
      Oppo.OP4C72L1,
      Oppo.OP4C77L1,
      Oppo.OP4C7BL1,
      Oppo.OP4C7D,
      Oppo.OP4C87L1,
      Oppo.OP4E21,
      Oppo.OP4E2F,
      Oppo.OP4E35,
      Oppo.OP4E3F,
      Oppo.OP4E49,
      Oppo.OP4E59,
      Oppo.OP4E5D,
      Oppo.OP4E6B,
      Oppo.OP4E75L1,
      Oppo.OP4E7B,
      Oppo.OP4E7F,
      Oppo.OP4E8C,
      Oppo.OP4E8F,
      Oppo.OP4E9F,
      Oppo.OP4EA3,
      Oppo.OP4EA7,
      Oppo.OP4EB7,
      Oppo.OP4EC1,
      Oppo.OP4ECB,
      Oppo.OP4ED5,
      Oppo.OP4EE8L1,
      Oppo.OP4EEA,
      Oppo.OP4EF3L1,
      Oppo.OP4EFDL1,
      Oppo.OP4F0BL1,
      Oppo.OP4F11L1,
      Oppo.OP4F1BL1,
      Oppo.OP4F1FL1,
      Oppo.OP4F25L1,
      Oppo.OP4F2BL1,
      Oppo.OP4F2F,
      Oppo.OP4F39L1,
      Oppo.OP4F43L1,
      Oppo.OP4F4DL1,
      Oppo.OP4F53L1,
      Oppo.OP4F57L1,
      Oppo.OP4F7FL1,
      Oppo.OP4F81L1,
      Oppo.OP4F83L1,
      Oppo.OP4F97,
      Oppo.OP4FA7L1,
      Oppo.OP520DL1,
      Oppo.OP520F,
      Oppo.OP5217,
      Oppo.OP5223,
      Oppo.OP5225,
      Oppo.OP5226L1,
      Oppo.OP5227,
      Oppo.OP5231,
      Oppo.OP5245,
      Oppo.OP5259,
      Oppo.OP5267,
      Oppo.OP526D,
      Oppo.OP5281,
      Oppo.OP5285,
      Oppo.OP5287,
      Oppo.OP528BL1,
      Oppo.OP528F,
      Oppo.OP5295,
      Oppo.OP5297,
      Oppo.OP52D1L1,
      Oppo.OP52D5L1,
      Oppo.OP52E1L1,
      Oppo.OP52EBL1,
      Oppo.OP52F3L1,
      Oppo.OP5303,
      Oppo.OP5321,
      Oppo.OP5325,
      Oppo.OP532BL1,
      Oppo.OP532FL1,
      Oppo.OP5335L1,
      Oppo.OP5339L1,
      Oppo.OP533FL1,
      Oppo.OP5353L1,
      Oppo.OP5355,
      Oppo.OP55F3L1,
      Oppo.OP55FF,
      Oppo.OP5601,
      Oppo.OP5605,
      Oppo.OP5607L1,
      Oppo.OP5613,
      Oppo.OP561D,
      Oppo.OP561F,
      Oppo.OP5627,
      Oppo.OP5637L1,
      Oppo.OP5647,
      Oppo.OP564B,
      Oppo.OP5655,
      Oppo.OP565FL1,
      Oppo.OP5660L1,
      Oppo.OP5661L1,
      Oppo.OP56BBL1,
      Oppo.OP56CDL1,
      Oppo.OP56CFL1,
      Oppo.OP56D3L1,
      Oppo.OP56DBL1,
      Oppo.OP56E1L1,
      Oppo.OP56E7L1,
      Oppo.OP56E8L1,
      Oppo.OP56EDL1,
      Oppo.OP56F5,
      Oppo.OP5701L1,
      Oppo.OP5705L1,
      Oppo.OP5709L1,
      Oppo.OP571DL1,
      Oppo.OP571F,
      Oppo.OP573DL1,
      Oppo.OP5745L1,
      Oppo.OP574FL1,
      Oppo.OP5759L1,
      Oppo.OP575DL1,
      Oppo.OP591D,
      Oppo.OP5925,
      Oppo.OP5989,
      Oppo.OP59BBL1,
      Oppo.OP59EDL1,
      Oppo.OP59EFL1,
      Oppo.OP59FB,
      Oppo.OP5A0BL1,
      Oppo.OP5A0D,
      Oppo.OP5A15L1,
      Oppo.OP5A1F,
      Oppo.OP5A29L1,
      Oppo.OP5A2BL1,
      Oppo.OP5A3DL1,
      Oppo.OP5A41L1,
      Oppo.OP5A47,
      Oppo.OP5AA5L1,
      Oppo.OP5AB0L1,
      Oppo.OP5ABFL1,
      Oppo.OP5AD3L1,
      Oppo.OP5AD5L1,
      Oppo.OP5ADDL1,
      Oppo.OP5AE1L1,
      Oppo.OP5AE7L1,
      Oppo.OP5AF2L1,
      Oppo.OP5B05L1,
      Oppo.OP5B16L1,
      Oppo.OP5B19L1,
      Oppo.OP5D76L1,
      Oppo.OP5DA3L1,
      Oppo.OP5DA8L1,
      Oppo.OP5DC1L1,
      Oppo.OP5DCBL1,
      Oppo.OP5DCDL1,
      Oppo.OP5DD2L1,
      Oppo.OP5DD3L1,
      Oppo.OP5DD5L1,
      Oppo.OP5DD7L1,
      Oppo.OP5DDF,
      Oppo.OP5DF3,
      Oppo.OP5DF5L1,
      Oppo.OP5DF7,
      Oppo.OP5DFDL1,
      Oppo.OP5E01L1,
      Oppo.OP5E03L1,
      Oppo.OP5E05L1,
      Oppo.OP5E07L1,
      Oppo.OP5E0BL1,
      Oppo.OP5E89L1,
      Oppo.OP5E9EL1,
      Oppo.OP5EA7L1,
      Oppo.OP5EB1L1,
      Oppo.OP5EBBL1,
      Oppo.OP5EC5L1,
      Oppo.OP5EC7L1,
      Oppo.OP5ECBL1,
      Oppo.OP5ECFL1,
      Oppo.OP5ED7L1,
      Oppo.OP5ED9L1,
      Oppo.OP5EE3L1,
      Oppo.OP5EE7L1,
      Oppo.OP5EE9L1,
      Oppo.OP5EEDL1,
      Oppo.OP5EF7L1,
      Oppo.OP5F02L1,
      Oppo.OP5F05L1,
      Oppo.OP5F0FL1,
      Oppo.OP6159L1,
      Oppo.OP615CL1,
      Oppo.OP6160L1,
      Oppo.OP618BL1,
      Oppo.OP6192L1,
      Oppo.OP6193L1,
      Oppo.OPD2A0,
      Oppo.OPD4A1L1,
      Oppo.ORCA,
      Oppo.OWWE231,
      Oppo.OWWE242,
      Oppo.OWWE251,
      Oppo.PAAM00,
      Oppo.PAAT00,
      Oppo.PACM00,
      Oppo.PACT00,
      Oppo.PADM00,
      Oppo.PADT00,
      Oppo.PAFM00,
      Oppo.PAFT00,
      Oppo.PAHM00,
      Oppo.PBAM00,
      Oppo.PBAT00,
      Oppo.PBBM00,
      Oppo.PBBM30,
      Oppo.PBBT00,
      Oppo.PBBT30,
      Oppo.PBCM10,
      Oppo.PBCM30,
      Oppo.PBCT10,
      Oppo.PBDM00,
      Oppo.PBDT00,
      Oppo.PBEM00,
      Oppo.PBET00,
      Oppo.PBFM00,
      Oppo.PBFT00,
      Oppo.PCDT00,
      Oppo.R1011,
      Oppo.R11,
      Oppo.R11PLUS,
      Oppo.R11PLUSK,
      Oppo.R11S,
      Oppo.R11SPLUS,
      Oppo.R2017,
      Oppo.R5,
      Oppo.R7,
      Oppo.R7007,
      Oppo.R7C,
      Oppo.R7F,
      Oppo.R7PLUS,
      Oppo.R7PLUSM,
      Oppo.R7S,
      Oppo.R7SF,
      Oppo.R7SM,
      Oppo.R7SPLUS,
      Oppo.R8001,
      Oppo.R8006,
      Oppo.R815,
      Oppo.R821,
      Oppo.R827,
      Oppo.R829,
      Oppo.R831,
      Oppo.R831L,
      Oppo.R9,
      Oppo.R9PLUSA,
      Oppo.R9S,
      Oppo.R9SK,
      Oppo.R9SPLUS,
      Oppo.RMX1801,
      Oppo.RMX1803,
      Oppo.RMX1805,
      Oppo.RMX1807,
      Oppo.RMX1809,
      Oppo.RMX1811,
      Oppo.X9006,
      Oppo.X9007,
      Oppo.X9009,
      Oppo.X9076,
      Oppo.X9079,
      Oppo.X909,
      Oppo.X909T
  )

  /**
   * Get all device specifications for Optage devices.
   * Useful for optage testing.
   */
  public fun getOptageDevices(): List<String> = listOf(
      Optage.AMIGO7XJP
  )

  /**
   * Get all device specifications for Opticon devices.
   * Useful for opticon testing.
   */
  public fun getOpticonDevices(): List<String> = listOf(
      Opticon.H_35,
      Opticon.H31,
      Opticon.H33
  )

  /**
   * Get all device specifications for Optimum devices.
   * Useful for optimum testing.
   */
  public fun getOptimumDevices(): List<String> = listOf(
      Optimum.DIW377AUSA
  )

  /**
   * Get all device specifications for Optoma devices.
   * Useful for optoma testing.
   */
  public fun getOptomaDevices(): List<String> = listOf(
      Optoma.RK3588_T
  )

  /**
   * Get all device specifications for orange devices.
   * Useful for orange testing.
   */
  public fun getOrangeDevices(): List<String> = listOf(
      Orange._820MINI,
      Orange.ALTO45,
      Orange.BUZZ6T4G,
      Orange.C1905,
      Orange.C5303,
      Orange.CALIFORNIA,
      Orange.D2005,
      Orange.D2303,
      Orange.DIVE_70,
      Orange.DIVE_73,
      Orange.DSB0010,
      Orange.DSB0110,
      Orange.DV8555_KPO,
      Orange.HS8937QCS,
      Orange.HWG535_L11,
      Orange.HWG740_L00,
      Orange.HWT1821L,
      Orange.HWT1A21L,
      Orange.IDOL3,
      Orange.IDOL4,
      Orange.KSTB7259,
      Orange.LUNO,
      Orange.M393VSB_OSP,
      Orange.M812,
      Orange.M823_ORANGE,
      Orange.MAHPEE,
      Orange.MICKEY6,
      Orange.NEVA_JET,
      Orange.NEVA_LEAF,
      Orange.NEVA_PLAY,
      Orange.NEVA_RISE_S1,
      Orange.NEVA_SPARKLE,
      Orange.NEVA_START,
      Orange.NEVA_ZEN,
      Orange.NOLA_ULTRA,
      Orange.NOLA_FUN_3,
      Orange.NOLA_PLAY,
      Orange.NOLA_PLAY_PLUS,
      Orange.NOLA_UP,
      Orange.ORANGE_RISE32,
      Orange.ORANGE_DIVE_71,
      Orange.ORANGE_NEVA_80,
      Orange.ORANGE_SEGO,
      Orange.P635E40,
      Orange.PIXI3_4,
      Orange.PIXI3_45_4G_ORANGE,
      Orange.PIXI4_4,
      Orange.PIXI4_5_4G,
      Orange.POP455C,
      Orange.POP7_LTE,
      Orange.RISE33,
      Orange.RISE_53,
      Orange.RISE_54,
      Orange.RISE_55,
      Orange.SANZA_PLUS,
      Orange.SANZA_TOUCH,
      Orange.SGP321,
      Orange.VEC4G,
      Orange.YARIS35_GSM
  )

  /**
   * Get all device specifications for Orbic devices.
   * Useful for orbic testing.
   */
  public fun getOrbicDevices(): List<String> = listOf(
      Orbic.JOY2,
      Orbic.R678EL,
      Orbic.R678L5,
      Orbic.R8L5T,
      Orbic.RC545L,
      Orbic.RC555L,
      Orbic.RC608L,
      Orbic.RC609L,
      Orbic.RC609LP,
      Orbic.RC609LSM,
      Orbic.RC8L1T_RW,
      Orbic.VC_DEVICE
  )

  /**
   * Get all device specifications for ORBYS devices.
   * Useful for orbys testing.
   */
  public fun getOrbysDevices(): List<String> = listOf(
      Orbys.F21
  )

  /**
   * Get all device specifications for Orca devices.
   * Useful for orca testing.
   */
  public fun getOrcaDevices(): List<String> = listOf(
      Orca.KENTON,
      Orca.LASALLE,
      Orca.ORCA_DISPLAY_2,
      Orca.SAMSEONG,
      Orca.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for Ordissimo devices.
   * Useful for ordissimo testing.
   */
  public fun getOrdissimoDevices(): List<String> = listOf(
      Ordissimo.CELIA,
      Ordissimo.LENUMERO2,
      Ordissimo.LENUMERO2MINI
  )

  /**
   * Get all device specifications for ORIENT devices.
   * Useful for orient testing.
   */
  public fun getOrientDevices(): List<String> = listOf(
      Orient.R1,
      Orient.R2
  )

  /**
   * Get all device specifications for ORINOQUIA devices.
   * Useful for orinoquia testing.
   */
  public fun getOrinoquiaDevices(): List<String> = listOf(
      Orinoquia.HWS7701U,
      Orinoquia.HWS7721U,
      Orinoquia.QAY221_U
  )

  /**
   * Get all device specifications for ORION devices.
   * Useful for orion testing.
   */
  public fun getOrionDevices(): List<String> = listOf(
      Orion.LONGSHAN,
      Orion.REDWOOD,
      Orion.UMEDA
  )

  /**
   * Get all device specifications for ORS devices.
   * Useful for ors testing.
   */
  public fun getOrsDevices(): List<String> = listOf(
      Ors.HY43X
  )

  /**
   * Get all device specifications for OSCAL devices.
   * Useful for oscal testing.
   */
  public fun getOscalDevices(): List<String> = listOf(
      Oscal.C20,
      Oscal.C20_PRO,
      Oscal.C30,
      Oscal.C30_PRO,
      Oscal.C60,
      Oscal.C70,
      Oscal.C80,
      Oscal.ELITE_1,
      Oscal.FLAT1C,
      Oscal.FLAT_2,
      Oscal.FLAT_2C,
      Oscal.MARINE_1,
      Oscal.MARINE_2,
      Oscal.MODERN_8,
      Oscal.PAD13_EEA,
      Oscal.PAD13_NEU,
      Oscal.PAD15,
      Oscal.PAD15_EEA,
      Oscal.PAD15_RU,
      Oscal.PAD16,
      Oscal.PAD18,
      Oscal.PAD60_EEA,
      Oscal.PAD60_NEU,
      Oscal.PAD70_NEU,
      Oscal.PAD_100,
      Oscal.PAD_10_EEA,
      Oscal.PAD_10_NEU,
      Oscal.PAD_10_RU,
      Oscal.PAD_5,
      Oscal.PAD_50_KIDS,
      Oscal.PAD_50_WIFI,
      Oscal.PAD_5_KIDS,
      Oscal.PAD_60_KIDS,
      Oscal.PAD_7,
      Oscal.PAD_70_WIFI,
      Oscal.PAD_80_WIFI,
      Oscal.PAD_9,
      Oscal.PAD_90,
      Oscal.PILOT_1,
      Oscal.PILOT_2,
      Oscal.S60,
      Oscal.S60PRO,
      Oscal.S70,
      Oscal.S70_PRO,
      Oscal.S80,
      Oscal.SPIDER8,
      Oscal.TIGER10,
      Oscal.TIGER12,
      Oscal.TIGER_13
  )

  /**
   * Get all device specifications for OSN devices.
   * Useful for osn testing.
   */
  public fun getOsnDevices(): List<String> = listOf(
      Osn.HY45N
  )

  /**
   * Get all device specifications for Oteeto devices.
   * Useful for oteeto testing.
   */
  public fun getOteetoDevices(): List<String> = listOf(
      Oteeto.OE1
  )

  /**
   * Get all device specifications for OUKITEL devices.
   * Useful for oukitel testing.
   */
  public fun getOukitelDevices(): List<String> = listOf(
      Oukitel.C10,
      Oukitel.C11,
      Oukitel.C11_PRO,
      Oukitel.C11_S,
      Oukitel.C12,
      Oukitel.C12_PLUS,
      Oukitel.C12_PRO,
      Oukitel.C13_PRO,
      Oukitel.C15_PRO,
      Oukitel.C16,
      Oukitel.C16_PRO,
      Oukitel.C17_PRO,
      Oukitel.C18_PRO,
      Oukitel.C19,
      Oukitel.C19_PRO,
      Oukitel.C1_PRO,
      Oukitel.C21,
      Oukitel.C21_PLUS,
      Oukitel.C21_PRO,
      Oukitel.C22,
      Oukitel.C23_PRO,
      Oukitel.C25,
      Oukitel.C31,
      Oukitel.C31_PRO,
      Oukitel.C32,
      Oukitel.C33,
      Oukitel.C35,
      Oukitel.C36,
      Oukitel.C37,
      Oukitel.C38,
      Oukitel.C50,
      Oukitel.C51,
      Oukitel.C53,
      Oukitel.C57_PRO,
      Oukitel.C57_S,
      Oukitel.C58,
      Oukitel.C58_PRO,
      Oukitel.C59_PRO,
      Oukitel.C61_PRO,
      Oukitel.C65,
      Oukitel.C65_PRO,
      Oukitel.C8,
      Oukitel.C8_4G,
      Oukitel.C9,
      Oukitel.G1,
      Oukitel.G2,
      Oukitel.K10,
      Oukitel.K10000_MAX,
      Oukitel.K10000_MIX,
      Oukitel.K10000_PRO,
      Oukitel.K12,
      Oukitel.K13_PRO,
      Oukitel.K15_PLUS,
      Oukitel.K15_PRO,
      Oukitel.K16,
      Oukitel.K3,
      Oukitel.K3_PRO,
      Oukitel.K5,
      Oukitel.K5000,
      Oukitel.K6,
      Oukitel.K6000_PLUS,
      Oukitel.K7_POWER,
      Oukitel.K7_PRO,
      Oukitel.K8,
      Oukitel.K8000,
      Oukitel.K9,
      Oukitel.K9_PRO,
      Oukitel.MIX_2,
      Oukitel.OK6000_PLUS,
      Oukitel.OKT1,
      Oukitel.OKT3,
      Oukitel.OT11,
      Oukitel.OT12,
      Oukitel.OT5,
      Oukitel.OT5_S,
      Oukitel.OT6,
      Oukitel.OT6_KIDS,
      Oukitel.OT6_PRO,
      Oukitel.OT8,
      Oukitel.OT9,
      Oukitel.OUKITEL_C1,
      Oukitel.OUKITEL_C59,
      Oukitel.OUKITEL_C61,
      Oukitel.OUKITEL_G5,
      Oukitel.OUKITEL_K7,
      Oukitel.OUKITEL_P1,
      Oukitel.OUKITEL_WP1,
      Oukitel.OUKITEL_WP36,
      Oukitel.OUKITEL_WP38,
      Oukitel.P07,
      Oukitel.RT1,
      Oukitel.RT2,
      Oukitel.RT3,
      Oukitel.RT3_EEA,
      Oukitel.RT3_PRO,
      Oukitel.RT5,
      Oukitel.RT6,
      Oukitel.RT7_TITAN,
      Oukitel.RT8,
      Oukitel.RT9,
      Oukitel.S105B,
      Oukitel.S109,
      Oukitel.S111,
      Oukitel.S115,
      Oukitel.S118,
      Oukitel.U11_PLUS,
      Oukitel.U18,
      Oukitel.U20_PLUS,
      Oukitel.U22,
      Oukitel.U23,
      Oukitel.U25_PRO,
      Oukitel.WP10,
      Oukitel.WP100_TITAN,
      Oukitel.WP12,
      Oukitel.WP12_PRO,
      Oukitel.WP13,
      Oukitel.WP15,
      Oukitel.WP15_S,
      Oukitel.WP16,
      Oukitel.WP17,
      Oukitel.WP18_EEA,
      Oukitel.WP18_P_R_EEA,
      Oukitel.WP19,
      Oukitel.WP19_PRO,
      Oukitel.WP2,
      Oukitel.WP20,
      Oukitel.WP200_PRO,
      Oukitel.WP20_PRO,
      Oukitel.WP21,
      Oukitel.WP21_U,
      Oukitel.WP23_PLUS,
      Oukitel.WP27,
      Oukitel.WP28_E,
      Oukitel.WP28_S,
      Oukitel.WP300,
      Oukitel.WP30_PRO,
      Oukitel.WP32,
      Oukitel.WP32_PRO_U,
      Oukitel.WP33_PRO,
      Oukitel.WP35,
      Oukitel.WP35_PRO,
      Oukitel.WP35_S,
      Oukitel.WP36,
      Oukitel.WP36_PRO,
      Oukitel.WP38,
      Oukitel.WP39,
      Oukitel.WP39_PRO,
      Oukitel.WP5,
      Oukitel.WP50,
      Oukitel.WP5000,
      Oukitel.WP52,
      Oukitel.WP55,
      Oukitel.WP5_PRO,
      Oukitel.WP6,
      Oukitel.WP7,
      Oukitel.WP8_PRO,
      Oukitel.WP9,
      Oukitel.Y1000,
      Oukitel.Y4800
  )

  /**
   * Get all device specifications for OUZRS devices.
   * Useful for ouzrs testing.
   */
  public fun getOuzrsDevices(): List<String> = listOf(
      Ouzrs.OUZRSM4
  )

  /**
   * Get all device specifications for Overmax devices.
   * Useful for overmax testing.
   */
  public fun getOvermaxDevices(): List<String> = listOf(
      Overmax.LIVECORE7032,
      Overmax.OV_QUALCORE_1023_3G,
      Overmax.OV_QUALCORE_7023_3G,
      Overmax.OV10273G,
      Overmax.OV10274G
  )

  /**
   * Get all device specifications for OVERTECH devices.
   * Useful for overtech testing.
   */
  public fun getOvertechDevices(): List<String> = listOf(
      Overtech.OX7A,
      Overtech.OX7S
  )

  /**
   * Get all device specifications for Ovion devices.
   * Useful for ovion testing.
   */
  public fun getOvionDevices(): List<String> = listOf(
      Ovion.V11_LITE,
      Ovion.V20_PRO
  )

  /**
   * Get all device specifications for Own devices.
   * Useful for own testing.
   */
  public fun getOwnDevices(): List<String> = listOf(
      Own.OWN_FUN_6,
      Own.OWN_FUN_7,
      Own.OWN_SMART_9,
      Own.SMART8,
      Own.SMART_9_PRO,
      Own.SMART_O2,
      Own.SMART_PLUS_LTE,
      Own.VFD511
  )

  /**
   * Get all device specifications for OWXmobile devices.
   * Useful for owxmobile testing.
   */
  public fun getOwxmobileDevices(): List<String> = listOf(
      Owxmobile.W50S
  )

  /**
   * Get all device specifications for OX_TAB devices.
   * Useful for ox_tab testing.
   */
  public fun getOxTabDevices(): List<String> = listOf(
      OxTab.OX_TAB_10
  )

  /**
   * Get all device specifications for OXYGEN devices.
   * Useful for oxygen testing.
   */
  public fun getOxygenDevices(): List<String> = listOf(
      Oxygen.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for OXYGEN-id devices.
   * Useful for oxygen-id testing.
   */
  public fun getOxygenIdDevices(): List<String> = listOf(
      OxygenId.SEI700MRT
  )

  /**
   * Get all device specifications for OxygenId devices.
   * Useful for oxygenid testing.
   */
  public fun getOxygenidDevices(): List<String> = listOf(
      Oxygenid.B866V2FA
  )

  /**
   * Get all device specifications for Oyster_Labs devices.
   * Useful for oyster_labs testing.
   */
  public fun getOysterLabsDevices(): List<String> = listOf(
      OysterLabs.UNIVERSAL_PHONE_1
  )

  /**
   * Get all device specifications for Oysters devices.
   * Useful for oysters testing.
   */
  public fun getOystersDevices(): List<String> = listOf(
      Oysters.T72HM3G
  )

  /**
   * Get all device specifications for OZON devices.
   * Useful for ozon testing.
   */
  public fun getOzonDevices(): List<String> = listOf(
      Ozon.STANFORD,
      Ozon.ZHONGSHAN
  )

  /**
   * Get all device specifications for PACKARD_BELL devices.
   * Useful for packard_bell testing.
   */
  public fun getPackardBellDevices(): List<String> = listOf(
      PackardBell.BL_9UEEP_104,
      PackardBell.DAYTONA_G12,
      PackardBell.DAYTONA_G6,
      PackardBell.INTERLAGOS_T32,
      PackardBell.M10400,
      PackardBell.M10500,
      PackardBell.M10600,
      PackardBell.M10905_32,
      PackardBell.M10950,
      PackardBell.M11550,
      PackardBell.M7500,
      PackardBell.M7600_D,
      PackardBell.MONZA_T5,
      PackardBell.PB1009,
      PackardBell.PB101,
      PackardBell.PB9000_32,
      PackardBell.SILVERSTONE_T10,
      PackardBell.SILVERSTONE_T10X,
      PackardBell.SILVERSTONE_T11,
      PackardBell.SILVERSTONE_T18,
      PackardBell.TARGA_F10PRO
  )

  /**
   * Get all device specifications for PAITANRY devices.
   * Useful for paitanry testing.
   */
  public fun getPaitanryDevices(): List<String> = listOf(
      Paitanry.CH10PRO,
      Paitanry.CH10PROMAX,
      Paitanry.R16,
      Paitanry.R16_PRO,
      Paitanry.SSK10
  )

  /**
   * Get all device specifications for Palm devices.
   * Useful for palm testing.
   */
  public fun getPalmDevices(): List<String> = listOf(
      Palm.PEPITO
  )

  /**
   * Get all device specifications for PALSONIC devices.
   * Useful for palsonic testing.
   */
  public fun getPalsonicDevices(): List<String> = listOf(
      Palsonic.R1
  )

  /**
   * Get all device specifications for panasonic devices.
   * Useful for panasonic testing.
   */
  public fun getPanasonicDevices(): List<String> = listOf(
      Panasonic.ANAHEIM,
      Panasonic.DMC_CM1,
      Panasonic.ELUGA_A2,
      Panasonic.ELUGA_A3,
      Panasonic.ELUGA_A4,
      Panasonic.ELUGA_ARC_2,
      Panasonic.ELUGA_F,
      Panasonic.ELUGA_I2,
      Panasonic.ELUGA_I3,
      Panasonic.ELUGA_I3_MEGA,
      Panasonic.ELUGA_I6,
      Panasonic.ELUGA_I7,
      Panasonic.ELUGA_I7_EE,
      Panasonic.ELUGA_I8,
      Panasonic.ELUGA_MARK_2,
      Panasonic.ELUGA_NOTE,
      Panasonic.ELUGA_PRIM,
      Panasonic.ELUGA_PULSE_X,
      Panasonic.ELUGA_RAY,
      Panasonic.ELUGA_RAY_500,
      Panasonic.ELUGA_RAY_530,
      Panasonic.ELUGA_RAY_550,
      Panasonic.ELUGA_RAY_600,
      Panasonic.ELUGA_RAY_610,
      Panasonic.ELUGA_RAY_700,
      Panasonic.ELUGA_RAY_800,
      Panasonic.ELUGA_RAY_810,
      Panasonic.ELUGA_RAY_MAX,
      Panasonic.ELUGA_RAY_X,
      Panasonic.ELUGA_TURBO,
      Panasonic.ELUGA_U3,
      Panasonic.ELUGA_WE,
      Panasonic.ELUGA_X1,
      Panasonic.ELUGA_Y,
      Panasonic.ELUGA_Y_PRO,
      Panasonic.ELUGA_Z1,
      Panasonic.FZ_A3,
      Panasonic.FZ_L1AN,
      Panasonic.FZ_L1UN,
      Panasonic.FZ_N1,
      Panasonic.FZ_N1E,
      Panasonic.FZ_N1EVF,
      Panasonic.FZ_N1EVU,
      Panasonic.FZ_N1VU,
      Panasonic.FZ_N1VUC,
      Panasonic.FZ_S1,
      Panasonic.FZ_T1AN,
      Panasonic.FZ_T1VUN,
      Panasonic.FZ_X1VU,
      Panasonic.FZ_A2A,
      Panasonic.FZ_B2BB,
      Panasonic.FZ_B2D,
      Panasonic.JUPITER,
      Panasonic.KADOMA,
      Panasonic.OD0M_EA_T32,
      Panasonic.P100,
      Panasonic.P101,
      Panasonic.P55_NOVO_4G,
      Panasonic.P6,
      Panasonic.P71,
      Panasonic.P77,
      Panasonic.P85,
      Panasonic.P85NXT,
      Panasonic.P91,
      Panasonic.PANASONIC_ELUGA_C,
      Panasonic.PANASONIC_P90,
      Panasonic.R1,
      Panasonic.R2,
      Panasonic.R3,
      Panasonic.R3_GTV,
      Panasonic.R4,
      Panasonic.R4_GTV,
      Panasonic.SHANDAO,
      Panasonic.SHIBUYA,
      Panasonic.SPU_A06L_LWG,
      Panasonic.SW3_ATV,
      Panasonic.SW3H_ATV,
      Panasonic.SW4H,
      Panasonic.SW4H_FF,
      Panasonic.SW6H,
      Panasonic.T44,
      Panasonic.TAB_A05,
      Panasonic.TAB_A05_BA1,
      Panasonic.TAB_8
  )

  /**
   * Get all device specifications for Panavox devices.
   * Useful for panavox testing.
   */
  public fun getPanavoxDevices(): List<String> = listOf(
      Panavox.HAMAMATSUCHO,
      Panavox.LUSHAN,
      Panavox.SONGSHAN,
      Panavox.XIAOYUSHAN
  )

  /**
   * Get all device specifications for Panodic devices.
   * Useful for panodic testing.
   */
  public fun getPanodicDevices(): List<String> = listOf(
      Panodic.IPHDCK16H
  )

  /**
   * Get all device specifications for PANORAMA devices.
   * Useful for panorama testing.
   */
  public fun getPanoramaDevices(): List<String> = listOf(
      Panorama.KUALAKAI
  )

  /**
   * Get all device specifications for Pantech devices.
   * Useful for pantech testing.
   */
  public fun getPantechDevices(): List<String> = listOf(
      Pantech.HS8929QC
  )

  /**
   * Get all device specifications for PANTECH_SMART devices.
   * Useful for pantech_smart testing.
   */
  public fun getPantechSmartDevices(): List<String> = listOf(
      PantechSmart.K_50
  )

  /**
   * Get all device specifications for Parrot_Mobile devices.
   * Useful for parrot_mobile testing.
   */
  public fun getParrotMobileDevices(): List<String> = listOf(
      ParrotMobile.PRESTIGE
  )

  /**
   * Get all device specifications for Partner devices.
   * Useful for partner testing.
   */
  public fun getPartnerDevices(): List<String> = listOf(
      Partner.BATMAN,
      Partner.UZW4054PTN
  )

  /**
   * Get all device specifications for Partner_Mobile devices.
   * Useful for partner_mobile testing.
   */
  public fun getPartnerMobileDevices(): List<String> = listOf(
      PartnerMobile.E22,
      PartnerMobile.EV1_PRO,
      PartnerMobile.PARTNER_EVOLUTION
  )

  /**
   * Get all device specifications for Pastigio devices.
   * Useful for pastigio testing.
   */
  public fun getPastigioDevices(): List<String> = listOf(
      Pastigio.M10T2_P15
  )

  /**
   * Get all device specifications for PATTERS devices.
   * Useful for patters testing.
   */
  public fun getPattersDevices(): List<String> = listOf(
      Patters.P7,
      Patters.P9
  )

  /**
   * Get all device specifications for PAWBO devices.
   * Useful for pawbo testing.
   */
  public fun getPawboDevices(): List<String> = listOf(
      Pawbo.TAB_T13,
      Pawbo.TAB_T8
  )

  /**
   * Get all device specifications for PAX devices.
   * Useful for pax testing.
   */
  public fun getPaxDevices(): List<String> = listOf(
      Pax.A50,
      Pax.A77,
      Pax.PAXM30
  )

  /**
   * Get all device specifications for PBS_Kids devices.
   * Useful for pbs_kids testing.
   */
  public fun getPbsKidsDevices(): List<String> = listOf(
      PbsKids.PBS700DVD
  )

  /**
   * Get all device specifications for PC_Smart devices.
   * Useful for pc_smart testing.
   */
  public fun getPcSmartDevices(): List<String> = listOf(
      PcSmart.PCSGOB10LTE_V2
  )

  /**
   * Get all device specifications for PCBOX devices.
   * Useful for pcbox testing.
   */
  public fun getPcboxDevices(): List<String> = listOf(
      Pcbox.KOVA_PCB_T730,
      Pcbox.MID1008,
      Pcbox.MID1032_MK,
      Pcbox.MID7015A_MK,
      Pcbox.PCB_T105,
      Pcbox.PCB_T106,
      Pcbox.PCB_T801
  )

  /**
   * Get all device specifications for PCD devices.
   * Useful for pcd testing.
   */
  public fun getPcdDevices(): List<String> = listOf(
      Pcd.BENGAL_MAX_IW,
      Pcd.P40,
      Pcd.P41,
      Pcd.P50,
      Pcd.P50PR,
      Pcd.P55,
      Pcd.P60,
      Pcd.P60_CA,
      Pcd.P60_CENAM,
      Pcd.P63L_PR,
      Pcd.P65,
      Pcd.P65_CA,
      Pcd.PH4003,
      Pcd.PH4003GO,
      Pcd.PH5003,
      Pcd.PH5003_GO,
      Pcd.PL550,
      Pcd.PL571,
      Pcd.PL571US
  )

  /**
   * Get all device specifications for PCSMART devices.
   * Useful for pcsmart testing.
   */
  public fun getPcsmartDevices(): List<String> = listOf(
      Pcsmart.PCSGOB10MVA_A
  )

  /**
   * Get all device specifications for PEAQ devices.
   * Useful for peaq testing.
   */
  public fun getPeaqDevices(): List<String> = listOf(
      Peaq.PET_1008_F464E,
      Peaq.PET_1008_H332E,
      Peaq.PET_101_F464S,
      Peaq.PET_101_H232E,
      Peaq.PET_101_H332S_W,
      Peaq.PET_102_H232S,
      Peaq.PET_10380_H628S,
      Peaq.PET_1081_H232S,
      Peaq.PET_1081_LH332S,
      Peaq.PET_10980_F628E,
      Peaq.PET_882_H232S,
      Peaq.PET_10180_H464S,
      Peaq.PET_11080_F628S,
      Peaq.PET_11080_H428S,
      Peaq.PET_8040_H464S,
      Peaq.R4_GTV,
      Peaq.THMTKAW04232
  )

  /**
   * Get all device specifications for PEICHENG devices.
   * Useful for peicheng testing.
   */
  public fun getPeichengDevices(): List<String> = listOf(
      Peicheng.Q1,
      Peicheng.Q8,
      Peicheng.Q8PRO,
      Peicheng.ZB31,
      Peicheng.ZB32
  )

  /**
   * Get all device specifications for PEL devices.
   * Useful for pel testing.
   */
  public fun getPelDevices(): List<String> = listOf(
      Pel.LAVENDER,
      Pel.MOUNTBAKER
  )

  /**
   * Get all device specifications for PENSONIC devices.
   * Useful for pensonic testing.
   */
  public fun getPensonicDevices(): List<String> = listOf(
      Pensonic.R3,
      Pensonic.R4
  )

  /**
   * Get all device specifications for PEOTV devices.
   * Useful for peotv testing.
   */
  public fun getPeotvDevices(): List<String> = listOf(
      Peotv.SEI300SLT
  )

  /**
   * Get all device specifications for Pepperl_Fuchs devices.
   * Useful for pepperl_fuchs testing.
   */
  public fun getPepperlFuchsDevices(): List<String> = listOf(
      PepperlFuchs.SMART_EX03
  )

  /**
   * Get all device specifications for PERFORMANCE devices.
   * Useful for performance testing.
   */
  public fun getPerformanceDevices(): List<String> = listOf(
      Performance.PR7RKTNF,
      Performance.T7,
      Performance.T9
  )

  /**
   * Get all device specifications for PerseoTV devices.
   * Useful for perseotv testing.
   */
  public fun getPerseotvDevices(): List<String> = listOf(
      Perseotv.DV8219
  )

  /**
   * Get all device specifications for PERSONA devices.
   * Useful for persona testing.
   */
  public fun getPersonaDevices(): List<String> = listOf(
      Persona.MYTAB_A8
  )

  /**
   * Get all device specifications for PHILCO devices.
   * Useful for philco testing.
   */
  public fun getPhilcoDevices(): List<String> = listOf(
      Philco.ANAHEIM,
      Philco.ELLINIKO,
      Philco.HIT_MAX,
      Philco.HIT_P10,
      Philco.HIT_P10A,
      Philco.HIT_P12,
      Philco.HIT_P13,
      Philco.HIT_P8,
      Philco.IKEBUKURO,
      Philco.P510,
      Philco.P610,
      Philco.PCS01,
      Philco.PCS02,
      Philco.PHILCO_TP7A6,
      Philco.PTB7PA,
      Philco.PTB7QSG_3G,
      Philco.PTB7R,
      Philco.PTB8R,
      Philco.PTB8R4G,
      Philco.SHINJUKU,
      Philco.SINDORIM,
      Philco.STANFORD,
      Philco.SUNNYVALE,
      Philco.SW4H,
      Philco.SW6H,
      Philco.TP10A332,
      Philco.TP10A3N,
      Philco.TP10A464,
      Philco.TP10F,
      Philco.TP7A464,
      Philco.TP7A4N,
      Philco.ZHONGSHAN
  )

  /**
   * Get all device specifications for Philips devices.
   * Useful for philips testing.
   */
  public fun getPhilipsDevices(): List<String> = listOf(
      Philips.ANAHEIM,
      Philips.E1027,
      Philips.ELEONAS,
      Philips.GMP,
      Philips.GOTANDA,
      Philips.GUUI,
      Philips.HINO,
      Philips.HONGKONG,
      Philips.KHARDI,
      Philips.KUJO,
      Philips.LAVENDER,
      Philips.MARATHON,
      Philips.MOUNTBAKER,
      Philips.MT5593UPLUS,
      Philips.PH1M_EA_9970A,
      Philips.PH1M_WW_9687,
      Philips.PH1M_WW_9972,
      Philips.PH3M_AL_T32,
      Philips.PH7M_EU_5596,
      Philips.PH7M_LT_5596,
      Philips.PH8M_HE_5596,
      Philips.PH9M_EA_5599,
      Philips.PHILIPS,
      Philips.PHILIPS_S6210,
      Philips.PHILIPS_S6211,
      Philips.PHILIPS_S6310,
      Philips.PHILIPS_S6311,
      Philips.PHILIPS_S7710,
      Philips.PHILIPS_MT5593FHT_EU,
      Philips.PHILIPS_MT5593HT_LT,
      Philips.PHILIPS_S260,
      Philips.PHILIPS_S329,
      Philips.PHILIPS_S397,
      Philips.PHILIPS_V377,
      Philips.PHILIPS_X586,
      Philips.PHILIPS_X586_NEW,
      Philips.PHILIPS_XENIUM_V787,
      Philips.PI3100_98,
      Philips.QM16XE_F,
      Philips.QM16XE_U,
      Philips.QM16XE_UB,
      Philips.QUEENSTOWN,
      Philips.QV151E,
      Philips.S257,
      Philips.S266,
      Philips.S318,
      Philips.S326,
      Philips.S327,
      Philips.S338,
      Philips.S386,
      Philips.S395,
      Philips.S561,
      Philips.S566,
      Philips.S6122,
      Philips.S6133S,
      Philips.S6206,
      Philips.SCX35_SP7731GEA_HD,
      Philips.SINDAP,
      Philips.T8010,
      Philips.T8015,
      Philips.TAKAO,
      Philips.TLE722G,
      Philips.V387,
      Philips.WHITEFIELD,
      Philips.X588_RU,
      Philips.X818,
      Philips.X818_EE,
      Philips.X818_RU
  )

  /**
   * Get all device specifications for PHIMARK devices.
   * Useful for phimark testing.
   */
  public fun getPhimarkDevices(): List<String> = listOf(
      Phimark.HONGKONG,
      Phimark.LAVENDER,
      Phimark.MOUNTBAKER
  )

  /**
   * Get all device specifications for Phoenix devices.
   * Useful for phoenix testing.
   */
  public fun getPhoenixDevices(): List<String> = listOf(
      Phoenix.PHONETABPRO,
      Phoenix.PHPHOENIXONETAB
  )

  /**
   * Get all device specifications for Phoenix_Note devices.
   * Useful for phoenix_note testing.
   */
  public fun getPhoenixNoteDevices(): List<String> = listOf(
      PhoenixNote.PPS2022_P156
  )

  /**
   * Get all device specifications for PHONEMAX devices.
   * Useful for phonemax testing.
   */
  public fun getPhonemaxDevices(): List<String> = listOf(
      Phonemax.M10,
      Phonemax.M3PRO,
      Phonemax.P1000,
      Phonemax.P20_PRO,
      Phonemax.R4_GT,
      Phonemax.X1,
      Phonemax.X1_PRO
  )

  /**
   * Get all device specifications for PicassoTab devices.
   * Useful for picassotab testing.
   */
  public fun getPicassotabDevices(): List<String> = listOf(
      Picassotab.A10,
      Picassotab.PICASSOTAB_X11_2025,
      Picassotab.X11
  )

  /**
   * Get all device specifications for PILOT devices.
   * Useful for pilot testing.
   */
  public fun getPilotDevices(): List<String> = listOf(
      Pilot.LONGSHAN,
      Pilot.REDWOOD,
      Pilot.SAMSEONG
  )

  /**
   * Get all device specifications for PINOCCHIO devices.
   * Useful for pinocchio testing.
   */
  public fun getPinocchioDevices(): List<String> = listOf(
      Pinocchio.SGWIFIPAD320093
  )

  /**
   * Get all device specifications for PIONEER devices.
   * Useful for pioneer testing.
   */
  public fun getPioneerDevices(): List<String> = listOf(
      Pioneer.FU_ZIN2R_32,
      Pioneer.FU_ZIN_32,
      Pioneer.R2,
      Pioneer.R3_GTV,
      Pioneer.R4_GTV,
      Pioneer.SDA_80TAB,
      Pioneer.SDA_835TAB,
      Pioneer.SDA_8TAB
  )

  /**
   * Get all device specifications for Pioneer_Digital_TV devices.
   * Useful for pioneer_digital_tv testing.
   */
  public fun getPioneerDigitalTvDevices(): List<String> = listOf(
      PioneerDigitalTv.DV8535_KIP,
      PioneerDigitalTv.SEI900PD
  )

  /**
   * Get all device specifications for PIPO devices.
   * Useful for pipo testing.
   */
  public fun getPipoDevices(): List<String> = listOf(
      Pipo.ICONX_P109
  )

  /**
   * Get all device specifications for Piranha devices.
   * Useful for piranha testing.
   */
  public fun getPiranhaDevices(): List<String> = listOf(
      Piranha.PIRANHA8032
  )

  /**
   * Get all device specifications for PitneyBowes devices.
   * Useful for pitneybowes testing.
   */
  public fun getPitneybowesDevices(): List<String> = listOf(
      Pitneybowes.TITANX2
  )

  /**
   * Get all device specifications for Pivot devices.
   * Useful for pivot testing.
   */
  public fun getPivotDevices(): List<String> = listOf(
      Pivot.PVT_8_A50_R1,
      Pivot.PVT_R78_3288
  )

  /**
   * Get all device specifications for PIXART devices.
   * Useful for pixart testing.
   */
  public fun getPixartDevices(): List<String> = listOf(
      Pixart.PIXART_P20
  )

  /**
   * Get all device specifications for Pixela devices.
   * Useful for pixela testing.
   */
  public fun getPixelaDevices(): List<String> = listOf(
      Pixela.KYOBASHI,
      Pixela.TENNOUJI
  )

  /**
   * Get all device specifications for PIXPEAK devices.
   * Useful for pixpeak testing.
   */
  public fun getPixpeakDevices(): List<String> = listOf(
      Pixpeak.L60_EEA,
      Pixpeak.M258_EEA,
      Pixpeak.P107_EEA,
      Pixpeak.TABLET,
      Pixpeak.U921,
      Pixpeak.U921_EEA
  )

  /**
   * Get all device specifications for Pixpro devices.
   * Useful for pixpro testing.
   */
  public fun getPixproDevices(): List<String> = listOf(
      Pixpro.PIXPRO_L1_PRO,
      Pixpro.VT10_RUGGED
  )

  /**
   * Get all device specifications for Pixus devices.
   * Useful for pixus testing.
   */
  public fun getPixusDevices(): List<String> = listOf(
      Pixus.PIXUS_ARENA,
      Pixus.PIXUS_BLAST,
      Pixus.PIXUS_COMBO,
      Pixus.PIXUS_DEON,
      Pixus.PIXUS_DRIVE,
      Pixus.PIXUS_FALCON,
      Pixus.PIXUS_FOLIO,
      Pixus.PIXUS_HAMMER,
      Pixus.PIXUS_JOKER,
      Pixus.PIXUS_LINE,
      Pixus.PIXUS_LOGA,
      Pixus.PIXUS_TITAN,
      Pixus.PIXUS_TOUCH_7_3G,
      Pixus.PIXUS_WING,
      Pixus.SPRINT,
      Pixus.SPRINT_2_16
  )

  /**
   * Get all device specifications for PL_TMPL devices.
   * Useful for pl_tmpl testing.
   */
  public fun getPlTmplDevices(): List<String> = listOf(
      PlTmpl.KSTB6077
  )

  /**
   * Get all device specifications for Plaisio devices.
   * Useful for plaisio testing.
   */
  public fun getPlaisioDevices(): List<String> = listOf(
      Plaisio.EARTH3G,
      Plaisio.TURBOX_S3
  )

  /**
   * Get all device specifications for Planet devices.
   * Useful for planet testing.
   */
  public fun getPlanetDevices(): List<String> = listOf(
      Planet.ASTRO,
      Planet.COSMO_COMMUNICATOR,
      Planet.GEMINI_4G
  )

  /**
   * Get all device specifications for PLAY devices.
   * Useful for play testing.
   */
  public fun getPlayDevices(): List<String> = listOf(
      Play.DCTIW362P,
      Play.DV8545_PLAY,
      Play.DV8945_KPP,
      Play.DV8990_KPP
  )

  /**
   * Get all device specifications for PlayPoland devices.
   * Useful for playpoland testing.
   */
  public fun getPlaypolandDevices(): List<String> = listOf(
      Playpoland.PLAY_BOX_TV_4B
  )

  /**
   * Get all device specifications for PLDTHOME devices.
   * Useful for pldthome testing.
   */
  public fun getPldthomeDevices(): List<String> = listOf(
      Pldthome.DS8942_KPP
  )

  /**
   * Get all device specifications for Plimpton devices.
   * Useful for plimpton testing.
   */
  public fun getPlimptonDevices(): List<String> = listOf(
      Plimpton.KIDS20,
      Plimpton.KIDS20A14,
      Plimpton.KIDS20A14_EEA,
      Plimpton.KIDS20A15,
      Plimpton.KIDS_10,
      Plimpton.KIDS_10_EEA,
      Plimpton.KIDS_10_VER13,
      Plimpton.KIDS_10_VER14,
      Plimpton.KIDS_10_VER14_EEA,
      Plimpton.KIDS_8,
      Plimpton.P2,
      Plimpton.P60PLUS,
      Plimpton.P60PRO,
      Plimpton.P70_14,
      Plimpton.P8,
      Plimpton.P8PRO,
      Plimpton.P8PROA14,
      Plimpton.P8PROA14_EEA,
      Plimpton.PLIMPAD_P3,
      Plimpton.PLIMPAD_P3_PRO,
      Plimpton.PLIMPAD_P60,
      Plimpton.X100
  )

  /**
   * Get all device specifications for PLOYER devices.
   * Useful for ployer testing.
   */
  public fun getPloyerDevices(): List<String> = listOf(
      Ployer.A1190
  )

  /**
   * Get all device specifications for PLUM devices.
   * Useful for plum testing.
   */
  public fun getPlumDevices(): List<String> = listOf(
      Plum.Z555,
      Plum.Z570,
      Plum.Z711,
      Plum.Z712
  )

  /**
   * Get all device specifications for PlusStyle devices.
   * Useful for plusstyle testing.
   */
  public fun getPlusstyleDevices(): List<String> = listOf(
      Plusstyle.PS_TAB_WB01
  )

  /**
   * Get all device specifications for PLUZZ devices.
   * Useful for pluzz testing.
   */
  public fun getPluzzDevices(): List<String> = listOf(
      Pluzz.P13,
      Pluzz.PLUZZ_PL5510
  )

  /**
   * Get all device specifications for PN_RAVEC devices.
   * Useful for pn_ravec testing.
   */
  public fun getPnRavecDevices(): List<String> = listOf(
      PnRavec.PN_RAVEC_TABLETTE
  )

  /**
   * Get all device specifications for POCO devices.
   * Useful for poco testing.
   */
  public fun getPocoDevices(): List<String> = listOf(
      Poco.ALIOTH,
      Poco.ANGELICAIN,
      Poco.ARESIN,
      Poco.BERYL,
      Poco.BHIMA,
      Poco.BLUE,
      Poco.BREEZE,
      Poco.CAMELLIA,
      Poco.CAMELLIAN,
      Poco.CHOPIN,
      Poco.CITRINE,
      Poco.CITRUS,
      Poco.DIZI,
      Poco.DUCHAMP,
      Poco.EARTH,
      Poco.EMERALD,
      Poco.EVERGREEN,
      Poco.FLAME,
      Poco.FLEUR,
      Poco.GALE,
      Poco.GARNET,
      Poco.GRAM,
      Poco.GUST,
      Poco.INGRES,
      Poco.KARNA,
      Poco.LAKE,
      Poco.LIGHT,
      Poco.LMI,
      Poco.MALACHITE,
      Poco.MARBLE,
      Poco.MARBLEIN,
      Poco.MIEL,
      Poco.MIRO,
      Poco.MOON,
      Poco.MUNCH,
      Poco.ONYX,
      Poco.PERIDOT,
      Poco.PEUX,
      Poco.PHOENIXIN,
      Poco.REDWOOD,
      Poco.REDWOODIN,
      Poco.ROCK,
      Poco.RODIN,
      Poco.ROSEMARY,
      Poco.SERENITY,
      Poco.SHIVA,
      Poco.SKY,
      Poco.SNOW,
      Poco.STONE,
      Poco.SURYA,
      Poco.THUNDER,
      Poco.VERMEER,
      Poco.VEUX,
      Poco.WARM,
      Poco.WATER,
      Poco.XAGA,
      Poco.ZORN
  )

  /**
   * Get all device specifications for POINT_OF_VIEW devices.
   * Useful for point_of_view testing.
   */
  public fun getPointOfViewDevices(): List<String> = listOf(
      PointOfView.TAB_P10232_3G
  )

  /**
   * Get all device specifications for POINTMOBILE devices.
   * Useful for pointmobile testing.
   */
  public fun getPointmobileDevices(): List<String> = listOf(
      Pointmobile.PM30,
      Pointmobile.PM351,
      Pointmobile.PM352,
      Pointmobile.PM45,
      Pointmobile.PM451,
      Pointmobile.PM452,
      Pointmobile.PM550,
      Pointmobile.PM66,
      Pointmobile.PM67,
      Pointmobile.PM75,
      Pointmobile.PM80,
      Pointmobile.PM84,
      Pointmobile.PM85,
      Pointmobile.PM86,
      Pointmobile.PM90,
      Pointmobile.PM95,
      Pointmobile.PT11
  )

  /**
   * Get all device specifications for Pokini devices.
   * Useful for pokini testing.
   */
  public fun getPokiniDevices(): List<String> = listOf(
      Pokini.K6
  )

  /**
   * Get all device specifications for polar devices.
   * Useful for polar testing.
   */
  public fun getPolarDevices(): List<String> = listOf(
      Polar.PIKE
  )

  /**
   * Get all device specifications for Polaroid devices.
   * Useful for polaroid testing.
   */
  public fun getPolaroidDevices(): List<String> = listOf(
      Polaroid.A1000,
      Polaroid.BANGBAE,
      Polaroid.BDL0232PR,
      Polaroid.BDL1064PR001,
      Polaroid.BDL424,
      Polaroid.BDLE716_EEA,
      Polaroid.BDLE716PR,
      Polaroid.BDLT107,
      Polaroid.BRUNO,
      Polaroid.CONNECT4G,
      Polaroid.EWHA,
      Polaroid.GMP,
      Polaroid.KENTON,
      Polaroid.KOMAGOME,
      Polaroid.L10,
      Polaroid.L9,
      Polaroid.LASALLE,
      Polaroid.MID1064FHDP,
      Polaroid.MID1464PR001,
      Polaroid.MID4004JBL,
      Polaroid.MID4G64PR002,
      Polaroid.MID8254PR,
      Polaroid.MIDS2410PR001,
      Polaroid.MOBILITY3G,
      Polaroid.P4526A,
      Polaroid.P5006A,
      Polaroid.P5026A,
      Polaroid.P5046A,
      Polaroid.P5047A,
      Polaroid.P5526A,
      Polaroid.PMID7102DC,
      Polaroid.POMDTB005,
      Polaroid.POMDTB006,
      Polaroid.POMDTB007,
      Polaroid.PRO5584PGE01,
      Polaroid.PSPCK20NA,
      Polaroid.PSPCK21NA,
      Polaroid.PSPCL20A0,
      Polaroid.PSPCL30A0,
      Polaroid.PSPCM20A0,
      Polaroid.PSPCZ20A0,
      Polaroid.PSPTD21NA,
      Polaroid.R1,
      Polaroid.R2,
      Polaroid.REDWOOD,
      Polaroid.SHILIN,
      Polaroid.SINDANG
  )

  /**
   * Get all device specifications for Polestar devices.
   * Useful for polestar testing.
   */
  public fun getPolestarDevices(): List<String> = listOf(
      Polestar.IHU_ABL_CAR,
      Polestar.JALAPENO,
      Polestar.MOOSE
  )

  /**
   * Get all device specifications for Polsat devices.
   * Useful for polsat testing.
   */
  public fun getPolsatDevices(): List<String> = listOf(
      Polsat.M391_POLSAT
  )

  /**
   * Get all device specifications for Polytron devices.
   * Useful for polytron testing.
   */
  public fun getPolytronDevices(): List<String> = listOf(
      Polytron.HAYWARD,
      Polytron.LAKESIDE,
      Polytron.LUSHAN,
      Polytron.MATEO,
      Polytron.NAGAI,
      Polytron.OSAKI,
      Polytron.P500,
      Polytron.P551S,
      Polytron.PDB_F2,
      Polytron.PIONEER,
      Polytron.POLYTRON_A552,
      Polytron.POLYTRON_P552,
      Polytron.POLYTRON_R2509,
      Polytron.POLYTRON_R2509SE,
      Polytron.POLYTRON_R250A,
      Polytron.SONGSHAN
  )

  /**
   * Get all device specifications for PontisTech devices.
   * Useful for pontistech testing.
   */
  public fun getPontistechDevices(): List<String> = listOf(
      Pontistech.SEI700PTS
  )

  /**
   * Get all device specifications for POOLS devices.
   * Useful for pools testing.
   */
  public fun getPoolsDevices(): List<String> = listOf(
      Pools.POOLS_THE_DOLLAR
  )

  /**
   * Get all device specifications for POPTEL devices.
   * Useful for poptel testing.
   */
  public fun getPoptelDevices(): List<String> = listOf(
      Poptel.P10,
      Poptel.P60,
      Poptel.P8,
      Poptel.P9000_MAX,
      Poptel.V9
  )

  /**
   * Get all device specifications for Porodo devices.
   * Useful for porodo testing.
   */
  public fun getPorodoDevices(): List<String> = listOf(
      Porodo.ULTRA_MAX_10_1
  )

  /**
   * Get all device specifications for Porsche devices.
   * Useful for porsche testing.
   */
  public fun getPorscheDevices(): List<String> = listOf(
      Porsche.SDIS1
  )

  /**
   * Get all device specifications for PORTFOLIO devices.
   * Useful for portfolio testing.
   */
  public fun getPortfolioDevices(): List<String> = listOf(
      Portfolio.P9001
  )

  /**
   * Get all device specifications for Portworld devices.
   * Useful for portworld testing.
   */
  public fun getPortworldDevices(): List<String> = listOf(
      Portworld.YC_M10
  )

  /**
   * Get all device specifications for POS devices.
   * Useful for pos testing.
   */
  public fun getPosDevices(): List<String> = listOf(
      Pos.POS
  )

  /**
   * Get all device specifications for Posfic devices.
   * Useful for posfic testing.
   */
  public fun getPosficDevices(): List<String> = listOf(
      Posfic.SEOCHO
  )

  /**
   * Get all device specifications for Posiflex devices.
   * Useful for posiflex testing.
   */
  public fun getPosiflexDevices(): List<String> = listOf(
      Posiflex.MK_1000
  )

  /**
   * Get all device specifications for positivo devices.
   * Useful for positivo testing.
   */
  public fun getPositivoDevices(): List<String> = listOf(
      Positivo.C805,
      Positivo.G1036,
      Positivo.KC771,
      Positivo.M16QF1XMT8183,
      Positivo.M840,
      Positivo.MINI,
      Positivo.MINI_I,
      Positivo.MJA1031,
      Positivo.Q20,
      Positivo.QF74,
      Positivo.S430B,
      Positivo.S431,
      Positivo.S432,
      Positivo.S455,
      Positivo.S509,
      Positivo.S5094G,
      Positivo.S509N,
      Positivo.S510,
      Positivo.S511,
      Positivo.S512,
      Positivo.S514,
      Positivo.S518,
      Positivo.S520,
      Positivo.S520_4G,
      Positivo.S530,
      Positivo.S531,
      Positivo.S532,
      Positivo.S541,
      Positivo.S555,
      Positivo.S620,
      Positivo.S640,
      Positivo.S650,
      Positivo.SP2,
      Positivo.T1060,
      Positivo.T1075,
      Positivo.T1085,
      Positivo.T2040,
      Positivo.T2040B,
      Positivo.T2050C,
      Positivo.T2050M,
      Positivo.T3010D,
      Positivo.T307F,
      Positivo.T701,
      Positivo.T770,
      Positivo.T770E,
      Positivo.T770G,
      Positivo.T800,
      Positivo.T800M,
      Positivo.T810,
      Positivo.T810C,
      Positivo.TL10,
      Positivo.US2070,
      Positivo.W750,
      Positivo.Y1000,
      Positivo.Y1010,
      Positivo.Y210,
      Positivo.Y400,
      Positivo.Y700,
      Positivo.YPY_AB10H,
      Positivo.YPY_AB7,
      Positivo.YPY_L1050
  )

  /**
   * Get all device specifications for POSSAFE devices.
   * Useful for possafe testing.
   */
  public fun getPossafeDevices(): List<String> = listOf(
      Possafe.ORDERGO5,
      Possafe.ORDERGO_6
  )

  /**
   * Get all device specifications for Postef devices.
   * Useful for postef testing.
   */
  public fun getPostefDevices(): List<String> = listOf(
      Postef.RAISECOM_M6511
  )

  /**
   * Get all device specifications for POWER-GREEN devices.
   * Useful for power-green testing.
   */
  public fun getPowerGreenDevices(): List<String> = listOf(
      PowerGreen.STANFORD,
      PowerGreen.ZHONGSHAN
  )

  /**
   * Get all device specifications for POWEROLOGY devices.
   * Useful for powerology testing.
   */
  public fun getPowerologyDevices(): List<String> = listOf(
      Powerology.HONGKONG
  )

  /**
   * Get all device specifications for POWMUS devices.
   * Useful for powmus testing.
   */
  public fun getPowmusDevices(): List<String> = listOf(
      Powmus.L211_EEA,
      Powmus.L30,
      Powmus.L60
  )

  /**
   * Get all device specifications for POZZI devices.
   * Useful for pozzi testing.
   */
  public fun getPozziDevices(): List<String> = listOf(
      Pozzi.POZZI_NEO_1,
      Pozzi.TURBO
  )

  /**
   * Get all device specifications for PRAZteck devices.
   * Useful for prazteck testing.
   */
  public fun getPrazteckDevices(): List<String> = listOf(
      Prazteck.PT7EDUPAD
  )

  /**
   * Get all device specifications for Precision devices.
   * Useful for precision testing.
   */
  public fun getPrecisionDevices(): List<String> = listOf(
      Precision.PBTAB_100
  )

  /**
   * Get all device specifications for PrecisionBiometric devices.
   * Useful for precisionbiometric testing.
   */
  public fun getPrecisionbiometricDevices(): List<String> = listOf(
      Precisionbiometric.PBTAB100_1G3,
      Precisionbiometric.PBTAB100_2G4
  )

  /**
   * Get all device specifications for Premier devices.
   * Useful for premier testing.
   */
  public fun getPremierDevices(): List<String> = listOf(
      Premier.IKEBUKURO,
      Premier.LONGSHAN,
      Premier.MAXI_20,
      Premier.PREMIER_P50,
      Premier.REDWOOD,
      Premier.SAMSEONG,
      Premier.TAB_7304_16G3GS,
      Premier.TAB_7769_32G4GS,
      Premier.TAB_7887_32G3GB,
      Premier.TAB_7888_32G3GB
  )

  /**
   * Get all device specifications for PREMIO devices.
   * Useful for premio testing.
   */
  public fun getPremioDevices(): List<String> = listOf(
      Premio._186HS1080233,
      Premio.HMR5510,
      Premio.P520,
      Premio.PREMIO,
      Premio.PREMIO_P420,
      Premio.S51,
      Premio.S53,
      Premio.S54,
      Premio.S55,
      Premio.S56,
      Premio.S57,
      Premio.S73,
      Premio.S75,
      Premio.S80,
      Premio.S81,
      Premio.S82,
      Premio.S83,
      Premio.S84,
      Premio.S85,
      Premio.S86,
      Premio.S87,
      Premio.S88,
      Premio.S89,
      Premio.S93,
      Premio.S94,
      Premio.TAB7,
      Premio.TAB8,
      Premio.TAB_7_1,
      Premio.TAB_8_1,
      Premio.X70_2021,
      Premio.X75_2021,
      Premio.X76,
      Premio.X77,
      Premio.X80,
      Premio.X81,
      Premio.X82,
      Premio.X83,
      Premio.X84,
      Premio.X85,
      Premio.X85_PRO,
      Premio.X86,
      Premio.X87,
      Premio.X88,
      Premio.X91,
      Premio.X95,
      Premio.X96,
      Premio.X97,
      Premio.Z1
  )

  /**
   * Get all device specifications for Preo devices.
   * Useful for preo testing.
   */
  public fun getPreoDevices(): List<String> = listOf(
      Preo.PTAB_P8,
      Preo.PTABP10
  )

  /**
   * Get all device specifications for Prestige devices.
   * Useful for prestige testing.
   */
  public fun getPrestigeDevices(): List<String> = listOf(
      Prestige.ELITE10QL
  )

  /**
   * Get all device specifications for Prestigio devices.
   * Useful for prestigio testing.
   */
  public fun getPrestigioDevices(): List<String> = listOf(
      Prestigio.BW50B1L,
      Prestigio.CD10A2G,
      Prestigio.CD10A4L,
      Prestigio.CD10A7G,
      Prestigio.CD10A8L,
      Prestigio.CD80A1G,
      Prestigio.CD80A3L,
      Prestigio.CD80A5G,
      Prestigio.CD80A6L,
      Prestigio.CF10A1L,
      Prestigio.CF80A2G,
      Prestigio.CF80A5L,
      Prestigio.DTE50B8L,
      Prestigio.DW50A03G,
      Prestigio.DW50B5G,
      Prestigio.DW53B01G,
      Prestigio.DW53B3G,
      Prestigio.DW53B4G,
      Prestigio.DW55B02L,
      Prestigio.DW55B8L,
      Prestigio.EB50B1L,
      Prestigio.HP10A11W,
      Prestigio.HP10A12L,
      Prestigio.HP10A17L,
      Prestigio.HP10A4L,
      Prestigio.HP10A5L,
      Prestigio.HP70A10L,
      Prestigio.HP70A14W,
      Prestigio.HP70A15G,
      Prestigio.HP70A1W,
      Prestigio.HP70A2G,
      Prestigio.HP70A3L,
      Prestigio.HP70A6L,
      Prestigio.HP70A7G,
      Prestigio.HP80A16G,
      Prestigio.HP80A21G,
      Prestigio.HP8A6L,
      Prestigio.HT50B2G,
      Prestigio.IN39B3G,
      Prestigio.IN50B1L,
      Prestigio.JU10A3G,
      Prestigio.JU70A1G,
      Prestigio.JU80A2G,
      Prestigio.KN54B1L,
      Prestigio.LS10A3G,
      Prestigio.LS10A8L,
      Prestigio.LS70A2G,
      Prestigio.LS70A5G,
      Prestigio.LS70A6L,
      Prestigio.LS80A1L,
      Prestigio.LS80A4L,
      Prestigio.LS96A7G,
      Prestigio.NS70A03W,
      Prestigio.PMT3011_3G,
      Prestigio.PMT3038_3G,
      Prestigio.PMT3057_3G,
      Prestigio.PMT3277_3G,
      Prestigio.PMT3287_3G,
      Prestigio.PMT3777_3G,
      Prestigio.PMT5001_3G,
      Prestigio.PMT5002_WI,
      Prestigio.PMT5008_3G,
      Prestigio.PMT5287_4G,
      Prestigio.PMT5487_3G,
      Prestigio.PMT5777_3G,
      Prestigio.PMT5887_3G,
      Prestigio.PMT7077_3G,
      Prestigio.PMT7177_3G,
      Prestigio.PMT7287_3G,
      Prestigio.PN10A01G,
      Prestigio.PN80A03G,
      Prestigio.PSP5504DUO,
      Prestigio.TC10A2L,
      Prestigio.TC10A3L,
      Prestigio.TC70A1G,
      Prestigio.TE50B2G,
      Prestigio.TE50B4L,
      Prestigio.TE52B10G,
      Prestigio.TE55B9G,
      Prestigio.TL47B1G,
      Prestigio.TL49B4L,
      Prestigio.TL52B5L,
      Prestigio.TL55B3L,
      Prestigio.TL61B8L,
      Prestigio.TL80A15G,
      Prestigio.UE55B1L,
      Prestigio.WT10A1G,
      Prestigio.WT10A2G,
      Prestigio.WT70A1L
  )

  /**
   * Get all device specifications for Prestigio_Solutions devices.
   * Useful for prestigio_solutions testing.
   */
  public fun getPrestigioSolutionsDevices(): List<String> = listOf(
      PrestigioSolutions.HE10A3L,
      PrestigioSolutions.HP80A33L
  )

  /**
   * Get all device specifications for PRIMA devices.
   * Useful for prima testing.
   */
  public fun getPrimaDevices(): List<String> = listOf(
      Prima.KENTON,
      Prima.LASALLE
  )

  /**
   * Get all device specifications for Prime devices.
   * Useful for prime testing.
   */
  public fun getPrimeDevices(): List<String> = listOf(
      Prime.SHINAGAWA,
      Prime.X6_PRO
  )

  /**
   * Get all device specifications for Prism devices.
   * Useful for prism testing.
   */
  public fun getPrismDevices(): List<String> = listOf(
      Prism.LONGSHAN,
      Prism.SINDORIM
  )

  /**
   * Get all device specifications for PrismPlus devices.
   * Useful for prismplus testing.
   */
  public fun getPrismplusDevices(): List<String> = listOf(
      Prismplus.ANAHEIM,
      Prismplus.ELEONAS,
      Prismplus.SHIBUYA,
      Prismplus.SUNNYVALE,
      Prismplus.SW4H,
      Prismplus.SW4H_FF,
      Prismplus.SW6H,
      Prismplus.UMEDA
  )

  /**
   * Get all device specifications for PRITOM devices.
   * Useful for pritom testing.
   */
  public fun getPritomDevices(): List<String> = listOf(
      Pritom.K7,
      Pritom.K7_A04,
      Pritom.K7_A04_EEA,
      Pritom.K7_A101,
      Pritom.K7_A101_EEA,
      Pritom.K7_A102,
      Pritom.K7PRO,
      Pritom.K7PRO_EEA,
      Pritom.L10,
      Pritom.L10_EEA,
      Pritom.L10_T07,
      Pritom.L10_T13,
      Pritom.L8,
      Pritom.L8_T01,
      Pritom.L8_A01,
      Pritom.L8_B01,
      Pritom.L8_B02,
      Pritom.L8_B02_EEA,
      Pritom.L8_B03,
      Pritom.L8_C01,
      Pritom.L8_C01_EEA,
      Pritom.L8_C02,
      Pritom.L8_C02_EEA,
      Pritom.L8_EEA,
      Pritom.L8_PRO,
      Pritom.L8_PRO_EEA,
      Pritom.M10,
      Pritom.M10_A01,
      Pritom.M10_A01_EEA,
      Pritom.M10_A05,
      Pritom.M10_A05_EEA,
      Pritom.M10_AIR_EEA,
      Pritom.M10_B05,
      Pritom.M10_B05_EEA,
      Pritom.M10_B06,
      Pritom.M10_C01,
      Pritom.M10_C01_EEA,
      Pritom.M10_C02,
      Pritom.M10_C02_EEA,
      Pritom.M10_C03,
      Pritom.M10_C03_EEA,
      Pritom.M10_C04,
      Pritom.M10_C04_EEA,
      Pritom.M10_C05,
      Pritom.M10_C05_EEA,
      Pritom.M10_C05_KIDS,
      Pritom.M10_C06_KIDS,
      Pritom.M10_C07,
      Pritom.M10_EEA,
      Pritom.M10_LITE,
      Pritom.M10_MAX,
      Pritom.M10_MAX_EEA,
      Pritom.M10_PLUS_EEA,
      Pritom.M10_PRO,
      Pritom.M10_PRO_EEA,
      Pritom.M10_R01,
      Pritom.M10_R01_EEA,
      Pritom.M10_R02,
      Pritom.M10_R02_EEA,
      Pritom.M10_R03,
      Pritom.M10_R04,
      Pritom.M30,
      Pritom.M30_EEA,
      Pritom.P7,
      Pritom.P7_A03,
      Pritom.P7_A04,
      Pritom.P7_A05,
      Pritom.P7_A07,
      Pritom.P7_A1,
      Pritom.P7_A1_EEA,
      Pritom.P7PLUS,
      Pritom.P7PLUS_EEA,
      Pritom.P7PRO,
      Pritom.P7PRO_EEA
  )

  /**
   * Get all device specifications for PRIXTON devices.
   * Useful for prixton testing.
   */
  public fun getPrixtonDevices(): List<String> = listOf(
      Prixton.EXPERT,
      Prixton.NOVA,
      Prixton.T9120
  )

  /**
   * Get all device specifications for Prodigi devices.
   * Useful for prodigi testing.
   */
  public fun getProdigiDevices(): List<String> = listOf(
      Prodigi.CONNECT
  )

  /**
   * Get all device specifications for ProDVX devices.
   * Useful for prodvx testing.
   */
  public fun getProdvxDevices(): List<String> = listOf(
      Prodvx.RK3399_ANDROID11
  )

  /**
   * Get all device specifications for Profilo devices.
   * Useful for profilo testing.
   */
  public fun getProfiloDevices(): List<String> = listOf(
      Profilo.GUANDU,
      Profilo.MARINA,
      Profilo.MARTIN,
      Profilo.TAMACHI,
      Profilo.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for Proline devices.
   * Useful for proline testing.
   */
  public fun getProlineDevices(): List<String> = listOf(
      Proline.H1010,
      Proline.H10888M,
      Proline.PROLINE_FALCONXL
  )

  /**
   * Get all device specifications for Promethean devices.
   * Useful for promethean testing.
   */
  public fun getPrometheanDevices(): List<String> = listOf(
      Promethean.OPS_A2,
      Promethean.XM3566D
  )

  /**
   * Get all device specifications for PROMETHEUS devices.
   * Useful for prometheus testing.
   */
  public fun getPrometheusDevices(): List<String> = listOf(
      Prometheus.STANFORD
  )

  /**
   * Get all device specifications for PROSCAN devices.
   * Useful for proscan testing.
   */
  public fun getProscanDevices(): List<String> = listOf(
      Proscan.NAGATA,
      Proscan.PLT1074G,
      Proscan.PLT7775G
  )

  /**
   * Get all device specifications for PROSCAN_ELITE devices.
   * Useful for proscan_elite testing.
   */
  public fun getProscanEliteDevices(): List<String> = listOf(
      ProscanElite.MDT1008_MR_32
  )

  /**
   * Get all device specifications for PROTON devices.
   * Useful for proton testing.
   */
  public fun getProtonDevices(): List<String> = listOf(
      Proton.BANDRA,
      Proton.CAPITOLHILL,
      Proton.KENTON,
      Proton.KEONEAE,
      Proton.LASALLE,
      Proton.P25_ULTRA,
      Proton.PROTON_X10_PRO,
      Proton.PROTON_X20_PRO
  )

  /**
   * Get all device specifications for Proximus devices.
   * Useful for proximus testing.
   */
  public fun getProximusDevices(): List<String> = listOf(
      Proximus.UIW4020PXM,
      Proximus.UIW4068PXM
  )

  /**
   * Get all device specifications for PS_Mobile devices.
   * Useful for ps_mobile testing.
   */
  public fun getPsMobileDevices(): List<String> = listOf(
      PsMobile.NEO_PRO
  )

  /**
   * Get all device specifications for Pseries devices.
   * Useful for pseries testing.
   */
  public fun getPseriesDevices(): List<String> = listOf(
      Pseries.LASALLE
  )

  /**
   * Get all device specifications for PTCLSHOQTV devices.
   * Useful for ptclshoqtv testing.
   */
  public fun getPtclshoqtvDevices(): List<String> = listOf(
      Ptclshoqtv.PTCLBOX_B866V2F
  )

  /**
   * Get all device specifications for Pulsaris devices.
   * Useful for pulsaris testing.
   */
  public fun getPulsarisDevices(): List<String> = listOf(
      Pulsaris.FRESH,
      Pulsaris.PLUMA
  )

  /**
   * Get all device specifications for PUNOS devices.
   * Useful for punos testing.
   */
  public fun getPunosDevices(): List<String> = listOf(
      Punos.PTX1022G,
      Punos.PTX822G,
      Punos.PTXR1024B,
      Punos.PTXR824B,
      Punos.PUNOS_10
  )

  /**
   * Get all device specifications for PYUR_TV devices.
   * Useful for pyur_tv testing.
   */
  public fun getPyurTvDevices(): List<String> = listOf(
      PyurTv.M377GENB_PYUR
  )

  /**
   * Get all device specifications for Q-electronics devices.
   * Useful for q-electronics testing.
   */
  public fun getQElectronicsDevices(): List<String> = listOf(
      QElectronics.QP_TAQC70,
      QElectronics.QP_TAQC80
  )

  /**
   * Get all device specifications for QBELL devices.
   * Useful for qbell testing.
   */
  public fun getQbellDevices(): List<String> = listOf(
      Qbell.BANGBAE,
      Qbell.HANYANG,
      Qbell.KOMAGOME,
      Qbell.MOUNTBAKER,
      Qbell.NIPPORI,
      Qbell.QPHONE_10_1,
      Qbell.QTAB10,
      Qbell.QTAB1010X_EEA,
      Qbell.STANFORD,
      Qbell.TAMACHI,
      Qbell.YEONGDEUNGPO,
      Qbell.ZHONGSHAN
  )

  /**
   * Get all device specifications for QCELL devices.
   * Useful for qcell testing.
   */
  public fun getQcellDevices(): List<String> = listOf(
      Qcell.QSMART,
      Qcell.QSMART_PLUS
  )

  /**
   * Get all device specifications for QILIVE devices.
   * Useful for qilive testing.
   */
  public fun getQiliveDevices(): List<String> = listOf(
      Qilive.GUANDU,
      Qilive.MARINA,
      Qilive.MARTIN,
      Qilive.NAGATA,
      Qilive.Q10S55IN4G2,
      Qilive.Q10T10INP,
      Qilive.Q4T10IN,
      Qilive.Q6T10IN,
      Qilive.Q7T10INP,
      Qilive.Q8S55IN4G2,
      Qilive.Q8S5IN4GP,
      Qilive.Q8S6IN4G,
      Qilive.Q9S5IN4G,
      Qilive.QT19071,
      Qilive.QT19101,
      Qilive.QT19101HV,
      Qilive.QT19101K_116_EEA,
      Qilive.QT2108BP,
      Qilive.QT21101_464_EEA,
      Qilive.QT21101L_232_EEA,
      Qilive.QT2110BP,
      Qilive.QT22101B,
      Qilive.QT22103BP,
      Qilive.QT2308BK,
      Qilive.QT23109BP,
      Qilive.QT23126BP,
      Qilive.QT24101B,
      Qilive.QT24105BP,
      Qilive.TAMACHI,
      Qilive.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for QIN devices.
   * Useful for qin testing.
   */
  public fun getQinDevices(): List<String> = listOf(
      Qin.F22PRO
  )

  /**
   * Get all device specifications for Qisur devices.
   * Useful for qisur testing.
   */
  public fun getQisurDevices(): List<String> = listOf(
      Qisur.R106,
      Qisur.X72
  )

  /**
   * Get all device specifications for QIUWOKY devices.
   * Useful for qiuwoky testing.
   */
  public fun getQiuwokyDevices(): List<String> = listOf(
      Qiuwoky.C10S
  )

  /**
   * Get all device specifications for Qlink devices.
   * Useful for qlink testing.
   */
  public fun getQlinkDevices(): List<String> = listOf(
      Qlink.SCEPTER8,
      Qlink.SCEPTER8_TABLET,
      Qlink.SCEPTER_8
  )

  /**
   * Get all device specifications for QMobile devices.
   * Useful for qmobile testing.
   */
  public fun getQmobileDevices(): List<String> = listOf(
      Qmobile.BBL7551QM,
      Qmobile.CBL7521QM,
      Qmobile.CS1,
      Qmobile.CS1_PLUS,
      Qmobile.E2_NOIR,
      Qmobile.E3_DUAL,
      Qmobile.ENERGY_X1,
      Qmobile.ENERGY_X2,
      Qmobile.EVOK_POWER_LITE,
      Qmobile.FIRE,
      Qmobile.GBL7325QM,
      Qmobile.I2_POWER,
      Qmobile.I2_PRO,
      Qmobile.I5_5,
      Qmobile.I5I_2018,
      Qmobile.I6_METAL_2017,
      Qmobile.I6_METAL_HD,
      Qmobile.I6_METAL_ONE,
      Qmobile.I6_METAL_ONE_NEW,
      Qmobile.I8I,
      Qmobile.I8I_2019,
      Qmobile.I8I_PRO,
      Qmobile.I8I_PRO_II,
      Qmobile.J1,
      Qmobile.J2,
      Qmobile.J5,
      Qmobile.J7,
      Qmobile.J7_PRO,
      Qmobile.KING_KONG_MAX,
      Qmobile.LT100,
      Qmobile.LT360,
      Qmobile.LT700_PRO,
      Qmobile.LT750,
      Qmobile.LT900,
      Qmobile.M350_PRO,
      Qmobile.NOIR_A1_LITE,
      Qmobile.NOIR_X1S,
      Qmobile.PHANTOM_P1,
      Qmobile.PHANTOM_P1_PRO,
      Qmobile.Q_INFINITY,
      Qmobile.Q_INFINITY_B,
      Qmobile.Q_INFINITY_C,
      Qmobile.Q_INFINITY_CINEMA,
      Qmobile.Q_INFINITY_D,
      Qmobile.Q_INFINITY_E,
      Qmobile.Q_INFINITY_E_LITE,
      Qmobile.Q_INFINITY_PRIME,
      Qmobile.QMOBILE_BLUE_5,
      Qmobile.QMOBILE_DUAL_ONE,
      Qmobile.QMOBILE_E1,
      Qmobile.QMOBILE_EVOK_POWER,
      Qmobile.QMOBILE_HD_PLUS,
      Qmobile.QMOBILE_I9I,
      Qmobile.QMOBILE_LT500_PRO,
      Qmobile.QMOBILE_LT550,
      Qmobile.QMOBILE_NOIR_A1,
      Qmobile.QMOBILE_S4,
      Qmobile.QMOBILE_S6_PLUS,
      Qmobile.QMOBILE_S6S,
      Qmobile.QMOBILE_S8,
      Qmobile.QMOBILE_X33,
      Qmobile.QMOBILE_X36,
      Qmobile.QMOBILE_XLI,
      Qmobile.QMOBILES6,
      Qmobile.QTAB_Y1,
      Qmobile.QTAB_Y2,
      Qmobile.QTAB_Y3,
      Qmobile.S1_PRO,
      Qmobile.S2_PRO,
      Qmobile.X32,
      Qmobile.X32_NEW,
      Qmobile.X32_POWER,
      Qmobile.X700_PRO,
      Qmobile.X700_PRO_II,
      Qmobile.X700_PRO_LITE,
      Qmobile.Z12_PRO,
      Qmobile.Z14
  )

  /**
   * Get all device specifications for QOOQ devices.
   * Useful for qooq testing.
   */
  public fun getQooqDevices(): List<String> = listOf(
      Qooq.QOOQ,
      Qooq.QOOQ_V50
  )

  /**
   * Get all device specifications for QPS devices.
   * Useful for qps testing.
   */
  public fun getQpsDevices(): List<String> = listOf(
      Qps.ASIUR_101,
      Qps.KID15,
      Qps.KIDS01,
      Qps.P50,
      Qps.T1
  )

  /**
   * Get all device specifications for QRIOM devices.
   * Useful for qriom testing.
   */
  public fun getQriomDevices(): List<String> = listOf(
      Qriom.LAVENDER,
      Qriom.MINAMI,
      Qriom.MOUNTBAKER
  )

  /**
   * Get all device specifications for QSmart devices.
   * Useful for qsmart testing.
   */
  public fun getQsmartDevices(): List<String> = listOf(
      Qsmart.BLAZE,
      Qsmart.GLI,
      Qsmart.GLI_2020,
      Qsmart.GLI_LITE,
      Qsmart.HOT_1,
      Qsmart.HOT_5,
      Qsmart.I10_2019,
      Qsmart.I10_2020,
      Qsmart.I4I,
      Qsmart.I7I_2020,
      Qsmart.LT950,
      Qsmart.MARK_2,
      Qsmart.MARK_5,
      Qsmart.QSMART_I5I_2019,
      Qsmart.QSMART_I6I_2020,
      Qsmart.QSMART_LT900,
      Qsmart.ROCKET,
      Qsmart.ROCKET_LITE,
      Qsmart.ROCKET_PRO,
      Qsmart.SMART_8,
      Qsmart.SMART_HD_PRO,
      Qsmart.ULTRA,
      Qsmart.VIEW,
      Qsmart.VIEW_MAX,
      Qsmart.VIEW_MAX_PRO,
      Qsmart.VIEW_PRO,
      Qsmart.X10,
      Qsmart.X20,
      Qsmart.X40
  )

  /**
   * Get all device specifications for QTab devices.
   * Useful for qtab testing.
   */
  public fun getQtabDevices(): List<String> = listOf(
      Qtab.QTAB_V100,
      Qtab.QTAB_V500,
      Qtab.V5,
      Qtab.V5_PLUS,
      Qtab.V6_METAL,
      Qtab.V7_LTE,
      Qtab.V7_METAL
  )

  /**
   * Get all device specifications for qti devices.
   * Useful for qti testing.
   */
  public fun getQtiDevices(): List<String> = listOf(
      Qti.KONA
  )

  /**
   * Get all device specifications for QTOUCH devices.
   * Useful for qtouch testing.
   */
  public fun getQtouchDevices(): List<String> = listOf(
      Qtouch.Q524,
      Qtouch.Q624,
      Qtouch.Q624H
  )

  /**
   * Get all device specifications for Quantum devices.
   * Useful for quantum testing.
   */
  public fun getQuantumDevices(): List<String> = listOf(
      Quantum.Q03,
      Quantum.Q11,
      Quantum.Q13,
      Quantum.Q17,
      Quantum.Q19,
      Quantum.Q2,
      Quantum.Q3,
      Quantum.Q3C,
      Quantum.Q5,
      Quantum.QC84,
      Quantum.QE83,
      Quantum.QM83,
      Quantum.QX1,
      Quantum.QX2,
      Quantum.S518AR,
      Quantum.S600AR
  )

  /**
   * Get all device specifications for QUATRO devices.
   * Useful for quatro testing.
   */
  public fun getQuatroDevices(): List<String> = listOf(
      Quatro.QUATRO_8
  )

  /**
   * Get all device specifications for QUBER devices.
   * Useful for quber testing.
   */
  public fun getQuberDevices(): List<String> = listOf(
      Quber.QA3O_M110
  )

  /**
   * Get all device specifications for Qubo devices.
   * Useful for qubo testing.
   */
  public fun getQuboDevices(): List<String> = listOf(
      Qubo.BIG1,
      Qubo.P19,
      Qubo.SP510,
      Qubo.T104_64GB,
      Qubo.T10_32GB,
      Qubo.T3G_Q07,
      Qubo.TKIDS_100_EEA,
      Qubo.X626,
      Qubo.X626_4G,
      Qubo.X668_32GB,
      Qubo.X668_64GB
  )

  /**
   * Get all device specifications for QUEST devices.
   * Useful for quest testing.
   */
  public fun getQuestDevices(): List<String> = listOf(
      Quest.AMBER,
      Quest.Q7_TABLET,
      Quest.Q8_TABLET,
      Quest.RAPTOR,
      Quest.VIBE,
      Quest.VISION
  )

  /**
   * Get all device specifications for QUICK devices.
   * Useful for quick testing.
   */
  public fun getQuickDevices(): List<String> = listOf(
      Quick.U55
  )

  /**
   * Get all device specifications for Quickline devices.
   * Useful for quickline testing.
   */
  public fun getQuicklineDevices(): List<String> = listOf(
      Quickline.DCIW387
  )

  /**
   * Get all device specifications for QUINT devices.
   * Useful for quint testing.
   */
  public fun getQuintDevices(): List<String> = listOf(
      Quint.R3,
      Quint.R3_GTV,
      Quint.R4,
      Quint.R4_GTV
  )

  /**
   * Get all device specifications for qunyiCO devices.
   * Useful for qunyico testing.
   */
  public fun getQunyicoDevices(): List<String> = listOf(
      Qunyico.Y10,
      Qunyico.Y10_1,
      Qunyico.Y10_EEA,
      Qunyico.Y7,
      Qunyico.Y7_0,
      Qunyico.Y7_0_EEA,
      Qunyico.Y7_EEA
  )

  /**
   * Get all device specifications for QVWI devices.
   * Useful for qvwi testing.
   */
  public fun getQvwiDevices(): List<String> = listOf(
      Qvwi.YDA
  )

  /**
   * Get all device specifications for QWILI devices.
   * Useful for qwili testing.
   */
  public fun getQwiliDevices(): List<String> = listOf(
      Qwili.PULA
  )

  /**
   * Get all device specifications for RADDY devices.
   * Useful for raddy testing.
   */
  public fun getRaddyDevices(): List<String> = listOf(
      Raddy.RADDY_JANJA,
      Raddy.RADDY_JANJA_PRO
  )

  /**
   * Get all device specifications for rainx devices.
   * Useful for rainx testing.
   */
  public fun getRainxDevices(): List<String> = listOf(
      Rainx.THE101LOOP
  )

  /**
   * Get all device specifications for Rakioo devices.
   * Useful for rakioo testing.
   */
  public fun getRakiooDevices(): List<String> = listOf(
      Rakioo.X5
  )

  /**
   * Get all device specifications for RAKUTEN devices.
   * Useful for rakuten testing.
   */
  public fun getRakutenDevices(): List<String> = listOf(
      Rakuten.BANAGHER,
      Rakuten.C330,
      Rakuten.CHARA,
      Rakuten.GAEA,
      Rakuten.JERIDL,
      Rakuten.NEE,
      Rakuten.P710,
      Rakuten.P780,
      Rakuten.RECOA,
      Rakuten.SH_RM11,
      Rakuten.SH_RM12,
      Rakuten.SX1,
      Rakuten.SX3,
      Rakuten.VG2
  )

  /**
   * Get all device specifications for RAMTECHNOLOGY devices.
   * Useful for ramtechnology testing.
   */
  public fun getRamtechnologyDevices(): List<String> = listOf(
      Ramtechnology.STAR
  )

  /**
   * Get all device specifications for RANCON devices.
   * Useful for rancon testing.
   */
  public fun getRanconDevices(): List<String> = listOf(
      Rancon.ELLINIKO,
      Rancon.MOUNTBAKER
  )

  /**
   * Get all device specifications for RANGS devices.
   * Useful for rangs testing.
   */
  public fun getRangsDevices(): List<String> = listOf(
      Rangs.LAVENDER,
      Rangs.MOUNTBAKER
  )

  /**
   * Get all device specifications for Ratel devices.
   * Useful for ratel testing.
   */
  public fun getRatelDevices(): List<String> = listOf(
      Ratel.CELL
  )

  /**
   * Get all device specifications for RAVOZ devices.
   * Useful for ravoz testing.
   */
  public fun getRavozDevices(): List<String> = listOf(
      Ravoz.RAVOZ_V2,
      Ravoz.RAVOZ_V3,
      Ravoz.RAVOZ_V5,
      Ravoz.RAVOZ_V6,
      Ravoz.RAVOZ_V7,
      Ravoz.RAVOZ_V8,
      Ravoz.RAVOZ_V9,
      Ravoz.RAVOZ_Z3,
      Ravoz.RAVOZ_Z3_LITE,
      Ravoz.RAVOZ_Z3_PRO,
      Ravoz.RAVOZ_Z4,
      Ravoz.RAVOZ_Z5,
      Ravoz.RAVOZ_Z5_LITE,
      Ravoz.RAVOZ_Z5_PRO,
      Ravoz.RAVOZ_Z6,
      Ravoz.RAVOZ_Z6_LITE,
      Ravoz.RAVOZ_Z6_PRO,
      Ravoz.RAVOZ_Z7,
      Ravoz.RAVOZ_Z7_PRO,
      Ravoz.RAVOZ_Z8
  )

  /**
   * Get all device specifications for RAYLAN devices.
   * Useful for raylan testing.
   */
  public fun getRaylanDevices(): List<String> = listOf(
      Raylan.LONGSHAN,
      Raylan.P5000,
      Raylan.PHOENIX_H1PLUS,
      Raylan.PHOENIX_N1,
      Raylan.RAYLAN_P20_PLUS,
      Raylan.XPOWER_P6000
  )

  /**
   * Get all device specifications for RAYO_MOVIL devices.
   * Useful for rayo_movil testing.
   */
  public fun getRayoMovilDevices(): List<String> = listOf(
      RayoMovil.ATLAS,
      RayoMovil.ATLAS_2,
      RayoMovil.RAYO_X1,
      RayoMovil.X1PLUS
  )

  /**
   * Get all device specifications for Razer devices.
   * Useful for razer testing.
   */
  public fun getRazerDevices(): List<String> = listOf(
      Razer.AURA,
      Razer.BOLT,
      Razer.CHERYL,
      Razer.CHERYL_CKH,
      Razer.LINUS,
      Razer.RAZER_EDGE_WIFI,
      Razer.RZ45_0460
  )

  /**
   * Get all device specifications for RCA devices.
   * Useful for rca testing.
   */
  public fun getRcaDevices(): List<String> = listOf(
      Rca.CAPITOLHILL,
      Rca.DRP2091,
      Rca.DRP2091Q,
      Rca.DRP29101QD,
      Rca.ELLINIKO,
      Rca.GANGBYEON,
      Rca.HONGKONG,
      Rca.KANDA,
      Rca.KENTON,
      Rca.KEONEAE,
      Rca.LASALLE,
      Rca.LAVENDER,
      Rca.MARINA,
      Rca.MOUNTBAKER,
      Rca.NAGATA,
      Rca.OSAKI,
      Rca.RAKR30824,
      Rca.RATM20831,
      Rca.RATM21036,
      Rca.RATM30846,
      Rca.RATM31046,
      Rca.RATM3144B,
      Rca.RATR30824,
      Rca.RATR31024,
      Rca.RC10T3G21,
      Rca.RC10TB,
      Rca.RC7T3G21,
      Rca.RC8T3G21,
      Rca.RCA_G2,
      Rca.RCA_RENO_MAX,
      Rca.RCARENO5011619,
      Rca.RCS13101T,
      Rca.RCT6103W46,
      Rca.RCT6203W46,
      Rca.RCT6203W46L,
      Rca.RCT6213W22,
      Rca.RCT6213W23,
      Rca.RCT6213W24,
      Rca.RCT6213W87DK,
      Rca.RCT6223W87,
      Rca.RCT6223W97,
      Rca.RCT6272W23,
      Rca.RCT6303W87DK,
      Rca.RCT6303W87M,
      Rca.RCT6303W87M7,
      Rca.RCT6378W2,
      Rca.RCT6513W87,
      Rca.RCT6513W87DK5E,
      Rca.RCT6513W87DK5EQ,
      Rca.RCT6513W87DK5EQE,
      Rca.RCT6513W87DK5EQM,
      Rca.RCT6573W23,
      Rca.RCT6603W47M7,
      Rca.RCT6603W87M7,
      Rca.RCT6613W23P,
      Rca.RCT6613W23PG,
      Rca.RCT6613W23PU,
      Rca.RCT6613W23Q,
      Rca.RCT6703W12,
      Rca.RCT6703W13,
      Rca.RCT6716Q23,
      Rca.RCT6716Q24,
      Rca.RCT6716Q25,
      Rca.RCT6773W22,
      Rca.RCT6773W22B,
      Rca.RCT6773W42B,
      Rca.RCT6873W42,
      Rca.RCT6873W42BMF8,
      Rca.RCT6873W42BMF8KC,
      Rca.RCT6873W42BMF8QE,
      Rca.RCT6873W42BMF9A,
      Rca.RCT6873W42BMF9E,
      Rca.RCT6873W42M,
      Rca.RCT6873W42M_F7,
      Rca.RCT6876Q22N,
      Rca.RCT6973MDN,
      Rca.RCT6973W43,
      Rca.RCT6973W43MD,
      Rca.RCT6973W43MDEU,
      Rca.RCT6973W43R,
      Rca.RCT6A03W12,
      Rca.RCT6A03W12EU,
      Rca.RCT6A03W13,
      Rca.RCT6A03W13E,
      Rca.RCT6A03W13FU,
      Rca.RCT6A03W13M,
      Rca.RCT6A06E12,
      Rca.RCT6A06Q22,
      Rca.RCT6B03Q23,
      Rca.RCT6B03W12,
      Rca.RCT6B03W13,
      Rca.RCT6B06P23,
      Rca.RCT6B06Q23,
      Rca.RCT6B83W12,
      Rca.RCT6B86E12,
      Rca.RCT6K03W13,
      Rca.RCT6S03W12,
      Rca.RCT6S03W14,
      Rca.RCT6T06E13,
      Rca.RCT6T48Q35,
      Rca.RENO_NAPA,
      Rca.RENO_PRO,
      Rca.SEOCHO,
      Rca.TAB_ONE,
      Rca.TAB_ONE_PLUS,
      Rca.TAB_PRO,
      Rca.UENO
  )

  /**
   * Get all device specifications for RCT devices.
   * Useful for rct testing.
   */
  public fun getRctDevices(): List<String> = listOf(
      Rct.MX101M2
  )

  /**
   * Get all device specifications for RDP devices.
   * Useful for rdp testing.
   */
  public fun getRdpDevices(): List<String> = listOf(
      Rdp.TP802
  )

  /**
   * Get all device specifications for Readly devices.
   * Useful for readly testing.
   */
  public fun getReadlyDevices(): List<String> = listOf(
      Readly.READLYREADERONE
  )

  /**
   * Get all device specifications for REALIX devices.
   * Useful for realix testing.
   */
  public fun getRealixDevices(): List<String> = listOf(
      Realix.RXIS201,
      Realix.RXIS202
  )

  /**
   * Get all device specifications for realme devices.
   * Useful for realme testing.
   */
  public fun getRealmeDevices(): List<String> = listOf(
      Realme.BOS,
      Realme.GANGBYEON,
      Realme.IKEBUKURO,
      Realme.RE507C,
      Realme.RE5081,
      Realme.RE50BF,
      Realme.RE50C1,
      Realme.RE50C1L1,
      Realme.RE513CL1,
      Realme.RE5465,
      Realme.RE5469,
      Realme.RE546F,
      Realme.RE5471,
      Realme.RE5473,
      Realme.RE5477,
      Realme.RE547D,
      Realme.RE547F,
      Realme.RE5485,
      Realme.RE5487,
      Realme.RE5489,
      Realme.RE548B,
      Realme.RE548BL1,
      Realme.RE5496,
      Realme.RE549C,
      Realme.RE54ABL1,
      Realme.RE54B4L1,
      Realme.RE54BFL1,
      Realme.RE54C1L1,
      Realme.RE54CBL1,
      Realme.RE54D1,
      Realme.RE54D8L1,
      Realme.RE54E2L1,
      Realme.RE54E4L1,
      Realme.RE54F2L1,
      Realme.RE54F3L1,
      Realme.RE5849,
      Realme.RE584B,
      Realme.RE5851,
      Realme.RE5852,
      Realme.RE5854,
      Realme.RE5860,
      Realme.RE5865,
      Realme.RE5869,
      Realme.RE5887,
      Realme.RE588BL1,
      Realme.RE588DL1,
      Realme.RE588E,
      Realme.RE5894,
      Realme.RE58A0L1,
      Realme.RE58A5L1,
      Realme.RE58A6L1,
      Realme.RE58AB,
      Realme.RE58AF,
      Realme.RE58B1L1,
      Realme.RE58B2L1,
      Realme.RE58B6L1,
      Realme.RE58B8L1,
      Realme.RE58BC,
      Realme.RE58C2,
      Realme.RE58C6,
      Realme.RE58CE,
      Realme.RE58D1L1,
      Realme.RE5C33,
      Realme.RE5C34,
      Realme.RE5C37,
      Realme.RE5C39L1,
      Realme.RE5C3B,
      Realme.RE5C3C,
      Realme.RE5C3F,
      Realme.RE5C42,
      Realme.RE5C44,
      Realme.RE5C46L1,
      Realme.RE5C49L1,
      Realme.RE5C4FL1,
      Realme.RE5C51,
      Realme.RE5C6CL1,
      Realme.RE5C6EL1,
      Realme.RE5C70L1,
      Realme.RE5C7CL1,
      Realme.RE5C82L1,
      Realme.RE5C84L1,
      Realme.RE5C86L1,
      Realme.RE5C91L1,
      Realme.RE5C94L1,
      Realme.RE5C9AL1,
      Realme.RE5C9F,
      Realme.RE5CA3L1,
      Realme.RE5CA6L1,
      Realme.RE6018L1,
      Realme.RE6019,
      Realme.RE601EL1,
      Realme.RE601FL1,
      Realme.RE6020L1,
      Realme.RE6022L1,
      Realme.RE6024L1,
      Realme.RE6025L1,
      Realme.RE6027,
      Realme.RE602AL1,
      Realme.RE602CL1,
      Realme.RE602EL1,
      Realme.RE6054,
      Realme.RE605FL1,
      Realme.RE6063L1,
      Realme.RE6066L1,
      Realme.RE606B,
      Realme.RE606FL1,
      Realme.RE6077L1,
      Realme.RE6079L1,
      Realme.RE607CL1,
      Realme.RE6081L1,
      Realme.RE6083L1,
      Realme.RE6089,
      Realme.RE608EL1,
      Realme.RE6090L1,
      Realme.RE6092,
      Realme.RE6095,
      Realme.RE60A4L1,
      Realme.RE60ADL1,
      Realme.RE60AEL1,
      Realme.RE60AFL1,
      Realme.RE60B4L1,
      Realme.RE60B8,
      Realme.RE60BA,
      Realme.RE60CCL1,
      Realme.RE60CDL1,
      Realme.RE811C,
      Realme.RE873B,
      Realme.RE873D,
      Realme.RE879AL1,
      Realme.RE879EL1,
      Realme.RE87BAL1,
      Realme.RE87CCL1,
      Realme.RE8D4B,
      Realme.RE8DDCL1,
      Realme.RECE4244,
      Realme.RED8ACL1,
      Realme.RED8AF,
      Realme.RED8BEL1,
      Realme.RED8C1L1,
      Realme.RED8CDL1,
      Realme.RED8D1,
      Realme.RED8D7,
      Realme.RED8F6,
      Realme.RED8FA,
      Realme.REDWOOD,
      Realme.REE2ADL1,
      Realme.REE2B2L1,
      Realme.RMX1821,
      Realme.RMX1822,
      Realme.RMX1825,
      Realme.RMX1827,
      Realme.RMX1831,
      Realme.RMX1833,
      Realme.RMX1851,
      Realme.RMX1851CN,
      Realme.RMX1853,
      Realme.RMX1901CN,
      Realme.RMX1911,
      Realme.RMX1911L1,
      Realme.RMX1919,
      Realme.RMX1921,
      Realme.RMX1921L1,
      Realme.RMX1925,
      Realme.RMX1927,
      Realme.RMX1931CN,
      Realme.RMX1931L1,
      Realme.RMX1941,
      Realme.RMX1942,
      Realme.RMX1943,
      Realme.RMX1945,
      Realme.RMX1971,
      Realme.RMX1971CN,
      Realme.RMX1971L1,
      Realme.RMX1973,
      Realme.RMX1991CN,
      Realme.RMX1992L1,
      Realme.RMX1993L1,
      Realme.RMX2001L1,
      Realme.RMX2002L1,
      Realme.RMX2003L1,
      Realme.RMX2020,
      Realme.RMX2021,
      Realme.RMX2022,
      Realme.RMX2025CN,
      Realme.RMX2027,
      Realme.RMX2030,
      Realme.RMX2030L1,
      Realme.RMX2031,
      Realme.RMX2032,
      Realme.RMX2040,
      Realme.RMX2041,
      Realme.RMX2042,
      Realme.RMX2050,
      Realme.RMX2051CN,
      Realme.RMX2052CN,
      Realme.RMX2061L1,
      Realme.RMX2063L1,
      Realme.RMX2071CN,
      Realme.RMX2072CN,
      Realme.RMX2075L1,
      Realme.RMX2076L1,
      Realme.RMX2081L1,
      Realme.RMX2083L1,
      Realme.RMX2085L1,
      Realme.RMX2086L1,
      Realme.RMX2111CN,
      Realme.RMX2111L1,
      Realme.RMX2112CN,
      Realme.RMX2117CN,
      Realme.RMX2117L1,
      Realme.RMX2121CN,
      Realme.RMX2142CN,
      Realme.RMX2144L1,
      Realme.RMX2151L1,
      Realme.RMX2156L1,
      Realme.RMX2161L1,
      Realme.RMX2170L1,
      Realme.RMX2176CN,
      Realme.RMX2180,
      Realme.RMX2183,
      Realme.RMX2184,
      Realme.RMX2185,
      Realme.RMX2186,
      Realme.RMX2189,
      Realme.RMX2193,
      Realme.RMX2195L1,
      Realme.RMX2200CN,
      Realme.RMX2201CN,
      Realme.RMX2202CN,
      Realme.RMX2202L1,
      Realme.RMX2205CN,
      Realme.RMX3031CN,
      Realme.RMX3031L1,
      Realme.RMX3061,
      Realme.RMX3063,
      Realme.RMX3081L1,
      Realme.RMX3085L1,
      Realme.RMX3092CN,
      Realme.RMX3092L1,
      Realme.RMX3093CN,
      Realme.RMX3115CN,
      Realme.RMX3121CN,
      Realme.RMX3122CN,
      Realme.RMX3161CN,
      Realme.RMX3171,
      Realme.RMX3191,
      Realme.RMX3193,
      Realme.RMX3195,
      Realme.RMX3197,
      Realme.RMX3201,
      Realme.RMX3203L1,
      Realme.RMX3231,
      Realme.RMX3261,
      Realme.RMX3262,
      Realme.SW4H_FF,
      Realme.UMS9230_LATTE,
      Realme.YYT
  )

  /**
   * Get all device specifications for REALTIME devices.
   * Useful for realtime testing.
   */
  public fun getRealtimeDevices(): List<String> = listOf(
      Realtime.REALTIME_T503F_L1,
      Realtime.RS405,
      Realtime.RT8
  )

  /**
   * Get all device specifications for Rebecco devices.
   * Useful for rebecco testing.
   */
  public fun getRebeccoDevices(): List<String> = listOf(
      Rebecco.K30_EEA,
      Rebecco.K30_ROW,
      Rebecco.K50_EEA,
      Rebecco.K50_ROW,
      Rebecco.K50_ROW_B,
      Rebecco.K70_EEA,
      Rebecco.K70_ROW,
      Rebecco.K70I_EEA,
      Rebecco.K80_ROW,
      Rebecco.M30_PRO
  )

  /**
   * Get all device specifications for RECCO devices.
   * Useful for recco testing.
   */
  public fun getReccoDevices(): List<String> = listOf(
      Recco.R1,
      Recco.R2
  )

  /**
   * Get all device specifications for RED devices.
   * Useful for red testing.
   */
  public fun getRedDevices(): List<String> = listOf(
      Red.HYDROGENONE
  )

  /**
   * Get all device specifications for Red_Mobile devices.
   * Useful for red_mobile testing.
   */
  public fun getRedMobileDevices(): List<String> = listOf(
      RedMobile.QUICK_5_0
  )

  /**
   * Get all device specifications for RED-X devices.
   * Useful for red-x testing.
   */
  public fun getRedXDevices(): List<String> = listOf(
      RedX.RED_X_RX4505,
      RedX.RED_X_RX4559,
      RedX.RX4618,
      RedX.RX4802
  )

  /**
   * Get all device specifications for redbeat devices.
   * Useful for redbeat testing.
   */
  public fun getRedbeatDevices(): List<String> = listOf(
      Redbeat.D5,
      Redbeat.E3,
      Redbeat.REDBEATA2,
      Redbeat.REDBEATC1,
      Redbeat.REDBEATM2
  )

  /**
   * Get all device specifications for Redfox devices.
   * Useful for redfox testing.
   */
  public fun getRedfoxDevices(): List<String> = listOf(
      Redfox.P11,
      Redfox.R10S,
      Redfox.VALUER_V8,
      Redfox.WIZPAD_VALUER_R10X,
      Redfox.WVV832
  )

  /**
   * Get all device specifications for REDLINE devices.
   * Useful for redline testing.
   */
  public fun getRedlineDevices(): List<String> = listOf(
      Redline.SPACE_A10,
      Redline.SPACE_A8,
      Redline.SPACE_M10,
      Redline.SPACE_M10PRO
  )

  /**
   * Get all device specifications for Redmi devices.
   * Useful for redmi testing.
   */
  public fun getRedmiDevices(): List<String> = listOf(
      Redmi.AETHER,
      Redmi.AIR,
      Redmi.ALIOTH,
      Redmi.AMETHYST,
      Redmi.ANGELICA,
      Redmi.ANGELICAN,
      Redmi.APOLLO,
      Redmi.ARES,
      Redmi.ATMOS,
      Redmi.ATOM,
      Redmi.BEGONIA,
      Redmi.BEGONIAIN,
      Redmi.BERYL,
      Redmi.BILOBA,
      Redmi.BLUE,
      Redmi.BOMB,
      Redmi.BREEZE,
      Redmi.CAMELLIA,
      Redmi.CAMELLIAN,
      Redmi.CANNON,
      Redmi.CANNONG,
      Redmi.CATTAIL,
      Redmi.CEZANNE,
      Redmi.CHOPIN,
      Redmi.CITRINE,
      Redmi.CLOUD,
      Redmi.COROT,
      Redmi.CURTANA,
      Redmi.DALI,
      Redmi.DANDELION,
      Redmi.DITING,
      Redmi.DIZI,
      Redmi.DUCHAMP,
      Redmi.EARTH,
      Redmi.EOS,
      Redmi.EVERGO,
      Redmi.EXCALIBUR,
      Redmi.FIRE,
      Redmi.FLAME,
      Redmi.FLARE,
      Redmi.FLEUR,
      Redmi.FOG,
      Redmi.GALAHAD,
      Redmi.GALE,
      Redmi.GARNET,
      Redmi.GAUGUINPRO,
      Redmi.GOLD,
      Redmi.GUST,
      Redmi.HAYDN,
      Redmi.HEAT,
      Redmi.ICE,
      Redmi.INGRES,
      Redmi.IRON,
      Redmi.JOYEUSE,
      Redmi.KLEIN,
      Redmi.KOTO,
      Redmi.LAKE,
      Redmi.LANCELOT,
      Redmi.LEMON,
      Redmi.LIGHT,
      Redmi.LIME,
      Redmi.LMI,
      Redmi.LMIPRO,
      Redmi.MALACHITE,
      Redmi.MALTOSE,
      Redmi.MANET,
      Redmi.MARBLE,
      Redmi.MATISSE,
      Redmi.MERLIN,
      Redmi.MERLINNFC,
      Redmi.MIEL,
      Redmi.MIRO,
      Redmi.MONDRIAN,
      Redmi.MOON,
      Redmi.MUNCH,
      Redmi.OBSIDIAN,
      Redmi.OCEAN,
      Redmi.OLIVEWOOD,
      Redmi.ONYX,
      Redmi.OPAL,
      Redmi.PEARL,
      Redmi.PERIDOT,
      Redmi.PEUX,
      Redmi.PHOENIX,
      Redmi.PICASSO,
      Redmi.PINE,
      Redmi.PISSARRO,
      Redmi.PISSARROPRO,
      Redmi.POMELO,
      Redmi.POND,
      Redmi.RAIN,
      Redmi.RANGO,
      Redmi.REDWOOD,
      Redmi.REMBRANDT,
      Redmi.RIVER,
      Redmi.ROCK,
      Redmi.RODIN,
      Redmi.ROSEMARY,
      Redmi.ROTHKO,
      Redmi.RUAN,
      Redmi.RUBENS,
      Redmi.RUBY,
      Redmi.RUBYPLUS,
      Redmi.RUBYPRO,
      Redmi.SAPPHIRE,
      Redmi.SAPPHIREN,
      Redmi.SEA,
      Redmi.SECRET,
      Redmi.SELENE,
      Redmi.SERENITY,
      Redmi.SNOW,
      Redmi.SOCRATES,
      Redmi.SPARK,
      Redmi.SPES,
      Redmi.SPESN,
      Redmi.SUNNY,
      Redmi.SUNSTONE,
      Redmi.SWEET,
      Redmi.SWEETIN,
      Redmi.TAIKO,
      Redmi.TANZANITE,
      Redmi.TAPAS,
      Redmi.TARZAN,
      Redmi.THUNDER,
      Redmi.TIDES,
      Redmi.TOPAZ,
      Redmi.VERMEER,
      Redmi.VEUX,
      Redmi.VIDA,
      Redmi.VIVA,
      Redmi.WARM,
      Redmi.WATER,
      Redmi.WIND,
      Redmi.XAGA,
      Redmi.XAGAIN,
      Redmi.XAGAPRO,
      Redmi.XIG02,
      Redmi.XIG03,
      Redmi.XIG05,
      Redmi.XUN,
      Redmi.YUNLUO,
      Redmi.ZIRCON,
      Redmi.ZORN
  )

  /**
   * Get all device specifications for RedMobile devices.
   * Useful for redmobile testing.
   */
  public fun getRedmobileDevices(): List<String> = listOf(
      Redmobile.VOLT_L
  )

  /**
   * Get all device specifications for REDTONE devices.
   * Useful for redtone testing.
   */
  public fun getRedtoneDevices(): List<String> = listOf(
      Redtone.RTSP_A124ML,
      Redtone.RTSP_A258HM,
      Redtone.RTSP_A64B
  )

  /**
   * Get all device specifications for redway devices.
   * Useful for redway testing.
   */
  public fun getRedwayDevices(): List<String> = listOf(
      Redway.REDWAY10,
      Redway.REDWAY10_LITE,
      Redway.REDWAY7_PRO
  )

  /**
   * Get all device specifications for reeder devices.
   * Useful for reeder testing.
   */
  public fun getReederDevices(): List<String> = listOf(
      Reeder.A8I_Q2,
      Reeder.BLUE_MAX_128GB_2022K1,
      Reeder.M10_BLUE_MAX,
      Reeder.M10_PRO_LTE,
      Reeder.M10S,
      Reeder.M10SPLUS,
      Reeder.M11_PRO_MAX,
      Reeder.M7GO_2019,
      Reeder.M7S,
      Reeder.M8_GO,
      Reeder.M8GO2020,
      Reeder.P10,
      Reeder.P10S,
      Reeder.P13,
      Reeder.P13_BLUE,
      Reeder.P13_BLUE_2021,
      Reeder.P13_BLUE_2022,
      Reeder.P13_BLUE_2022KK1,
      Reeder.P13_BLUE_MAKS,
      Reeder.P13_BLUE_MAX,
      Reeder.P13_BLUE_MAX_128_GB,
      Reeder.P13_BLUE_MAX_PL,
      Reeder.P13_BLUE_MAX_PRO,
      Reeder.P13_BLUE_MAX_PRO_2021,
      Reeder.P13_BLUE_MAX_PRO_256_GB,
      Reeder.P13_BLUE_MAXL_2021,
      Reeder.P13_BLUE_MAXL_2022,
      Reeder.P13_BLUE_PLUS,
      Reeder.P13_BLUE_PLUS_2022,
      Reeder.P13_BLUE_PRO_2022,
      Reeder.P13_BML,
      Reeder.P13_BML_32,
      Reeder.P13_MAX_BLUE,
      Reeder.REEDER_M10_PLUS,
      Reeder.REEDER_M7_GO,
      Reeder.REEDER_M7PLUS,
      Reeder.REEDER_M8_PLUS,
      Reeder.REEDER_M8S,
      Reeder.REEDER_T8,
      Reeder.S19_MAX,
      Reeder.S19_MAX_2_128GB,
      Reeder.S19_MAX_32GB,
      Reeder.S19_MAX_64GB,
      Reeder.S19_MAX_PRO,
      Reeder.S19_MAX_PRO_S,
      Reeder.S19_MAX_PRO_S_108_MP,
      Reeder.S19_MAX_PRO_S_ZOOM,
      Reeder.S19_MAXL_128GB,
      Reeder.S19MAXPROSEDGE,
      Reeder.S23_PRO_MAX,
      Reeder.S23_PRO_MAX_256GB,
      Reeder.S71,
      Reeder.S919
  )

  /**
   * Get all device specifications for Reekoo devices.
   * Useful for reekoo testing.
   */
  public fun getReekooDevices(): List<String> = listOf(
      Reekoo.ALLCALL_60
  )

  /**
   * Get all device specifications for Reeva devices.
   * Useful for reeva testing.
   */
  public fun getReevaDevices(): List<String> = listOf(
      Reeva.REEVA_PLUS
  )

  /**
   * Get all device specifications for Regal devices.
   * Useful for regal testing.
   */
  public fun getRegalDevices(): List<String> = listOf(
      Regal.SHANDAO
  )

  /**
   * Get all device specifications for REGZA devices.
   * Useful for regza testing.
   */
  public fun getRegzaDevices(): List<String> = listOf(
      Regza.HENGSHAN,
      Regza.YYT
  )

  /**
   * Get all device specifications for Reliance devices.
   * Useful for reliance testing.
   */
  public fun getRelianceDevices(): List<String> = listOf(
      Reliance.RC500L,
      Reliance.RC501L
  )

  /**
   * Get all device specifications for Relndoo devices.
   * Useful for relndoo testing.
   */
  public fun getRelndooDevices(): List<String> = listOf(
      Relndoo.P60_EEA,
      Relndoo.P60_ROW,
      Relndoo.P60_US,
      Relndoo.P80,
      Relndoo.P80_EU,
      Relndoo.P80_US,
      Relndoo.T10P,
      Relndoo.T10P_A,
      Relndoo.T10P_ROW,
      Relndoo.T618,
      Relndoo.T618_US,
      Relndoo.T618_WIFI,
      Relndoo.T618_WIFI_EEA,
      Relndoo.T88,
      Relndoo.TAB10_EU,
      Relndoo.TAB10_EUR,
      Relndoo.TB02,
      Relndoo.TB02_EUR,
      Relndoo.TB02_ROW
  )

  /**
   * Get all device specifications for Remdun devices.
   * Useful for remdun testing.
   */
  public fun getRemdunDevices(): List<String> = listOf(
      Remdun.RD115MQE,
      Remdun.RD11PT,
      Remdun.RD15QE,
      Remdun.RD16Q,
      Remdun.RD16QE,
      Remdun.RD195T,
      Remdun.RD1XT,
      Remdun.RD40T,
      Remdun.RD40TE,
      Remdun.RD50T,
      Remdun.RD50TE,
      Remdun.RD51QE,
      Remdun.RD52E,
      Remdun.RD60TE,
      Remdun.RD62E,
      Remdun.RD695TE,
      Remdun.RD86,
      Remdun.RD86E,
      Remdun.RD86QE
  )

  /**
   * Get all device specifications for renault devices.
   * Useful for renault testing.
   */
  public fun getRenaultDevices(): List<String> = listOf(
      Renault.AIVI2_FULL
  )

  /**
   * Get all device specifications for renault_trucks devices.
   * Useful for renault_trucks testing.
   */
  public fun getRenaultTrucksDevices(): List<String> = listOf(
      RenaultTrucks.AIVI2_R_FULL_DOM
  )

  /**
   * Get all device specifications for RENSO devices.
   * Useful for renso testing.
   */
  public fun getRensoDevices(): List<String> = listOf(
      Renso.NEP_N1
  )

  /**
   * Get all device specifications for rephone devices.
   * Useful for rephone testing.
   */
  public fun getRephoneDevices(): List<String> = listOf(
      Rephone.REPHONE
  )

  /**
   * Get all device specifications for Reveal16i devices.
   * Useful for reveal16i testing.
   */
  public fun getReveal16iDevices(): List<String> = listOf(
      Reveal16i.RK3399_REVEAL16I_BOX
  )

  /**
   * Get all device specifications for Revomovil devices.
   * Useful for revomovil testing.
   */
  public fun getRevomovilDevices(): List<String> = listOf(
      Revomovil.S6523_RU
  )

  /**
   * Get all device specifications for REVOX devices.
   * Useful for revox testing.
   */
  public fun getRevoxDevices(): List<String> = listOf(
      Revox.REVOX_RM_RX1_EU
  )

  /**
   * Get all device specifications for Revrica devices.
   * Useful for revrica testing.
   */
  public fun getRevricaDevices(): List<String> = listOf(
      Revrica.UKO108T
  )

  /**
   * Get all device specifications for REVVL devices.
   * Useful for revvl testing.
   */
  public fun getRevvlDevices(): List<String> = listOf(
      Revvl.REVVLTAB5G
  )

  /**
   * Get all device specifications for REYNA devices.
   * Useful for reyna testing.
   */
  public fun getReynaDevices(): List<String> = listOf(
      Reyna.MOUNTBAKER
  )

  /**
   * Get all device specifications for Rhino devices.
   * Useful for rhino testing.
   */
  public fun getRhinoDevices(): List<String> = listOf(
      Rhino.NOVAX,
      Rhino.PACE,
      Rhino.PORTAL,
      Rhino.RHINO_M10P,
      Rhino.RHINO_T8,
      Rhino.SCOUTX,
      Rhino.STRATOS
  )

  /**
   * Get all device specifications for Ricoh devices.
   * Useful for ricoh testing.
   */
  public fun getRicohDevices(): List<String> = listOf(
      Ricoh.AXX10
  )

  /**
   * Get all device specifications for RiksTV devices.
   * Useful for rikstv testing.
   */
  public fun getRikstvDevices(): List<String> = listOf(
      Rikstv.HP40A3
  )

  /**
   * Get all device specifications for Rindo devices.
   * Useful for rindo testing.
   */
  public fun getRindoDevices(): List<String> = listOf(
      Rindo.IKEBUKURO,
      Rindo.LASALLE,
      Rindo.LONGSHAN,
      Rindo.REDWOOD,
      Rindo.SAMSEONG
  )

  /**
   * Get all device specifications for RIO devices.
   * Useful for rio testing.
   */
  public fun getRioDevices(): List<String> = listOf(
      Rio.R7MAX,
      Rio.RIOPAD_7,
      Rio.RIOPAD_S10_PRO,
      Rio.RW8
  )

  /**
   * Get all device specifications for Riviera devices.
   * Useful for riviera testing.
   */
  public fun getRivieraDevices(): List<String> = listOf(
      Riviera.HAMAMATSUCHO,
      Riviera.IKEBUKURO,
      Riviera.SINDORIM,
      Riviera.SONGSHAN,
      Riviera.XIAOYUSHAN
  )

  /**
   * Get all device specifications for Rixun devices.
   * Useful for rixun testing.
   */
  public fun getRixunDevices(): List<String> = listOf(
      Rixun.T107
  )

  /**
   * Get all device specifications for Rizzen devices.
   * Useful for rizzen testing.
   */
  public fun getRizzenDevices(): List<String> = listOf(
      Rizzen.NOVATAB_R10,
      Rizzen.NOVATAB_R10S,
      Rizzen.S1,
      Rizzen.S1S,
      Rizzen.X1,
      Rizzen.X1X
  )

  /**
   * Get all device specifications for RLG devices.
   * Useful for rlg testing.
   */
  public fun getRlgDevices(): List<String> = listOf(
      Rlg.EAGLE_2024
  )

  /**
   * Get all device specifications for RoadQuest devices.
   * Useful for roadquest testing.
   */
  public fun getRoadquestDevices(): List<String> = listOf(
      Roadquest.RQ_G
  )

  /**
   * Get all device specifications for Rockcel devices.
   * Useful for rockcel testing.
   */
  public fun getRockcelDevices(): List<String> = listOf(
      Rockcel.QUARTZO_UP
  )

  /**
   * Get all device specifications for RockTek devices.
   * Useful for rocktek testing.
   */
  public fun getRocktekDevices(): List<String> = listOf(
      Rocktek.RTBOX
  )

  /**
   * Get all device specifications for Rokid devices.
   * Useful for rokid testing.
   */
  public fun getRokidDevices(): List<String> = listOf(
      Rokid.STATION,
      Rokid.STATION2
  )

  /**
   * Get all device specifications for ROKiT devices.
   * Useful for rokit testing.
   */
  public fun getRokitDevices(): List<String> = listOf(
      Rokit.CHINCHILLA,
      Rokit.DINGO,
      Rokit.EMU,
      Rokit.GECKO
  )

  /**
   * Get all device specifications for ROLLCALL devices.
   * Useful for rollcall testing.
   */
  public fun getRollcallDevices(): List<String> = listOf(
      Rollcall.DT
  )

  /**
   * Get all device specifications for Rombica devices.
   * Useful for rombica testing.
   */
  public fun getRombicaDevices(): List<String> = listOf(
      Rombica.MYPHONE_JET
  )

  /**
   * Get all device specifications for ROOMI devices.
   * Useful for roomi testing.
   */
  public fun getRoomiDevices(): List<String> = listOf(
      Roomi.HONGKONG
  )

  /**
   * Get all device specifications for ROSSO devices.
   * Useful for rosso testing.
   */
  public fun getRossoDevices(): List<String> = listOf(
      Rosso.STANFORD,
      Rosso.ZHONGSHAN
  )

  /**
   * Get all device specifications for ROVER devices.
   * Useful for rover testing.
   */
  public fun getRoverDevices(): List<String> = listOf(
      Rover.CHIPPY,
      Rover.R10_M,
      Rover.R8
  )

  /**
   * Get all device specifications for ROWA devices.
   * Useful for rowa testing.
   */
  public fun getRowaDevices(): List<String> = listOf(
      Rowa.R4
  )

  /**
   * Get all device specifications for ROYALRAHMANI devices.
   * Useful for royalrahmani testing.
   */
  public fun getRoyalrahmaniDevices(): List<String> = listOf(
      Royalrahmani.HONGKONG,
      Royalrahmani.STANFORD
  )

  /**
   * Get all device specifications for ROYQUEEN devices.
   * Useful for royqueen testing.
   */
  public fun getRoyqueenDevices(): List<String> = listOf(
      Royqueen.RQ_713S
  )

  /**
   * Get all device specifications for Ruggear devices.
   * Useful for ruggear testing.
   */
  public fun getRuggearDevices(): List<String> = listOf(
      Ruggear.PSM01E,
      Ruggear.RG540,
      Ruggear.RG650,
      Ruggear.RG655,
      Ruggear.RG720,
      Ruggear.RG725,
      Ruggear.RG730,
      Ruggear.RG750_EEA,
      Ruggear.RG750_ROW,
      Ruggear.RG850,
      Ruggear.RG880,
      Ruggear.RG910,
      Ruggear.RG930I,
      Ruggear.RG935
  )

  /**
   * Get all device specifications for RuggON devices.
   * Useful for ruggon testing.
   */
  public fun getRuggonDevices(): List<String> = listOf(
      Ruggon.PA501BG,
      Ruggon.PA501BWR
  )

  /**
   * Get all device specifications for RUGSTORM devices.
   * Useful for rugstorm testing.
   */
  public fun getRugstormDevices(): List<String> = listOf(
      Rugstorm.UA80
  )

  /**
   * Get all device specifications for RUIO devices.
   * Useful for ruio testing.
   */
  public fun getRuioDevices(): List<String> = listOf(
      Ruio.A870,
      Ruio.BLITZ,
      Ruio.M671M4,
      Ruio.M675M4,
      Ruio.RUIO_I7ULTRA,
      Ruio.RUIO_S5006,
      Ruio.RUIO_S518,
      Ruio.S5506,
      Ruio.S6501,
      Ruio.S6506,
      Ruio.S6518
  )

  /**
   * Get all device specifications for Russound devices.
   * Useful for russound testing.
   */
  public fun getRussoundDevices(): List<String> = listOf(
      Russound.XTS7
  )

  /**
   * Get all device specifications for Ruufuuxy devices.
   * Useful for ruufuuxy testing.
   */
  public fun getRuufuuxyDevices(): List<String> = listOf(
      Ruufuuxy.R16MAX
  )

  /**
   * Get all device specifications for RVP devices.
   * Useful for rvp testing.
   */
  public fun getRvpDevices(): List<String> = listOf(
      Rvp.RVPVK808
  )

  /**
   * Get all device specifications for RWC devices.
   * Useful for rwc testing.
   */
  public fun getRwcDevices(): List<String> = listOf(
      Rwc.HNPD01
  )

  /**
   * Get all device specifications for S devices.
   * Useful for s testing.
   */
  public fun getSDevices(): List<String> = listOf(
      S.T8100,
      S.T8116,
      S.T8133_EEA
  )

  /**
   * Get all device specifications for S_TELL devices.
   * Useful for s_tell testing.
   */
  public fun getSTellDevices(): List<String> = listOf(
      STell.M630,
      STell.P760
  )

  /**
   * Get all device specifications for SABA devices.
   * Useful for saba testing.
   */
  public fun getSabaDevices(): List<String> = listOf(
      Saba.LONGSHAN,
      Saba.REDWOOD
  )

  /**
   * Get all device specifications for SAELITE devices.
   * Useful for saelite testing.
   */
  public fun getSaeliteDevices(): List<String> = listOf(
      Saelite.MD1063B
  )

  /**
   * Get all device specifications for Safaricom devices.
   * Useful for safaricom testing.
   */
  public fun getSafaricomDevices(): List<String> = listOf(
      Safaricom.NEON_RAY_2,
      Safaricom.NEON_LITE,
      Safaricom.NEON_NOVA,
      Safaricom.NEON_RAY,
      Safaricom.NEON_RAY_2,
      Safaricom.NEON_RAY_PRO,
      Safaricom.NEON_SMARTA_2,
      Safaricom.NEON_STORM,
      Safaricom.NEON_ULTRA_2,
      Safaricom.SAFARICOM_ET_KIMEM,
      Safaricom.SAJIPRO
  )

  /**
   * Get all device specifications for SAGI devices.
   * Useful for sagi testing.
   */
  public fun getSagiDevices(): List<String> = listOf(
      Sagi.E5501
  )

  /**
   * Get all device specifications for SAIET devices.
   * Useful for saiet testing.
   */
  public fun getSaietDevices(): List<String> = listOf(
      Saiet.STS502,
      Saiet.STS550,
      Saiet.STS570,
      Saiet.STS571,
      Saiet.STS600,
      Saiet.STS601,
      Saiet.STS602
  )

  /**
   * Get all device specifications for SAMPO devices.
   * Useful for sampo testing.
   */
  public fun getSampoDevices(): List<String> = listOf(
      Sampo.R2,
      Sampo.R4,
      Sampo.R4_GTV,
      Sampo.VILEPARLE
  )

  /**
   * Get all device specifications for Samsonix devices.
   * Useful for samsonix testing.
   */
  public fun getSamsonixDevices(): List<String> = listOf(
      Samsonix.A1250
  )

  /**
   * Get all device specifications for samsung devices.
   * Useful for samsung testing.
   */
  public fun getSamsungDevices(): List<String> = listOf(
      Samsung.A01CORE,
      Samsung.A01Q,
      Samsung.A02,
      Samsung.A02Q,
      Samsung.A03,
      Samsung.A03S,
      Samsung.A04,
      Samsung.A04E,
      Samsung.A04S,
      Samsung.A05M,
      Samsung.A05S,
      Samsung.A06,
      Samsung.A06X,
      Samsung.A07,
      Samsung.A10,
      Samsung.A10E,
      Samsung.A10EKX,
      Samsung.A11Q,
      Samsung.A12,
      Samsung.A12S,
      Samsung.A12U,
      Samsung.A13,
      Samsung.A13VE,
      Samsung.A13X,
      Samsung.A14,
      Samsung.A14M,
      Samsung.A14X,
      Samsung.A14XM,
      Samsung.A15,
      Samsung.A15X,
      Samsung.A16,
      Samsung.A16X,
      Samsung.A16XM,
      Samsung.A20,
      Samsung.A20E,
      Samsung.A20P,
      Samsung.A20S,
      Samsung.A21S,
      Samsung.A22,
      Samsung.A22X,
      Samsung.A23,
      Samsung.A23EX,
      Samsung.A23XQ,
      Samsung.A24,
      Samsung.A25EX,
      Samsung.A25X,
      Samsung.A26X,
      Samsung.A26XS,
      Samsung.A2CORELTE,
      Samsung.A30,
      Samsung.A30C,
      Samsung.A30S,
      Samsung.A31,
      Samsung.A32,
      Samsung.A32X,
      Samsung.A33G,
      Samsung.A33X,
      Samsung.A34X,
      Samsung.A35X,
      Samsung.A36XQ,
      Samsung.A3CORE,
      Samsung.A3LTE,
      Samsung.A3LTEDD,
      Samsung.A3LTESLK,
      Samsung.A3LTEZH,
      Samsung.A3ULTE,
      Samsung.A3XELTE,
      Samsung.A3XELTEKX,
      Samsung.A3Y17LTE,
      Samsung.A40,
      Samsung.A41,
      Samsung.A42XQ,
      Samsung.A42XUQ,
      Samsung.A50,
      Samsung.A50S,
      Samsung.A51,
      Samsung.A51X,
      Samsung.A51XQ,
      Samsung.A52Q,
      Samsung.A52SXQ,
      Samsung.A52XQ,
      Samsung.A53G,
      Samsung.A54X,
      Samsung.A55X,
      Samsung.A56X,
      Samsung.A5LTE,
      Samsung.A5LTECHN,
      Samsung.A5LTEZH,
      Samsung.A5LTEZT,
      Samsung.A5ULTE,
      Samsung.A5ULTEBMC,
      Samsung.A5ULTEKTT,
      Samsung.A5ULTELGT,
      Samsung.A5ULTESKT,
      Samsung.A5XELTE,
      Samsung.A5XELTECMCC,
      Samsung.A5XELTEKTT,
      Samsung.A5XELTELGT,
      Samsung.A5XELTESKT,
      Samsung.A5XELTEXTC,
      Samsung.A5XLTECHN,
      Samsung.A5Y17LTE,
      Samsung.A5Y17LTECAN,
      Samsung.A5Y17LTEKTT,
      Samsung.A5Y17LTELGT,
      Samsung.A5Y17LTESKT,
      Samsung.A60Q,
      Samsung.A6ELTEAIO,
      Samsung.A6ELTEATT,
      Samsung.A6ELTEMTR,
      Samsung.A6ELTESPR,
      Samsung.A6ELTETMO,
      Samsung.A6ELTEUE,
      Samsung.A6LTE,
      Samsung.A6LTEKS,
      Samsung.A6PLTE,
      Samsung.A6PLTECHN,
      Samsung.A6PLTECMCC,
      Samsung.A6PLTEKTT,
      Samsung.A70Q,
      Samsung.A70S,
      Samsung.A71,
      Samsung.A71X,
      Samsung.A71XQ,
      Samsung.A72Q,
      Samsung.A73G,
      Samsung.A73XQ,
      Samsung.A7ALTE,
      Samsung.A7LTE,
      Samsung.A7LTECHN,
      Samsung.A7LTECTC,
      Samsung.A7LTEKTT,
      Samsung.A7LTELGT,
      Samsung.A7LTESKT,
      Samsung.A7XELTE,
      Samsung.A7XELTECMCC,
      Samsung.A7XELTEKTT,
      Samsung.A7XELTELGT,
      Samsung.A7XELTESKT,
      Samsung.A7XELTEXTC,
      Samsung.A7XLTECHN,
      Samsung.A7Y17LTE,
      Samsung.A7Y17LTESKT,
      Samsung.A7Y18LTE,
      Samsung.A7Y18LTEKS,
      Samsung.A7Y18VE,
      Samsung.A82XQ,
      Samsung.A8ELTE,
      Samsung.A8ELTESKT,
      Samsung.A8HPLTE,
      Samsung.A8LTECHN,
      Samsung.A8SQLTE,
      Samsung.A8SQLTECHN,
      Samsung.A8SQLTEKS,
      Samsung.A8XELTE,
      Samsung.A8XELTESKT,
      Samsung.A9XLTECHN,
      Samsung.A9XPROLTECHN,
      Samsung.A9XPROLTESEA,
      Samsung.A9Y18QLTE,
      Samsung.A9Y18QLTECHN,
      Samsung.A9Y18QLTEKX,
      Samsung.AFYONLTE,
      Samsung.AFYONLTECAN,
      Samsung.AFYONLTEMETROPCS,
      Samsung.AFYONLTETMO,
      Samsung.AMAZING3GCRI,
      Samsung.ARUBASLIM,
      Samsung.ARUBASLIMSS,
      Samsung.ASTARQLTE,
      Samsung.ASTARQLTECHN,
      Samsung.ASTARQLTECMCC,
      Samsung.ASTARQLTESKT,
      Samsung.B0S,
      Samsung.B2Q,
      Samsung.B5Q,
      Samsung.B6Q,
      Samsung.B7R,
      Samsung.B7S,
      Samsung.BAFFIN,
      Samsung.BAFFINLITE,
      Samsung.BAFFINLITEDTV,
      Samsung.BAFFINLTEKTT,
      Samsung.BAFFINSS,
      Samsung.BAFFINVESKT,
      Samsung.BEYOND0,
      Samsung.BEYOND0Q,
      Samsung.BEYOND1,
      Samsung.BEYOND1Q,
      Samsung.BEYOND2,
      Samsung.BEYOND2Q,
      Samsung.BEYONDX,
      Samsung.BEYONDXQ,
      Samsung.BLOOMQ,
      Samsung.BLOOMXQ,
      Samsung.C1KTT,
      Samsung.C1LGT,
      Samsung.C1SKT,
      Samsung.C5LTECHN,
      Samsung.C5PLTECHN,
      Samsung.C5PROLTECHN,
      Samsung.C7LTECHN,
      Samsung.C7PROLTE,
      Samsung.C7PROLTECHN,
      Samsung.C9LTE,
      Samsung.C9LTECHN,
      Samsung.CANE3GSKT,
      Samsung.CHAGALLHLTEKTT,
      Samsung.CHAGALLHLTELGT,
      Samsung.CHAGALLHLTESKT,
      Samsung.CHAGALLLTE,
      Samsung.CHAGALLLTEATT,
      Samsung.CHAGALLLTECAN,
      Samsung.CHAGALLLTESPR,
      Samsung.CHAGALLLTETMO,
      Samsung.CHAGALLLTEUSC,
      Samsung.CHAGALLWIFI,
      Samsung.CHAGALLWIFIKX,
      Samsung.CJ680CL,
      Samsung.CODINAMETROPCS,
      Samsung.COMANCHEATT,
      Samsung.COMANCHECAN,
      Samsung.CORE33G,
      Samsung.COREPRIMELTE,
      Samsung.COREPRIMELTEAIO,
      Samsung.COREPRIMELTEDTV,
      Samsung.COREPRIMELTELRA,
      Samsung.COREPRIMELTESPR,
      Samsung.COREPRIMELTETFNVZW,
      Samsung.COREPRIMEVE3G,
      Samsung.COREPRIMEVELTE,
      Samsung.CORSICA,
      Samsung.CORSICASS,
      Samsung.CORSICAVE3G,
      Samsung.CORSICAVEDS3GVJ,
      Samsung.CPRIMELTEMTR,
      Samsung.CPRIMELTETMO,
      Samsung.CRATER,
      Samsung.CRATERQ3G,
      Samsung.CROWNLTE,
      Samsung.CROWNLTEKS,
      Samsung.CROWNQLTECHN,
      Samsung.CROWNQLTECS,
      Samsung.CROWNQLTESQ,
      Samsung.CROWNQLTEUE,
      Samsung.CRUISERLTEATT,
      Samsung.CRUISERLTESQ,
      Samsung.CS02,
      Samsung.CS023G,
      Samsung.CS02VE3G,
      Samsung.CS02VE3GDTV,
      Samsung.CS02VE3GSS,
      Samsung.D1,
      Samsung.D1Q,
      Samsung.D1X,
      Samsung.D2ATT,
      Samsung.D2CAN,
      Samsung.D2DCM,
      Samsung.D2LTEREFRESHSPR,
      Samsung.D2LTETMO,
      Samsung.D2Q,
      Samsung.D2S,
      Samsung.D2SPR,
      Samsung.D2TFNVZW,
      Samsung.D2TMO,
      Samsung.D2USC,
      Samsung.D2VMU,
      Samsung.D2X,
      Samsung.D2XQ,
      Samsung.D2XQ2,
      Samsung.DEGAS2WIFI,
      Samsung.DEGAS3G,
      Samsung.DEGASLTE,
      Samsung.DEGASLTESPR,
      Samsung.DEGASVELTE,
      Samsung.DEGASWIFI,
      Samsung.DEGASWIFIDTV,
      Samsung.DEGASWIFIOPENBNN,
      Samsung.DEGASWIFIUE,
      Samsung.DEGASY18WIFI,
      Samsung.DEGASY18WIFICHN,
      Samsung.DELOS3GCHN,
      Samsung.DELOS3GEUR,
      Samsung.DELOS3GSS,
      Samsung.DELOSLTELGT,
      Samsung.DELOSLTESKT,
      Samsung.DM1Q,
      Samsung.DM2Q,
      Samsung.DREAM2LTEKS,
      Samsung.DREAM2QLTECAN,
      Samsung.DREAM2QLTECHN,
      Samsung.DREAM2QLTEUE,
      Samsung.DREAMLITEQLTECHN,
      Samsung.DREAMLTEKS,
      Samsung.DREAMQLTECAN,
      Samsung.DREAMQLTECHN,
      Samsung.DREAMQLTECMCC,
      Samsung.DREAMQLTEUE,
      Samsung.E1Q,
      Samsung.E1S,
      Samsung.E2Q,
      Samsung.E2S,
      Samsung.E3Q,
      Samsung.E4Q,
      Samsung.E53G,
      Samsung.E5LTE,
      Samsung.E5LTETFNVZW,
      Samsung.E5LTETW,
      Samsung.E73G,
      Samsung.E7LTE,
      Samsung.E7LTEHKTW,
      Samsung.ELITE3GKX,
      Samsung.ELITELTECHN,
      Samsung.ELITELTEKX,
      Samsung.ELITEXLTE,
      Samsung.ESPRESSO10ATT,
      Samsung.ESPRESSO10RF,
      Samsung.ESPRESSO10SPR,
      Samsung.ESPRESSO10TMO,
      Samsung.ESPRESSO10WIFI,
      Samsung.ESPRESSORF,
      Samsung.ESPRESSOWIFI,
      Samsung.EXPRESSLTE,
      Samsung.F12,
      Samsung.F22,
      Samsung.F2Q,
      Samsung.F41,
      Samsung.F42X,
      Samsung.F52X,
      Samsung.F62,
      Samsung.FORTUNA3G,
      Samsung.FORTUNA3GDTV,
      Samsung.FORTUNALTE,
      Samsung.FORTUNALTECTC,
      Samsung.FORTUNALTEZH,
      Samsung.FORTUNALTEZT,
      Samsung.FORTUNAVE3G,
      Samsung.FRESCOLTEKTT,
      Samsung.FRESCOLTELGT,
      Samsung.FRESCOLTESKT,
      Samsung.FRESH6BL,
      Samsung.FRESH6BS,
      Samsung.FRESH6UL,
      Samsung.FRESH6US,
      Samsung.FRESH7BL,
      Samsung.FRESH7BS,
      Samsung.FRESH7UL,
      Samsung.FRESH7US,
      Samsung.FRESH8BL,
      Samsung.FRESH8BS,
      Samsung.FRESH8UL,
      Samsung.FRESH8US,
      Samsung.FRESHBL,
      Samsung.FRESHBS,
      Samsung.FRESHUL,
      Samsung.FRESHUS,
      Samsung.G0Q,
      Samsung.G0S,
      Samsung.GARDALTEMETROPCS,
      Samsung.GARDALTETMO,
      Samsung.GD1,
      Samsung.GD1WIFI,
      Samsung.GOLDEN,
      Samsung.GOLDENLTEATT,
      Samsung.GOLDENLTEBMC,
      Samsung.GOLDENVE3G,
      Samsung.GOLDENVESS3G,
      Samsung.GOYA3G,
      Samsung.GOYAIRIS3G,
      Samsung.GOYAVE3G,
      Samsung.GOYAVE3G5M,
      Samsung.GOYAVE3GSEA,
      Samsung.GOYAVEWIFI,
      Samsung.GOYAVEWIFIXTC,
      Samsung.GOYAWIFI,
      Samsung.GPRIMELTEACG,
      Samsung.GPRIMELTECAN,
      Samsung.GPRIMELTEMTR,
      Samsung.GPRIMELTESPR,
      Samsung.GPRIMELTETFNVZW,
      Samsung.GPRIMELTETMO,
      Samsung.GPRIMELTEUSC,
      Samsung.GRACELTE,
      Samsung.GRACERLTE,
      Samsung.GRACERLTEKTT,
      Samsung.GRACERLTELGT,
      Samsung.GRACERLTESKT,
      Samsung.GRANDMAX3G,
      Samsung.GRANDMAXLTECHN,
      Samsung.GRANDMAXLTEKX,
      Samsung.GRANDNEOVE3G,
      Samsung.GRANDPPLTE,
      Samsung.GRANDPPLTEDTV,
      Samsung.GRANDPRIMELTE,
      Samsung.GRANDPRIMELTEAIO,
      Samsung.GRANDPRIMELTEATT,
      Samsung.GRANDPRIMEVE3G,
      Samsung.GRANDPRIMEVE3GDTV,
      Samsung.GRANDPRIMEVELTE,
      Samsung.GRANDPRIMEVELTELTN,
      Samsung.GRANDPRIMEVELTEZT,
      Samsung.GREATLTEKS,
      Samsung.GREATQLTECHN,
      Samsung.GREATQLTECMCC,
      Samsung.GREATQLTECS,
      Samsung.GREATQLTEUE,
      Samsung.GT_I8160,
      Samsung.GT_I8530,
      Samsung.GT_I9070,
      Samsung.GT_I9100,
      Samsung.GT_I9100G,
      Samsung.GT_I9100P,
      Samsung.GT_N7000,
      Samsung.GT_P1000,
      Samsung.GT_P6200,
      Samsung.GT_P6200L,
      Samsung.GT_P6210,
      Samsung.GT_P6800,
      Samsung.GT510LTE,
      Samsung.GT510LTECHN,
      Samsung.GT510WIFI,
      Samsung.GT58LTE,
      Samsung.GT58LTEBMC,
      Samsung.GT58LTECHN,
      Samsung.GT58LTETMO,
      Samsung.GT58WIFI,
      Samsung.GT5NOTE10LTE,
      Samsung.GT5NOTE10LTECHN,
      Samsung.GT5NOTE10LTEHKTW,
      Samsung.GT5NOTE10LTEKTT,
      Samsung.GT5NOTE10LTELGT,
      Samsung.GT5NOTE10LTESKT,
      Samsung.GT5NOTE10WIFI,
      Samsung.GT5NOTE8LTE,
      Samsung.GT5NOTE8LTECHN,
      Samsung.GT5NOTE8WIFI,
      Samsung.GTA2SLTE,
      Samsung.GTA2SLTECHN,
      Samsung.GTA2SLTEKTT,
      Samsung.GTA2SLTELGT,
      Samsung.GTA2SLTESKT,
      Samsung.GTA2SWIFI,
      Samsung.GTA2SWIFICHN,
      Samsung.GTA2XLLTE,
      Samsung.GTA2XLLTECHN,
      Samsung.GTA2XLLTECS,
      Samsung.GTA2XLLTEKX,
      Samsung.GTA2XLLTESPR,
      Samsung.GTA2XLWIFI,
      Samsung.GTA2XLWIFICHN,
      Samsung.GTA3XL,
      Samsung.GTA3XLWIFI,
      Samsung.GTA4L,
      Samsung.GTA4LVE,
      Samsung.GTA4LVEWIFI,
      Samsung.GTA4LWIFI,
      Samsung.GTA4S,
      Samsung.GTA4XL,
      Samsung.GTA4XLS,
      Samsung.GTA4XLSWIFI,
      Samsung.GTA4XLVE,
      Samsung.GTA4XLVEWIFI,
      Samsung.GTA4XLWIFI,
      Samsung.GTA7LITE,
      Samsung.GTA7LITEWIFI,
      Samsung.GTA8,
      Samsung.GTA8WIFI,
      Samsung.GTA9,
      Samsung.GTA9P,
      Samsung.GTA9PWIFI,
      Samsung.GTA9WIFI,
      Samsung.GTACT4PRO,
      Samsung.GTACT5PRO,
      Samsung.GTACT5PROWIFI,
      Samsung.GTACTIVE2LTE,
      Samsung.GTACTIVE2LTEKX,
      Samsung.GTACTIVE2LTEUE,
      Samsung.GTACTIVE2WIFI,
      Samsung.GTACTIVE3,
      Samsung.GTACTIVE5,
      Samsung.GTACTIVE5WIFI,
      Samsung.GTACTIVEXL,
      Samsung.GTACTIVEXLWIFI,
      Samsung.GTANOTEXLLTE,
      Samsung.GTANOTEXLLTEKX,
      Samsung.GTANOTEXLWIFIKX,
      Samsung.GTASLITELTEATT,
      Samsung.GTASLITELTECS,
      Samsung.GTASLITELTESPR,
      Samsung.GTASLITELTETMO,
      Samsung.GTASLITELTEUSC,
      Samsung.GTAXLADWIFIKX,
      Samsung.GTAXLLTE,
      Samsung.GTAXLLTECHN,
      Samsung.GTAXLLTEKX,
      Samsung.GTAXLQLTESPR,
      Samsung.GTAXLWIFI,
      Samsung.GTEL3G,
      Samsung.GTELWIFI,
      Samsung.GTELWIFIUE,
      Samsung.GTESLTEATT,
      Samsung.GTESLTEBMC,
      Samsung.GTESLTEKTT,
      Samsung.GTESLTELGT,
      Samsung.GTESLTESKT,
      Samsung.GTESLTETMO,
      Samsung.GTESLTETW,
      Samsung.GTESQLTESPR,
      Samsung.GTESQLTEUSC,
      Samsung.GTEXSLTE,
      Samsung.GTEXSLTESWA,
      Samsung.GTEXSWIFI,
      Samsung.GTO,
      Samsung.GTOWIFI,
      Samsung.GTS10FE,
      Samsung.GTS10FEP,
      Samsung.GTS10FEPWIFI,
      Samsung.GTS10FEWIFI,
      Samsung.GTS10P,
      Samsung.GTS10PWIFI,
      Samsung.GTS10U,
      Samsung.GTS10UWIFI,
      Samsung.GTS210LTE,
      Samsung.GTS210LTEATT,
      Samsung.GTS210LTECAN,
      Samsung.GTS210LTEKX,
      Samsung.GTS210LTESPR,
      Samsung.GTS210LTETMO,
      Samsung.GTS210LTEUSC,
      Samsung.GTS210VELTE,
      Samsung.GTS210VELTEATT,
      Samsung.GTS210VELTECAN,
      Samsung.GTS210VELTECHN,
      Samsung.GTS210VELTETMO,
      Samsung.GTS210VEWIFI,
      Samsung.GTS210WIFI,
      Samsung.GTS28LTE,
      Samsung.GTS28LTECHN,
      Samsung.GTS28LTEKX,
      Samsung.GTS28VELTE,
      Samsung.GTS28VELTECHN,
      Samsung.GTS28VEWIFI,
      Samsung.GTS28WIFI,
      Samsung.GTS3LLTE,
      Samsung.GTS3LLTEKX,
      Samsung.GTS3LLTEUSC,
      Samsung.GTS3LWIFI,
      Samsung.GTS3LWIFICHN,
      Samsung.GTS4LLTE,
      Samsung.GTS4LLTEATT,
      Samsung.GTS4LLTECHN,
      Samsung.GTS4LLTEKX,
      Samsung.GTS4LLTESPR,
      Samsung.GTS4LLTETMO,
      Samsung.GTS4LLTEUSC,
      Samsung.GTS4LV,
      Samsung.GTS4LVWIFI,
      Samsung.GTS4LVWIFICHN,
      Samsung.GTS4LWIFI,
      Samsung.GTS4LWIFICHN,
      Samsung.GTS6L,
      Samsung.GTS6LWIFI,
      Samsung.GTS6X,
      Samsung.GTS7FEWIFI,
      Samsung.GTS7L,
      Samsung.GTS7LWIFI,
      Samsung.GTS7XL,
      Samsung.GTS7XLLITE,
      Samsung.GTS7XLLITEWIFI,
      Samsung.GTS7XLWIFI,
      Samsung.GTS8,
      Samsung.GTS8P,
      Samsung.GTS8PWIFI,
      Samsung.GTS8U,
      Samsung.GTS8UWIFI,
      Samsung.GTS8WIFI,
      Samsung.GTS9,
      Samsung.GTS9FE,
      Samsung.GTS9FEP,
      Samsung.GTS9FEPWIFI,
      Samsung.GTS9FEWIFI,
      Samsung.GTS9P,
      Samsung.GTS9PWIFI,
      Samsung.GTS9U,
      Samsung.GTS9UWIFI,
      Samsung.GTS9WIFI,
      Samsung.GVIEW2LTEATT,
      Samsung.GVLTE,
      Samsung.GVLTEATT,
      Samsung.GVLTEKTT,
      Samsung.GVLTELGT,
      Samsung.GVLTEXSP,
      Samsung.GVWIFIJPN,
      Samsung.GVWIFIUE,
      Samsung.HA3G,
      Samsung.HAECHIY19,
      Samsung.HAECHIY19LTEATT,
      Samsung.HEARTBL,
      Samsung.HEARTBS,
      Samsung.HEARTUL,
      Samsung.HEARTUS,
      Samsung.HEAT3GTFNVZW,
      Samsung.HEATLTE,
      Samsung.HEATNFC3G,
      Samsung.HEATQLTE,
      Samsung.HENDRIX,
      Samsung.HERO2LTE,
      Samsung.HERO2LTEBMC,
      Samsung.HERO2LTEKTT,
      Samsung.HERO2LTELGT,
      Samsung.HERO2LTESKT,
      Samsung.HERO2QLTEATT,
      Samsung.HERO2QLTECCTVZW,
      Samsung.HERO2QLTECHN,
      Samsung.HERO2QLTESPR,
      Samsung.HERO2QLTETMO,
      Samsung.HERO2QLTEUE,
      Samsung.HERO2QLTEUSC,
      Samsung.HEROLTE,
      Samsung.HEROLTEBMC,
      Samsung.HEROLTEKTT,
      Samsung.HEROLTELGT,
      Samsung.HEROLTESKT,
      Samsung.HEROQLTEACG,
      Samsung.HEROQLTEAIO,
      Samsung.HEROQLTEATT,
      Samsung.HEROQLTECCTVZW,
      Samsung.HEROQLTECHN,
      Samsung.HEROQLTELRA,
      Samsung.HEROQLTEMTR,
      Samsung.HEROQLTESPR,
      Samsung.HEROQLTETFNVZW,
      Samsung.HEROQLTETMO,
      Samsung.HEROQLTEUE,
      Samsung.HEROQLTEUSC,
      Samsung.HIGGS2G,
      Samsung.HL3G,
      Samsung.HL3GDS,
      Samsung.HLLTE,
      Samsung.HLTE,
      Samsung.HLTEATT,
      Samsung.HLTECAN,
      Samsung.HLTEJS01TW,
      Samsung.HLTEKTT,
      Samsung.HLTELGT,
      Samsung.HLTESKT,
      Samsung.HLTESPR,
      Samsung.HLTETMO,
      Samsung.HLTEUSC,
      Samsung.HTDLTE,
      Samsung.J13G,
      Samsung.J1ACELTE,
      Samsung.J1ACELTELTN,
      Samsung.J1ACEVELTE,
      Samsung.J1LTE,
      Samsung.J1MINI3G,
      Samsung.J1MINI3GDX,
      Samsung.J1MINI3GXW,
      Samsung.J1MINILTE,
      Samsung.J1MINIVE3G,
      Samsung.J1MINIVE3GXTC,
      Samsung.J1MINIVELTE,
      Samsung.J1NLTE,
      Samsung.J1POP3G,
      Samsung.J1X3G,
      Samsung.J1XLTE,
      Samsung.J1XLTEAIO,
      Samsung.J1XLTEATT,
      Samsung.J1XLTECAN,
      Samsung.J1XQLTETFNVZW,
      Samsung.J23G,
      Samsung.J2CORELTE,
      Samsung.J2COREPLTEAIO,
      Samsung.J2COREPLTEATT,
      Samsung.J2COREPLTEMTR,
      Samsung.J2COREPLTETFNTMO,
      Samsung.J2COREY20LTE,
      Samsung.J2LTE,
      Samsung.J2LTEDTV,
      Samsung.J2XLTE,
      Samsung.J2XLTEINS,
      Samsung.J2Y18LTE,
      Samsung.J3LTECTC,
      Samsung.J3LTEKX,
      Samsung.J3LTESPR,
      Samsung.J3LTETFNVZW,
      Samsung.J3LTETW,
      Samsung.J3LTEUSC,
      Samsung.J3LTEXSA,
      Samsung.J3POPELTEAIO,
      Samsung.J3POPELTEATT,
      Samsung.J3POPELTECAN,
      Samsung.J3POPELTEMTR,
      Samsung.J3POPELTETFNTMO,
      Samsung.J3POPELTETMO,
      Samsung.J3POPELTEUE,
      Samsung.J3POPLTEACG,
      Samsung.J3POPLTELRA,
      Samsung.J3POPLTESPR,
      Samsung.J3POPLTETFNVZW,
      Samsung.J3POPLTEUSC,
      Samsung.J3TOPELTEACG,
      Samsung.J3TOPELTESPR,
      Samsung.J3TOPELTETFNVZW,
      Samsung.J3TOPELTEUSC,
      Samsung.J3TOPLTEAIO,
      Samsung.J3TOPLTEATT,
      Samsung.J3TOPLTECS,
      Samsung.J3TOPLTETFNTMO,
      Samsung.J3TOPLTETMO,
      Samsung.J3TOPLTEUE,
      Samsung.J3X3G,
      Samsung.J3XLTE,
      Samsung.J3XLTEAIO,
      Samsung.J3XLTEATT,
      Samsung.J3XLTEBMC,
      Samsung.J3XNLTE,
      Samsung.J3XPRO6MLTECHN,
      Samsung.J3XPROLTECHN,
      Samsung.J3XPROLTECTC,
      Samsung.J3Y17LTE,
      Samsung.J3Y17LTEKX,
      Samsung.J3Y17LTELGT,
      Samsung.J3Y17QLTECMCC,
      Samsung.J4CORELTE,
      Samsung.J4LTE,
      Samsung.J4PRIMELTE,
      Samsung.J4PRIMELTEKX,
      Samsung.J53G,
      Samsung.J5LTE,
      Samsung.J5LTECHN,
      Samsung.J5LTEKX,
      Samsung.J5NLTE,
      Samsung.J5X3G,
      Samsung.J5XLTECMCC,
      Samsung.J5XNLTE,
      Samsung.J5XNLTEKTT,
      Samsung.J5XNLTELGT,
      Samsung.J5XNLTESKT,
      Samsung.J5Y17LTE,
      Samsung.J5Y17LTEDX,
      Samsung.J5Y17LTEKTT,
      Samsung.J5Y17LTELGT,
      Samsung.J5Y17LTESKT,
      Samsung.J5Y17LTEXTC,
      Samsung.J5YLTE,
      Samsung.J6LTE,
      Samsung.J6LTEKX,
      Samsung.J6LTELGT,
      Samsung.J6PRIMELTE,
      Samsung.J75LTEKTT,
      Samsung.J7DUOLTE,
      Samsung.J7E3G,
      Samsung.J7ELTE,
      Samsung.J7ELTEMTR,
      Samsung.J7ELTETMO,
      Samsung.J7LTECHN,
      Samsung.J7LTESPR,
      Samsung.J7MAXLTE,
      Samsung.J7POPELTEAIO,
      Samsung.J7POPELTEATT,
      Samsung.J7POPELTEMTR,
      Samsung.J7POPELTESKT,
      Samsung.J7POPELTETFNTMO,
      Samsung.J7POPELTETMO,
      Samsung.J7POPELTEUE,
      Samsung.J7POPLTESPR,
      Samsung.J7POPLTEUSC,
      Samsung.J7POPQLTETFNVZW,
      Samsung.J7TOPELTESPR,
      Samsung.J7TOPELTETFNVZW,
      Samsung.J7TOPELTEUSC,
      Samsung.J7TOPLTEATT,
      Samsung.J7TOPLTEMTR,
      Samsung.J7TOPLTESKT,
      Samsung.J7TOPLTETFNTMO,
      Samsung.J7TOPLTETMO,
      Samsung.J7TOPLTEUE,
      Samsung.J7VELTE,
      Samsung.J7XELTE,
      Samsung.J7XELTECMCC,
      Samsung.J7XELTEKTT,
      Samsung.J7XLTE,
      Samsung.J7XLTECTC,
      Samsung.J7Y17LTE,
      Samsung.J7Y17LTEKTT,
      Samsung.J8Y18LTE,
      Samsung.JA3G,
      Samsung.JA3GCHNDUOS,
      Samsung.JA3GDUOSCTC,
      Samsung.JACKPOT2LTE,
      Samsung.JACKPOTLTE,
      Samsung.JACKPOTLTECAN,
      Samsung.JACKPOTLTEKS,
      Samsung.JACTIVELTE,
      Samsung.JACTIVELTEATT,
      Samsung.JACTIVELTESKT,
      Samsung.JADELTE,
      Samsung.JADELTECHN,
      Samsung.JADELTECMCC,
      Samsung.JALTEKTT,
      Samsung.JALTELGT,
      Samsung.JALTESKT,
      Samsung.JFLTE,
      Samsung.JFLTEAIO,
      Samsung.JFLTEATT,
      Samsung.JFLTECAN,
      Samsung.JFLTECRI,
      Samsung.JFLTEMETROPCS,
      Samsung.JFLTEREFRESHSPR,
      Samsung.JFLTESPR,
      Samsung.JFLTETFNATT,
      Samsung.JFLTETMO,
      Samsung.JFLTEUSC,
      Samsung.JFTDD,
      Samsung.JFVELTE,
      Samsung.JJ680CM,
      Samsung.JSGLTE,
      Samsung.K3G,
      Samsung.KANAS,
      Samsung.KANAS3GNFC,
      Samsung.KCCAT6,
      Samsung.KELLYLTECHN,
      Samsung.KLEOSLTE,
      Samsung.KLIMTLTE,
      Samsung.KLIMTLTEATT,
      Samsung.KLIMTLTECAN,
      Samsung.KLIMTWIFI,
      Samsung.KLIMTWIFIKX,
      Samsung.KLTE,
      Samsung.KLTEACG,
      Samsung.KLTEACTIVE,
      Samsung.KLTEAIO,
      Samsung.KLTEATT,
      Samsung.KLTEATTACTIVE,
      Samsung.KLTECAN,
      Samsung.KLTECANACTIVE,
      Samsung.KLTEDUOSZN,
      Samsung.KLTEKTT,
      Samsung.KLTELGT,
      Samsung.KLTELRA,
      Samsung.KLTEMETROPCS,
      Samsung.KLTESKT,
      Samsung.KLTESPR,
      Samsung.KLTESPRSPORTS,
      Samsung.KLTETFNVZW,
      Samsung.KLTETMO,
      Samsung.KLTEUSC,
      Samsung.KMINI3G,
      Samsung.KMINILTE,
      Samsung.KMINILTEATT,
      Samsung.KMINILTEUSC,
      Samsung.KONA3G,
      Samsung.KONALTE,
      Samsung.KONALTEATT,
      Samsung.KONALTECAN,
      Samsung.KONAWIFI,
      Samsung.KONAWIFIANY,
      Samsung.KS01LTE,
      Samsung.KS01LTEKTT,
      Samsung.KS01LTELGT,
      Samsung.KS01LTESKT,
      Samsung.KS02LTE,
      Samsung.KYLEPLUSCHN,
      Samsung.KYLEPRO,
      Samsung.KYLEPRODS,
      Samsung.KYLEVE,
      Samsung.KYLEVE3GCMCC,
      Samsung.KYLEVESS,
      Samsung.LENTISLTEKTT,
      Samsung.LENTISLTELGT,
      Samsung.LENTISLTESKT,
      Samsung.LOGAN,
      Samsung.LOGAN2G,
      Samsung.LOGANDS,
      Samsung.LOGANDSDTV,
      Samsung.LOGANRELTE,
      Samsung.LT013G,
      Samsung.LT01LTE,
      Samsung.LT01WIFI,
      Samsung.LT023G,
      Samsung.LT023GDTV,
      Samsung.LT02KIDSWIFI,
      Samsung.LT02LTE,
      Samsung.LT02LTEATT,
      Samsung.LT02LTESPR,
      Samsung.LT02LTETMO,
      Samsung.LT02WIFI,
      Samsung.LT02WIFILGT,
      Samsung.LT033G,
      Samsung.LT03LTE,
      Samsung.LT03LTEKTT,
      Samsung.LT03LTELGT,
      Samsung.LT03LTESKT,
      Samsung.LT03LTETMO,
      Samsung.LT03WIFI,
      Samsung.LT03WIFIKX,
      Samsung.LT03WIFIUE,
      Samsung.LUCKY7BS,
      Samsung.LUCKY7US,
      Samsung.M0,
      Samsung.M01Q,
      Samsung.M04,
      Samsung.M0SKT,
      Samsung.M10LTE,
      Samsung.M10S,
      Samsung.M11Q,
      Samsung.M12,
      Samsung.M13,
      Samsung.M14X,
      Samsung.M15X,
      Samsung.M16X,
      Samsung.M16XM,
      Samsung.M20,
      Samsung.M20LTE,
      Samsung.M21,
      Samsung.M22,
      Samsung.M23XQ,
      Samsung.M2A3G,
      Samsung.M2ALTE,
      Samsung.M2ALTELGT,
      Samsung.M3,
      Samsung.M30LTE,
      Samsung.M30S,
      Samsung.M31,
      Samsung.M31S,
      Samsung.M32,
      Samsung.M33X,
      Samsung.M34X,
      Samsung.M35X,
      Samsung.M36X,
      Samsung.M40,
      Samsung.M44X,
      Samsung.M51,
      Samsung.M52XQ,
      Samsung.M53X,
      Samsung.M54X,
      Samsung.M55XQ,
      Samsung.M56X,
      Samsung.M62,
      Samsung.MAGURO,
      Samsung.MARINELTEATT,
      Samsung.MATISSE10WIFIKX,
      Samsung.MATISSE3G,
      Samsung.MATISSELTE,
      Samsung.MATISSELTEATT,
      Samsung.MATISSELTEUSC,
      Samsung.MATISSEVEWIFI,
      Samsung.MATISSEWIFI,
      Samsung.MATISSEWIFIGOOGLE,
      Samsung.MATISSEWIFIKX,
      Samsung.MATISSEWIFIOPENBNN,
      Samsung.MATISSEWIFIUE,
      Samsung.MEGA2LTE,
      Samsung.MEGA2LTEATT,
      Samsung.MELIUS3G,
      Samsung.MELIUSLTE,
      Samsung.MELIUSLTEATT,
      Samsung.MELIUSLTECAN,
      Samsung.MELIUSLTEMETROPCS,
      Samsung.MELIUSLTESKT,
      Samsung.MILLET3G,
      Samsung.MILLETLTE,
      Samsung.MILLETLTEATT,
      Samsung.MILLETLTEKTT,
      Samsung.MILLETLTELGT,
      Samsung.MILLETLTETMO,
      Samsung.MILLETWIFI,
      Samsung.MILLETWIFIKX,
      Samsung.MILLETWIFIUE,
      Samsung.MINT,
      Samsung.MINTSS,
      Samsung.MONDRIANLTE,
      Samsung.MONDRIANWIFI,
      Samsung.MONDRIANWIFIKX,
      Samsung.MONDRIANWIFIUE,
      Samsung.MPROJECT3G,
      Samsung.MPROJECTQLTE,
      Samsung.MS013G,
      Samsung.MS013GDTV,
      Samsung.MS013GSS,
      Samsung.MS01LTE,
      Samsung.MS01LTEKTT,
      Samsung.MS01LTELGT,
      Samsung.MS01LTESKT,
      Samsung.NEVIS,
      Samsung.NEVISDS,
      Samsung.NEVISNVESS,
      Samsung.NEVISP,
      Samsung.NEVISVESS,
      Samsung.NEVISW,
      Samsung.NOBLELTE,
      Samsung.NOBLELTEACG,
      Samsung.NOBLELTEATT,
      Samsung.NOBLELTEBMC,
      Samsung.NOBLELTECHN,
      Samsung.NOBLELTEHK,
      Samsung.NOBLELTEKTT,
      Samsung.NOBLELTELGT,
      Samsung.NOBLELTELRA,
      Samsung.NOBLELTESKT,
      Samsung.NOBLELTESPR,
      Samsung.NOBLELTETMO,
      Samsung.NOBLELTEUSC,
      Samsung.NOVEL3GSKT,
      Samsung.NOVELLTEKTT,
      Samsung.NOVELLTEKX,
      Samsung.NOVELLTELGT,
      Samsung.NOVELLTESKT,
      Samsung.O1Q,
      Samsung.O5LTE,
      Samsung.O5LTECHN,
      Samsung.O5PROLTE,
      Samsung.O7LTE,
      Samsung.O7LTECHN,
      Samsung.O7PROLTE,
      Samsung.ON5LTEMTR,
      Samsung.ON5LTETFNTMO,
      Samsung.ON5LTETMO,
      Samsung.ON5XELTE,
      Samsung.ON5XFLTECHN,
      Samsung.ON5XLLTECHN,
      Samsung.ON5XLTECHN,
      Samsung.ON7ELTE,
      Samsung.ON7NLTESKT,
      Samsung.ON7XELTE,
      Samsung.ON7XELTEKTT,
      Samsung.ON7XELTELGT,
      Samsung.ON7XELTESKT,
      Samsung.ON7XLTECHN,
      Samsung.ON7XREFLTE,
      Samsung.ON7XREFLTEINS,
      Samsung.ON7XREFLTEKTT,
      Samsung.ON7XREFLTELGT,
      Samsung.ON7XREFLTESKT,
      Samsung.P3Q,
      Samsung.P4NOTELTE,
      Samsung.P4NOTELTEKTT,
      Samsung.P4NOTELTELGT,
      Samsung.P4NOTELTESKT,
      Samsung.P4NOTELTEUSC,
      Samsung.P4NOTERF,
      Samsung.P4NOTERFKTT,
      Samsung.P4NOTERFSKT,
      Samsung.P4NOTEWIFI,
      Samsung.P4NOTEWIFIANY,
      Samsung.P4NOTEWIFIKTT,
      Samsung.P4NOTEWIFIWW,
      Samsung.PA1Q,
      Samsung.PA2Q,
      Samsung.PA3Q,
      Samsung.PHILIPPELTECHN,
      Samsung.PHOENIX,
      Samsung.PICASSOLTE,
      Samsung.PICASSOWIFI,
      Samsung.POCKET23G,
      Samsung.POCKET2SS3G,
      Samsung.POSEIDONLTEATT,
      Samsung.PROJECTX2BL,
      Samsung.PROJECTX2UL,
      Samsung.PROJECTXBL,
      Samsung.PROJECTXUL,
      Samsung.PSQ,
      Samsung.Q2Q,
      Samsung.Q5Q,
      Samsung.Q6AQ,
      Samsung.Q6Q,
      Samsung.Q7LTESKT,
      Samsung.Q7Q,
      Samsung.R0Q,
      Samsung.R0S,
      Samsung.R11Q,
      Samsung.R11S,
      Samsung.R12S,
      Samsung.R1Q,
      Samsung.R3Q,
      Samsung.R5Q,
      Samsung.R7,
      Samsung.R8Q,
      Samsung.R8S,
      Samsung.R9Q,
      Samsung.RAYBST,
      Samsung.ROSSALTE,
      Samsung.ROSSALTEXSA,
      Samsung.ROY,
      Samsung.ROYDTV,
      Samsung.ROYSS,
      Samsung.ROYSSNFC,
      Samsung.ROYSSVEDTV,
      Samsung.ROYVEDTV,
      Samsung.RUBENSLTE,
      Samsung.RUBENSLTEKX,
      Samsung.RUBENSWIFI,
      Samsung.S2VE,
      Samsung.S2VEP,
      Samsung.S3VE3G,
      Samsung.S3VE3GDD,
      Samsung.S3VE3GDS,
      Samsung.S5NEOLTE,
      Samsung.S5NEOLTECAN,
      Samsung.SAMSUNG_INTERACTIVE_DISPLAY,
      Samsung.SANTOS103G,
      Samsung.SANTOS10LTE,
      Samsung.SANTOS10WIFI,
      Samsung.SC_01F,
      Samsung.SC_01G,
      Samsung.SC_01H,
      Samsung.SC_01K,
      Samsung.SC_01L,
      Samsung.SC_01M,
      Samsung.SC_02E,
      Samsung.SC_02F,
      Samsung.SC_02G,
      Samsung.SC_02H,
      Samsung.SC_02J,
      Samsung.SC_02K,
      Samsung.SC_02L,
      Samsung.SC_02M,
      Samsung.SC_03E,
      Samsung.SC_03G,
      Samsung.SC_03J,
      Samsung.SC_03K,
      Samsung.SC_03L,
      Samsung.SC_04E,
      Samsung.SC_04F,
      Samsung.SC_04G,
      Samsung.SC_04J,
      Samsung.SC_04L,
      Samsung.SC_05G,
      Samsung.SC_05L,
      Samsung.SC_41A,
      Samsung.SC_42A,
      Samsung.SC_51A,
      Samsung.SC_51B,
      Samsung.SC_51C,
      Samsung.SC_51D,
      Samsung.SC_51E,
      Samsung.SC_51F,
      Samsung.SC_52A,
      Samsung.SC_52B,
      Samsung.SC_52C,
      Samsung.SC_52D,
      Samsung.SC_52E,
      Samsung.SC_52F,
      Samsung.SC_53A,
      Samsung.SC_53B,
      Samsung.SC_53C,
      Samsung.SC_53D,
      Samsung.SC_53E,
      Samsung.SC_53F,
      Samsung.SC_54A,
      Samsung.SC_54B,
      Samsung.SC_54C,
      Samsung.SC_54D,
      Samsung.SC_54E,
      Samsung.SC_54F,
      Samsung.SC_55B,
      Samsung.SC_55C,
      Samsung.SC_55D,
      Samsung.SC_55E,
      Samsung.SC_55F,
      Samsung.SC_56B,
      Samsung.SC_56C,
      Samsung.SC_56F,
      Samsung.SC51AA,
      Samsung.SCG01,
      Samsung.SCG02,
      Samsung.SCG03,
      Samsung.SCG04,
      Samsung.SCG06,
      Samsung.SCG07,
      Samsung.SCG08,
      Samsung.SCG09,
      Samsung.SCG10,
      Samsung.SCG11,
      Samsung.SCG12,
      Samsung.SCG13,
      Samsung.SCG14,
      Samsung.SCG15,
      Samsung.SCG16,
      Samsung.SCG17,
      Samsung.SCG18,
      Samsung.SCG19,
      Samsung.SCG20,
      Samsung.SCG21,
      Samsung.SCG22,
      Samsung.SCG23,
      Samsung.SCG24,
      Samsung.SCG25,
      Samsung.SCG26,
      Samsung.SCG27,
      Samsung.SCG28,
      Samsung.SCG29,
      Samsung.SCG30,
      Samsung.SCG31,
      Samsung.SCG32,
      Samsung.SCG33,
      Samsung.SCG34,
      Samsung.SCG35,
      Samsung.SCT22,
      Samsung.SCV47,
      Samsung.SCV48,
      Samsung.SCV49,
      Samsung.SERRANO3G,
      Samsung.SERRANODS,
      Samsung.SERRANOLTE,
      Samsung.SERRANOLTEBMC,
      Samsung.SERRANOLTEKTT,
      Samsung.SERRANOLTESPR,
      Samsung.SERRANOVE3G,
      Samsung.SERRANOVELTE,
      Samsung.SERRANOVOLTEATT,
      Samsung.SF2WIFI,
      Samsung.SGH_I777,
      Samsung.SGH_T989,
      Samsung.SHV_E160K,
      Samsung.SHV_E160L,
      Samsung.SHV_E160S,
      Samsung.SHW_M250S,
      Samsung.SKOMER,
      Samsung.SLTE,
      Samsung.SLTEATT,
      Samsung.SLTECAN,
      Samsung.SLTEKTT,
      Samsung.SLTELGT,
      Samsung.SLTESKT,
      Samsung.SPH_D710,
      Samsung.SPH_D710VMUB,
      Samsung.STAR2LTEKS,
      Samsung.STAR2QLTECHN,
      Samsung.STAR2QLTECS,
      Samsung.STAR2QLTEUE,
      Samsung.STARLTEKS,
      Samsung.STARQLTECHN,
      Samsung.STARQLTECMCC,
      Samsung.STARQLTECS,
      Samsung.STARQLTESQ,
      Samsung.STARQLTEUE,
      Samsung.SUPERIORLTESKT,
      Samsung.T03G,
      Samsung.T03GCHN,
      Samsung.T03GCHNDUOS,
      Samsung.T0LTE,
      Samsung.T0LTEATT,
      Samsung.T0LTECAN,
      Samsung.T0LTEKTT,
      Samsung.T0LTELGT,
      Samsung.T0LTESKT,
      Samsung.T0LTESPR,
      Samsung.T0LTETMO,
      Samsung.T2Q,
      Samsung.T2S,
      Samsung.TBELTEKTT,
      Samsung.TBELTELGT,
      Samsung.TBELTESKT,
      Samsung.TBLTE,
      Samsung.TBLTEATT,
      Samsung.TBLTECAN,
      Samsung.TBLTESPR,
      Samsung.TBLTETMO,
      Samsung.TRE3CALTEKTT,
      Samsung.TRE3CALTELGT,
      Samsung.TRE3CALTESKT,
      Samsung.TRE3G,
      Samsung.TRELTE,
      Samsung.TRELTEKTT,
      Samsung.TRELTELGT,
      Samsung.TRELTESKT,
      Samsung.TRHPLTE,
      Samsung.TRLTE,
      Samsung.TRLTEATT,
      Samsung.TRLTECAN,
      Samsung.TRLTECHN,
      Samsung.TRLTECHNZH,
      Samsung.TRLTESPR,
      Samsung.TRLTETMO,
      Samsung.TRLTEUSC,
      Samsung.V1A3G,
      Samsung.V1AWIFI,
      Samsung.V1AWIFIKX,
      Samsung.V2LTE,
      Samsung.V2Q,
      Samsung.V2WIFI,
      Samsung.V4Q,
      Samsung.VASTA3G,
      Samsung.VASTALTEZH,
      Samsung.VICTORLTE,
      Samsung.VICTORY,
      Samsung.VIENNALTE,
      Samsung.VIENNALTEATT,
      Samsung.VIENNALTEKX,
      Samsung.VIVALTO,
      Samsung.VIVALTO3G,
      Samsung.VIVALTO3GVN,
      Samsung.VIVALTO3MVE3GLTN,
      Samsung.VIVALTO3MVEML3G,
      Samsung.VIVALTO3MVEML3GSEA,
      Samsung.VIVALTO5MVE3G,
      Samsung.VIVALTODS5M,
      Samsung.VIVALTOLTE,
      Samsung.VIVALTONFC3G,
      Samsung.WILCOX3G,
      Samsung.WILCOXDS,
      Samsung.WILCOXLTE,
      Samsung.WINNER,
      Samsung.WISDOM,
      Samsung.WISDOMWIFI,
      Samsung.WISE6BL,
      Samsung.WISE6BS,
      Samsung.WISE6UL,
      Samsung.WISE6US,
      Samsung.WISE8BS,
      Samsung.WISE8US,
      Samsung.WISEBL,
      Samsung.WISEBS,
      Samsung.WISEUL,
      Samsung.WISEUS,
      Samsung.X1Q,
      Samsung.X1S,
      Samsung.XCOVER3LTE,
      Samsung.XCOVER3VELTE,
      Samsung.XCOVER4LTE,
      Samsung.XCOVER4LTECAN,
      Samsung.XCOVER4S,
      Samsung.XCOVER5,
      Samsung.XCOVER7,
      Samsung.XCOVER7PRO,
      Samsung.XCOVERPRO,
      Samsung.XCOVERPRO2,
      Samsung.Y2Q,
      Samsung.Y2S,
      Samsung.YOUNG23G,
      Samsung.YOUNG23GDTV,
      Samsung.YOUNG2DS2G,
      Samsung.YOUNG2NFC3G,
      Samsung.YOUNG2VE3G,
      Samsung.Z3S,
      Samsung.ZANIN,
      Samsung.ZENLTE,
      Samsung.ZENLTEATT,
      Samsung.ZENLTEBMC,
      Samsung.ZENLTECHN,
      Samsung.ZENLTEKTT,
      Samsung.ZENLTELGT,
      Samsung.ZENLTESKT,
      Samsung.ZENLTESPR,
      Samsung.ZENLTETMO,
      Samsung.ZENLTEUSC,
      Samsung.ZEROFLTE,
      Samsung.ZEROFLTEACG,
      Samsung.ZEROFLTEAIO,
      Samsung.ZEROFLTEATT,
      Samsung.ZEROFLTEBMC,
      Samsung.ZEROFLTECHN,
      Samsung.ZEROFLTEKTT,
      Samsung.ZEROFLTELGT,
      Samsung.ZEROFLTELRA,
      Samsung.ZEROFLTEMTR,
      Samsung.ZEROFLTESKT,
      Samsung.ZEROFLTESPR,
      Samsung.ZEROFLTETFNVZW,
      Samsung.ZEROFLTETMO,
      Samsung.ZEROFLTEUSC,
      Samsung.ZEROLTE,
      Samsung.ZEROLTEACG,
      Samsung.ZEROLTEATT,
      Samsung.ZEROLTEBMC,
      Samsung.ZEROLTECHN,
      Samsung.ZEROLTEKTT,
      Samsung.ZEROLTELGT,
      Samsung.ZEROLTELRA,
      Samsung.ZEROLTESKT,
      Samsung.ZEROLTESPR,
      Samsung.ZEROLTETMO,
      Samsung.ZEROLTEUSC,
      Samsung.ZODIAC
  )

  /**
   * Get all device specifications for Samtech devices.
   * Useful for samtech testing.
   */
  public fun getSamtechDevices(): List<String> = listOf(
      Samtech.T3G_04,
      Samtech.TWIFI_06,
      Samtech.TWIFI_07,
      Samtech.TWIFI_Q07
  )

  /**
   * Get all device specifications for SAMWON devices.
   * Useful for samwon testing.
   */
  public fun getSamwonDevices(): List<String> = listOf(
      Samwon.LAKESIDE,
      Samwon.MATEO,
      Samwon.NAGAI,
      Samwon.PIONEER
  )

  /**
   * Get all device specifications for Sankey devices.
   * Useful for sankey testing.
   */
  public fun getSankeyDevices(): List<String> = listOf(
      Sankey.TAB7A3G05
  )

  /**
   * Get all device specifications for SANLUX devices.
   * Useful for sanlux testing.
   */
  public fun getSanluxDevices(): List<String> = listOf(
      Sanlux.SW4H
  )

  /**
   * Get all device specifications for SANNUO devices.
   * Useful for sannuo testing.
   */
  public fun getSannuoDevices(): List<String> = listOf(
      Sannuo.K102,
      Sannuo.K108
  )

  /**
   * Get all device specifications for SANSEI devices.
   * Useful for sansei testing.
   */
  public fun getSanseiDevices(): List<String> = listOf(
      Sansei.TS10A1,
      Sansei.TS7A1,
      Sansei.TS7K
  )

  /**
   * Get all device specifications for SANSUI devices.
   * Useful for sansui testing.
   */
  public fun getSansuiDevices(): List<String> = listOf(
      Sansui.COTTONGREEN,
      Sansui.GRAND,
      Sansui.MARINA,
      Sansui.MARTIN,
      Sansui.NAGATA,
      Sansui.SANSUI_NOVA,
      Sansui.SHIBUYA,
      Sansui.SHILIN,
      Sansui.STANFORD,
      Sansui.SUNNYVALE,
      Sansui.SW4H,
      Sansui.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for SANYO devices.
   * Useful for sanyo testing.
   */
  public fun getSanyoDevices(): List<String> = listOf(
      Sanyo.R1,
      Sanyo.R2,
      Sanyo.TCL_EU
  )

  /**
   * Get all device specifications for Sappa devices.
   * Useful for sappa testing.
   */
  public fun getSappaDevices(): List<String> = listOf(
      Sappa.SEI904SAP
  )

  /**
   * Get all device specifications for SaskTel devices.
   * Useful for sasktel testing.
   */
  public fun getSasktelDevices(): List<String> = listOf(
      Sasktel.HMB2213PW22WA,
      Sasktel.UIW4054SAS
  )

  /**
   * Get all device specifications for SATCO devices.
   * Useful for satco testing.
   */
  public fun getSatcoDevices(): List<String> = listOf(
      Satco.Y_20
  )

  /**
   * Get all device specifications for SATELIT devices.
   * Useful for satelit testing.
   */
  public fun getSatelitDevices(): List<String> = listOf(
      Satelit.MOUNTBAKER
  )

  /**
   * Get all device specifications for Satewave devices.
   * Useful for satewave testing.
   */
  public fun getSatewaveDevices(): List<String> = listOf(
      Satewave.HPAD_IP8045
  )

  /**
   * Get all device specifications for SAWINK devices.
   * Useful for sawink testing.
   */
  public fun getSawinkDevices(): List<String> = listOf(
      Sawink.T10
  )

  /**
   * Get all device specifications for SBM devices.
   * Useful for sbm testing.
   */
  public fun getSbmDevices(): List<String> = listOf(
      Sbm._302KC,
      Sbm._401SO,
      Sbm._403SC,
      Sbm._404SC,
      Sbm._601LV,
      Sbm._602LV,
      Sbm.DM016SH,
      Sbm.E2JPS,
      Sbm.HWCPN_Q,
      Sbm.HWFDR,
      Sbm.HWS10231L,
      Sbm.MSM8974,
      Sbm.P809F10,
      Sbm.SBM200SH,
      Sbm.SBM203SH,
      Sbm.SBM205SH,
      Sbm.SBM206SH,
      Sbm.SBM301F,
      Sbm.SBM302SH,
      Sbm.SBM303SH,
      Sbm.SBM801FJ,
      Sbm.WX04SH,
      Sbm.WX10K,
      Sbm.ZTE_402ZT
  )

  /**
   * Get all device specifications for Scanfrost devices.
   * Useful for scanfrost testing.
   */
  public fun getScanfrostDevices(): List<String> = listOf(
      Scanfrost.MARINA,
      Scanfrost.MARTIN
  )

  /**
   * Get all device specifications for scbc devices.
   * Useful for scbc testing.
   */
  public fun getScbcDevices(): List<String> = listOf(
      Scbc.R1,
      Scbc.TCL_EU
  )

  /**
   * Get all device specifications for SCEPTRE devices.
   * Useful for sceptre testing.
   */
  public fun getSceptreDevices(): List<String> = listOf(
      Sceptre.BARKING,
      Sceptre.GANGBYEON,
      Sceptre.KANDA
  )

  /**
   * Get all device specifications for Schneider devices.
   * Useful for schneider testing.
   */
  public fun getSchneiderDevices(): List<String> = listOf(
      Schneider.BANGBAE,
      Schneider.BARKING,
      Schneider.BEAUDRY,
      Schneider.KOMAGOME,
      Schneider.R1,
      Schneider.R2,
      Schneider.WAVE_3
  )

  /**
   * Get all device specifications for Schok devices.
   * Useful for schok testing.
   */
  public fun getSchokDevices(): List<String> = listOf(
      Schok.FREEDOM_TURBO_XL,
      Schok.SFT5216,
      Schok.SV55216,
      Schok.SV67Q
  )

  /**
   * Get all device specifications for SCIENTIA devices.
   * Useful for scientia testing.
   */
  public fun getScientiaDevices(): List<String> = listOf(
      Scientia.BBT1019863,
      Scientia.EWS10164T
  )

  /**
   * Get all device specifications for Scope devices.
   * Useful for scope testing.
   */
  public fun getScopeDevices(): List<String> = listOf(
      Scope.F503V,
      Scope.F5O3V,
      Scope.SP1089
  )

  /**
   * Get all device specifications for SCVInfinity devices.
   * Useful for scvinfinity testing.
   */
  public fun getScvinfinityDevices(): List<String> = listOf(
      Scvinfinity.SEI630SCV
  )

  /**
   * Get all device specifications for SDTV devices.
   * Useful for sdtv testing.
   */
  public fun getSdtvDevices(): List<String> = listOf(
      Sdtv.HY44J
  )

  /**
   * Get all device specifications for Sebbe devices.
   * Useful for sebbe testing.
   */
  public fun getSebbeDevices(): List<String> = listOf(
      Sebbe.S21_EEA,
      Sebbe.S22_EEA,
      Sebbe.S22_EEA,
      Sebbe.S22_T_EEA,
      Sebbe.S22_T_US,
      Sebbe.S23_EEA,
      Sebbe.S23_EEA_A,
      Sebbe.S23_T_EEA,
      Sebbe.S23_T_US,
      Sebbe.S23_US,
      Sebbe.S23_US_B
  )

  /**
   * Get all device specifications for SecQre devices.
   * Useful for secqre testing.
   */
  public fun getSecqreDevices(): List<String> = listOf(
      Secqre.SEI100
  )

  /**
   * Get all device specifications for SECUREYE devices.
   * Useful for secureye testing.
   */
  public fun getSecureyeDevices(): List<String> = listOf(
      Secureye.S_SAB220
  )

  /**
   * Get all device specifications for Sederick devices.
   * Useful for sederick testing.
   */
  public fun getSederickDevices(): List<String> = listOf(
      Sederick.KT101
  )

  /**
   * Get all device specifications for SEGO devices.
   * Useful for sego testing.
   */
  public fun getSegoDevices(): List<String> = listOf(
      Sego.S24,
      Sego.S25_NEO,
      Sego.S_PAD,
      Sego.ZERO_50
  )

  /**
   * Get all device specifications for SEI devices.
   * Useful for sei testing.
   */
  public fun getSeiDevices(): List<String> = listOf(
      Sei.ST4500,
      Sei.TT02
  )

  /**
   * Get all device specifications for Selecline devices.
   * Useful for selecline testing.
   */
  public fun getSeleclineDevices(): List<String> = listOf(
      Selecline.S3T10IN,
      Selecline.S5S5IN4G,
      Selecline.S5T10IN,
      Selecline.SP19403,
      Selecline.SP19504,
      Selecline.ST19101
  )

  /**
   * Get all device specifications for Seleco devices.
   * Useful for seleco testing.
   */
  public fun getSelecoDevices(): List<String> = listOf(
      Seleco.BARKING,
      Seleco.BEAUDRY
  )

  /**
   * Get all device specifications for Selectron devices.
   * Useful for selectron testing.
   */
  public fun getSelectronDevices(): List<String> = listOf(
      Selectron.T101G,
      Selectron.T856G
  )

  /**
   * Get all device specifications for SELFIX devices.
   * Useful for selfix testing.
   */
  public fun getSelfixDevices(): List<String> = listOf(
      Selfix.ES733,
      Selfix.X5,
      Selfix.X7
  )

  /**
   * Get all device specifications for Selvas devices.
   * Useful for selvas testing.
   */
  public fun getSelvasDevices(): List<String> = listOf(
      Selvas.BRAILLESENSE,
      Selvas.BRAILLESENSEMINI,
      Selvas.POLARIS
  )

  /**
   * Get all device specifications for SEMC devices.
   * Useful for semc testing.
   */
  public fun getSemcDevices(): List<String> = listOf(
      Semc.LT22I,
      Semc.LT26I,
      Semc.LT26II,
      Semc.LT26W,
      Semc.LT28H,
      Semc.ST27I
  )

  /**
   * Get all device specifications for Semeakoko devices.
   * Useful for semeakoko testing.
   */
  public fun getSemeakokoDevices(): List<String> = listOf(
      Semeakoko.M_766,
      Semeakoko.S_764,
      Semeakoko.S_764_EEA,
      Semeakoko.S10A,
      Semeakoko.SS_35,
      Semeakoko.SS_35_EEA,
      Semeakoko.SS_P30,
      Semeakoko.SS_P30_EEA,
      Semeakoko.SS10A,
      Semeakoko.SS10A_EEA
  )

  /**
   * Get all device specifications for SEMP devices.
   * Useful for semp testing.
   */
  public fun getSempDevices(): List<String> = listOf(
      Semp.GO3C,
      Semp.GO3C_PLUS,
      Semp.GO3E,
      Semp.GO5E
  )

  /**
   * Get all device specifications for sencor devices.
   * Useful for sencor testing.
   */
  public fun getSencorDevices(): List<String> = listOf(
      Sencor._10_1Q205
  )

  /**
   * Get all device specifications for SenlinTech devices.
   * Useful for senlintech testing.
   */
  public fun getSenlintechDevices(): List<String> = listOf(
      Senlintech.PAD6_EEA,
      Senlintech.S30_PRO
  )

  /**
   * Get all device specifications for SENRAISE devices.
   * Useful for senraise testing.
   */
  public fun getSenraiseDevices(): List<String> = listOf(
      Senraise.H10
  )

  /**
   * Get all device specifications for SENSE devices.
   * Useful for sense testing.
   */
  public fun getSenseDevices(): List<String> = listOf(
      Sense.TW102
  )

  /**
   * Get all device specifications for SENSEIT devices.
   * Useful for senseit testing.
   */
  public fun getSenseitDevices(): List<String> = listOf(
      Senseit.SENSEIT,
      Senseit.SENSEIT_A109
  )

  /**
   * Get all device specifications for Senter devices.
   * Useful for senter testing.
   */
  public fun getSenterDevices(): List<String> = listOf(
      Senter.S917V9
  )

  /**
   * Get all device specifications for SENWA devices.
   * Useful for senwa testing.
   */
  public fun getSenwaDevices(): List<String> = listOf(
      Senwa.LS5018FP,
      Senwa.SENWA_LS5018F,
      Senwa.SENWA_LS5518H,
      Senwa.SENWA_LS5718,
      Senwa.SENWA_S40,
      Senwa.SENWA_S471
  )

  /**
   * Get all device specifications for Sequel devices.
   * Useful for sequel testing.
   */
  public fun getSequelDevices(): List<String> = listOf(
      Sequel.GLOWLIGHT
  )

  /**
   * Get all device specifications for SERENITY devices.
   * Useful for serenity testing.
   */
  public fun getSerenityDevices(): List<String> = listOf(
      Serenity.BE109
  )

  /**
   * Get all device specifications for SEUIC devices.
   * Useful for seuic testing.
   */
  public fun getSeuicDevices(): List<String> = listOf(
      Seuic.D310M,
      Seuic.D360,
      Seuic.D500B,
      Seuic.D520,
      Seuic.D527,
      Seuic.D550,
      Seuic.D560,
      Seuic.D700S,
      Seuic.D730,
      Seuic.D740
  )

  /**
   * Get all device specifications for SEWOO devices.
   * Useful for sewoo testing.
   */
  public fun getSewooDevices(): List<String> = listOf(
      Sewoo.NBP_65
  )

  /**
   * Get all device specifications for SFR devices.
   * Useful for sfr testing.
   */
  public fun getSfrDevices(): List<String> = listOf(
      Sfr.DIW377_ALT_FR,
      Sfr.DV8219,
      Sfr.DV8555_SFR,
      Sfr.DV8945_KFS,
      Sfr.MSM8916_32
  )

  /**
   * Get all device specifications for SG devices.
   * Useful for sg testing.
   */
  public fun getSgDevices(): List<String> = listOf(
      Sg.EVE_SPROUT,
      Sg.JERIDB,
      Sg.JUDAU,
      Sg.JUDAUL,
      Sg.KALEIDO_SPROUT,
      Sg.KAMILLE,
      Sg.KAMILLEL,
      Sg.LEVIL,
      Sg.LEVIL5,
      Sg.LOCKON,
      Sg.MIKAZUKI,
      Sg.MINEVA,
      Sg.MINEVAL,
      Sg.NASA_SPROUT,
      Sg.NAZE,
      Sg.NEE,
      Sg.OI6,
      Sg.ORGA,
      Sg.QUATTRO,
      Sg.RECOA,
      Sg.ROME_SPROUT,
      Sg.SARAH,
      Sg.SG304SH,
      Sg.SG305SH,
      Sg.SG401SH,
      Sg.SG402SH,
      Sg.SG403SH,
      Sg.SG404SH,
      Sg.SG502SH,
      Sg.SG503SH,
      Sg.SG506SH,
      Sg.SG509SH,
      Sg.SG603SH,
      Sg.SG605SH,
      Sg.SG606SH,
      Sg.SG701SH,
      Sg.SG702SH,
      Sg.SG704SH,
      Sg.SG706SH,
      Sg.SG801SH,
      Sg.SG803SH,
      Sg.SG808SH,
      Sg.SG901SH,
      Sg.SG906SH,
      Sg.SG907SH,
      Sg.SG908SH,
      Sg.SGA002SH,
      Sg.SH_M12,
      Sg.SW001SH,
      Sg.SX1,
      Sg.SX3,
      Sg.SX4,
      Sg.SX5,
      Sg.SXI,
      Sg.VESPA_SPROUT,
      Sg.ZEON_SPROUT
  )

  /**
   * Get all device specifications for SGIN devices.
   * Useful for sgin testing.
   */
  public fun getSginDevices(): List<String> = listOf(
      Sgin.A10,
      Sgin.C10,
      Sgin.C8,
      Sgin.E10P,
      Sgin.SGIN_E10M,
      Sgin.SGIN_X10,
      Sgin.T10S,
      Sgin.T12_EEA,
      Sgin.T12_ROW,
      Sgin.T12S,
      Sgin.T12S_EEA,
      Sgin.T12S_ROW
  )

  /**
   * Get all device specifications for SGP devices.
   * Useful for sgp testing.
   */
  public fun getSgpDevices(): List<String> = listOf(
      Sgp.BP2
  )

  /**
   * Get all device specifications for Shaks devices.
   * Useful for shaks testing.
   */
  public fun getShaksDevices(): List<String> = listOf(
      Shaks.TSA
  )

  /**
   * Get all device specifications for SHARP devices.
   * Useful for sharp testing.
   */
  public fun getSharpDevices(): List<String> = listOf(
      Sharp.AG3,
      Sharp.AN_NP40,
      Sharp.ANAHEIM,
      Sharp.AWAROA,
      Sharp.BANAGHER,
      Sharp.BANQIAO,
      Sharp.BRUNO,
      Sharp.BUMBLEBEE,
      Sharp.CHARA,
      Sharp.CRUZE_LITE_S,
      Sharp.CRUZE_PRO,
      Sharp.EBISU,
      Sharp.EGALEO,
      Sharp.EWHA,
      Sharp.EXPO,
      Sharp.FAYUIRY,
      Sharp.GANGNAM,
      Sharp.GILMORE,
      Sharp.GURO,
      Sharp.HCTT1,
      Sharp.HH1,
      Sharp.HH6_SPROUT,
      Sharp.JAMSIL,
      Sharp.JERIDA,
      Sharp.JUDAU,
      Sharp.KAITAK,
      Sharp.KAMILLE,
      Sharp.LAOSHAN,
      Sharp.LAVENDER,
      Sharp.LC_XXLE570X,
      Sharp.LC_LE580T,
      Sharp.LC_LE580X,
      Sharp.LC_SUNUJ,
      Sharp.LC_THEUT,
      Sharp.LC_THEUX,
      Sharp.LC_U35T,
      Sharp.LC_UE630X,
      Sharp.LC_XU35T,
      Sharp.LC_XU930X_830X,
      Sharp.LEVIN,
      Sharp.LOCKON,
      Sharp.MARTIN,
      Sharp.MEGURO,
      Sharp.MIKAZUKI,
      Sharp.MODEL_3,
      Sharp.MONGKOK,
      Sharp.MOUNTBAKER,
      Sharp.MS1,
      Sharp.NAMBA,
      Sharp.NAZE,
      Sharp.OD0M_EA_T32,
      Sharp.OG6,
      Sharp.ORGA,
      Sharp.QUATTRO,
      Sharp.QUESS,
      Sharp.R4,
      Sharp.RAKAN,
      Sharp.RECOA,
      Sharp.SANDIEGO,
      Sharp.SARAH,
      Sharp.SARAHH,
      Sharp.SAT,
      Sharp.SD1,
      Sharp.SE3,
      Sharp.SE3_TH,
      Sharp.SE3_VN,
      Sharp.SG1,
      Sharp.SG306SH,
      Sharp.SH_A01,
      Sharp.SH_D01,
      Sharp.SH_L02,
      Sharp.SH_M01,
      Sharp.SH_M02,
      Sharp.SH_M02_EVA20,
      Sharp.SH_M03,
      Sharp.SH_M04,
      Sharp.SH_M05,
      Sharp.SH_M06,
      Sharp.SH_M07,
      Sharp.SH_M08,
      Sharp.SH_M09,
      Sharp.SH_M10,
      Sharp.SH_M11,
      Sharp.SH_M12,
      Sharp.SH_M13,
      Sharp.SH_R10,
      Sharp.SH_RM02,
      Sharp.SH_Z01,
      Sharp.SH_Z10,
      Sharp.SH_Z20,
      Sharp.SH825WI,
      Sharp.SH90B,
      Sharp.SHARP_2K15_US_ANDROID,
      Sharp.SHILIN,
      Sharp.SHINAGAWA,
      Sharp.SHONANDAI,
      Sharp.SINDANG,
      Sharp.SJ3,
      Sharp.SK3,
      Sharp.SS2,
      Sharp.STANFORD,
      Sharp.STTM21VAPP,
      Sharp.SW4H_FF,
      Sharp.SW6H,
      Sharp.SX1,
      Sharp.SX3,
      Sharp.SX4,
      Sharp.SX5,
      Sharp.TAKAO,
      Sharp.TCBA8SX,
      Sharp.TCMAR1UJ,
      Sharp.TCMAR2UJ,
      Sharp.TCME8SJ,
      Sharp.TCME8TSJ,
      Sharp.TCMERUJ,
      Sharp.TCSU2UJ,
      Sharp.TCTH2UT,
      Sharp.TCTH2UX,
      Sharp.TCVE2UJ,
      Sharp.TCVE8SJ,
      Sharp.TCVENRUJ,
      Sharp.TCVENUJ,
      Sharp.TSP,
      Sharp.UMEDA,
      Sharp.VG2,
      Sharp.VGO,
      Sharp.VN3N,
      Sharp.VZJ
  )

  /**
   * Get all device specifications for Shelby devices.
   * Useful for shelby testing.
   */
  public fun getShelbyDevices(): List<String> = listOf(
      Shelby.ZA555
  )

  /**
   * Get all device specifications for SHIFT devices.
   * Useful for shift testing.
   */
  public fun getShiftDevices(): List<String> = listOf(
      Shift.AXOLOTL,
      Shift.OTTER,
      Shift.SHIFT6M
  )

  /**
   * Get all device specifications for SHINON devices.
   * Useful for shinon testing.
   */
  public fun getShinonDevices(): List<String> = listOf(
      Shinon.IKEBUKURO,
      Shinon.LONGSHAN,
      Shinon.REDWOOD,
      Shinon.SAMSEONG
  )

  /**
   * Get all device specifications for SHIVAKI devices.
   * Useful for shivaki testing.
   */
  public fun getShivakiDevices(): List<String> = listOf(
      Shivaki.R3_GTV,
      Shivaki.R4_GTV
  )

  /**
   * Get all device specifications for Shortcut devices.
   * Useful for shortcut testing.
   */
  public fun getShortcutDevices(): List<String> = listOf(
      Shortcut.DWT765LTT
  )

  /**
   * Get all device specifications for shoudum devices.
   * Useful for shoudum testing.
   */
  public fun getShoudumDevices(): List<String> = listOf(
      Shoudum.X50,
      Shoudum.X50US,
      Shoudum.X_50,
      Shoudum.X_50_EEA
  )

  /**
   * Get all device specifications for Shuttle devices.
   * Useful for shuttle testing.
   */
  public fun getShuttleDevices(): List<String> = listOf(
      Shuttle.PNT_7045
  )

  /**
   * Get all device specifications for Sico devices.
   * Useful for sico testing.
   */
  public fun getSicoDevices(): List<String> = listOf(
      Sico.DIAMOND_2,
      Sico.INFINITY,
      Sico.INFINITYMAX,
      Sico.MEGA2,
      Sico.MEGA2MAX,
      Sico.MORE_3,
      Sico.NILE_X,
      Sico.PLUS2,
      Sico.PLUS2_4G,
      Sico.PLUS3_4G,
      Sico.SICO_EXPRESS3,
      Sico.TOPAZ
  )

  /**
   * Get all device specifications for SICON devices.
   * Useful for sicon testing.
   */
  public fun getSiconDevices(): List<String> = listOf(
      Sicon.KEONEAE
  )

  /**
   * Get all device specifications for SIERA devices.
   * Useful for siera testing.
   */
  public fun getSieraDevices(): List<String> = listOf(
      Siera.STANFORD,
      Siera.ZHONGSHAN
  )

  /**
   * Get all device specifications for SIGMA_MOBILE devices.
   * Useful for sigma_mobile testing.
   */
  public fun getSigmaMobileDevices(): List<String> = listOf(
      SigmaMobile.PQ18_MAX,
      SigmaMobile.TAB_A1010_NEO,
      SigmaMobile.TAB_A1025_2,
      SigmaMobile.TAB_A1033_X_TREME,
      SigmaMobile.TAB_A802,
      SigmaMobile.TABA1015,
      SigmaMobile.TABA1020,
      SigmaMobile.X_STYLE_S5501,
      SigmaMobile.X_STYLE_S5502,
      SigmaMobile.X_TREME_PQ18,
      SigmaMobile.X_TREME_PQ20,
      SigmaMobile.X_TREME_PQ24,
      SigmaMobile.X_TREME_PQ28,
      SigmaMobile.X_TREME_PQ29,
      SigmaMobile.X_TREME_PQ36,
      SigmaMobile.X_TREME_PQ37,
      SigmaMobile.X_TREME_PQ52,
      SigmaMobile.X_TREME_PQ53,
      SigmaMobile.X_TREME_PQ54,
      SigmaMobile.X_TREME_PQ54_MAX,
      SigmaMobile.X_TREME_PQ55,
      SigmaMobile.X_TREME_PQ57,
      SigmaMobile.X_TREME_PQ58,
      SigmaMobile.X_STYLE_TAB_A1010,
      SigmaMobile.X_STYLE_TAB_A103,
      SigmaMobile.X_STYLE_TAB_A104,
      SigmaMobile.X_STYLE_TAB_A801,
      SigmaMobile.X_STYLE_TAB_A83,
      SigmaMobile.X_TREME_PQ38,
      SigmaMobile.X_TREME_PQ39,
      SigmaMobile.X_TREME_PQ56
  )

  /**
   * Get all device specifications for SILO devices.
   * Useful for silo testing.
   */
  public fun getSiloDevices(): List<String> = listOf(
      Silo.HONGKONG,
      Silo.MOUNTBAKER
  )

  /**
   * Get all device specifications for Silver_line devices.
   * Useful for silver_line testing.
   */
  public fun getSilverLineDevices(): List<String> = listOf(
      SilverLine.SL1068,
      SilverLine.SL1069,
      SilverLine.SL729
  )

  /**
   * Get all device specifications for SILVER_MAX devices.
   * Useful for silver_max testing.
   */
  public fun getSilverMaxDevices(): List<String> = listOf(
      SilverMax.ST_810,
      SilverMax.ST_710G,
      SilverMax.ST_810A
  )

  /**
   * Get all device specifications for Silverline devices.
   * Useful for silverline testing.
   */
  public fun getSilverlineDevices(): List<String> = listOf(
      Silverline.SL1021,
      Silverline.SL1022,
      Silverline.SL1046,
      Silverline.SL721,
      Silverline.SL868G
  )

  /**
   * Get all device specifications for Simbans devices.
   * Useful for simbans testing.
   */
  public fun getSimbansDevices(): List<String> = listOf(
      Simbans.PICASSOTAB,
      Simbans.PICASSOTAB8S,
      Simbans.PICASSOTAB_9,
      Simbans.PICASSOTAB_X,
      Simbans.PICASSOTAB_XL,
      Simbans.PICASSOTABX14,
      Simbans.TANGOTAB,
      Simbans.TANGOTAB8,
      Simbans.TANGOTAB_364,
      Simbans.TANGOTAB_X
  )

  /**
   * Get all device specifications for simfer devices.
   * Useful for simfer testing.
   */
  public fun getSimferDevices(): List<String> = listOf(
      Simfer.KENTON,
      Simfer.LASALLE
  )

  /**
   * Get all device specifications for SIMI devices.
   * Useful for simi testing.
   */
  public fun getSimiDevices(): List<String> = listOf(
      Simi.MECHA,
      Simi.S501PLUS_Z,
      Simi.S502,
      Simi.S507,
      Simi.S630,
      Simi.S8001
  )

  /**
   * Get all device specifications for Simplytab devices.
   * Useful for simplytab testing.
   */
  public fun getSimplytabDevices(): List<String> = listOf(
      Simplytab.S_101TAB
  )

  /**
   * Get all device specifications for Singer devices.
   * Useful for singer testing.
   */
  public fun getSingerDevices(): List<String> = listOf(
      Singer.LONGSHAN,
      Singer.R1,
      Singer.R2,
      Singer.R3,
      Singer.R3_GTV,
      Singer.R4,
      Singer.R4_GTV,
      Singer.REDWOOD,
      Singer.SHIBUYA,
      Singer.SUNNYVALE,
      Singer.SW4H,
      Singer.SW6H
  )

  /**
   * Get all device specifications for Singtel_TV devices.
   * Useful for singtel_tv testing.
   */
  public fun getSingtelTvDevices(): List<String> = listOf(
      SingtelTv.F561
  )

  /**
   * Get all device specifications for SinoGNSS devices.
   * Useful for sinognss testing.
   */
  public fun getSinognssDevices(): List<String> = listOf(
      Sinognss.R60
  )

  /**
   * Get all device specifications for SIRAGON devices.
   * Useful for siragon testing.
   */
  public fun getSiragonDevices(): List<String> = listOf(
      Siragon.ELLINIKO,
      Siragon.HONGKONG,
      Siragon.LAVENDER,
      Siragon.MOUNTBAKER,
      Siragon.R3_GTV,
      Siragon.R4_GTV,
      Siragon.SIRAGON_SP_7200,
      Siragon.SIRAGON_SP_7300,
      Siragon.SP_5250,
      Siragon.SP_5300,
      Siragon.SP_5400,
      Siragon.SP_5450,
      Siragon.SP_6000,
      Siragon.SP_6100,
      Siragon.SP_6150,
      Siragon.SP_6200,
      Siragon.SP_7050,
      Siragon.SP_7250,
      Siragon.SP_7275,
      Siragon.STANFORD,
      Siragon.TB_5300,
      Siragon.TB_5400,
      Siragon.TB_7400,
      Siragon.ZHONGSHAN
  )

  /**
   * Get all device specifications for SIRIN_LABS devices.
   * Useful for sirin_labs testing.
   */
  public fun getSirinLabsDevices(): List<String> = listOf(
      SirinLabs.SR00300_W
  )

  /**
   * Get all device specifications for SITI_Playtop devices.
   * Useful for siti_playtop testing.
   */
  public fun getSitiPlaytopDevices(): List<String> = listOf(
      SitiPlaytop.DTC2141
  )

  /**
   * Get all device specifications for SKB devices.
   * Useful for skb testing.
   */
  public fun getSkbDevices(): List<String> = listOf(
      Skb.BFX_AT100,
      Skb.BFX_UA300,
      Skb.BIP_AI100,
      Skb.BIP_EB100,
      Skb.BIP_UW200,
      Skb.BMA_AI100,
      Skb.INTEKS20SI,
      Skb.INTEKS21SI
  )

  /**
   * Get all device specifications for SKB_Cable devices.
   * Useful for skb_cable testing.
   */
  public fun getSkbCableDevices(): List<String> = listOf(
      SkbCable.K1100UA
  )

  /**
   * Get all device specifications for sky devices.
   * Useful for sky testing.
   */
  public fun getSkyDevices(): List<String> = listOf(
      Sky.B866VH,
      Sky.DV6067Y_SKY,
      Sky.EF71G,
      Sky.EF71K,
      Sky.EF71S,
      Sky.ELIBI_55,
      Sky.ELITE_4T_GT,
      Sky.ELITE_A6,
      Sky.ELITE_A63,
      Sky.ELITE_B5MS,
      Sky.ELITE_C55,
      Sky.ELITE_C55US,
      Sky.ELITE_C55USA,
      Sky.ELITE_H55,
      Sky.ELITE_H55_HD,
      Sky.ELITE_H5_FW,
      Sky.ELITE_J55,
      Sky.ELITE_J55US,
      Sky.ELITE_L55,
      Sky.ELITE_M45,
      Sky.ELITE_M5PLUS_PA,
      Sky.ELITE_M5PLUS_SAL,
      Sky.ELITE_N55,
      Sky.ELITE_N55MAX,
      Sky.ELITE_OCTA_PLUS,
      Sky.ELITE_OCTAPLUS,
      Sky.ELITE_OCTAPLUS3US,
      Sky.ELITE_OCTAPLUSA2,
      Sky.ELITE_OCTAPLUSKK1,
      Sky.ELITE_OCTAX,
      Sky.ELITE_OCTAXK,
      Sky.ELITE_OCTAXK2,
      Sky.ELITE_OCTAXKK3,
      Sky.ELITE_OCTAXS,
      Sky.ELITE_PAD8USA,
      Sky.ELITE_R55,
      Sky.ELITE_T4,
      Sky.ELITE_T6,
      Sky.ELITE_T8,
      Sky.ELITE_T8PLUS,
      Sky.ELITE_T8PLUSK,
      Sky.ELITE_T8PLUSS,
      Sky.ELITE_T8PUB,
      Sky.ELITE_T8PUSA,
      Sky.ELITE_US_T8,
      Sky.HY40A,
      Sky.KSTB3226,
      Sky.PLATINUM_A57_OP,
      Sky.PLATINUM_A7,
      Sky.PLATINUM_K5,
      Sky.PLATINUM_K55,
      Sky.PLATINUM_P4,
      Sky.PLATINUM_VIEW2,
      Sky.PLATINUM_VIEW2_PLUS,
      Sky.PLATINUM_VIEW2_V2,
      Sky.PREMIER5_US,
      Sky.PRO_SELFIE,
      Sky.SEI800SKM,
      Sky.SKY_KIDSPRO,
      Sky.SKY_PAD10,
      Sky.SKY_PAD10K,
      Sky.SKY_PAD10MAXK1,
      Sky.SKY_PAD10MAXK2,
      Sky.SKY_PAD10MAXK3,
      Sky.SKY_PAD10MAXNUS,
      Sky.SKY_PAD10MAXOPM,
      Sky.SKY_PAD10US,
      Sky.SKY_PAD8,
      Sky.SKY_PAD8PRO,
      Sky.SKY_PAD8PROUS,
      Sky.SKY_PAX10US,
      Sky.SKY_PRESTIGE,
      Sky.SKY_PRESTIGE2,
      Sky.SKY_VISION2_PLUS
  )

  /**
   * Get all device specifications for SKY_Brasil devices.
   * Useful for sky_brasil testing.
   */
  public fun getSkyBrasilDevices(): List<String> = listOf(
      SkyBrasil.USW8052SKB
  )

  /**
   * Get all device specifications for Sky_Devices devices.
   * Useful for sky_devices testing.
   */
  public fun getSkyDevicesDevices(): List<String> = listOf(
      SkyDevices.ASSIST_55,
      SkyDevices.BITA_5,
      SkyDevices.ELITE_45SM,
      SkyDevices.ELITE_45T,
      SkyDevices.ELITE_6MAX,
      SkyDevices.ELITE_A5,
      SkyDevices.ELITE_A65,
      SkyDevices.ELITE_AMS,
      SkyDevices.ELITE_B5,
      SkyDevices.ELITE_B55,
      SkyDevices.ELITE_B65,
      SkyDevices.ELITE_C5,
      SkyDevices.ELITE_C5MS,
      SkyDevices.ELITE_C63,
      SkyDevices.ELITE_D5,
      SkyDevices.ELITE_D55,
      SkyDevices.ELITE_D5MAX_US,
      SkyDevices.ELITE_D5MAXUS2,
      SkyDevices.ELITE_E55,
      SkyDevices.ELITE_E55MAX,
      SkyDevices.ELITE_F55,
      SkyDevices.ELITE_G55,
      SkyDevices.ELITE_G63,
      SkyDevices.ELITE_MAX,
      SkyDevices.ELITE_OCTA_PWG,
      SkyDevices.ELITE_OCTAMAX,
      SkyDevices.ELITE_OCTAMAX1,
      SkyDevices.ELITE_OCTAMAX1B,
      SkyDevices.ELITE_OCTAMAX3B,
      SkyDevices.ELITE_OCTAMAX3C,
      SkyDevices.ELITE_OCTAMAX3E,
      SkyDevices.ELITE_OCTAMAXOM,
      SkyDevices.ELITE_OCTUS,
      SkyDevices.ELITE_OCUS3,
      SkyDevices.ELITE_T10,
      SkyDevices.ELITE_T10_PRO,
      SkyDevices.ELITE_T10A,
      SkyDevices.ELITE_T11_MAXLT,
      SkyDevices.ELITE_T8PLUS,
      SkyDevices.NEG10_SKY_BLACK,
      SkyDevices.NEGRO_SKY_BLACK,
      SkyDevices.NEGTI28,
      SkyDevices.PLATINUM_B4,
      SkyDevices.PLATINUM_B4P,
      SkyDevices.PLATINUM_F5,
      SkyDevices.PLATINUM_G5,
      SkyDevices.PLATINUM_G55,
      SkyDevices.SKY_BLACK,
      SkyDevices.SKY_BLACK2,
      SkyDevices.SKY_BLACK2GT,
      SkyDevices.SKY_BLACKMAX,
      SkyDevices.SKY_KID1US,
      SkyDevices.SKY_PAD10MAXEXUS,
      SkyDevices.SKY_PAD8PROUSON,
      SkyDevices.SKY_PRESTIGEX,
      SkyDevices.SKY_PRESTIGEX1,
      SkyDevices.SKY_PRESTIGEX2,
      SkyDevices.TIBLA28,
      SkyDevices.X63MAX,
      SkyDevices.X8A
  )

  /**
   * Get all device specifications for SKY-ONE devices.
   * Useful for sky-one testing.
   */
  public fun getSkyOneDevices(): List<String> = listOf(
      SkyOne.ZHONGSHAN
  )

  /**
   * Get all device specifications for SkyDevices devices.
   * Useful for skydevices testing.
   */
  public fun getSkydevicesDevices(): List<String> = listOf(
      Skydevices.ELITE65_PRO,
      Skydevices.ELITE_65_PRO,
      Skydevices.ELITE_6PRO,
      Skydevices.ELITE_A63_A_MAXA,
      Skydevices.ELITE_A63_D_MAX_D,
      Skydevices.ELITE_A63B_MAX_B,
      Skydevices.ELITE_A63CMAXC,
      Skydevices.ELITE_A63MAX,
      Skydevices.ELITE_A63MUS,
      Skydevices.ELITE_D65,
      Skydevices.ELITE_P5,
      Skydevices.ELITE_P55,
      Skydevices.ELITE_P55_CMAX,
      Skydevices.ELITE_P55_MAX_D,
      Skydevices.ELITE_P55BMAXB,
      Skydevices.ELITE_P55LIFE,
      Skydevices.ELITE_P55MANAL,
      Skydevices.ELITE_P55MAX,
      Skydevices.ELITE_P55MAXA,
      Skydevices.ELITE_P55MUSAN,
      Skydevices.ELITE_P55MXUS,
      Skydevices.ELITE_P55US,
      Skydevices.ELITE_V55,
      Skydevices.PLATINUM_H5_PLUS,
      Skydevices.PLATINUM_J5,
      Skydevices.PLATINUM_J5US,
      Skydevices.SKY_B63,
      Skydevices.SKY_B632NUS,
      Skydevices.SKY_B63CUW,
      Skydevices.SKY_B63HA,
      Skydevices.SKY_B63NAL,
      Skydevices.SKY_B63NUSA,
      Skydevices.SKY_D63,
      Skydevices.SKY_PAD10MXUSNA,
      Skydevices.SKY_PADMAXNAL
  )

  /**
   * Get all device specifications for SKYEGG devices.
   * Useful for skyegg testing.
   */
  public fun getSkyeggDevices(): List<String> = listOf(
      Skyegg.K11_EEA,
      Skyegg.K11_US,
      Skyegg.K13_EEA,
      Skyegg.K13_US,
      Skyegg.K15_EEA,
      Skyegg.K15_US
  )

  /**
   * Get all device specifications for SKYHCN devices.
   * Useful for skyhcn testing.
   */
  public fun getSkyhcnDevices(): List<String> = listOf(
      Skyhcn.K1100UA
  )

  /**
   * Get all device specifications for SkyLife devices.
   * Useful for skylife testing.
   */
  public fun getSkylifeDevices(): List<String> = listOf(
      Skylife.DMTS17SS,
      Skylife.DMTS18SS,
      Skylife.INTEKS19SS,
      Skylife.INTEKS22SS,
      Skylife.KSTB6165,
      Skylife.MA5000,
      Skylife.MA5100
  )

  /**
   * Get all device specifications for SkyNZ devices.
   * Useful for skynz testing.
   */
  public fun getSkynzDevices(): List<String> = listOf(
      Skynz.SEI700SKY,
      Skynz.SKYNZ3151
  )

  /**
   * Get all device specifications for SKYPerfectJSAT devices.
   * Useful for skyperfectjsat testing.
   */
  public fun getSkyperfectjsatDevices(): List<String> = listOf(
      Skyperfectjsat.SKP_IS401
  )

  /**
   * Get all device specifications for skyworth devices.
   * Useful for skyworth testing.
   */
  public fun getSkyworthDevices(): List<String> = listOf(
      Skyworth.ANAHEIM,
      Skyworth.BEOMIL,
      Skyworth.BOS,
      Skyworth.BYCULLA,
      Skyworth.ELEONAS,
      Skyworth.GRAPE,
      Skyworth.LAS,
      Skyworth.SHIBUYA,
      Skyworth.SHIMBASHI,
      Skyworth.SHINJUKU,
      Skyworth.SUNNYVALE,
      Skyworth.UMEDA,
      Skyworth.YYC,
      Skyworth.YYT
  )

  /**
   * Get all device specifications for SledovaniTV devices.
   * Useful for sledovanitv testing.
   */
  public fun getSledovanitvDevices(): List<String> = listOf(
      Sledovanitv.DV8220
  )

  /**
   * Get all device specifications for SMADL devices.
   * Useful for smadl testing.
   */
  public fun getSmadlDevices(): List<String> = listOf(
      Smadl.MATRI2,
      Smadl.SAFARI,
      Smadl.SAFARI_2,
      Smadl.SAFARI_2PLUS,
      Smadl.SMADL_ABAY5_PLUS,
      Smadl.SMADL_R35_FW
  )

  /**
   * Get all device specifications for SMART devices.
   * Useful for smart testing.
   */
  public fun getSmartDevices(): List<String> = listOf(
      Smart.ADVANCE_PRO,
      Smart.CORAL_4,
      Smart.E_PAD,
      Smart.GRAND,
      Smart.GROUNDHOG,
      Smart.HERO_A1,
      Smart.KOMODO,
      Smart.M20,
      Smart.M30,
      Smart.M50,
      Smart.MAX,
      Smart.SLIDE_LITE,
      Smart.SMART_HERO_II,
      Smart.SMART_PRIME_II
  )

  /**
   * Get all device specifications for SMART_KASSEL devices.
   * Useful for smart_kassel testing.
   */
  public fun getSmartKasselDevices(): List<String> = listOf(
      SmartKassel.SK3401,
      SmartKassel.SK3402,
      SmartKassel.SK3403,
      SmartKassel.SK3404,
      SmartKassel.SK3405,
      SmartKassel.SK3501,
      SmartKassel.SK5501,
      SmartKassel.SK5502
  )

  /**
   * Get all device specifications for SMART-TECHNOLOGY devices.
   * Useful for smart-technology testing.
   */
  public fun getSmartTechnologyDevices(): List<String> = listOf(
      SmartTechnology.ELLINIKO,
      SmartTechnology.STANFORD,
      SmartTechnology.ZHONGSHAN
  )

  /**
   * Get all device specifications for SMART_TEK devices.
   * Useful for smart_tek testing.
   */
  public fun getSmartTekDevices(): List<String> = listOf(
      SmartTek.MR_POTATO_HEAD,
      SmartTek.PLAY_DOH
  )

  /**
   * Get all device specifications for Smart_Touch devices.
   * Useful for smart_touch testing.
   */
  public fun getSmartTouchDevices(): List<String> = listOf(
      SmartTouch.STG_IR13
  )

  /**
   * Get all device specifications for SMARTAB devices.
   * Useful for smartab testing.
   */
  public fun getSmartabDevices(): List<String> = listOf(
      Smartab.ST1009,
      Smartab.ST1009X,
      Smartab.ST1020,
      Smartab.ST7150,
      Smartab.ST7160,
      Smartab.ST7650,
      Smartab.ST7680,
      Smartab.ST8888
  )

  /**
   * Get all device specifications for SMARTBOOK devices.
   * Useful for smartbook testing.
   */
  public fun getSmartbookDevices(): List<String> = listOf(
      Smartbook.S104G,
      Smartbook.S204G
  )

  /**
   * Get all device specifications for Smartec devices.
   * Useful for smartec testing.
   */
  public fun getSmartecDevices(): List<String> = listOf(
      Smartec.ATRACTIVO,
      Smartec.SMARTABS32,
      Smartec.SMARTABS4,
      Smartec.SMARTABX8
  )

  /**
   * Get all device specifications for SmartEver devices.
   * Useful for smartever testing.
   */
  public fun getSmarteverDevices(): List<String> = listOf(
      Smartever.SEOCHO,
      Smartever.SHILIN
  )

  /**
   * Get all device specifications for SMARTEX devices.
   * Useful for smartex testing.
   */
  public fun getSmartexDevices(): List<String> = listOf(
      Smartex.M520,
      Smartex.M530,
      Smartex.M700,
      Smartex.P600
  )

  /**
   * Get all device specifications for Smartfren devices.
   * Useful for smartfren testing.
   */
  public fun getSmartfrenDevices(): List<String> = listOf(
      Smartfren.A16C3H,
      Smartfren.A26C4H,
      Smartfren.A36C5H,
      Smartfren.B16C2H,
      Smartfren.B26D2H,
      Smartfren.G36C1H,
      Smartfren.HS8916QC,
      Smartfren.HS8929QC,
      Smartfren.MSM8909QC
  )

  /**
   * Get all device specifications for Smarti devices.
   * Useful for smarti testing.
   */
  public fun getSmartiDevices(): List<String> = listOf(
      Smarti.SMARTI_GEN_1,
      Smarti.SMARTI_GEN_2,
      Smarti.SMARTI_T2_PLUS
  )

  /**
   * Get all device specifications for SmartLabs devices.
   * Useful for smartlabs testing.
   */
  public fun getSmartlabsDevices(): List<String> = listOf(
      Smartlabs.SML5442TW
  )

  /**
   * Get all device specifications for SMARTLIFE devices.
   * Useful for smartlife testing.
   */
  public fun getSmartlifeDevices(): List<String> = listOf(
      Smartlife.SL_TAB10232
  )

  /**
   * Get all device specifications for Smartron devices.
   * Useful for smartron testing.
   */
  public fun getSmartronDevices(): List<String> = listOf(
      Smartron.P840F12,
      Smartron.RIMO01A,
      Smartron.RIMO02A
  )

  /**
   * Get all device specifications for Smarttech devices.
   * Useful for smarttech testing.
   */
  public fun getSmarttechDevices(): List<String> = listOf(
      Smarttech.COTTONGREEN,
      Smarttech.GUANDU,
      Smarttech.MARINA,
      Smarttech.MARTIN,
      Smarttech.TAMACHI,
      Smarttech.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for SmartTV devices.
   * Useful for smarttv testing.
   */
  public fun getSmarttvDevices(): List<String> = listOf(
      Smarttv.SMARTTV
  )

  /**
   * Get all device specifications for SmartVU devices.
   * Useful for smartvu testing.
   */
  public fun getSmartvuDevices(): List<String> = listOf(
      Smartvu.IAD,
      Smartvu.ICN,
      Smartvu.SEI730BSVU
  )

  /**
   * Get all device specifications for smaTY devices.
   * Useful for smaty testing.
   */
  public fun getSmatyDevices(): List<String> = listOf(
      Smaty.PIONEER
  )

  /**
   * Get all device specifications for Smile devices.
   * Useful for smile testing.
   */
  public fun getSmileDevices(): List<String> = listOf(
      Smile.A955Z
  )

  /**
   * Get all device specifications for Smooth devices.
   * Useful for smooth testing.
   */
  public fun getSmoothDevices(): List<String> = listOf(
      Smooth.SMOOTH626
  )

  /**
   * Get all device specifications for SnT devices.
   * Useful for snt testing.
   */
  public fun getSntDevices(): List<String> = listOf(
      Snt._8788_7,
      Snt.C20
  )

  /**
   * Get all device specifications for SocialPhone_700 devices.
   * Useful for socialphone_700 testing.
   */
  public fun getSocialphone700Devices(): List<String> = listOf(
      Socialphone700.TABLET_DL_3420
  )

  /**
   * Get all device specifications for soda devices.
   * Useful for soda testing.
   */
  public fun getSodaDevices(): List<String> = listOf(
      Soda.NOTE_12,
      Soda.NOTE_12PRO,
      Soda.ROCK_30
  )

  /**
   * Get all device specifications for SoftBank devices.
   * Useful for softbank testing.
   */
  public fun getSoftbankDevices(): List<String> = listOf(
      Softbank._501LV,
      Softbank.Z8851S
  )

  /**
   * Get all device specifications for SOHO_STYLE devices.
   * Useful for soho_style testing.
   */
  public fun getSohoStyleDevices(): List<String> = listOf(
      SohoStyle.S1582C,
      SohoStyle.S1586K,
      SohoStyle.S65,
      SohoStyle.S6561,
      SohoStyle.SS5114G,
      SohoStyle.SS5314G,
      SohoStyle.SS5424G,
      SohoStyle.SS5514G,
      SohoStyle.SS5539G
  )

  /**
   * Get all device specifications for SOLONE devices.
   * Useful for solone testing.
   */
  public fun getSoloneDevices(): List<String> = listOf(
      Solone.E1457,
      Solone.W1450,
      Solone.W1452
  )

  /**
   * Get all device specifications for SONEVIEW devices.
   * Useful for soneview testing.
   */
  public fun getSoneviewDevices(): List<String> = listOf(
      Soneview.MOUNTBAKER,
      Soneview.SV_TAB10
  )

  /**
   * Get all device specifications for Sonim devices.
   * Useful for sonim testing.
   */
  public fun getSonimDevices(): List<String> = listOf(
      Sonim.RS60,
      Sonim.RS80,
      Sonim.X400,
      Sonim.X800,
      Sonim.X801,
      Sonim.X802,
      Sonim.XP6700,
      Sonim.XP6700Z1,
      Sonim.XP7700,
      Sonim.XP7700Z1,
      Sonim.XP8800,
      Sonim.XP9900
  )

  /**
   * Get all device specifications for SONIQ devices.
   * Useful for soniq testing.
   */
  public fun getSoniqDevices(): List<String> = listOf(
      Soniq.HANYANG,
      Soniq.MATEO,
      Soniq.OSAKI
  )

  /**
   * Get all device specifications for Sony devices.
   * Useful for sony testing.
   */
  public fun getSonyDevices(): List<String> = listOf(
      Sony._402SO,
      Sony._501SO,
      Sony._502SO,
      Sony._601SO,
      Sony._602SO,
      Sony._701SO,
      Sony._702SO,
      Sony._801SO,
      Sony._802SO,
      Sony._901SO,
      Sony._902SO,
      Sony.A001SO,
      Sony.A002SO,
      Sony.A101SO,
      Sony.A102SO,
      Sony.A103SO,
      Sony.A201SO,
      Sony.A202SO,
      Sony.A203SO,
      Sony.A204SO,
      Sony.A301SO,
      Sony.A302SO,
      Sony.A401SO,
      Sony.A402SO,
      Sony.BRAVIA_AE2,
      Sony.BRAVIA_AE_M6L,
      Sony.BRAVIA_ATV2,
      Sony.BRAVIA_ATV3_2K,
      Sony.BRAVIA_ATV3_4K,
      Sony.BRAVIA_BF1,
      Sony.BRAVIA_UR1_4K,
      Sony.BRAVIA_UR2_4K,
      Sony.BRAVIA_UR3,
      Sony.BRAVIA_VH1,
      Sony.BRAVIA_VH2,
      Sony.BRAVIA_VH21,
      Sony.BRAVIA_VH22,
      Sony.BRAVIA_VU1,
      Sony.BRAVIA_VU1_2K,
      Sony.BRAVIA_VU1_4K,
      Sony.BRAVIA_VU31_2K,
      Sony.BRAVIA_VU31_4K,
      Sony.BRAVIA_VU3_2K,
      Sony.BRAVIA_VU3_4K,
      Sony.C1504,
      Sony.C1505,
      Sony.C1604,
      Sony.C1605,
      Sony.C1904,
      Sony.C1905,
      Sony.C2004,
      Sony.C2005,
      Sony.C2104,
      Sony.C2105,
      Sony.C2304,
      Sony.C2305,
      Sony.C5302,
      Sony.C5303,
      Sony.C5306,
      Sony.C5502,
      Sony.C5503,
      Sony.C6502,
      Sony.C6503,
      Sony.C6506,
      Sony.C6602,
      Sony.C6603,
      Sony.C6606,
      Sony.C6616,
      Sony.C6802,
      Sony.C6806,
      Sony.C6833,
      Sony.C6843,
      Sony.C6902,
      Sony.C6903,
      Sony.C6906,
      Sony.C6916,
      Sony.C6943,
      Sony.D2004,
      Sony.D2005,
      Sony.D2105,
      Sony.D2114,
      Sony.D2202,
      Sony.D2203,
      Sony.D2206,
      Sony.D2212,
      Sony.D2243,
      Sony.D2302,
      Sony.D2303,
      Sony.D2305,
      Sony.D2306,
      Sony.D2403,
      Sony.D2406,
      Sony.D2502,
      Sony.D2533,
      Sony.D5103,
      Sony.D5106,
      Sony.D5303,
      Sony.D5306,
      Sony.D5316,
      Sony.D5322,
      Sony.D5503,
      Sony.D5788,
      Sony.D5803,
      Sony.D5833,
      Sony.D6502,
      Sony.D6503,
      Sony.D6543,
      Sony.D6563,
      Sony.D6603,
      Sony.D6616,
      Sony.D6633,
      Sony.D6643,
      Sony.D6646,
      Sony.D6653,
      Sony.D6683,
      Sony.E2003,
      Sony.E2006,
      Sony.E2033,
      Sony.E2053,
      Sony.E2104,
      Sony.E2105,
      Sony.E2115,
      Sony.E2124,
      Sony.E2303,
      Sony.E2306,
      Sony.E2312,
      Sony.E2333,
      Sony.E2353,
      Sony.E2363,
      Sony.E5303,
      Sony.E5306,
      Sony.E5333,
      Sony.E5343,
      Sony.E5353,
      Sony.E5363,
      Sony.E5506,
      Sony.E5533,
      Sony.E5553,
      Sony.E5563,
      Sony.E5603,
      Sony.E5606,
      Sony.E5633,
      Sony.E5653,
      Sony.E5663,
      Sony.E5803,
      Sony.E5823,
      Sony.E6533,
      Sony.E6553,
      Sony.E6603,
      Sony.E6633,
      Sony.E6653,
      Sony.E6683,
      Sony.E6833,
      Sony.E6853,
      Sony.E6883,
      Sony.F3111,
      Sony.F3112,
      Sony.F3113,
      Sony.F3115,
      Sony.F3116,
      Sony.F3211,
      Sony.F3212,
      Sony.F3213,
      Sony.F3215,
      Sony.F3216,
      Sony.F3311,
      Sony.F3313,
      Sony.F5121,
      Sony.F5122,
      Sony.F5321,
      Sony.F8131,
      Sony.F8132,
      Sony.F8331,
      Sony.F8332,
      Sony.G1109,
      Sony.G2199,
      Sony.G2299,
      Sony.G3112,
      Sony.G3116,
      Sony.G3121,
      Sony.G3123,
      Sony.G3125,
      Sony.G3212,
      Sony.G3221,
      Sony.G3223,
      Sony.G3226,
      Sony.G3311,
      Sony.G3312,
      Sony.G3313,
      Sony.G3412,
      Sony.G3416,
      Sony.G3421,
      Sony.G3423,
      Sony.G3426,
      Sony.G8141,
      Sony.G8142,
      Sony.G8188,
      Sony.G8231,
      Sony.G8232,
      Sony.G8341,
      Sony.G8342,
      Sony.G8343,
      Sony.G8441,
      Sony.H3113,
      Sony.H3123,
      Sony.H3133,
      Sony.H3213,
      Sony.H3223,
      Sony.H3311,
      Sony.H3321,
      Sony.H3413,
      Sony.H4113,
      Sony.H4133,
      Sony.H4213,
      Sony.H4233,
      Sony.H4311,
      Sony.H4331,
      Sony.H4413,
      Sony.H4493,
      Sony.H8116,
      Sony.H8166,
      Sony.H8216,
      Sony.H8266,
      Sony.H8276,
      Sony.H8296,
      Sony.H8314,
      Sony.H8324,
      Sony.H8416,
      Sony.H9436,
      Sony.H9493,
      Sony.I3113,
      Sony.I3123,
      Sony.I3213,
      Sony.I3223,
      Sony.I3312,
      Sony.I4113,
      Sony.I4193,
      Sony.I4213,
      Sony.I4293,
      Sony.I4312,
      Sony.I4332,
      Sony.ICX1237,
      Sony.ICX1240,
      Sony.ICX1265,
      Sony.J3173,
      Sony.J3273,
      Sony.J8110,
      Sony.J8170,
      Sony.J8210,
      Sony.J8270,
      Sony.J9110,
      Sony.J9150,
      Sony.J9210,
      Sony.J9260,
      Sony.L39H,
      Sony.L39T,
      Sony.L39U,
      Sony.LT25I,
      Sony.LT29I,
      Sony.LT30P,
      Sony.PDT_FP1,
      Sony.SGP311,
      Sony.SGP312,
      Sony.SGP321,
      Sony.SGP351,
      Sony.SGP412,
      Sony.SGP511,
      Sony.SGP512,
      Sony.SGP521,
      Sony.SGP551,
      Sony.SGP611,
      Sony.SGP612,
      Sony.SGP621,
      Sony.SGP641,
      Sony.SGP712,
      Sony.SGP771,
      Sony.SOV42_U,
      Sony.ST26A,
      Sony.ST26I,
      Sony.SVP_DTV15,
      Sony.TXS03,
      Sony.XL39H,
      Sony.XQ_AD51,
      Sony.XQ_AD52,
      Sony.XQ_AQ52,
      Sony.XQ_AQ62,
      Sony.XQ_AS42,
      Sony.XQ_AS52,
      Sony.XQ_AS62,
      Sony.XQ_AS72,
      Sony.XQ_AT42,
      Sony.XQ_AT51,
      Sony.XQ_AT52,
      Sony.XQ_AT72,
      Sony.XQ_AU42,
      Sony.XQ_AU51,
      Sony.XQ_AU52,
      Sony.XQ_BC42,
      Sony.XQ_BC52,
      Sony.XQ_BC62,
      Sony.XQ_BC72,
      Sony.XQ_BE42,
      Sony.XQ_BE52,
      Sony.XQ_BE62,
      Sony.XQ_BE72,
      Sony.XQ_BQ42,
      Sony.XQ_BQ52,
      Sony.XQ_BQ62,
      Sony.XQ_BQ72,
      Sony.XQ_BT44,
      Sony.XQ_BT52,
      Sony.XQ_CC44,
      Sony.XQ_CC54,
      Sony.XQ_CC72,
      Sony.XQ_CQ44,
      Sony.XQ_CQ54,
      Sony.XQ_CQ62,
      Sony.XQ_CQ72,
      Sony.XQ_CT44,
      Sony.XQ_CT54,
      Sony.XQ_CT62,
      Sony.XQ_CT72,
      Sony.XQ_DC44,
      Sony.XQ_DC54,
      Sony.XQ_DC72,
      Sony.XQ_DE44,
      Sony.XQ_DE54,
      Sony.XQ_DE72,
      Sony.XQ_DQ44,
      Sony.XQ_DQ54,
      Sony.XQ_DQ62,
      Sony.XQ_DQ72,
      Sony.XQ_EC44,
      Sony.XQ_EC54,
      Sony.XQ_EC72,
      Sony.XQ_ES44,
      Sony.XQ_ES54,
      Sony.XQ_ES72,
      Sony.XQ_FS
  )

  /**
   * Get all device specifications for SonyAudio devices.
   * Useful for sonyaudio testing.
   */
  public fun getSonyaudioDevices(): List<String> = listOf(
      Sonyaudio.ICX1293,
      Sonyaudio.ICX1295,
      Sonyaudio.ICX1298,
      Sonyaudio.ICX1301,
      Sonyaudio.ICX1302
  )

  /**
   * Get all device specifications for sooka devices.
   * Useful for sooka testing.
   */
  public fun getSookaDevices(): List<String> = listOf(
      Sooka.SOOKA_TV_V1
  )

  /**
   * Get all device specifications for SORIANA devices.
   * Useful for soriana testing.
   */
  public fun getSorianaDevices(): List<String> = listOf(
      Soriana.BE_ETS
  )

  /**
   * Get all device specifications for Sosh devices.
   * Useful for sosh testing.
   */
  public fun getSoshDevices(): List<String> = listOf(
      Sosh.SOSHPHONE
  )

  /**
   * Get all device specifications for Soultech devices.
   * Useful for soultech testing.
   */
  public fun getSoultechDevices(): List<String> = listOf(
      Soultech.TB001
  )

  /**
   * Get all device specifications for SOUTH devices.
   * Useful for south testing.
   */
  public fun getSouthDevices(): List<String> = listOf(
      South.H6LM
  )

  /**
   * Get all device specifications for SOWLY devices.
   * Useful for sowly testing.
   */
  public fun getSowlyDevices(): List<String> = listOf(
      Sowly.AG_1088_A133,
      Sowly.AG_1088_A133P
  )

  /**
   * Get all device specifications for SoyMomo devices.
   * Useful for soymomo testing.
   */
  public fun getSoymomoDevices(): List<String> = listOf(
      Soymomo.PRO_V1,
      Soymomo.SOYMOMO_LITE_V1,
      Soymomo.SOYMOMO_PRO_EU_V1,
      Soymomo.SOYMOMO_PRO_V2,
      Soymomo.SOYMOMO_PRO_V2_24
  )

  /**
   * Get all device specifications for SoyMomo_Tablet_LITE_3 devices.
   * Useful for soymomo_tablet_lite_3 testing.
   */
  public fun getSoymomoTabletLite3Devices(): List<String> = listOf(
      SoymomoTabletLite3.SOYMOMO_LITE_V3
  )

  /**
   * Get all device specifications for SPARK devices.
   * Useful for spark testing.
   */
  public fun getSparkDevices(): List<String> = listOf(
      Spark.SPARK_PLUS_3
  )

  /**
   * Get all device specifications for Sparx devices.
   * Useful for sparx testing.
   */
  public fun getSparxDevices(): List<String> = listOf(
      Sparx.NEO5,
      Sparx.NEO8LITE,
      Sparx.NEO_11,
      Sparx.NEO_5_PLUS,
      Sparx.NEO_5_PRO,
      Sparx.NEO_6,
      Sparx.NEO_7,
      Sparx.NEO_7_PRO,
      Sparx.NEO_7_ULTRA,
      Sparx.NEO_8,
      Sparx.NEO_8_PLUS,
      Sparx.NEO_8_PRO,
      Sparx.NEO_X,
      Sparx.NOTE_12,
      Sparx.NOTE_20,
      Sparx.S3,
      Sparx.S6,
      Sparx.S9,
      Sparx.SPARX_EDGE_20_PRO,
      Sparx.SPARX_NEO_9,
      Sparx.SPARX_S7,
      Sparx.ULTRA8,
      Sparx.ULTRA8PRO,
      Sparx.ULTRA_11,
      Sparx.ULTRA_8,
      Sparx.ULTRA_8_PRO,
      Sparx.ULTRA_8I
  )

  /**
   * Get all device specifications for SPC devices.
   * Useful for spc testing.
   */
  public fun getSpcDevices(): List<String> = listOf(
      Spc.APOLO,
      Spc.BLINK_10_1,
      Spc.DISCOVERY,
      Spc.DISCOVERY_2,
      Spc.DISCOVERY_2_ME,
      Spc.DISCOVERY_3,
      Spc.DISCOVERY_3_PRO,
      Spc.DISCOVERY_PRO,
      Spc.DISCOVERY_SE,
      Spc.GRAVITY_2,
      Spc.GRAVITY_2_MAX,
      Spc.GRAVITY_PRO_2,
      Spc.GRAVITY_SE,
      Spc.GRAVITY_ULTIMATE_2,
      Spc.GRAVITY2_4G,
      Spc.GRAVITY3G,
      Spc.GRAVITY4G,
      Spc.GRAVITY_3,
      Spc.GRAVITY_3_4G,
      Spc.GRAVITY_3_MINI,
      Spc.GRAVITY_3_PRO,
      Spc.GRAVITY_3_SE,
      Spc.GRAVITY_3G,
      Spc.GRAVITY_4,
      Spc.GRAVITY_4_PLUS,
      Spc.GRAVITY_4G,
      Spc.GRAVITY_5_EEA,
      Spc.GRAVITY_5_PRO,
      Spc.GRAVITY_5_SE_EEA,
      Spc.GRAVITY_6_10,
      Spc.GRAVITY_6_11,
      Spc.GRAVITY_MAX,
      Spc.GRAVITY_OCTACORE,
      Spc.GRAVITY_PRO,
      Spc.HEAVEN_10_1,
      Spc.L52,
      Spc.L52_PRO,
      Spc.L53,
      Spc.L56,
      Spc.L60,
      Spc.L60_PRO,
      Spc.L60_TURBO,
      Spc.L70_LITE,
      Spc.L80,
      Spc.L80_S,
      Spc.LIGHTYEAR,
      Spc.LIGHTYEAR_2,
      Spc.LIGHTYEAR2_4G,
      Spc.MARTIN,
      Spc.SMART_2,
      Spc.SMART_3,
      Spc.SMART_MAX_2,
      Spc.SMART_PRO,
      Spc.SMART_ULTIMATE,
      Spc.SPC_GEN,
      Spc.SPC_GEN_LITE,
      Spc.SPC_GEN_MAX,
      Spc.SPC_GEN_PLUS,
      Spc.SPC_L52X,
      Spc.SPC_SMART,
      Spc.SPC_SMART_LITE,
      Spc.SPC_SMART_MAX,
      Spc.SPC_SMART_PLUS,
      Spc.ZEUS_4G,
      Spc.ZEUS_4G_PRO
  )

  /**
   * Get all device specifications for SPECKTRON devices.
   * Useful for specktron testing.
   */
  public fun getSpecktronDevices(): List<String> = listOf(
      Specktron.CDX,
      Specktron.UDX_SERIES
  )

  /**
   * Get all device specifications for SPECTRA devices.
   * Useful for spectra testing.
   */
  public fun getSpectraDevices(): List<String> = listOf(
      Spectra.BCAT,
      Spectra.MOBILEMAPPER6,
      Spectra.TAP_POS
  )

  /**
   * Get all device specifications for Spectra_Geospatial devices.
   * Useful for spectra_geospatial testing.
   */
  public fun getSpectraGeospatialDevices(): List<String> = listOf(
      SpectraGeospatial.MM60_2
  )

  /**
   * Get all device specifications for SpectraGeospatial devices.
   * Useful for spectrageospatial testing.
   */
  public fun getSpectrageospatialDevices(): List<String> = listOf(
      Spectrageospatial.E7167
  )

  /**
   * Get all device specifications for Spectralink devices.
   * Useful for spectralink testing.
   */
  public fun getSpectralinkDevices(): List<String> = listOf(
      Spectralink.VC92,
      Spectralink.VERSITY
  )

  /**
   * Get all device specifications for SpectraMobile devices.
   * Useful for spectramobile testing.
   */
  public fun getSpectramobileDevices(): List<String> = listOf(
      Spectramobile.SPECTRA_J1,
      Spectramobile.SPECTRA_J1P,
      Spectramobile.SPECTRATAB1
  )

  /**
   * Get all device specifications for SpectraPrecision devices.
   * Useful for spectraprecision testing.
   */
  public fun getSpectraprecisionDevices(): List<String> = listOf(
      Spectraprecision.EE773X_4G,
      Spectraprecision.EE773X_WIFI
  )

  /**
   * Get all device specifications for speedata devices.
   * Useful for speedata testing.
   */
  public fun getSpeedataDevices(): List<String> = listOf(
      Speedata.FG60,
      Speedata.SD100
  )

  /**
   * Get all device specifications for SPEEDSTAR devices.
   * Useful for speedstar testing.
   */
  public fun getSpeedstarDevices(): List<String> = listOf(
      Speedstar.STARTAB_A324G
  )

  /**
   * Get all device specifications for Spider devices.
   * Useful for spider testing.
   */
  public fun getSpiderDevices(): List<String> = listOf(
      Spider.SPIDER_A10,
      Spider.SPIDER_M10PRO
  )

  /**
   * Get all device specifications for SPJ devices.
   * Useful for spj testing.
   */
  public fun getSpjDevices(): List<String> = listOf(
      Spj.R1,
      Spj.R2,
      Spj.R3,
      Spj.R4
  )

  /**
   * Get all device specifications for SPRANGE devices.
   * Useful for sprange testing.
   */
  public fun getSprangeDevices(): List<String> = listOf(
      Sprange.SPRANGE_L8
  )

  /**
   * Get all device specifications for SPRD devices.
   * Useful for sprd testing.
   */
  public fun getSprdDevices(): List<String> = listOf(
      Sprd.SP7731E_1H10,
      Sprd.SP9832A_2H11_VOLTE,
      Sprd.UMS512_1H10
  )

  /**
   * Get all device specifications for SPURT devices.
   * Useful for spurt testing.
   */
  public fun getSpurtDevices(): List<String> = listOf(
      Spurt.K100,
      Spurt.K200,
      Spurt.SPURT_K300,
      Spurt.SPURT_K400,
      Spurt.SPURT_K500,
      Spurt.SPURT_K600,
      Spurt.SPURT_K700,
      Spurt.SPURT_K800
  )

  /**
   * Get all device specifications for SQ devices.
   * Useful for sq testing.
   */
  public fun getSqDevices(): List<String> = listOf(
      Sq.HOPE10_MAX,
      Sq.HOPE8_MAX
  )

  /**
   * Get all device specifications for SQOOL devices.
   * Useful for sqool testing.
   */
  public fun getSqoolDevices(): List<String> = listOf(
      Sqool.SQOOL_V4,
      Sqool.SQOOL_V41
  )

  /**
   * Get all device specifications for SriLankaTelecom devices.
   * Useful for srilankatelecom testing.
   */
  public fun getSrilankatelecomDevices(): List<String> = listOf(
      Srilankatelecom.DV8040
  )

  /**
   * Get all device specifications for SSA devices.
   * Useful for ssa testing.
   */
  public fun getSsaDevices(): List<String> = listOf(
      Ssa.MID_1015T
  )

  /**
   * Get all device specifications for SSmooth devices.
   * Useful for ssmooth testing.
   */
  public fun getSsmoothDevices(): List<String> = listOf(
      Ssmooth.NOVA_6_5,
      Ssmooth.SMOOTH5_5_LITE,
      Ssmooth.SMOOTH6_1,
      Ssmooth.SMOOTH6_26_LITE,
      Ssmooth.SMOOTH6_26_MAX,
      Ssmooth.SMOOTH6_26_PRO,
      Ssmooth.SMOOTH6_5,
      Ssmooth.SMOOTH_5_0_2022,
      Ssmooth.SMOOTH_5_5_MAX,
      Ssmooth.SMOOTH_6_0,
      Ssmooth.SMOOTH_8GT,
      Ssmooth.SMOOTH_NOTE_6_8,
      Ssmooth.SMV15523216,
      Ssmooth.SSMOOTH5_5,
      Ssmooth.SSMOOTH_5,
      Ssmooth.SSMOOTH_5_HD,
      Ssmooth.VISION,
      Ssmooth.VISION_PLUS
  )

  /**
   * Get all device specifications for STAR devices.
   * Useful for star testing.
   */
  public fun getStarDevices(): List<String> = listOf(
      Star.Y11
  )

  /**
   * Get all device specifications for STAR-TRACK devices.
   * Useful for star-track testing.
   */
  public fun getStarTrackDevices(): List<String> = listOf(
      StarTrack.LAVENDER
  )

  /**
   * Get all device specifications for STAR-X devices.
   * Useful for star-x testing.
   */
  public fun getStarXDevices(): List<String> = listOf(
      StarX.MARINA,
      StarX.NAGATA,
      StarX.TAMACHI,
      StarX.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for Starboard devices.
   * Useful for starboard testing.
   */
  public fun getStarboardDevices(): List<String> = listOf(
      Starboard.YL
  )

  /**
   * Get all device specifications for StarHub devices.
   * Useful for starhub testing.
   */
  public fun getStarhubDevices(): List<String> = listOf(
      Starhub.M393VSB_STARHUB,
      Starhub.NVSH800H1
  )

  /**
   * Get all device specifications for STARK_FUTURE devices.
   * Useful for stark_future testing.
   */
  public fun getStarkFutureDevices(): List<String> = listOf(
      StarkFuture.VARG
  )

  /**
   * Get all device specifications for StarkFuture devices.
   * Useful for starkfuture testing.
   */
  public fun getStarkfutureDevices(): List<String> = listOf(
      Starkfuture.ARKENSTONE,
      Starkfuture.ARKENSTONE_US
  )

  /**
   * Get all device specifications for starlight devices.
   * Useful for starlight testing.
   */
  public fun getStarlightDevices(): List<String> = listOf(
      Starlight.ALPHA_300,
      Starlight.ALPHA_400,
      Starlight.C_NOTE,
      Starlight.C_NOTE_PRO,
      Starlight.GIONEE_STAR,
      Starlight.I_STAR,
      Starlight.I_STAR_PLUS,
      Starlight.I_STAR_TWO,
      Starlight.MILAN_2G,
      Starlight.MILAN_PRO,
      Starlight.MY_STAR_18,
      Starlight.MY_STAR_X,
      Starlight.RIO_STAR,
      Starlight.SAFARI,
      Starlight.STAR_MIX,
      Starlight.STAR_MIX_2,
      Starlight.STAR_PLUS,
      Starlight.STAR_PLUS_PLUS,
      Starlight.STAR_TWO,
      Starlight.TAMACHI,
      Starlight.UMI_G,
      Starlight.VEGAS,
      Starlight.VENUS,
      Starlight.VENUS_PLUS,
      Starlight.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for Starmobile devices.
   * Useful for starmobile testing.
   */
  public fun getStarmobileDevices(): List<String> = listOf(
      Starmobile.PLAY_CLICK_LTE,
      Starmobile.UP_PRIME
  )

  /**
   * Get all device specifications for STARSHINE devices.
   * Useful for starshine testing.
   */
  public fun getStarshineDevices(): List<String> = listOf(
      Starshine.MOUNTBAKER
  )

  /**
   * Get all device specifications for STboard devices.
   * Useful for stboard testing.
   */
  public fun getStboardDevices(): List<String> = listOf(
      Stboard.HJ_TD
  )

  /**
   * Get all device specifications for STC devices.
   * Useful for stc testing.
   */
  public fun getStcDevices(): List<String> = listOf(
      Stc.SEI560STC
  )

  /**
   * Get all device specifications for STE devices.
   * Useful for ste testing.
   */
  public fun getSteDevices(): List<String> = listOf(
      Ste.S11
  )

  /**
   * Get all device specifications for Steren devices.
   * Useful for steren testing.
   */
  public fun getSterenDevices(): List<String> = listOf(
      Steren.INTV,
      Steren.INTV_1000,
      Steren.INTV_ASIST
  )

  /**
   * Get all device specifications for STF devices.
   * Useful for stf testing.
   */
  public fun getStfDevices(): List<String> = listOf(
      Stf.AURA,
      Stf.BLOCK,
      Stf.BLOCK_3,
      Stf.BLOCK_GO,
      Stf.BLOCK_MINI
  )

  /**
   * Get all device specifications for STG devices.
   * Useful for stg testing.
   */
  public fun getStgDevices(): List<String> = listOf(
      Stg.STG_A1,
      Stg.STG_A1_PRO,
      Stg.STG_A2_PRO,
      Stg.STG_B10,
      Stg.STG_C10,
      Stg.STG_K10,
      Stg.STG_P10,
      Stg.STG_S1,
      Stg.STG_S10,
      Stg.STG_S20,
      Stg.STG_S30,
      Stg.STG_X1,
      Stg.STG_X2,
      Stg.STG_X3
  )

  /**
   * Get all device specifications for STG_Telecom devices.
   * Useful for stg_telecom testing.
   */
  public fun getStgTelecomDevices(): List<String> = listOf(
      StgTelecom.STG_KEYTAB,
      StgTelecom.STG_H10,
      StgTelecom.STG_X20
  )

  /**
   * Get all device specifications for STIP devices.
   * Useful for stip testing.
   */
  public fun getStipDevices(): List<String> = listOf(
      Stip.MS9
  )

  /**
   * Get all device specifications for STK devices.
   * Useful for stk testing.
   */
  public fun getStkDevices(): List<String> = listOf(
      Stk.CAYENNE,
      Stk.EVO_2,
      Stk.STK_SYNC_5E,
      Stk.STK_TRANSPORTER_1,
      Stk.STK_X2,
      Stk.X3
  )

  /**
   * Get all device specifications for Stofa devices.
   * Useful for stofa testing.
   */
  public fun getStofaDevices(): List<String> = listOf(
      Stofa.IC1130
  )

  /**
   * Get all device specifications for STOREX devices.
   * Useful for storex testing.
   */
  public fun getStorexDevices(): List<String> = listOf(
      Storex.MDDDI13310,
      Storex.MDDDI13311
  )

  /**
   * Get all device specifications for strawberry devices.
   * Useful for strawberry testing.
   */
  public fun getStrawberryDevices(): List<String> = listOf(
      Strawberry.SX
  )

  /**
   * Get all device specifications for STREAM devices.
   * Useful for stream testing.
   */
  public fun getStreamDevices(): List<String> = listOf(
      Stream.B1S,
      Stream.B2PLUS,
      Stream.B3PRO,
      Stream.CAPITOLHILL,
      Stream.DV8555_ALTICE,
      Stream.EVEREST,
      Stream.HT16,
      Stream.KEONEAE,
      Stream.MIRROR,
      Stream.R10G,
      Stream.SHARK
  )

  /**
   * Get all device specifications for STREAM-SYSTEM devices.
   * Useful for stream-system testing.
   */
  public fun getStreamSystemDevices(): List<String> = listOf(
      StreamSystem.R1,
      StreamSystem.R2,
      StreamSystem.R3,
      StreamSystem.R3_GTV,
      StreamSystem.R4,
      StreamSystem.R4_GTV,
      StreamSystem.VILEPARLE
  )

  /**
   * Get all device specifications for Strong devices.
   * Useful for strong testing.
   */
  public fun getStrongDevices(): List<String> = listOf(
      Strong.BANGBAE,
      Strong.KOMAGOME,
      Strong.LAS,
      Strong.LONGSHAN,
      Strong.R1,
      Strong.R2,
      Strong.REDWOOD,
      Strong.RMQ,
      Strong.YDA,
      Strong.YYC,
      Strong.YYT,
      Strong.ZRH
  )

  /**
   * Get all device specifications for STRONG-ZWL devices.
   * Useful for strong-zwl testing.
   */
  public fun getStrongZwlDevices(): List<String> = listOf(
      StrongZwl.HP40A1,
      StrongZwl.HP44H
  )

  /**
   * Get all device specifications for STUDYNLEARN devices.
   * Useful for studynlearn testing.
   */
  public fun getStudynlearnDevices(): List<String> = listOf(
      Studynlearn.MENSA_AN64
  )

  /**
   * Get all device specifications for STYLO devices.
   * Useful for stylo testing.
   */
  public fun getStyloDevices(): List<String> = listOf(
      Stylo._10_NOTEBOOK,
      Stylo._221,
      Stylo._721,
      Stylo._721_PRO,
      Stylo.AIR,
      Stylo.APEX_5G,
      Stylo.ARCTIC,
      Stylo.AS210291,
      Stylo.AURORA,
      Stylo.AW230345,
      Stylo.BOLD,
      Stylo.BOLD_PLUS,
      Stylo.BRAVE,
      Stylo.COMET,
      Stylo.CPE91,
      Stylo.DQR22,
      Stylo.DVK82_MERCURY,
      Stylo.DVK83,
      Stylo.DVK87_ORION_8_TAB,
      Stylo.DVK88,
      Stylo.ENERGY,
      Stylo.GALAXY,
      Stylo.INKOSI,
      Stylo.INKOSI_PRO,
      Stylo.INKOSI_PRO_4G,
      Stylo.INKULU_PRO,
      Stylo.ITHEMBA,
      Stylo.LIFE_2,
      Stylo.MARVEL,
      Stylo.MATRIX,
      Stylo.MAVERICK,
      Stylo.MIRAGE,
      Stylo.MOSCOW,
      Stylo.ORION_TAB_10_4G,
      Stylo.ORION_TAB_8_4G,
      Stylo.PHOENIX,
      Stylo.QUANTUM,
      Stylo.RAIN,
      Stylo.S40_LIFE,
      Stylo.S40_VIDA,
      Stylo.S40_VINO,
      Stylo.S40_VISTA,
      Stylo.S49_ECO,
      Stylo.S49_MONO,
      Stylo.S501,
      Stylo.S55_NOVA,
      Stylo.S56_MIST,
      Stylo.S64_ALPHA,
      Stylo.S9_TOPAZ,
      Stylo.SATURN,
      Stylo.SIRIUS_PLUS_TAB_10,
      Stylo.SIRIUS_TAB_8,
      Stylo.SOLAR,
      Stylo.SONIC,
      Stylo.STEP_UP,
      Stylo.STYLO_521,
      Stylo.STYLO_S50_GRANITE,
      Stylo.STYLO_VIVA,
      Stylo.SWIFT_4G,
      Stylo.TITAN,
      Stylo.UNIVERSE,
      Stylo.V,
      Stylo.VERTIGO,
      Stylo.VS571,
      Stylo.X5,
      Stylo.X7
  )

  /**
   * Get all device specifications for STYLOS devices.
   * Useful for stylos testing.
   */
  public fun getStylosDevices(): List<String> = listOf(
      Stylos.TAB104,
      Stylos.TAB8B,
      Stylos.TAB8F,
      Stylos.TARISTAB2
  )

  /**
   * Get all device specifications for StylosTech devices.
   * Useful for stylostech testing.
   */
  public fun getStylostechDevices(): List<String> = listOf(
      Stylostech.TAB2,
      Stylostech.TAB4
  )

  /**
   * Get all device specifications for SUAAT devices.
   * Useful for suaat testing.
   */
  public fun getSuaatDevices(): List<String> = listOf(
      Suaat.S10_U_EEA,
      Suaat.S10_U_US,
      Suaat.S3_EEA,
      Suaat.S3_US,
      Suaat.S6_EEA,
      Suaat.S6_US
  )

  /**
   * Get all device specifications for SUGAR devices.
   * Useful for sugar testing.
   */
  public fun getSugarDevices(): List<String> = listOf(
      Sugar.I9071AE,
      Sugar.P101BS,
      Sugar.P201AS,
      Sugar.P210CN,
      Sugar.P312CS_TW,
      Sugar.P611BN,
      Sugar.P700AS,
      Sugar.S9121,
      Sugar.SUGAR_C12,
      Sugar.SUGAR_C60,
      Sugar.SUGAR_P1,
      Sugar.SUGAR_P11,
      Sugar.SUGAR_S50,
      Sugar.SUGAR_S55,
      Sugar.SUGAR_Y12S,
      Sugar.SUGAR_Y13S,
      Sugar.SUGAR_Y16,
      Sugar.SUGAR_Y18,
      Sugar.V12BNS,
      Sugar.V730_64,
      Sugar.V830_64,
      Sugar.X600AS,
      Sugar.X600AS_HK,
      Sugar.X800AS
  )

  /**
   * Get all device specifications for Sumtec devices.
   * Useful for sumtec testing.
   */
  public fun getSumtecDevices(): List<String> = listOf(
      Sumtec.ATL
  )

  /**
   * Get all device specifications for Sun_King devices.
   * Useful for sun_king testing.
   */
  public fun getSunKingDevices(): List<String> = listOf(
      SunKing.EZ1_GO,
      SunKing.EZ_1
  )

  /**
   * Get all device specifications for Sunbio devices.
   * Useful for sunbio testing.
   */
  public fun getSunbioDevices(): List<String> = listOf(
      Sunbio.SB_TM700
  )

  /**
   * Get all device specifications for Sunbrite devices.
   * Useful for sunbrite testing.
   */
  public fun getSunbriteDevices(): List<String> = listOf(
      Sunbrite.HUANGSHAN
  )

  /**
   * Get all device specifications for SUNCONNECTION devices.
   * Useful for sunconnection testing.
   */
  public fun getSunconnectionDevices(): List<String> = listOf(
      Sunconnection.SUNTB_01_GY
  )

  /**
   * Get all device specifications for Sunelan devices.
   * Useful for sunelan testing.
   */
  public fun getSunelanDevices(): List<String> = listOf(
      Sunelan.MOUNTAIN_M8,
      Sunelan.RIVER_X1,
      Sunelan.RIVER_X3
  )

  /**
   * Get all device specifications for SUNMAX devices.
   * Useful for sunmax testing.
   */
  public fun getSunmaxDevices(): List<String> = listOf(
      Sunmax.MODEL_3,
      Sunmax.MODEL_6,
      Sunmax.MODEL_6_4G,
      Sunmax.MODEL_6_PRO,
      Sunmax.MODEL_6_PRO_4G,
      Sunmax.MODEL_6_PRO_MAX,
      Sunmax.MODEL_6_PRO_MAX_4G,
      Sunmax.MODEL_D,
      Sunmax.MODEL_E,
      Sunmax.MODEL_E_4G,
      Sunmax.MODEL_ONE,
      Sunmax.MODEL_S,
      Sunmax.MODEL_S_4G,
      Sunmax.MODEL_T,
      Sunmax.MODEL_T1,
      Sunmax.MODEL_T2,
      Sunmax.MODEL_X,
      Sunmax.MODEL_X_4G_A,
      Sunmax.MODEL_Y,
      Sunmax.SUNMAX_MODEL_TAB_10,
      Sunmax.TAB_6
  )

  /**
   * Get all device specifications for SUNMI devices.
   * Useful for sunmi testing.
   */
  public fun getSunmiDevices(): List<String> = listOf(
      Sunmi.D3_PRO,
      Sunmi.D3MINI,
      Sunmi.K2,
      Sunmi.SUNMI_L2HNFC,
      Sunmi.SUNMI_L2KSNFC,
      Sunmi.SUNMI_L2S_PRO,
      Sunmi.T3_PRO,
      Sunmi.V2S,
      Sunmi.V2SNC,
      Sunmi.V2SPLUSNC,
      Sunmi.V3,
      Sunmi.V3_MIX
  )

  /**
   * Get all device specifications for Sunny devices.
   * Useful for sunny testing.
   */
  public fun getSunnyDevices(): List<String> = listOf(
      Sunny.SN10016,
      Sunny.SN7016,
      Sunny.TABLET,
      Sunny.YQB
  )

  /**
   * Get all device specifications for SunPhone devices.
   * Useful for sunphone testing.
   */
  public fun getSunphoneDevices(): List<String> = listOf(
      Sunphone.L4
  )

  /**
   * Get all device specifications for sunstech devices.
   * Useful for sunstech testing.
   */
  public fun getSunstechDevices(): List<String> = listOf(
      Sunstech.MARTIN,
      Sunstech.TAB1011,
      Sunstech.TAB1012,
      Sunstech.TAB1081,
      Sunstech.TAB1090
  )

  /**
   * Get all device specifications for SUNTAK devices.
   * Useful for suntak testing.
   */
  public fun getSuntakDevices(): List<String> = listOf(
      Suntak.MOJO,
      Suntak.MOX_2
  )

  /**
   * Get all device specifications for SUNWIND devices.
   * Useful for sunwind testing.
   */
  public fun getSunwindDevices(): List<String> = listOf(
      Sunwind.SS1259PG,
      Sunwind.SS1260PG,
      Sunwind.SS1270PL,
      Sunwind.SS7238PG,
      Sunwind.SS7265PG,
      Sunwind.SS8263PG,
      Sunwind.SS9236PG,
      Sunwind.SS9237MG,
      Sunwind.ST7230MG
  )

  /**
   * Get all device specifications for Supersonic devices.
   * Useful for supersonic testing.
   */
  public fun getSupersonicDevices(): List<String> = listOf(
      Supersonic.KANDA,
      Supersonic.SC_2110,
      Supersonic.SC_4317BT,
      Supersonic.SC_813,
      Supersonic.SC_1010JBBT,
      Supersonic.SC_2110A,
      Supersonic.SC_3107,
      Supersonic.SC_3110,
      Supersonic.SC_4317,
      Supersonic.SC_5310BDL,
      Supersonic.SC_779KT
  )

  /**
   * Get all device specifications for Supertab devices.
   * Useful for supertab testing.
   */
  public fun getSupertabDevices(): List<String> = listOf(
      Supertab._16G4H101,
      Supertab.K7_KIDS
  )

  /**
   * Get all device specifications for SUPOIN devices.
   * Useful for supoin testing.
   */
  public fun getSupoinDevices(): List<String> = listOf(
      Supoin.S66
  )

  /**
   * Get all device specifications for surface devices.
   * Useful for surface testing.
   */
  public fun getSurfaceDevices(): List<String> = listOf(
      Surface.DUO,
      Surface.DUO2
  )

  /**
   * Get all device specifications for Surfans devices.
   * Useful for surfans testing.
   */
  public fun getSurfansDevices(): List<String> = listOf(
      Surfans.K10,
      Surfans.K7,
      Surfans.K7S,
      Surfans.Y57A
  )

  /**
   * Get all device specifications for SURTAB devices.
   * Useful for surtab testing.
   */
  public fun getSurtabDevices(): List<String> = listOf(
      Surtab.SURTAB_74G
  )

  /**
   * Get all device specifications for Suunto devices.
   * Useful for suunto testing.
   */
  public fun getSuuntoDevices(): List<String> = listOf(
      Suunto.SALMON
  )

  /**
   * Get all device specifications for SUXI devices.
   * Useful for suxi testing.
   */
  public fun getSuxiDevices(): List<String> = listOf(
      Suxi.T700,
      Suxi.T900
  )

  /**
   * Get all device specifications for SVISION devices.
   * Useful for svision testing.
   */
  public fun getSvisionDevices(): List<String> = listOf(
      Svision.HANYANG,
      Svision.MARTIN,
      Svision.STANFORD
  )

  /**
   * Get all device specifications for SVITOO devices.
   * Useful for svitoo testing.
   */
  public fun getSvitooDevices(): List<String> = listOf(
      Svitoo.P08,
      Svitoo.P10,
      Svitoo.P11,
      Svitoo.P11_PRO_EEA,
      Svitoo.SVITOO_P10,
      Svitoo.TAB_P12
  )

  /**
   * Get all device specifications for SW devices.
   * Useful for sw testing.
   */
  public fun getSwDevices(): List<String> = listOf(
      Sw.SW3_ATV,
      Sw.SW3H_ATV,
      Sw.SW4H,
      Sw.SW4H_FF
  )

  /**
   * Get all device specifications for SWACONNECT devices.
   * Useful for swaconnect testing.
   */
  public fun getSwaconnectDevices(): List<String> = listOf(
      Swaconnect.SWA310
  )

  /**
   * Get all device specifications for Swipe devices.
   * Useful for swipe testing.
   */
  public fun getSwipeDevices(): List<String> = listOf(
      Swipe.SLATE2,
      Swipe.STRIKE,
      Swipe.SWIPE_SLATE_3,
      Swipe.SWIPE_SLATE_3_WIFI,
      Swipe.SWIPE_STRIKE8,
      Swipe.SWIPE_X1
  )

  /**
   * Get all device specifications for Swisscom devices.
   * Useful for swisscom testing.
   */
  public fun getSwisscomDevices(): List<String> = listOf(
      Swisscom.IP1800,
      Swisscom.IP2000,
      Swisscom.IP2300
  )

  /**
   * Get all device specifications for SWISSMOBILITY devices.
   * Useful for swissmobility testing.
   */
  public fun getSwissmobilityDevices(): List<String> = listOf(
      Swissmobility.B4SWM,
      Swissmobility.Z7
  )

  /**
   * Get all device specifications for swisstone devices.
   * Useful for swisstone testing.
   */
  public fun getSwisstoneDevices(): List<String> = listOf(
      Swisstone.SD5103G,
      Swisstone.SD5304G
  )

  /**
   * Get all device specifications for Swissvoice devices.
   * Useful for swissvoice testing.
   */
  public fun getSwissvoiceDevices(): List<String> = listOf(
      Swissvoice.G50
  )

  /**
   * Get all device specifications for Swosh devices.
   * Useful for swosh testing.
   */
  public fun getSwoshDevices(): List<String> = listOf(
      Swosh.LONGSHAN,
      Swosh.SAMSEONG
  )

  /**
   * Get all device specifications for SYCO devices.
   * Useful for syco testing.
   */
  public fun getSycoDevices(): List<String> = listOf(
      Syco.GQ3112SH3,
      Syco.RS_403,
      Syco.RS_442_EEA,
      Syco.SYCO_RT_401
  )

  /**
   * Get all device specifications for Syinix devices.
   * Useful for syinix testing.
   */
  public fun getSyinixDevices(): List<String> = listOf(
      Syinix.BARKING,
      Syinix.BEAUDRY,
      Syinix.IKEBUKURO,
      Syinix.REDWOOD,
      Syinix.SAMSEONG,
      Syinix.SW6H,
      Syinix.UMEDA
  )

  /**
   * Get all device specifications for SYLVANIA devices.
   * Useful for sylvania testing.
   */
  public fun getSylvaniaDevices(): List<String> = listOf(
      Sylvania.GANGBYEON,
      Sylvania.KANDA,
      Sylvania.MDT1005,
      Sylvania.MDT1005_MK_32,
      Sylvania.SLTDVD1024_B
  )

  /**
   * Get all device specifications for SYLVOX devices.
   * Useful for sylvox testing.
   */
  public fun getSylvoxDevices(): List<String> = listOf(
      Sylvox.BANDRA,
      Sylvox.CAPITOLHILL,
      Sylvox.KENTON,
      Sylvox.KEONEAE,
      Sylvox.LASALLE
  )

  /**
   * Get all device specifications for Symphony devices.
   * Useful for symphony testing.
   */
  public fun getSymphonyDevices(): List<String> = listOf(
      Symphony.ATOM,
      Symphony.ATOM3,
      Symphony.ATOM4,
      Symphony.ATOM_II,
      Symphony.E90,
      Symphony.E95,
      Symphony.G10,
      Symphony.G100,
      Symphony.G10PLUS,
      Symphony.G26,
      Symphony.G27,
      Symphony.G27_LITE,
      Symphony.G50,
      Symphony.H300,
      Symphony.H400,
      Symphony.HELIO_30,
      Symphony.HELIO_80,
      Symphony.HELIO_S60,
      Symphony.I10,
      Symphony.I100,
      Symphony.I10_PLUS,
      Symphony.I12,
      Symphony.I120,
      Symphony.I15,
      Symphony.I18,
      Symphony.I20,
      Symphony.I30,
      Symphony.I32,
      Symphony.I50,
      Symphony.I60,
      Symphony.I65,
      Symphony.I66,
      Symphony.I67,
      Symphony.I68,
      Symphony.I69,
      Symphony.I71,
      Symphony.I72,
      Symphony.I73,
      Symphony.I74,
      Symphony.I80,
      Symphony.I85,
      Symphony.I90,
      Symphony.I95,
      Symphony.I96,
      Symphony.I97,
      Symphony.I98,
      Symphony.I99,
      Symphony.INNOVA10,
      Symphony.INNOVA20,
      Symphony.INNOVA30,
      Symphony.INNOVA_40,
      Symphony.P11,
      Symphony.P6_PRO,
      Symphony.P7_PRO,
      Symphony.P8_PRO,
      Symphony.P9,
      Symphony.P9_PLUS,
      Symphony.R100,
      Symphony.R20,
      Symphony.R30,
      Symphony.R40,
      Symphony.ROAR_V150,
      Symphony.ROAR_V78,
      Symphony.ROARV95,
      Symphony.SYMPHONY_Z12,
      Symphony.SYMPHONY_Z50,
      Symphony.SYMPHONYI25,
      Symphony.SYMTAB25,
      Symphony.SYMTAB60,
      Symphony.SYMTAB_80,
      Symphony.V100,
      Symphony.V102,
      Symphony.V105,
      Symphony.V110,
      Symphony.V120,
      Symphony.V128,
      Symphony.V130,
      Symphony.V138,
      Symphony.V138LITE,
      Symphony.V139,
      Symphony.V140,
      Symphony.V141,
      Symphony.V142,
      Symphony.V145,
      Symphony.V155,
      Symphony.V34,
      Symphony.V44,
      Symphony.V47,
      Symphony.V48,
      Symphony.V65,
      Symphony.V75,
      Symphony.V75M,
      Symphony.V85,
      Symphony.V92,
      Symphony.V94,
      Symphony.V96,
      Symphony.V97,
      Symphony.V98,
      Symphony.V99,
      Symphony.V99PLUS,
      Symphony.Z10,
      Symphony.Z15,
      Symphony.Z16,
      Symphony.Z18,
      Symphony.Z20,
      Symphony.Z22,
      Symphony.Z25,
      Symphony.Z28,
      Symphony.Z30,
      Symphony.Z30_PRO,
      Symphony.Z32,
      Symphony.Z33,
      Symphony.Z35,
      Symphony.Z40,
      Symphony.Z42,
      Symphony.Z42_PRO,
      Symphony.Z45,
      Symphony.Z55,
      Symphony.Z60,
      Symphony.Z60_PLUS,
      Symphony.Z70,
      Symphony.Z72,
      Symphony.Z9,
      Symphony.ZVII,
      Symphony.ZVIII
  )

  /**
   * Get all device specifications for Synetech devices.
   * Useful for synetech testing.
   */
  public fun getSynetechDevices(): List<String> = listOf(
      Synetech.RK3588_T
  )

  /**
   * Get all device specifications for t_go devices.
   * Useful for t_go testing.
   */
  public fun getTGoDevices(): List<String> = listOf(
      TGo.TGO_TB850IH
  )

  /**
   * Get all device specifications for T-Mobile devices.
   * Useful for t-mobile testing.
   */
  public fun getTMobileDevices(): List<String> = listOf(
      TMobile.AUGUSTA,
      TMobile.BETHPAGE,
      TMobile.CYPRESSPOINT,
      TMobile.NEWCASTLE,
      TMobile.PINEHURST,
      TMobile.PORTO,
      TMobile.SEATTLE_5G,
      TMobile.SOUTHERNDUNES,
      TMobile.SPROUT,
      TMobile.T_TAB,
      TMobile.TOKYO_LITE_4G,
      TMobile.TORREYPINES
  )

  /**
   * Get all device specifications for T-Mobile-CZ-Telekom-SK devices.
   * Useful for t-mobile-cz-telekom-sk testing.
   */
  public fun getTMobileCzTelekomSkDevices(): List<String> = listOf(
      TMobileCzTelekomSk.HY44G
  )

  /**
   * Get all device specifications for Tabi_by_T_GO devices.
   * Useful for tabi_by_t_go testing.
   */
  public fun getTabiByTGoDevices(): List<String> = listOf(
      TabiByTGo.EUTB_758_ARGOS,
      TabiByTGo.EUTB_758G,
      TabiByTGo.TGO_TB1001_2R,
      TabiByTGo.TGO_TB1001_4R,
      TabiByTGo.TGO_TB1001_4RO,
      TabiByTGo.TGO_TB780I,
      TabiByTGo.TGO_TB780IK
  )

  /**
   * Get all device specifications for Tablet_PC devices.
   * Useful for tablet_pc testing.
   */
  public fun getTabletPcDevices(): List<String> = listOf(
      TabletPc.T3G_07,
      TabletPc.T3G_10B,
      TabletPc.TABLET_PC
  )

  /**
   * Get all device specifications for TabPhone_710_Pro devices.
   * Useful for tabphone_710_pro testing.
   */
  public fun getTabphone710ProDevices(): List<String> = listOf(
      Tabphone710Pro.TABLET_DL_3420
  )

  /**
   * Get all device specifications for TABWEE devices.
   * Useful for tabwee testing.
   */
  public fun getTabweeDevices(): List<String> = listOf(
      Tabwee.T20,
      Tabwee.T90,
      Tabwee.W90
  )

  /**
   * Get all device specifications for TAG-DC devices.
   * Useful for tag-dc testing.
   */
  public fun getTagDcDevices(): List<String> = listOf(
      TagDc.TAG_DC
  )

  /**
   * Get all device specifications for TAG-TECH devices.
   * Useful for tag-tech testing.
   */
  public fun getTagTechDevices(): List<String> = listOf(
      TagTech.TAG_TAB_II
  )

  /**
   * Get all device specifications for tagheuer devices.
   * Useful for tagheuer testing.
   */
  public fun getTagheuerDevices(): List<String> = listOf(
      Tagheuer.ANTHRACITE,
      Tagheuer.GLACIER,
      Tagheuer.ORBITAL,
      Tagheuer.OXYGEN42,
      Tagheuer.OXYGEN45,
      Tagheuer.SPECTRALITE
  )

  /**
   * Get all device specifications for TAGITAL devices.
   * Useful for tagital testing.
   */
  public fun getTagitalDevices(): List<String> = listOf(
      Tagital.K88,
      Tagital.T7K_PLUS
  )

  /**
   * Get all device specifications for TAGTECH devices.
   * Useful for tagtech testing.
   */
  public fun getTagtechDevices(): List<String> = listOf(
      Tagtech.TAG_PLUTO_TAB,
      Tagtech.TAG_TAB_III,
      Tagtech.TAG_TABKIDS,
      Tagtech.TAG_PHONE,
      Tagtech.TAGPHONE,
      Tagtech.TAGPHONE_PLUS
  )

  /**
   * Get all device specifications for TAIFA devices.
   * Useful for taifa testing.
   */
  public fun getTaifaDevices(): List<String> = listOf(
      Taifa.TL1B_68
  )

  /**
   * Get all device specifications for TaipeiNet devices.
   * Useful for taipeinet testing.
   */
  public fun getTaipeinetDevices(): List<String> = listOf(
      Taipeinet.HY40A3
  )

  /**
   * Get all device specifications for TaiwanMobile devices.
   * Useful for taiwanmobile testing.
   */
  public fun getTaiwanmobileDevices(): List<String> = listOf(
      Taiwanmobile.AMAZING_A32,
      Taiwanmobile.AMAZING_A35,
      Taiwanmobile.AMAZING_A55,
      Taiwanmobile.AMAZING_A57
  )

  /**
   * Get all device specifications for Takara devices.
   * Useful for takara testing.
   */
  public fun getTakaraDevices(): List<String> = listOf(
      Takara.MID169
  )

  /**
   * Get all device specifications for Talius devices.
   * Useful for talius testing.
   */
  public fun getTaliusDevices(): List<String> = listOf(
      Talius.ZIRCON_1015,
      Talius.ZIRCON_1016_4G
  )

  /**
   * Get all device specifications for TalkTalk devices.
   * Useful for talktalk testing.
   */
  public fun getTalktalkDevices(): List<String> = listOf(
      Talktalk.UZW4054TTG
  )

  /**
   * Get all device specifications for TAMBO devices.
   * Useful for tambo testing.
   */
  public fun getTamboDevices(): List<String> = listOf(
      Tambo.TA_55_POWER
  )

  /**
   * Get all device specifications for TAMBOARD devices.
   * Useful for tamboard testing.
   */
  public fun getTamboardDevices(): List<String> = listOf(
      Tamboard.TB_GH
  )

  /**
   * Get all device specifications for Tanoshi devices.
   * Useful for tanoshi testing.
   */
  public fun getTanoshiDevices(): List<String> = listOf(
      Tanoshi.TTBKB10_01
  )

  /**
   * Get all device specifications for TanoshiScholar devices.
   * Useful for tanoshischolar testing.
   */
  public fun getTanoshischolarDevices(): List<String> = listOf(
      Tanoshischolar.TTBKB10_A1
  )

  /**
   * Get all device specifications for TASKPHONE devices.
   * Useful for taskphone testing.
   */
  public fun getTaskphoneDevices(): List<String> = listOf(
      Taskphone.T20P
  )

  /**
   * Get all device specifications for TataSky_BingePlus devices.
   * Useful for tatasky_bingeplus testing.
   */
  public fun getTataskyBingeplusDevices(): List<String> = listOf(
      TataskyBingeplus.USW4026TAT
  )

  /**
   * Get all device specifications for TATUNG devices.
   * Useful for tatung testing.
   */
  public fun getTatungDevices(): List<String> = listOf(
      Tatung.GANGBYEON,
      Tatung.MATEO,
      Tatung.PIONEER
  )

  /**
   * Get all device specifications for TazTag devices.
   * Useful for taztag testing.
   */
  public fun getTaztagDevices(): List<String> = listOf(
      Taztag.TAZPAD_FAP30,
      Taztag.TAZPAD_FAP60
  )

  /**
   * Get all device specifications for TBC devices.
   * Useful for tbc testing.
   */
  public fun getTbcDevices(): List<String> = listOf(
      Tbc.TATV_8000
  )

  /**
   * Get all device specifications for Tbltaca devices.
   * Useful for tbltaca testing.
   */
  public fun getTbltacaDevices(): List<String> = listOf(
      Tbltaca.Y108
  )

  /**
   * Get all device specifications for tbroad devices.
   * Useful for tbroad testing.
   */
  public fun getTbroadDevices(): List<String> = listOf(
      Tbroad.TMAU400
  )

  /**
   * Get all device specifications for TCL devices.
   * Useful for tcl testing.
   */
  public fun getTclDevices(): List<String> = listOf(
      Tcl._7046T,
      Tcl.A30ATMO,
      Tcl.A3A,
      Tcl.A3A_10_4G,
      Tcl.A3A_8_4G,
      Tcl.A3A_8_4G_TMO,
      Tcl.A3A_LITE,
      Tcl.A3A_PLUS,
      Tcl.A3A_XL_3G,
      Tcl.A3A_XL_4G,
      Tcl.A5A_INFINI,
      Tcl.A5X,
      Tcl.A70AXLTMO,
      Tcl.ALTO45,
      Tcl.ALTO45TMO,
      Tcl.ALTO4_8G,
      Tcl.ALTO5,
      Tcl.ALTO5_PREMIUM,
      Tcl.ALTO5_SPORTY,
      Tcl.ANT,
      Tcl.APOLLO84GBOOSTR,
      Tcl.APOLLO84GUSCC,
      Tcl.APOLLO_8_4G,
      Tcl.AQUAMAN_10_4G,
      Tcl.AQUAMAN_10_KDDI,
      Tcl.AQUAMAN_10_PRO,
      Tcl.AQUAMAN_10_SMART_WIFI,
      Tcl.ARES_11_4G,
      Tcl.ARES_11_WIFI,
      Tcl.ARES_VIS_WIFI,
      Tcl.ASTER,
      Tcl.ASTER_PRO,
      Tcl.AUSTIN,
      Tcl.AUSTIN_TF,
      Tcl.AUSTIN_US,
      Tcl.BANGKOK_TF,
      Tcl.BEE_ONE,
      Tcl.BELLONA_WF_GL,
      Tcl.BENZ,
      Tcl.BERYL_TMO,
      Tcl.BEYONDTV4,
      Tcl.BORA_NA_OM,
      Tcl.BORA_TF,
      Tcl.BORA_TMO,
      Tcl.BOSTON,
      Tcl.BREMEN_NA_OM,
      Tcl.BREMEN_TF,
      Tcl.BUFFALO,
      Tcl.BUFFALO_BOOST,
      Tcl.BUFFALO_CAN,
      Tcl.BUFFALO_TMO,
      Tcl.BUZZ6_55,
      Tcl.BUZZ6E,
      Tcl.BUZZ6T4G,
      Tcl.BUZZ6T4GCRICKET,
      Tcl.BUZZ6T4GGOPHONE,
      Tcl.BUZZ6T4GTELUS,
      Tcl.BUZZ6T4GTFUMTS,
      Tcl.C05,
      Tcl.C06,
      Tcl.CHALLENGER_CS,
      Tcl.CHALLENGER_TH,
      Tcl.CHALLENGER_TMO,
      Tcl.CIVIC,
      Tcl.CIVIC_PLUS,
      Tcl.CIVIC_S,
      Tcl.CIVIC_S_REFRESH,
      Tcl.COROLLA,
      Tcl.CROSS2,
      Tcl.CRUZE,
      Tcl.CRUZE_LITE,
      Tcl.CRUZE_LITE_S,
      Tcl.CRUZE_LITE_TF,
      Tcl.CRUZE_PRO,
      Tcl.CURIE,
      Tcl.DELHI_TF,
      Tcl.DOHA_TMO,
      Tcl.DRAGONFLY,
      Tcl.DRAGONFLY_CAN,
      Tcl.DRAGONFLY_OM,
      Tcl.DRAGONFLY_TF,
      Tcl.DRAGONFLY_VZW,
      Tcl.DUBAI_PLUS_ATT,
      Tcl.DUBAI_VZW,
      Tcl.E8,
      Tcl.EASYTAB8MPCS,
      Tcl.EASYTAB8TMO,
      Tcl.ECLIPSE,
      Tcl.EDISON,
      Tcl.EDISON_CKT,
      Tcl.EDISON_TF,
      Tcl.ELSA6,
      Tcl.ELSA6_AMZ,
      Tcl.ELSA6_NA,
      Tcl.ELSA6P,
      Tcl.ENCORE_CAN,
      Tcl.ENCORE_OM,
      Tcl.ENCORE_SPECTRUM,
      Tcl.ENCORE_TF,
      Tcl.ENCORE_USCC,
      Tcl.ENCORE_VISIBLE,
      Tcl.ENCORE_VZW,
      Tcl.EOS_LTE,
      Tcl.ERICA_NP_PRO,
      Tcl.ETERNALS11,
      Tcl.FARADAY,
      Tcl.FEIJAO,
      Tcl.FERMI_ATT,
      Tcl.FERMI_TF,
      Tcl.FIREFLY,
      Tcl.FREYR_10_1_4G,
      Tcl.FREYR_10_1_WIFI,
      Tcl.FREYR_PRO_4G_U,
      Tcl.G05,
      Tcl.G06,
      Tcl.G07,
      Tcl.G08,
      Tcl.G09,
      Tcl.G10,
      Tcl.G13,
      Tcl.GAIA,
      Tcl.GAUSS,
      Tcl.GOLDFINCH_DISH,
      Tcl.GOLDFINCH_NP,
      Tcl.GOLDFINCH_NP_PRO,
      Tcl.GOLDFINCH_PRO_CS,
      Tcl.GOLDFINCH_TMO,
      Tcl.HANDYT2,
      Tcl.HERA_VIS_WIFI,
      Tcl.HERO2C,
      Tcl.HONG_KONG,
      Tcl.HONG_KONG_PRO,
      Tcl.I1_5_4G,
      Tcl.IDOL3,
      Tcl.IDOL347,
      Tcl.IDOL4,
      Tcl.IDOL4S,
      Tcl.IDOL4S_SKT,
      Tcl.IDOL5S,
      Tcl.IRVINE,
      Tcl.IRVINE_VZW,
      Tcl.JAKARTA,
      Tcl.JAKARTA_LITE,
      Tcl.JAKARTA_LITE_REFRESH,
      Tcl.JAKARTA_MINI,
      Tcl.JETTA_ATT,
      Tcl.JETTA_DISH,
      Tcl.JETTA_NA_OM,
      Tcl.JETTA_TF,
      Tcl.JETTA_VISIBLE,
      Tcl.JETTA_VZW,
      Tcl.KONA,
      Tcl.LADYBIRD,
      Tcl.LADYBIRD_PRO,
      Tcl.LEVIN,
      Tcl.LION_5,
      Tcl.LOGAN,
      Tcl.LOGAN_FHD,
      Tcl.LOTUS,
      Tcl.LUNA,
      Tcl.LUNA_8_4G_ATT,
      Tcl.LUNA_8_4G_TMO,
      Tcl.LUNA_8_4G_VZW,
      Tcl.MACAU,
      Tcl.MIAMI_PRO,
      Tcl.MIATA_3G,
      Tcl.MIATA_LTE,
      Tcl.MICKEY6,
      Tcl.MICKEY6CC,
      Tcl.MICKEY6T,
      Tcl.MICKEY6TFEVDO,
      Tcl.MICKEY6TTMO,
      Tcl.MICKEY6TVZW,
      Tcl.MICKEY6US,
      Tcl.MICKEY6VZW,
      Tcl.MODEL_3,
      Tcl.MORGAN_4G,
      Tcl.OAKLAND,
      Tcl.ODIN,
      Tcl.ODIN2,
      Tcl.ODIN5GACG,
      Tcl.ODIN_5G,
      Tcl.ODIN_5G_TMO,
      Tcl.OPTIMUS_5G_VZW,
      Tcl.OTTAWA,
      Tcl.P3_5_4G,
      Tcl.PASSAT,
      Tcl.PASSAT_5G,
      Tcl.PIXI2_7_4G_TMO,
      Tcl.PIXI3_10_3G,
      Tcl.PIXI3_10_WIFI,
      Tcl.PIXI3_35TF,
      Tcl.PIXI3_4,
      Tcl.PIXI3_45,
      Tcl.PIXI3_5,
      Tcl.PIXI3_55,
      Tcl.PIXI3_7,
      Tcl.PIXI3_7_3G,
      Tcl.PIXI3_7_4G_EE,
      Tcl.PIXI3_8_WIFI,
      Tcl.PIXI3454GSPR,
      Tcl.PIXI3554GEVDO,
      Tcl.PIXI37,
      Tcl.PIXI384G,
      Tcl.PIXI3_35,
      Tcl.PIXI3_45_4G,
      Tcl.PIXI3_4TF,
      Tcl.PIXI3_7_4G,
      Tcl.PIXI4_35,
      Tcl.PIXI4_4,
      Tcl.PIXI4_4C_GO,
      Tcl.PIXI4_5,
      Tcl.PIXI4_64GMEX,
      Tcl.PIXI4_6_3G,
      Tcl.PIXI4_6_4G,
      Tcl.PIXI4_6_4G_CKT,
      Tcl.PIXI4_7_3G,
      Tcl.PIXI4_7_4G,
      Tcl.PIXI4_7_4G_BELL,
      Tcl.PIXI4_7_4G_ROGERS,
      Tcl.PIXI4_7_4G_TELUS,
      Tcl.PIXI4_7_4G_TMO,
      Tcl.PIXI4_7_WIFI,
      Tcl.PIXI445,
      Tcl.PIXI445CAN,
      Tcl.PIXI445CRICKET,
      Tcl.PIXI445SPR,
      Tcl.PIXI445TFVZW,
      Tcl.PIXI4_4TF,
      Tcl.PIXI4_55_3G,
      Tcl.PIXI4_5_4G,
      Tcl.PIXI4PLUSPOWER,
      Tcl.PIXI5_10_4G,
      Tcl.PIXI5_6_4G,
      Tcl.PIXI5_7_3G,
      Tcl.PIXI5_8_4G_TELUS,
      Tcl.PIXI5_8_4G_TMO,
      Tcl.PIXI7,
      Tcl.PIXI8,
      Tcl.PIXO7,
      Tcl.PIXO8_3G,
      Tcl.PLAY_5,
      Tcl.PLAY_P1,
      Tcl.POP10,
      Tcl.POP35,
      Tcl.POP355,
      Tcl.POP4_10_4G,
      Tcl.POP4_6_4G,
      Tcl.POP4_7_4G,
      Tcl.POP445,
      Tcl.POP45,
      Tcl.POP455C,
      Tcl.POP5_6_4G,
      Tcl.POP7,
      Tcl.POP7_LTE,
      Tcl.POP8,
      Tcl.RAPID_CKT,
      Tcl.RAPID_USCC,
      Tcl.RICHLAND,
      Tcl.RICHLAND_PRO,
      Tcl.RIO,
      Tcl.RIO_4G,
      Tcl.RIO_CAN,
      Tcl.RIO_TMO,
      Tcl.RUBY_TF,
      Tcl.RUBY_VZW,
      Tcl.SCARAB_LITE_TF,
      Tcl.SCARAB_PRO_NA_OM,
      Tcl.SCARAB_PRO_TF,
      Tcl.SCARAB_PRO_VZW,
      Tcl.SCARABLITE_TMO,
      Tcl.SEATTLE,
      Tcl.SEATTLE_VZW,
      Tcl.SEOUL,
      Tcl.SEOUL_ATT,
      Tcl.SEOUL_TF,
      Tcl.SHINE_LITE,
      Tcl.SHINE_PLUS,
      Tcl.SIMBA6_CRICKET,
      Tcl.SIMBA6_GLOBAL,
      Tcl.SIMBA6L,
      Tcl.SONATA_BBH,
      Tcl.SONATA_PRO_OM,
      Tcl.SONATA_TF,
      Tcl.SOUL35,
      Tcl.SOUL45_GSM,
      Tcl.SUNRISE_CAN,
      Tcl.SUNRISE_NA_OM,
      Tcl.T1,
      Tcl.T1_LITE,
      Tcl.T1_PRO,
      Tcl.TCL,
      Tcl.TCL_EU,
      Tcl.TCL_SA,
      Tcl.THOR_8_4G_VZW,
      Tcl.TITAN_VIS_WIFI,
      Tcl.TOKYO_LITE,
      Tcl.TOKYO_TF,
      Tcl.TRANSFORMER,
      Tcl.TRANSFORMER2,
      Tcl.TRANSFORMER_4G,
      Tcl.TRANSFORMER_VZW,
      Tcl.U3,
      Tcl.U3_3G,
      Tcl.U3A_10_WIFI,
      Tcl.U3A_7_3G,
      Tcl.U3A_7_WIFI,
      Tcl.U3A_7_WIFI_REFRESH,
      Tcl.U3A_PLUS_4G,
      Tcl.U50A_ATT,
      Tcl.U50A_PLUS_ATT,
      Tcl.U50A_PLUS_TF,
      Tcl.U50APLUSTMO,
      Tcl.U50PLUS,
      Tcl.U5_3G,
      Tcl.U5A_PLUS_3G,
      Tcl.U5A_PLUS_4G,
      Tcl.UNIONTV,
      Tcl.VENICE,
      Tcl.VENUS_4G_GL,
      Tcl.VENUS_WIFI_GL,
      Tcl.VINCA,
      Tcl.WRIGHT,
      Tcl.WRIGHT_PRO,
      Tcl.X1,
      Tcl.X1_PLUS,
      Tcl.XESS,
      Tcl.XESS_MINI,
      Tcl.YARIS5NA
  )

  /**
   * Get all device specifications for TCL_MetroPCS devices.
   * Useful for tcl_metropcs testing.
   */
  public fun getTclMetropcsDevices(): List<String> = listOf(
      TclMetropcs.YARIS5TMO
  )

  /**
   * Get all device specifications for TCST devices.
   * Useful for tcst testing.
   */
  public fun getTcstDevices(): List<String> = listOf(
      Tcst.L7
  )

  /**
   * Get all device specifications for TCT devices.
   * Useful for tct testing.
   */
  public fun getTctDevices(): List<String> = listOf(
      Tct.ALPHA,
      Tct.BEETLE_GSM,
      Tct.CALIFORNIA,
      Tct.DIABLO,
      Tct.DIABLOXPLUS,
      Tct.MEGANE_GSM,
      Tct.POP7,
      Tct.RAV4,
      Tct.SCRIBEPRO,
      Tct.VODAFONE_875,
      Tct.YARIS35_GSM,
      Tct.YARIS_55,
      Tct.YARIS_M_GSM,
      Tct.YARISL_GSM,
      Tct.YARISXL
  )

  /**
   * Get all device specifications for TD_SYSTEMS devices.
   * Useful for td_systems testing.
   */
  public fun getTdSystemsDevices(): List<String> = listOf(
      TdSystems.MARTIN,
      TdSystems.TAMACHI,
      TdSystems.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for TDSYSTEMS devices.
   * Useful for tdsystems testing.
   */
  public fun getTdsystemsDevices(): List<String> = listOf(
      Tdsystems.REDWOOD
  )

  /**
   * Get all device specifications for TeachmintX devices.
   * Useful for teachmintx testing.
   */
  public fun getTeachmintxDevices(): List<String> = listOf(
      Teachmintx._75W82B
  )

  /**
   * Get all device specifications for TEAMGEE devices.
   * Useful for teamgee testing.
   */
  public fun getTeamgeeDevices(): List<String> = listOf(
      Teamgee.G2
  )

  /**
   * Get all device specifications for Tech_Pad devices.
   * Useful for tech_pad testing.
   */
  public fun getTechPadDevices(): List<String> = listOf(
      TechPad._816,
      TechPad.TECH_PAD_3G16,
      TechPad.TECH_PAD_732,
      TechPad.TECH_PAD_S813G,
      TechPad.TECH_PAD_X10,
      TechPad.X11,
      TechPad.X9_PLUS
  )

  /**
   * Get all device specifications for techbite devices.
   * Useful for techbite testing.
   */
  public fun getTechbiteDevices(): List<String> = listOf(
      Techbite.DV8219,
      Techbite.SMARTBOARD_10_LTE,
      Techbite.SMARTBOARD_2
  )

  /**
   * Get all device specifications for TECHcomputer devices.
   * Useful for techcomputer testing.
   */
  public fun getTechcomputerDevices(): List<String> = listOf(
      Techcomputer.F102_T610_EEA,
      Techcomputer.F102_T610_EEA_GG5,
      Techcomputer.F102_T618_EEA
  )

  /**
   * Get all device specifications for TECHLIFE devices.
   * Useful for techlife testing.
   */
  public fun getTechlifeDevices(): List<String> = listOf(
      Techlife.REDWOOD,
      Techlife.TLPAD001,
      Techlife.TLPAD002,
      Techlife.TLPADP04
  )

  /**
   * Get all device specifications for Technicolor devices.
   * Useful for technicolor testing.
   */
  public fun getTechnicolorDevices(): List<String> = listOf(
      Technicolor.DCI765EKT,
      Technicolor.DWT765LMT,
      Technicolor.DWT765TI,
      Technicolor.UIE4027LGU,
      Technicolor.UIW4010ECH,
      Technicolor.UZW4010TIM
  )

  /**
   * Get all device specifications for Technika devices.
   * Useful for technika testing.
   */
  public fun getTechnikaDevices(): List<String> = listOf(
      Technika.EWHA
  )

  /**
   * Get all device specifications for Technocrat devices.
   * Useful for technocrat testing.
   */
  public fun getTechnocratDevices(): List<String> = listOf(
      Technocrat.SC777
  )

  /**
   * Get all device specifications for Technopc devices.
   * Useful for technopc testing.
   */
  public fun getTechnopcDevices(): List<String> = listOf(
      Technopc.TECHNOPC_UP10S43LA,
      Technopc.TECHNOPC_UP10SI36LA,
      Technopc.TM_T10SA,
      Technopc.TM_T10SA_V2
  )

  /**
   * Get all device specifications for TechPad devices.
   * Useful for techpad testing.
   */
  public fun getTechpadDevices(): List<String> = listOf(
      Techpad._1016S,
      Techpad._1032,
      Techpad._816X,
      Techpad.GAMEPAD,
      Techpad.I700,
      Techpad.K13,
      Techpad.K13PRO,
      Techpad.M55_4G,
      Techpad.M5GO,
      Techpad.NOTE_4CAM,
      Techpad.NOTE_4CAM_R,
      Techpad.R10,
      Techpad.S6,
      Techpad.S6,
      Techpad.TECHPAD_1032,
      Techpad.TECHPAD_1032S,
      Techpad.TECHPAD_10Y,
      Techpad.TECHPAD_10Z,
      Techpad.TECHPAD_3GX,
      Techpad.TECHPAD_716,
      Techpad.TECHPAD_9X,
      Techpad.TECHPAD_KIDS_7,
      Techpad.X7,
      Techpad.Z10
  )

  /**
   * Get all device specifications for Teclast devices.
   * Useful for teclast testing.
   */
  public fun getTeclastDevices(): List<String> = listOf(
      Teclast.M20_4G,
      Teclast.M30_PRO_ROW,
      Teclast.M40_EEA,
      Teclast.M40_PLUS_EEA,
      Teclast.M40_PLUS_ROW,
      Teclast.M40_PRO_2022_EEA,
      Teclast.M40_PRO_2022_ROW,
      Teclast.M40_PRO_2022_RUS,
      Teclast.M40_ROW,
      Teclast.M40AIR,
      Teclast.M40PLUS_E_EEA,
      Teclast.M40PLUS_E_ROW,
      Teclast.M40PLUS_EEA,
      Teclast.M40PLUS_ROW,
      Teclast.M40PRO_A_EEA,
      Teclast.M40PRO_A_ROW,
      Teclast.M40PRO_EEA,
      Teclast.M40PRO_ROW,
      Teclast.M40PRO_RUS,
      Teclast.M40PRO_T,
      Teclast.M40SE,
      Teclast.M40SE_Y_EEA,
      Teclast.M40SE_Y_ROW,
      Teclast.M50_EEA,
      Teclast.M50_ROW,
      Teclast.M50_EU,
      Teclast.M50_ROW,
      Teclast.M50_T,
      Teclast.M50HD_EEA,
      Teclast.M50HD_ROW,
      Teclast.M50HD_T,
      Teclast.M50MINI,
      Teclast.M50MINI_EEA,
      Teclast.M50MINI_ROW,
      Teclast.M50MINI_W_ROW,
      Teclast.M50PLUS,
      Teclast.M50PLUS_EEA,
      Teclast.M50PLUS_ROW,
      Teclast.M50PRO_EEA,
      Teclast.M50PRO_ROW,
      Teclast.M50S_EEA,
      Teclast.M50S_ROW,
      Teclast.P10_HD_EEA,
      Teclast.P10_HD_ROW,
      Teclast.P10S_EEA,
      Teclast.P10SE_EEA,
      Teclast.P10SE_ROW,
      Teclast.P20_EEA,
      Teclast.P20HD_EEA,
      Teclast.P20HD_PRO_EEA,
      Teclast.P20HD_ROW,
      Teclast.P20HD_RUS,
      Teclast.P20S_EEA,
      Teclast.P20S_ROW,
      Teclast.P25_EEA,
      Teclast.P25_ROW,
      Teclast.P25_T,
      Teclast.P25T_Y_EEA,
      Teclast.P25T_Y_ROW,
      Teclast.P26T,
      Teclast.P30,
      Teclast.P30_B,
      Teclast.P30_EEA,
      Teclast.P30_ROW,
      Teclast.P30AIR,
      Teclast.P30AIR_EEA,
      Teclast.P30AIR_ROW,
      Teclast.P30HD,
      Teclast.P30S_EEA,
      Teclast.P30S_ROW,
      Teclast.P30S_W_EEA,
      Teclast.P30S_W_ROW,
      Teclast.P30T,
      Teclast.P30T_B,
      Teclast.P30T_EEA,
      Teclast.P30T_ROW,
      Teclast.P40HD_EEA,
      Teclast.P40HD_ROW,
      Teclast.P40HD_T,
      Teclast.P40HD_T_EEA,
      Teclast.P40HD_T_ROW,
      Teclast.P50,
      Teclast.P50_B_EEA,
      Teclast.P50_EEA,
      Teclast.P50_ROW,
      Teclast.P50AI,
      Teclast.P50CASE,
      Teclast.P50MINI_ROW,
      Teclast.P50S_EEA,
      Teclast.P50S_ROW,
      Teclast.P80,
      Teclast.P80_EEA,
      Teclast.P80_G3M2_EEA,
      Teclast.P80_G3M2_ROW,
      Teclast.P80_KOR,
      Teclast.P80_ROW,
      Teclast.P80H_EEA,
      Teclast.P80H_KR,
      Teclast.P80H_ROW,
      Teclast.P80T,
      Teclast.P80T_Y_EEA,
      Teclast.P80X,
      Teclast.P85_EEA,
      Teclast.P85_ROW,
      Teclast.P85T,
      Teclast.T30,
      Teclast.T40_PLUS_EEA,
      Teclast.T40_PLUS_ROW,
      Teclast.T40_PRO_W_EEA,
      Teclast.T40_PRO_W_ROW,
      Teclast.T40AIR_EEA,
      Teclast.T40AIR_ROW,
      Teclast.T40HD_EEA,
      Teclast.T40HD_ROW,
      Teclast.T40HD_T,
      Teclast.T40PRO_2022_EEA,
      Teclast.T40PRO_2022_ROW,
      Teclast.T40PRO_A,
      Teclast.T40PRO_EEA,
      Teclast.T40PRO_ROW,
      Teclast.T40PRO_T,
      Teclast.T45HD_EEA,
      Teclast.T45HD_ROW,
      Teclast.T45HD_T,
      Teclast.T50_2022_EEA,
      Teclast.T50_2022_ROW,
      Teclast.T50_T,
      Teclast.T50_Y_EEA,
      Teclast.T50_Y_ROW,
      Teclast.T50HD,
      Teclast.T50HD_EEA,
      Teclast.T50HD_ROW,
      Teclast.T50MAX_EEA,
      Teclast.T50MAX_ROW,
      Teclast.T50PRO_W_EEA,
      Teclast.T50PRO_W_ROW,
      Teclast.T60,
      Teclast.T60_EEA,
      Teclast.T60_ROW,
      Teclast.T60_EEA,
      Teclast.T60_ROW,
      Teclast.T60AI,
      Teclast.T60PLUS_EEA,
      Teclast.T60PLUS_ROW,
      Teclast.T65,
      Teclast.T65MAX_EEA,
      Teclast.T65MAX_ROW,
      Teclast.T70_ROW,
      Teclast.TECLAST_T40PRO,
      Teclast.TECLAST_T40PRO_EA,
      Teclast.TECLAST_T40PRO_RU,
      Teclast.TECLAST_T50_EEA,
      Teclast.TECLAST_T50_ROW,
      Teclast.TLG01_EEA,
      Teclast.TLG01_ROW,
      Teclast.X_EEA
  )

  /**
   * Get all device specifications for TeclastKorea devices.
   * Useful for teclastkorea testing.
   */
  public fun getTeclastkoreaDevices(): List<String> = listOf(
      Teclastkorea.TPAD8
  )

  /**
   * Get all device specifications for TECNO devices.
   * Useful for tecno testing.
   */
  public fun getTecnoDevices(): List<String> = listOf(
      Tecno.DP10A,
      Tecno.DP7CPRO,
      Tecno.DP7CPRO_SGA1,
      Tecno.DP8D,
      Tecno.L8LITE,
      Tecno.N5S,
      Tecno.N9,
      Tecno.N9S,
      Tecno.PHANTOM6,
      Tecno.PHANTOM6_PLUS,
      Tecno.PP7E_DLA1,
      Tecno.TECNO_A571LS,
      Tecno.TECNO_AB7,
      Tecno.TECNO_AC8,
      Tecno.TECNO_AD10,
      Tecno.TECNO_AD11,
      Tecno.TECNO_AD8,
      Tecno.TECNO_AD9,
      Tecno.TECNO_AE10,
      Tecno.TECNO_AE11,
      Tecno.TECNO_AX8,
      Tecno.TECNO_B1,
      Tecno.TECNO_B1F,
      Tecno.TECNO_B1G,
      Tecno.TECNO_B1P,
      Tecno.TECNO_B1S,
      Tecno.TECNO_BA2,
      Tecno.TECNO_BB2,
      Tecno.TECNO_BB4,
      Tecno.TECNO_BB4K,
      Tecno.TECNO_BC1,
      Tecno.TECNO_BC1S,
      Tecno.TECNO_BC2,
      Tecno.TECNO_BC2C,
      Tecno.TECNO_BC3,
      Tecno.TECNO_BD1,
      Tecno.TECNO_BD2,
      Tecno.TECNO_BD2D,
      Tecno.TECNO_BD2P,
      Tecno.TECNO_BD3,
      Tecno.TECNO_BD4,
      Tecno.TECNO_BD4I,
      Tecno.TECNO_BE6_R2,
      Tecno.TECNO_BE7,
      Tecno.TECNO_BE8,
      Tecno.TECNO_BE8I,
      Tecno.TECNO_BF6,
      Tecno.TECNO_BF7,
      Tecno.TECNO_BF7H,
      Tecno.TECNO_BF7N,
      Tecno.TECNO_BF7S,
      Tecno.TECNO_BG6,
      Tecno.TECNO_BG6H,
      Tecno.TECNO_BG6I,
      Tecno.TECNO_BG6M,
      Tecno.TECNO_BG6S,
      Tecno.TECNO_BG7,
      Tecno.TECNO_BG7N,
      Tecno.TECNO_C5,
      Tecno.TECNO_C7,
      Tecno.TECNO_C8,
      Tecno.TECNO_C9,
      Tecno.TECNO_CA6,
      Tecno.TECNO_CA7,
      Tecno.TECNO_CA8,
      Tecno.TECNO_CB7,
      Tecno.TECNO_CB7J,
      Tecno.TECNO_CC6,
      Tecno.TECNO_CC7,
      Tecno.TECNO_CC7S,
      Tecno.TECNO_CC9,
      Tecno.TECNO_CD6,
      Tecno.TECNO_CD6J,
      Tecno.TECNO_CD7,
      Tecno.TECNO_CD8,
      Tecno.TECNO_CD8J,
      Tecno.TECNO_CE7,
      Tecno.TECNO_CE7J,
      Tecno.TECNO_CE8,
      Tecno.TECNO_CE9,
      Tecno.TECNO_CE9H,
      Tecno.TECNO_CF7,
      Tecno.TECNO_CF7K,
      Tecno.TECNO_CF8,
      Tecno.TECNO_CG6,
      Tecno.TECNO_CG6J,
      Tecno.TECNO_CG7,
      Tecno.TECNO_CG7N,
      Tecno.TECNO_CG8,
      Tecno.TECNO_CG8H,
      Tecno.TECNO_CH6,
      Tecno.TECNO_CH6H,
      Tecno.TECNO_CH6I,
      Tecno.TECNO_CH6IS,
      Tecno.TECNO_CH6N,
      Tecno.TECNO_CH7,
      Tecno.TECNO_CH7N,
      Tecno.TECNO_CH9,
      Tecno.TECNO_CH9N,
      Tecno.TECNO_CI6,
      Tecno.TECNO_CI6N,
      Tecno.TECNO_CI7N,
      Tecno.TECNO_CI8,
      Tecno.TECNO_CI8N,
      Tecno.TECNO_CK6,
      Tecno.TECNO_CK6N,
      Tecno.TECNO_CK6NS,
      Tecno.TECNO_CK7N,
      Tecno.TECNO_CK8N,
      Tecno.TECNO_CK8NB,
      Tecno.TECNO_CK9N,
      Tecno.TECNO_CL6,
      Tecno.TECNO_CL6K,
      Tecno.TECNO_CL6S,
      Tecno.TECNO_CL7,
      Tecno.TECNO_CL7K,
      Tecno.TECNO_CL7S,
      Tecno.TECNO_CL8,
      Tecno.TECNO_CL9,
      Tecno.TECNO_CLA5,
      Tecno.TECNO_CLA6,
      Tecno.TECNO_CM5,
      Tecno.TECNO_CM6,
      Tecno.TECNO_CM7,
      Tecno.TECNO_CM8,
      Tecno.TECNO_CX,
      Tecno.TECNO_CX_AIR,
      Tecno.TECNO_F1_PRO,
      Tecno.TECNO_F2,
      Tecno.TECNO_F2LTE,
      Tecno.TECNO_F3,
      Tecno.TECNO_F3_13M,
      Tecno.TECNO_F4,
      Tecno.TECNO_F4PRO,
      Tecno.TECNO_I3,
      Tecno.TECNO_I3_PRO,
      Tecno.TECNO_I5,
      Tecno.TECNO_I5_PRO,
      Tecno.TECNO_I7,
      Tecno.TECNO_IA5,
      Tecno.TECNO_ID3K,
      Tecno.TECNO_ID5,
      Tecno.TECNO_ID5A,
      Tecno.TECNO_ID5B,
      Tecno.TECNO_ID6,
      Tecno.TECNO_IN1,
      Tecno.TECNO_IN1_PRO,
      Tecno.TECNO_IN2,
      Tecno.TECNO_IN3,
      Tecno.TECNO_IN5,
      Tecno.TECNO_IN6,
      Tecno.TECNO_J5,
      Tecno.TECNO_J8,
      Tecno.TECNO_K7,
      Tecno.TECNO_K8,
      Tecno.TECNO_K9,
      Tecno.TECNO_KA6,
      Tecno.TECNO_KA7_GO,
      Tecno.TECNO_KA7_O,
      Tecno.TECNO_KA9,
      Tecno.TECNO_KB2,
      Tecno.TECNO_KB2H,
      Tecno.TECNO_KB2J,
      Tecno.TECNO_KB3,
      Tecno.TECNO_KB7,
      Tecno.TECNO_KB7J,
      Tecno.TECNO_KB8,
      Tecno.TECNO_KC1,
      Tecno.TECNO_KC1J,
      Tecno.TECNO_KC2,
      Tecno.TECNO_KC2J,
      Tecno.TECNO_KC3,
      Tecno.TECNO_KC6,
      Tecno.TECNO_KC6S,
      Tecno.TECNO_KC8,
      Tecno.TECNO_KC8S,
      Tecno.TECNO_KD6,
      Tecno.TECNO_KD7,
      Tecno.TECNO_KD7H,
      Tecno.TECNO_KE5,
      Tecno.TECNO_KE5J,
      Tecno.TECNO_KE5K,
      Tecno.TECNO_KE5S,
      Tecno.TECNO_KE6,
      Tecno.TECNO_KE6J,
      Tecno.TECNO_KF6,
      Tecno.TECNO_KF6H,
      Tecno.TECNO_KF6I,
      Tecno.TECNO_KF6J,
      Tecno.TECNO_KF6K,
      Tecno.TECNO_KF6KS,
      Tecno.TECNO_KF6M,
      Tecno.TECNO_KF6N,
      Tecno.TECNO_KF6P,
      Tecno.TECNO_KF7J,
      Tecno.TECNO_KF8,
      Tecno.TECNO_KG5,
      Tecno.TECNO_KG5H,
      Tecno.TECNO_KG5J,
      Tecno.TECNO_KG5K,
      Tecno.TECNO_KG5KS,
      Tecno.TECNO_KG5M,
      Tecno.TECNO_KG5P,
      Tecno.TECNO_KG5Q,
      Tecno.TECNO_KG6,
      Tecno.TECNO_KG6K,
      Tecno.TECNO_KG6P,
      Tecno.TECNO_KG7,
      Tecno.TECNO_KG7N,
      Tecno.TECNO_KG8,
      Tecno.TECNO_KH6,
      Tecno.TECNO_KH7N,
      Tecno.TECNO_KH7S,
      Tecno.TECNO_KI5K,
      Tecno.TECNO_KI5M,
      Tecno.TECNO_KI5N,
      Tecno.TECNO_KI5Q,
      Tecno.TECNO_KI5QS,
      Tecno.TECNO_KI7,
      Tecno.TECNO_KI7S,
      Tecno.TECNO_KI8,
      Tecno.TECNO_KJ5,
      Tecno.TECNO_KJ5N,
      Tecno.TECNO_KJ5S,
      Tecno.TECNO_KJ6,
      Tecno.TECNO_KJ7,
      Tecno.TECNO_KJ7S,
      Tecno.TECNO_KJ8,
      Tecno.TECNO_KJ8S,
      Tecno.TECNO_KL4,
      Tecno.TECNO_KL4S,
      Tecno.TECNO_KL5,
      Tecno.TECNO_KL5N,
      Tecno.TECNO_KL5S,
      Tecno.TECNO_KL6,
      Tecno.TECNO_KL7,
      Tecno.TECNO_KL8,
      Tecno.TECNO_KL8H,
      Tecno.TECNO_KL8HS,
      Tecno.TECNO_KL8S,
      Tecno.TECNO_KM4,
      Tecno.TECNO_KM4K,
      Tecno.TECNO_KM5,
      Tecno.TECNO_KM5N,
      Tecno.TECNO_KM6,
      Tecno.TECNO_KM7,
      Tecno.TECNO_KM9,
      Tecno.TECNO_L5,
      Tecno.TECNO_L6502S,
      Tecno.TECNO_L8,
      Tecno.TECNO_L9,
      Tecno.TECNO_L9PLUS,
      Tecno.TECNO_LA6,
      Tecno.TECNO_LA7,
      Tecno.TECNO_LA7_13M,
      Tecno.TECNO_LB6,
      Tecno.TECNO_LB7,
      Tecno.TECNO_LC6,
      Tecno.TECNO_LC6A,
      Tecno.TECNO_LC7,
      Tecno.TECNO_LC8,
      Tecno.TECNO_LD7,
      Tecno.TECNO_LD7J,
      Tecno.TECNO_LE6,
      Tecno.TECNO_LE7,
      Tecno.TECNO_LE7N,
      Tecno.TECNO_LE8,
      Tecno.TECNO_LF7,
      Tecno.TECNO_LF7N,
      Tecno.TECNO_LG6N,
      Tecno.TECNO_LG7N,
      Tecno.TECNO_LG8N,
      Tecno.TECNO_LH6N,
      Tecno.TECNO_LH7N,
      Tecno.TECNO_LH8N,
      Tecno.TECNO_LI7,
      Tecno.TECNO_LJ6,
      Tecno.TECNO_LJ7,
      Tecno.TECNO_LJ8,
      Tecno.TECNO_LJ8K,
      Tecno.TECNO_LJ9,
      Tecno.TECNO_N6,
      Tecno.TECNO_N6S,
      Tecno.TECNO_N8,
      Tecno.TECNO_N8S,
      Tecno.TECNO_P701,
      Tecno.TECNO_P702,
      Tecno.TECNO_P703,
      Tecno.TECNO_P704,
      Tecno.TECNO_P704A,
      Tecno.TECNO_P904,
      Tecno.TECNO_PHANTOM5,
      Tecno.TECNO_PP7FPRO,
      Tecno.TECNO_PR651,
      Tecno.TECNO_PR651E,
      Tecno.TECNO_PR651H,
      Tecno.TECNO_R6,
      Tecno.TECNO_R8,
      Tecno.TECNO_RA6,
      Tecno.TECNO_RA8,
      Tecno.TECNO_RB6S,
      Tecno.TECNO_RB7S,
      Tecno.TECNO_RB8S,
      Tecno.TECNO_RC6,
      Tecno.TECNO_S1,
      Tecno.TECNO_S1_PRO,
      Tecno.TECNO_S6S,
      Tecno.TECNO_SA1,
      Tecno.TECNO_SA1S_PRO,
      Tecno.TECNO_SA2S,
      Tecno.TECNO_SA6,
      Tecno.TECNO_SA7S,
      Tecno.TECNO_SC7S,
      Tecno.TECNO_T1101,
      Tecno.TECNO_W3,
      Tecno.TECNO_W3LTE,
      Tecno.TECNO_W3PRO,
      Tecno.TECNO_W5,
      Tecno.TECNO_W5006S,
      Tecno.TECNO_WX3,
      Tecno.TECNO_WX3FLTE,
      Tecno.TECNO_WX3LTE,
      Tecno.TECNO_WX3P,
      Tecno.TECNO_WX4,
      Tecno.TECNO_WX4_PRO,
      Tecno.TECNO_Y2,
      Tecno.TECNO_Y6,
      Tecno.TECNO_N2S,
      Tecno.TECNO_W1,
      Tecno.TECNO_W2,
      Tecno.TECNO_W4,
      Tecno.W5LITE
  )

  /**
   * Get all device specifications for TECNO-Mobile devices.
   * Useful for tecno-mobile testing.
   */
  public fun getTecnoMobileDevices(): List<String> = listOf(
      TecnoMobile.TECNO_MOBILE_BF7N,
      TecnoMobile.TECNO_MOBILE_BG6,
      TecnoMobile.TECNO_MOBILE_BG7N,
      TecnoMobile.TECNO_MOBILE_CH6I,
      TecnoMobile.TECNO_MOBILE_CH6N,
      TecnoMobile.TECNO_MOBILE_CI6N,
      TecnoMobile.TECNO_MOBILE_KG5K,
      TecnoMobile.TECNO_MOBILE_KG6K,
      TecnoMobile.TECNO_MOBILE_KG6P,
      TecnoMobile.TECNO_MOBILE_KG8,
      TecnoMobile.TECNO_MOBILE_KI5Q,
      TecnoMobile.TECNO_MOBILE_KJ5N,
      TecnoMobile.TECNO_MOBILE_KJ6,
      TecnoMobile.TECNO_MOBILE_KJ7,
      TecnoMobile.TECNO_MOBILE_KL5N,
      TecnoMobile.TECNO_MOBILE_LG6N,
      TecnoMobile.TECNO_MOBILE_LH8N,
      TecnoMobile.TECNO_MOBILE_LI6
  )

  /**
   * Get all device specifications for Tecnomaster devices.
   * Useful for tecnomaster testing.
   */
  public fun getTecnomasterDevices(): List<String> = listOf(
      Tecnomaster.EDT800,
      Tecnomaster.KENTON,
      Tecnomaster.LASALLE,
      Tecnomaster.SEOCHO,
      Tecnomaster.SUGAMO,
      Tecnomaster.TEC_M1310
  )

  /**
   * Get all device specifications for TECO devices.
   * Useful for teco testing.
   */
  public fun getTecoDevices(): List<String> = listOf(
      Teco.IKEBUKURO,
      Teco.LONGSHAN,
      Teco.SAMSEONG
  )

  /**
   * Get all device specifications for TECTOY devices.
   * Useful for tectoy testing.
   */
  public fun getTectoyDevices(): List<String> = listOf(
      Tectoy.TOKYOPRO
  )

  /**
   * Get all device specifications for TEENO devices.
   * Useful for teeno testing.
   */
  public fun getTeenoDevices(): List<String> = listOf(
      Teeno.A1_EEA,
      Teeno.TEENO_I12
  )

  /**
   * Get all device specifications for Teeview devices.
   * Useful for teeview testing.
   */
  public fun getTeeviewDevices(): List<String> = listOf(
      Teeview.LAKESIDE,
      Teeview.NAGAI
  )

  /**
   * Get all device specifications for TEKLIO devices.
   * Useful for teklio testing.
   */
  public fun getTeklioDevices(): List<String> = listOf(
      Teklio.REDWOOD
  )

  /**
   * Get all device specifications for Teknosa devices.
   * Useful for teknosa testing.
   */
  public fun getTeknosaDevices(): List<String> = listOf(
      Teknosa.PREO_P2
  )

  /**
   * Get all device specifications for TekSavvyTV devices.
   * Useful for teksavvytv testing.
   */
  public fun getTeksavvytvDevices(): List<String> = listOf(
      Teksavvytv.DV8219
  )

  /**
   * Get all device specifications for telcel devices.
   * Useful for telcel testing.
   */
  public fun getTelcelDevices(): List<String> = listOf(
      Telcel.I50F
  )

  /**
   * Get all device specifications for Tele2 devices.
   * Useful for tele2 testing.
   */
  public fun getTele2Devices(): List<String> = listOf(
      Tele2.KSTB4231,
      Tele2.SEI700TE,
      Tele2.TELE2_MAXI,
      Tele2.TELE2_MAXI_PLUS,
      Tele2.TELE2_MIDI_2_0,
      Tele2.TELE2_MINI
  )

  /**
   * Get all device specifications for Telecable devices.
   * Useful for telecable testing.
   */
  public fun getTelecableDevices(): List<String> = listOf(
      Telecable.DTIW384
  )

  /**
   * Get all device specifications for TelecabPlay devices.
   * Useful for telecabplay testing.
   */
  public fun getTelecabplayDevices(): List<String> = listOf(
      Telecabplay.B866V2FA_TELECAB
  )

  /**
   * Get all device specifications for TELEFUNKEN devices.
   * Useful for telefunken testing.
   */
  public fun getTelefunkenDevices(): List<String> = listOf(
      Telefunken.SHANDAO,
      Telefunken.SHIBUYA,
      Telefunken.SW4H,
      Telefunken.TEL_1013GIQA,
      Telefunken.TEL_1014GIQ,
      Telefunken.TEL_1014GIQA,
      Telefunken.TEL_73GIQA,
      Telefunken.TEL_73GIQA11,
      Telefunken.TEL_74GIQA,
      Telefunken.TF501_EC,
      Telefunken.TF600
  )

  /**
   * Get all device specifications for TelekomTV devices.
   * Useful for telekomtv testing.
   */
  public fun getTelekomtvDevices(): List<String> = listOf(
      Telekomtv.DV8519B_TELEKOM,
      Telekomtv.SEI800DT_TELEKOM
  )

  /**
   * Get all device specifications for Telemor devices.
   * Useful for telemor testing.
   */
  public fun getTelemorDevices(): List<String> = listOf(
      Telemor.T9503
  )

  /**
   * Get all device specifications for telenet devices.
   * Useful for telenet testing.
   */
  public fun getTelenetDevices(): List<String> = listOf(
      Telenet.STI6160D332
  )

  /**
   * Get all device specifications for Telenor devices.
   * Useful for telenor testing.
   */
  public fun getTelenorDevices(): List<String> = listOf(
      Telenor.B3680,
      Telenor.DV6113Z_KST,
      Telenor.HIPERNET_TV_BOX_B866V2,
      Telenor.I6379,
      Telenor.MEDIABOX_B866V2
  )

  /**
   * Get all device specifications for Teleone devices.
   * Useful for teleone testing.
   */
  public fun getTeleoneDevices(): List<String> = listOf(
      Teleone.I06
  )

  /**
   * Get all device specifications for TELESYSTEM devices.
   * Useful for telesystem testing.
   */
  public fun getTelesystemDevices(): List<String> = listOf(
      Telesystem.MARTIN,
      Telesystem.ONT2HD,
      Telesystem.UPT24K
  )

  /**
   * Get all device specifications for Telev8 devices.
   * Useful for telev8 testing.
   */
  public fun getTelev8Devices(): List<String> = listOf(
      Telev8.MH700
  )

  /**
   * Get all device specifications for Telia devices.
   * Useful for telia testing.
   */
  public fun getTeliaDevices(): List<String> = listOf(
      Telia.DV8919_KLT,
      Telia.DV8919_KST,
      Telia.DV8919X_KET
  )

  /**
   * Get all device specifications for Telkom devices.
   * Useful for telkom testing.
   */
  public fun getTelkomDevices(): List<String> = listOf(
      Telkom.DV8219
  )

  /**
   * Get all device specifications for TellyTablet devices.
   * Useful for tellytablet testing.
   */
  public fun getTellytabletDevices(): List<String> = listOf(
      Tellytablet.VM_MD_001
  )

  /**
   * Get all device specifications for Telma devices.
   * Useful for telma testing.
   */
  public fun getTelmaDevices(): List<String> = listOf(
      Telma.EGO_PLUS,
      Telma.IFEEL_MAX_4G,
      Telma.S_MAX,
      Telma.TELMA_F1_MAX_4G,
      Telma.TELMA_F1PRIME4G,
      Telma.TELMA_F1XS4G,
      Telma.TELMA_IFEEL_MAX,
      Telma.TELMA_S_PRIME,
      Telma.TELMA_TITAN_4G
  )

  /**
   * Get all device specifications for TeloSystems devices.
   * Useful for telosystems testing.
   */
  public fun getTelosystemsDevices(): List<String> = listOf(
      Telosystems.TE580P,
      Telosystems.TE590P_E,
      Telosystems.TE590P_O
  )

  /**
   * Get all device specifications for TELOX devices.
   * Useful for telox testing.
   */
  public fun getTeloxDevices(): List<String> = listOf(
      Telox.TE620G
  )

  /**
   * Get all device specifications for Telpo devices.
   * Useful for telpo testing.
   */
  public fun getTelpoDevices(): List<String> = listOf(
      Telpo.M10,
      Telpo.M1K,
      Telpo.M8
  )

  /**
   * Get all device specifications for TELSTAR devices.
   * Useful for telstar testing.
   */
  public fun getTelstarDevices(): List<String> = listOf(
      Telstar.CAPITOLHILL,
      Telstar.KEONEAE
  )

  /**
   * Get all device specifications for TELUS devices.
   * Useful for telus testing.
   */
  public fun getTelusDevices(): List<String> = listOf(
      Telus.SER2024TLU,
      Telus.UIW4054TLU
  )

  /**
   * Get all device specifications for TelusCorporation devices.
   * Useful for teluscorporation testing.
   */
  public fun getTeluscorporationDevices(): List<String> = listOf(
      Teluscorporation.HMB2213PW22TS
  )

  /**
   * Get all device specifications for Tempo devices.
   * Useful for tempo testing.
   */
  public fun getTempoDevices(): List<String> = listOf(
      Tempo.HANYANG
  )

  /**
   * Get all device specifications for Tencent devices.
   * Useful for tencent testing.
   */
  public fun getTencentDevices(): List<String> = listOf(
      Tencent.VIRTUAL_MACHINE_2
  )

  /**
   * Get all device specifications for TENCH devices.
   * Useful for tench testing.
   */
  public fun getTenchDevices(): List<String> = listOf(
      Tench.TAB_A10
  )

  /**
   * Get all device specifications for Teracube devices.
   * Useful for teracube testing.
   */
  public fun getTeracubeDevices(): List<String> = listOf(
      Teracube.SAPPHIRE,
      Teracube.TERACUBE_2E,
      Teracube.TERACUBE_ONE
  )

  /**
   * Get all device specifications for TERRA devices.
   * Useful for terra testing.
   */
  public fun getTerraDevices(): List<String> = listOf(
      Terra.TERRA_MOBILE_PAD_1200,
      Terra.TERRA_PAD_1005,
      Terra.TERRA_PAD_1005POKO,
      Terra.TERRA_PAD_1006,
      Terra.TERRA_PAD_1006_V2,
      Terra.TERRA_PAD_1007,
      Terra.TERRA_PAD_1200_V2,
      Terra.TERRA_PAD_1201
  )

  /**
   * Get all device specifications for TES devices.
   * Useful for tes testing.
   */
  public fun getTesDevices(): List<String> = listOf(
      Tes.IGS_SERIES,
      Tes.IGS_SERIES_GEN2
  )

  /**
   * Get all device specifications for Tesla devices.
   * Useful for tesla testing.
   */
  public fun getTeslaDevices(): List<String> = listOf(
      Tesla.ANAHEIM,
      Tesla.EXPLR_9,
      Tesla.GUANDU,
      Tesla.L6195,
      Tesla.LAS,
      Tesla.MARTIN,
      Tesla.SHINAGAWA,
      Tesla.SW4H,
      Tesla.SW6H,
      Tesla.TAMACHI,
      Tesla.TESLA_L8_2,
      Tesla.TESLA_SP3_3,
      Tesla.TESLA_SP3_3LITE,
      Tesla.TESLA_SP3_4,
      Tesla.TESLA_SP3_5,
      Tesla.TESLA_SP6_3,
      Tesla.TESLA_SP6_4_LITE,
      Tesla.TESLA_SP9_1_LITE,
      Tesla.TESLA_SP9_2,
      Tesla.UMEDA,
      Tesla.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for TESPRO devices.
   * Useful for tespro testing.
   */
  public fun getTesproDevices(): List<String> = listOf(
      Tespro.MAYUMI_U1
  )

  /**
   * Get all device specifications for Texet devices.
   * Useful for texet testing.
   */
  public fun getTexetDevices(): List<String> = listOf(
      Texet.TM_5075,
      Texet.TM_5076,
      Texet.TM_5077,
      Texet.TM_5083,
      Texet.TM_5084,
      Texet.TM_5583,
      Texet.TM_5703
  )

  /**
   * Get all device specifications for TGnCo devices.
   * Useful for tgnco testing.
   */
  public fun getTgncoDevices(): List<String> = listOf(
      Tgnco.JGR,
      Tgnco.PHX
  )

  /**
   * Get all device specifications for THANHHUNG_TECHNOLOGY devices.
   * Useful for thanhhung_technology testing.
   */
  public fun getThanhhungTechnologyDevices(): List<String> = listOf(
      ThanhhungTechnology.HERO_9
  )

  /**
   * Get all device specifications for THE-UHD devices.
   * Useful for the-uhd testing.
   */
  public fun getTheUhdDevices(): List<String> = listOf(
      TheUhd.R2,
      TheUhd.R4
  )

  /**
   * Get all device specifications for THEHAAM devices.
   * Useful for thehaam testing.
   */
  public fun getThehaamDevices(): List<String> = listOf(
      Thehaam.HONGKONG
  )

  /**
   * Get all device specifications for Theham devices.
   * Useful for theham testing.
   */
  public fun getThehamDevices(): List<String> = listOf(
      Theham.HONGKONG,
      Theham.HUANGSHAN,
      Theham.LONGSHAN,
      Theham.SINDORIM,
      Theham.STANFORD,
      Theham.VILEPARLE,
      Theham.ZHONGSHAN
  )

  /**
   * Get all device specifications for ThinkAcademy devices.
   * Useful for thinkacademy testing.
   */
  public fun getThinkacademyDevices(): List<String> = listOf(
      Thinkacademy.T100
  )

  /**
   * Get all device specifications for THOMSON devices.
   * Useful for thomson testing.
   */
  public fun getThomsonDevices(): List<String> = listOf(
      Thomson.DELIGHT_TH201,
      Thomson.EBL_5304G,
      Thomson.FRIENDLY_TH101,
      Thomson.GUANDU,
      Thomson.IKEBUKURO,
      Thomson.L35_A,
      Thomson.LAOSHAN,
      Thomson.LAS,
      Thomson.MARINA,
      Thomson.MARTIN,
      Thomson.NAGATA,
      Thomson.ORIGIN_1010,
      Thomson.ORIGIN_679,
      Thomson.R1,
      Thomson.R2,
      Thomson.R3,
      Thomson.R4,
      Thomson.REDWOOD,
      Thomson.SAMSEONG,
      Thomson.SNA,
      Thomson.SW6H,
      Thomson.TEO10,
      Thomson.TEO10_KID2BL32,
      Thomson.TEO104G,
      Thomson.TEO10A2BK32P_EEA,
      Thomson.TEO10A4BK64P_EEA,
      Thomson.TEO10S,
      Thomson.TEO13P,
      Thomson.TEO84G332,
      Thomson.TEO8M2BK32LTE,
      Thomson.TEOX10_MT8SL128LTE,
      Thomson.TEOX102,
      Thomson.TEOX103,
      Thomson.YDA,
      Thomson.YXQ,
      Thomson.YZF
  )

  /**
   * Get all device specifications for THOMSON_KODAK devices.
   * Useful for thomson_kodak testing.
   */
  public fun getThomsonKodakDevices(): List<String> = listOf(
      ThomsonKodak.LEDTV32HD,
      ThomsonKodak.LEDTVUHD
  )

  /**
   * Get all device specifications for THT devices.
   * Useful for tht testing.
   */
  public fun getThtDevices(): List<String> = listOf(
      Tht.SEI700THT
  )

  /**
   * Get all device specifications for Thuraya devices.
   * Useful for thuraya testing.
   */
  public fun getThurayaDevices(): List<String> = listOf(
      Thuraya.X5_TOUCH
  )

  /**
   * Get all device specifications for TIANYU devices.
   * Useful for tianyu testing.
   */
  public fun getTianyuDevices(): List<String> = listOf(
      Tianyu.S40
  )

  /**
   * Get all device specifications for Tibuta devices.
   * Useful for tibuta testing.
   */
  public fun getTibutaDevices(): List<String> = listOf(
      Tibuta.A30,
      Tibuta.A40,
      Tibuta.E101,
      Tibuta.SMARTPAD_E220,
      Tibuta.TAB_868_PRO,
      Tibuta.TIBUTA_MASTERPAD_E100,
      Tibuta.TIBUTA_MASTERPAD_K100
  )

  /**
   * Get all device specifications for TIGERS devices.
   * Useful for tigers testing.
   */
  public fun getTigersDevices(): List<String> = listOf(
      Tigers.TIS001_S3,
      Tigers.TIS001_S4
  )

  /**
   * Get all device specifications for Tigo devices.
   * Useful for tigo testing.
   */
  public fun getTigoDevices(): List<String> = listOf(
      Tigo.UIW4054MIL,
      Tigo.UIW4059MIL
  )

  /**
   * Get all device specifications for Tigorr devices.
   * Useful for tigorr testing.
   */
  public fun getTigorrDevices(): List<String> = listOf(
      Tigorr.Z7
  )

  /**
   * Get all device specifications for TIM devices.
   * Useful for tim testing.
   */
  public fun getTimDevices(): List<String> = listOf(
      Tim.M393GENA_TIM,
      Tim.M393VSB_TIM,
      Tim.UZW4054TIM
  )

  /**
   * Get all device specifications for TIME2 devices.
   * Useful for time2 testing.
   */
  public fun getTime2Devices(): List<String> = listOf(
      Time2.TP1060J
  )

  /**
   * Get all device specifications for Timovi devices.
   * Useful for timovi testing.
   */
  public fun getTimoviDevices(): List<String> = listOf(
      Timovi.INSIGNIA_DELTA_2,
      Timovi.INSIGNIA_LAB,
      Timovi.TIMOVI_INFINIT_LITE_2,
      Timovi.TIMOVI_INFINIT_MX,
      Timovi.TIMOVI_VISION_PRO
  )

  /**
   * Get all device specifications for TINP devices.
   * Useful for tinp testing.
   */
  public fun getTinpDevices(): List<String> = listOf(
      Tinp.DV8219,
      Tinp.DV8330_C
  )

  /**
   * Get all device specifications for TINSIK devices.
   * Useful for tinsik testing.
   */
  public fun getTinsikDevices(): List<String> = listOf(
      Tinsik.A19_PLUS
  )

  /**
   * Get all device specifications for TIOK devices.
   * Useful for tiok testing.
   */
  public fun getTiokDevices(): List<String> = listOf(
      Tiok.S32
  )

  /**
   * Get all device specifications for TIT devices.
   * Useful for tit testing.
   */
  public fun getTitDevices(): List<String> = listOf(
      Tit.LAKESIDE,
      Tit.SW4H
  )

  /**
   * Get all device specifications for Tiwell devices.
   * Useful for tiwell testing.
   */
  public fun getTiwellDevices(): List<String> = listOf(
      Tiwell.AP_115G,
      Tiwell.AS_601L,
      Tiwell.T662_DH4_TIWELL,
      Tiwell.T662_GQ_TIWELL
  )

  /**
   * Get all device specifications for TJD devices.
   * Useful for tjd testing.
   */
  public fun getTjdDevices(): List<String> = listOf(
      Tjd.MT_1011,
      Tjd.MT_1011OF,
      Tjd.MT_1011QR,
      Tjd.MT_710QF,
      Tjd.MT_710QU,
      Tjd.MT_710QU_PRO,
      Tjd.MT_717QW,
      Tjd.MT_750QR,
      Tjd.MT_750QU,
      Tjd.MT_761QU_PRO,
      Tjd.MT_790QR_V1,
      Tjd.MT_1025QU
  )

  /**
   * Get all device specifications for TKDS devices.
   * Useful for tkds testing.
   */
  public fun getTkdsDevices(): List<String> = listOf(
      Tkds.T_101H
  )

  /**
   * Get all device specifications for TM_CELL devices.
   * Useful for tm_cell testing.
   */
  public fun getTmCellDevices(): List<String> = listOf(
      TmCell.LOGIC_X60_PLUS,
      TmCell.UNONU_W60_PLUS
  )

  /**
   * Get all device specifications for TNT devices.
   * Useful for tnt testing.
   */
  public fun getTntDevices(): List<String> = listOf(
      Tnt.TNT_PANALO_PHONE_5G
  )

  /**
   * Get all device specifications for TOCH_MOBILE devices.
   * Useful for toch_mobile testing.
   */
  public fun getTochMobileDevices(): List<String> = listOf(
      TochMobile.ANGEL_SMART
  )

  /**
   * Get all device specifications for Todos devices.
   * Useful for todos testing.
   */
  public fun getTodosDevices(): List<String> = listOf(
      Todos.TAB64
  )

  /**
   * Get all device specifications for Togocel devices.
   * Useful for togocel testing.
   */
  public fun getTogocelDevices(): List<String> = listOf(
      Togocel.S63,
      Togocel.TOGOCEL_F1_MAX_4G
  )

  /**
   * Get all device specifications for TOKECY devices.
   * Useful for tokecy testing.
   */
  public fun getTokecyDevices(): List<String> = listOf(
      Tokecy.T847,
      Tokecy.T847_EEA
  )

  /**
   * Get all device specifications for TOKYO devices.
   * Useful for tokyo testing.
   */
  public fun getTokyoDevices(): List<String> = listOf(
      Tokyo.MARINA,
      Tokyo.NAGATA
  )

  /**
   * Get all device specifications for Tomstar devices.
   * Useful for tomstar testing.
   */
  public fun getTomstarDevices(): List<String> = listOf(
      Tomstar.A1000,
      Tomstar.A1020,
      Tomstar.A1110
  )

  /**
   * Get all device specifications for TONE devices.
   * Useful for tone testing.
   */
  public fun getToneDevices(): List<String> = listOf(
      Tone.TONE_E19,
      Tone.TONE_E20,
      Tone.TONE_E21,
      Tone.TONE_E22,
      Tone.TONE_M15
  )

  /**
   * Get all device specifications for TOPELOTEK devices.
   * Useful for topelotek testing.
   */
  public fun getTopelotekDevices(): List<String> = listOf(
      Topelotek.KIDS06,
      Topelotek.KIDS708_709A,
      Topelotek.KIDS709,
      Topelotek.KIDS720,
      Topelotek.V7
  )

  /**
   * Get all device specifications for Topjoy devices.
   * Useful for topjoy testing.
   */
  public fun getTopjoyDevices(): List<String> = listOf(
      Topjoy.SC0802
  )

  /**
   * Get all device specifications for Topsand devices.
   * Useful for topsand testing.
   */
  public fun getTopsandDevices(): List<String> = listOf(
      Topsand.G12_A14,
      Topsand.M8_U,
      Topsand.N10_T,
      Topsand.N8,
      Topsand.N8_KIDS,
      Topsand.N8_PLUS
  )

  /**
   * Get all device specifications for Torex devices.
   * Useful for torex testing.
   */
  public fun getTorexDevices(): List<String> = listOf(
      Torex.TOREX8PLUS
  )

  /**
   * Get all device specifications for TORNADO devices.
   * Useful for tornado testing.
   */
  public fun getTornadoDevices(): List<String> = listOf(
      Tornado.SW4H,
      Tornado.SW6H,
      Tornado.UMEDA
  )

  /**
   * Get all device specifications for TOSCIDO devices.
   * Useful for toscido testing.
   */
  public fun getToscidoDevices(): List<String> = listOf(
      Toscido.P101,
      Toscido.P101_EEA,
      Toscido.T12_EEA,
      Toscido.T13_EEA,
      Toscido.T15,
      Toscido.T151,
      Toscido.T151_EEA,
      Toscido.T181,
      Toscido.T181_EEA,
      Toscido.T20_EEA,
      Toscido.T201,
      Toscido.T201_EEA,
      Toscido.T21_EEA,
      Toscido.T211_EEA,
      Toscido.T22,
      Toscido.T22_EEA,
      Toscido.T221,
      Toscido.T26_EEA,
      Toscido.T28,
      Toscido.T28_EEA,
      Toscido.T32_EEA,
      Toscido.T50,
      Toscido.T50_EEA,
      Toscido.X102
  )

  /**
   * Get all device specifications for TOSHIBA devices.
   * Useful for toshiba testing.
   */
  public fun getToshibaDevices(): List<String> = listOf(
      Toshiba.HAMAMATSUCHO,
      Toshiba.HAYWARD,
      Toshiba.HENGSHAN,
      Toshiba.HIRANO,
      Toshiba.HUANGSHAN,
      Toshiba.L4300,
      Toshiba.L9450,
      Toshiba.LAOSHAN,
      Toshiba.LIGEN,
      Toshiba.LUSHAN,
      Toshiba.SHANDAO,
      Toshiba.SONGSHAN,
      Toshiba.TAISHAN,
      Toshiba.TOS13T7GT,
      Toshiba.TOS14AST10,
      Toshiba.TOS15AST20,
      Toshiba.TOST7T,
      Toshiba.TOSTAB11BA,
      Toshiba.TOSTAB11BS,
      Toshiba.TOSTAB12AL,
      Toshiba.TOSTAB12BA,
      Toshiba.TOSTAB12BL,
      Toshiba.TOSTV14RTK1,
      Toshiba.TOSTV14RTK2,
      Toshiba.TOSTV15RTK2,
      Toshiba.XIAOYUSHAN,
      Toshiba.XINNONG
  )

  /**
   * Get all device specifications for TOUCH_Plus devices.
   * Useful for touch_plus testing.
   */
  public fun getTouchPlusDevices(): List<String> = listOf(
      TouchPlus._1100AS,
      TouchPlus._770G,
      TouchPlus._770N,
      TouchPlus.AS1000
  )

  /**
   * Get all device specifications for TOUCHMATE devices.
   * Useful for touchmate testing.
   */
  public fun getTouchmateDevices(): List<String> = listOf(
      Touchmate.TM_MID1010,
      Touchmate.TM_MID1010NB,
      Touchmate.TM_MID1050B,
      Touchmate.TM_MID1065,
      Touchmate.TM_MID1080,
      Touchmate.TM_MID880PRO
  )

  /**
   * Get all device specifications for Touchview_Interactive devices.
   * Useful for touchview_interactive testing.
   */
  public fun getTouchviewInteractiveDevices(): List<String> = listOf(
      TouchviewInteractive.TVULTRA98_G5
  )

  /**
   * Get all device specifications for TOYA devices.
   * Useful for toya testing.
   */
  public fun getToyaDevices(): List<String> = listOf(
      Toya.DTC974X,
      Toya.DTC974Y
  )

  /**
   * Get all device specifications for TOYIN devices.
   * Useful for toyin testing.
   */
  public fun getToyinDevices(): List<String> = listOf(
      Toyin.RJ_TOYIN
  )

  /**
   * Get all device specifications for TOYOTA devices.
   * Useful for toyota testing.
   */
  public fun getToyotaDevices(): List<String> = listOf(
      Toyota.TSA
  )

  /**
   * Get all device specifications for TP-LINK devices.
   * Useful for tp-link testing.
   */
  public fun getTpLinkDevices(): List<String> = listOf(
      TpLink.QC601
  )

  /**
   * Get all device specifications for TPAD devices.
   * Useful for tpad testing.
   */
  public fun getTpadDevices(): List<String> = listOf(
      Tpad.TPAD_T30B
  )

  /**
   * Get all device specifications for TPLAY devices.
   * Useful for tplay testing.
   */
  public fun getTplayDevices(): List<String> = listOf(
      Tplay.SEI800TCT
  )

  /**
   * Get all device specifications for TPS devices.
   * Useful for tps testing.
   */
  public fun getTpsDevices(): List<String> = listOf(
      Tps.K1091F,
      Tps.TPS_SC10
  )

  /**
   * Get all device specifications for Transvision devices.
   * Useful for transvision testing.
   */
  public fun getTransvisionDevices(): List<String> = listOf(
      Transvision.SEI500TR,
      Transvision.UHD_I56AD_TRV,
      Transvision.USB6_IR80
  )

  /**
   * Get all device specifications for TravelWifi devices.
   * Useful for travelwifi testing.
   */
  public fun getTravelwifiDevices(): List<String> = listOf(
      Travelwifi.SAPPHIRE_TABLET
  )

  /**
   * Get all device specifications for Trecfone devices.
   * Useful for trecfone testing.
   */
  public fun getTrecfoneDevices(): List<String> = listOf(
      Trecfone._16_PRO_MAX,
      Trecfone._17_PRO_MAX,
      Trecfone.T20,
      Trecfone.V35
  )

  /**
   * Get all device specifications for Trekstor devices.
   * Useful for trekstor testing.
   */
  public fun getTrekstorDevices(): List<String> = listOf(
      Trekstor.SURFTAB,
      Trekstor.TFMTKAW01216,
      Trekstor.TFMTKAW01232,
      Trekstor.TFMTKAW01332,
      Trekstor.THMTKAW01232,
      Trekstor.THMTKAW03232,
      Trekstor.TOLINO7,
      Trekstor.TOLINO8,
      Trekstor.TOLINO89
  )

  /**
   * Get all device specifications for Trevi devices.
   * Useful for trevi testing.
   */
  public fun getTreviDevices(): List<String> = listOf(
      Trevi.KIDTAB_7_S04,
      Trevi.TAB104GS2
  )

  /**
   * Get all device specifications for TriaPlay devices.
   * Useful for triaplay testing.
   */
  public fun getTriaplayDevices(): List<String> = listOf(
      Triaplay.TRIAPLAYBOX
  )

  /**
   * Get all device specifications for Trident devices.
   * Useful for trident testing.
   */
  public fun getTridentDevices(): List<String> = listOf(
      Trident.A23_MAX,
      Trident.A24,
      Trident.A25,
      Trident.A43,
      Trident.A53_PRO,
      Trident.A54,
      Trident.A55,
      Trident.A60,
      Trident.A75
  )

  /**
   * Get all device specifications for Trimble devices.
   * Useful for trimble testing.
   */
  public fun getTrimbleDevices(): List<String> = listOf(
      Trimble.BCAT,
      Trimble.E7167,
      Trimble.EE773X_4G,
      Trimble.EE773X_WIFI,
      Trimble.PDOG,
      Trimble.TDC6,
      Trimble.TDC600_2
  )

  /**
   * Get all device specifications for Trimble_Navigation devices.
   * Useful for trimble_navigation testing.
   */
  public fun getTrimbleNavigationDevices(): List<String> = listOf(
      TrimbleNavigation.DUO,
      TrimbleNavigation.MS5
  )

  /**
   * Get all device specifications for TRUE devices.
   * Useful for true testing.
   */
  public fun getTrueDevices(): List<String> = listOf(
      True.ALPHA_5G,
      True.S1,
      True.S1A,
      True.SMART_4G,
      True.SMART_4G_ADVENTURE,
      True.SMART_4G_CHAMPION,
      True.SMART_4G_GEN_C_5,
      True.SMART_4G_GEN_C_5_5,
      True.SMART_4G_M1_PLUS,
      True.SMART_4G_P1,
      True.SMART_4G_P1_PRIME,
      True.SMART_CHAMP_4INCH,
      True.SMART_TAB_4G_E_BIZ,
      True.SMART_TAB_4G_E_BIZ_PRO,
      True.SMART_TAB_4G_M1
  )

  /**
   * Get all device specifications for TRUE_SLIM devices.
   * Useful for true_slim testing.
   */
  public fun getTrueSlimDevices(): List<String> = listOf(
      TrueSlim.T1586K
  )

  /**
   * Get all device specifications for TrueIDTV devices.
   * Useful for trueidtv testing.
   */
  public fun getTrueidtvDevices(): List<String> = listOf(
      Trueidtv.HP4CE_TRUEVISIONS,
      Trueidtv.SEI600TID
  )

  /**
   * Get all device specifications for trueslim devices.
   * Useful for trueslim testing.
   */
  public fun getTrueslimDevices(): List<String> = listOf(
      Trueslim._5516D
  )

  /**
   * Get all device specifications for TrueVision devices.
   * Useful for truevision testing.
   */
  public fun getTruevisionDevices(): List<String> = listOf(
      Truevision.TV_A01
  )

  /**
   * Get all device specifications for Truevisions devices.
   * Useful for truevisions testing.
   */
  public fun getTruevisionsDevices(): List<String> = listOf(
      Truevisions.HP42F,
      Truevisions.TRUEHCH03,
      Truevisions.TRUEHPH07
  )

  /**
   * Get all device specifications for TRUFON devices.
   * Useful for trufon testing.
   */
  public fun getTrufonDevices(): List<String> = listOf(
      Trufon.TRUFON_FLEX
  )

  /**
   * Get all device specifications for Truvii devices.
   * Useful for truvii testing.
   */
  public fun getTruviiDevices(): List<String> = listOf(
      Truvii.BRUNO,
      Truvii.SEOCHO,
      Truvii.SHILIN,
      Truvii.SUGAMO
  )

  /**
   * Get all device specifications for tsutaya devices.
   * Useful for tsutaya testing.
   */
  public fun getTsutayaDevices(): List<String> = listOf(
      Tsutaya.TS201
  )

  /**
   * Get all device specifications for TTfone devices.
   * Useful for ttfone testing.
   */
  public fun getTtfoneDevices(): List<String> = listOf(
      Ttfone.TTFONE_TT20
  )

  /**
   * Get all device specifications for TTS devices.
   * Useful for tts testing.
   */
  public fun getTtsDevices(): List<String> = listOf(
      Tts.IT10268
  )

  /**
   * Get all device specifications for TuCEL devices.
   * Useful for tucel testing.
   */
  public fun getTucelDevices(): List<String> = listOf(
      Tucel.TL554B
  )

  /**
   * Get all device specifications for TUFEN devices.
   * Useful for tufen testing.
   */
  public fun getTufenDevices(): List<String> = listOf(
      Tufen.Q718B_EEA,
      Tufen.Q738,
      Tufen.Q801,
      Tufen.Q88C,
      Tufen.Q88D_FUFEN_EEA
  )

  /**
   * Get all device specifications for TUFF devices.
   * Useful for tuff testing.
   */
  public fun getTuffDevices(): List<String> = listOf(
      Tuff.T500
  )

  /**
   * Get all device specifications for Turbo devices.
   * Useful for turbo testing.
   */
  public fun getTurboDevices(): List<String> = listOf(
      Turbo.TURBO_X8
  )

  /**
   * Get all device specifications for Turbo-x devices.
   * Useful for turbo-x testing.
   */
  public fun getTurboXDevices(): List<String> = listOf(
      TurboX.A4,
      TurboX.AQUA,
      TurboX.CALLTAB2GB10,
      TurboX.FIRE,
      TurboX.FIRE_II_WIFI,
      TurboX.TAMACHI,
      TurboX.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for Turbopad devices.
   * Useful for turbopad testing.
   */
  public fun getTurbopadDevices(): List<String> = listOf(
      Turbopad.DREAM,
      Turbopad.TURBOPAD1015NEW,
      Turbopad.TURBOPAD1016NEW,
      Turbopad.TURBOPADPRO
  )

  /**
   * Get all device specifications for Turbox devices.
   * Useful for turbox testing.
   */
  public fun getTurboxDevices(): List<String> = listOf(
      Turbox.AQUA_II,
      Turbox.MERCURY
  )

  /**
   * Get all device specifications for Turk_Telekom devices.
   * Useful for turk_telekom testing.
   */
  public fun getTurkTelekomDevices(): List<String> = listOf(
      TurkTelekom._722T,
      TurkTelekom.ZTE_BLADE_V580
  )

  /**
   * Get all device specifications for TURKCELL devices.
   * Useful for turkcell testing.
   */
  public fun getTurkcellDevices(): List<String> = listOf(
      Turkcell.P809T70,
      Turkcell.P839T60,
      Turkcell.P840F14,
      Turkcell.TURKCELL_T_TABLET
  )

  /**
   * Get all device specifications for TUTU devices.
   * Useful for tutu testing.
   */
  public fun getTutuDevices(): List<String> = listOf(
      Tutu.LAKESIDE,
      Tutu.NAGAI
  )

  /**
   * Get all device specifications for TV360_by_Bitel devices.
   * Useful for tv360_by_bitel testing.
   */
  public fun getTv360ByBitelDevices(): List<String> = listOf(
      Tv360ByBitel.B866V2FAS_BITEL
  )

  /**
   * Get all device specifications for TVB devices.
   * Useful for tvb testing.
   */
  public fun getTvbDevices(): List<String> = listOf(
      Tvb.A151,
      Tvb.A20
  )

  /**
   * Get all device specifications for TVcore devices.
   * Useful for tvcore testing.
   */
  public fun getTvcoreDevices(): List<String> = listOf(
      Tvcore.TS401
  )

  /**
   * Get all device specifications for TVHerYerde devices.
   * Useful for tvheryerde testing.
   */
  public fun getTvheryerdeDevices(): List<String> = listOf(
      Tvheryerde.DV8957X_KTT
  )

  /**
   * Get all device specifications for TVision devices.
   * Useful for tvision testing.
   */
  public fun getTvisionDevices(): List<String> = listOf(
      Tvision.SEI400TM,
      Tvision.SEI700TM
  )

  /**
   * Get all device specifications for TVPLUS devices.
   * Useful for tvplus testing.
   */
  public fun getTvplusDevices(): List<String> = listOf(
      Tvplus.DV6069Y_TVPLUS,
      Tvplus.HP44H
  )

  /**
   * Get all device specifications for TVSmart devices.
   * Useful for tvsmart testing.
   */
  public fun getTvsmartDevices(): List<String> = listOf(
      Tvsmart.DV8981_KPV
  )

  /**
   * Get all device specifications for TVSTAR devices.
   * Useful for tvstar testing.
   */
  public fun getTvstarDevices(): List<String> = listOf(
      Tvstar.SEOCHO
  )

  /**
   * Get all device specifications for TVT devices.
   * Useful for tvt testing.
   */
  public fun getTvtDevices(): List<String> = listOf(
      Tvt.TVT_T108
  )

  /**
   * Get all device specifications for TVUP devices.
   * Useful for tvup testing.
   */
  public fun getTvupDevices(): List<String> = listOf(
      Tvup.DENALI_B866V2F,
      Tvup.HPA12_8GB,
      Tvup.SEI300T
  )

  /**
   * Get all device specifications for TwinMOS devices.
   * Useful for twinmos testing.
   */
  public fun getTwinmosDevices(): List<String> = listOf(
      Twinmos.MQ703G,
      Twinmos.MQ703G,
      Twinmos.MQ703G_1
  )

  /**
   * Get all device specifications for TWM devices.
   * Useful for twm testing.
   */
  public fun getTwmDevices(): List<String> = listOf(
      Twm.AMAZING_X3S,
      Twm.P839V56
  )

  /**
   * Get all device specifications for TWZ devices.
   * Useful for twz testing.
   */
  public fun getTwzDevices(): List<String> = listOf(
      Twz.OX_X1,
      Twz.V10,
      Twz.V6
  )

  /**
   * Get all device specifications for UAUU devices.
   * Useful for uauu testing.
   */
  public fun getUauuDevices(): List<String> = listOf(
      Uauu.M10,
      Uauu.T30,
      Uauu.T30PRO,
      Uauu.T60,
      Uauu.T90_NEW,
      Uauu.U10
  )

  /**
   * Get all device specifications for UBNT devices.
   * Useful for ubnt testing.
   */
  public fun getUbntDevices(): List<String> = listOf(
      Ubnt.CAPRI_UBQ_TELEFI5,
      Ubnt.CAPRI_UBQ_TELEFI5P,
      Ubnt.CAPRI_UBQ_TELEFI7
  )

  /**
   * Get all device specifications for UBOS devices.
   * Useful for ubos testing.
   */
  public fun getUbosDevices(): List<String> = listOf(
      Ubos.UTAB
  )

  /**
   * Get all device specifications for UCM devices.
   * Useful for ucm testing.
   */
  public fun getUcmDevices(): List<String> = listOf(
      Ucm.T12
  )

  /**
   * Get all device specifications for UD devices.
   * Useful for ud testing.
   */
  public fun getUdDevices(): List<String> = listOf(
      Ud.LONGSHAN,
      Ud.REDWOOD
  )

  /**
   * Get all device specifications for ugee devices.
   * Useful for ugee testing.
   */
  public fun getUgeeDevices(): List<String> = listOf(
      Ugee.HERA_VIS_WIFI,
      Ugee.UGEEUT1LITE_EEA,
      Ugee.UGEEUT1LITE_NOEEA
  )

  /**
   * Get all device specifications for UGRIHACH devices.
   * Useful for ugrihach testing.
   */
  public fun getUgrihachDevices(): List<String> = listOf(
      Ugrihach.C11
  )

  /**
   * Get all device specifications for UJJ devices.
   * Useful for ujj testing.
   */
  public fun getUjjDevices(): List<String> = listOf(
      Ujj.U3_EEA,
      Ujj.U3_US,
      Ujj.U6_EEA,
      Ujj.U6_US,
      Ujj.U7_EEA,
      Ujj.U7_US,
      Ujj.U8_EEA,
      Ujj.U8_US
  )

  /**
   * Get all device specifications for Ujoyfeel devices.
   * Useful for ujoyfeel testing.
   */
  public fun getUjoyfeelDevices(): List<String> = listOf(
      Ujoyfeel.KIDS705_701A
  )

  /**
   * Get all device specifications for Ulefone devices.
   * Useful for ulefone testing.
   */
  public fun getUlefoneDevices(): List<String> = listOf(
      Ulefone.ARMOR_10_5G,
      Ulefone.ARMOR_11_5G,
      Ulefone.ARMOR_11T_5G,
      Ulefone.ARMOR_12_5G,
      Ulefone.ARMOR_12S,
      Ulefone.ARMOR_15,
      Ulefone.ARMOR_17_PRO,
      Ulefone.ARMOR_2,
      Ulefone.ARMOR_20WT,
      Ulefone.ARMOR_21,
      Ulefone.ARMOR_22,
      Ulefone.ARMOR_23_ULTRA,
      Ulefone.ARMOR_24,
      Ulefone.ARMOR_26_ULTRA,
      Ulefone.ARMOR_2S,
      Ulefone.ARMOR_3,
      Ulefone.ARMOR_3W,
      Ulefone.ARMOR_3WT,
      Ulefone.ARMOR_5S,
      Ulefone.ARMOR_6,
      Ulefone.ARMOR_6E,
      Ulefone.ARMOR_6S,
      Ulefone.ARMOR_7,
      Ulefone.ARMOR_7_Q,
      Ulefone.ARMOR_7E,
      Ulefone.ARMOR_7E_Q,
      Ulefone.ARMOR_8,
      Ulefone.ARMOR_8_PRO,
      Ulefone.ARMOR_8_R,
      Ulefone.ARMOR_9,
      Ulefone.ARMOR_9E,
      Ulefone.ARMOR_PAD,
      Ulefone.ARMOR_PAD_2,
      Ulefone.ARMOR_X,
      Ulefone.ARMOR_X10,
      Ulefone.ARMOR_X10_PRO,
      Ulefone.ARMOR_X12,
      Ulefone.ARMOR_X12_PRO,
      Ulefone.ARMOR_X13,
      Ulefone.ARMOR_X2,
      Ulefone.ARMOR_X3,
      Ulefone.ARMOR_X5,
      Ulefone.ARMOR_X5_PRO,
      Ulefone.ARMOR_X5_PRO_R,
      Ulefone.ARMOR_X5_Q,
      Ulefone.ARMOR_X5_R,
      Ulefone.ARMOR_X6,
      Ulefone.ARMOR_X6_PRO,
      Ulefone.ARMOR_X7_PRO,
      Ulefone.ARMOR_X7_Q,
      Ulefone.ARMOR_X8_R,
      Ulefone.ARMOR_X8I,
      Ulefone.ARMOR_X9,
      Ulefone.ARMOR_X9_PRO,
      Ulefone.ARMORPAD3PRO,
      Ulefone.ARMORPADLITE,
      Ulefone.ARMORPADPRO,
      Ulefone.GQ3087,
      Ulefone.GQ3106,
      Ulefone.GQ3121AF1,
      Ulefone.GQ3286,
      Ulefone.GQ3289SH1,
      Ulefone.GQ3290BH1,
      Ulefone.GQ3291SH1,
      Ulefone.GQ5007AF2,
      Ulefone.GQ5007TF1,
      Ulefone.GQ5008AF2,
      Ulefone.GQ5008AF3,
      Ulefone.GQ5008TF1,
      Ulefone.GQ5008TF2,
      Ulefone.GQ5009TH1,
      Ulefone.GQ5010AH1,
      Ulefone.GQ5010AH2,
      Ulefone.GQ5010TH1,
      Ulefone.GQ5011AF1,
      Ulefone.GQ5011BF1,
      Ulefone.GQ5013BF2,
      Ulefone.GQ5015AH1,
      Ulefone.GQ5015RH1,
      Ulefone.GQ5017BF3,
      Ulefone.GQ5020BH1,
      Ulefone.GQ5020TH1P19,
      Ulefone.GQ5021AH1,
      Ulefone.GQ5021RH1,
      Ulefone.MIX_2,
      Ulefone.NOTE_10P,
      Ulefone.NOTE_11P,
      Ulefone.NOTE_12,
      Ulefone.NOTE_12P,
      Ulefone.NOTE_13P,
      Ulefone.NOTE_14,
      Ulefone.NOTE_15,
      Ulefone.NOTE_16_PRO,
      Ulefone.NOTE_17_PRO,
      Ulefone.NOTE_18_ULTRA,
      Ulefone.NOTE_6,
      Ulefone.NOTE_6P,
      Ulefone.NOTE_6T,
      Ulefone.NOTE_7P,
      Ulefone.NOTE_7T,
      Ulefone.NOTE_8,
      Ulefone.NOTE_8P,
      Ulefone.NOTE_9P,
      Ulefone.P6000_PLUS,
      Ulefone.POWER_2,
      Ulefone.POWER_3,
      Ulefone.POWER_3L,
      Ulefone.POWER_3L_EEA,
      Ulefone.POWER_3S,
      Ulefone.POWER_5,
      Ulefone.POWER_5S,
      Ulefone.POWER_6,
      Ulefone.POWER_ARMOR14_PRO,
      Ulefone.POWER_ARMOR_13,
      Ulefone.POWER_ARMOR_14,
      Ulefone.POWER_ARMOR_16S,
      Ulefone.POWER_ARMOR_18,
      Ulefone.POWER_ARMOR_18T,
      Ulefone.POWER_ARMOR_19,
      Ulefone.POWER_ARMOR_19T,
      Ulefone.POWER_ARMOR_X11,
      Ulefone.POWERARMOR16PRO,
      Ulefone.POWERARMORX11PRO,
      Ulefone.S10_PRO,
      Ulefone.S11_PRO,
      Ulefone.S8,
      Ulefone.S8_PRO,
      Ulefone.S8_PRO1,
      Ulefone.S9_PRO,
      Ulefone.T2,
      Ulefone.T662_GQ_N1616_WE,
      Ulefone.T662_GQ_ULEFONE,
      Ulefone.T816_GQ_ULEFONE,
      Ulefone.UF1001_1,
      Ulefone.UF1002,
      Ulefone.UF1103,
      Ulefone.UF1103A,
      Ulefone.ULEFONE_ARMOR_5,
      Ulefone.ULEFONE_NOTE_7,
      Ulefone.ULEFONE_S1,
      Ulefone.ULEFONE_S11,
      Ulefone.ULEFONE_S7,
      Ulefone.ULEFONE_TAB_A7,
      Ulefone.ULEFONE_X
  )

  /**
   * Get all device specifications for uLesson devices.
   * Useful for ulesson testing.
   */
  public fun getUlessonDevices(): List<String> = listOf(
      Ulesson.ULESSON_EDUCATION_TAB,
      Ulesson.ULESSON_TAB_V2
  )

  /**
   * Get all device specifications for Ultimate devices.
   * Useful for ultimate testing.
   */
  public fun getUltimateDevices(): List<String> = listOf(
      Ultimate.ULTIMATE_FU
  )

  /**
   * Get all device specifications for Ultra devices.
   * Useful for ultra testing.
   */
  public fun getUltraDevices(): List<String> = listOf(
      Ultra.ULTRAJ8
  )

  /**
   * Get all device specifications for Ultrapad devices.
   * Useful for ultrapad testing.
   */
  public fun getUltrapadDevices(): List<String> = listOf(
      Ultrapad.UP10_SH36LAG
  )

  /**
   * Get all device specifications for Ultym5 devices.
   * Useful for ultym5 testing.
   */
  public fun getUltym5Devices(): List<String> = listOf(
      Ultym5.HWG535_L11
  )

  /**
   * Get all device specifications for Umax devices.
   * Useful for umax testing.
   */
  public fun getUmaxDevices(): List<String> = listOf(
      Umax._10A_3G,
      Umax._10A_LTE,
      Umax._10C_LTE_A11,
      Umax._10C_PRO_LTE,
      Umax._10C_LTE,
      Umax._10L_PLUS,
      Umax._10T_LTE_EEA,
      Umax._11T_LTE_PRO_EEA,
      Umax._7A_3G,
      Umax._7A_PLUS,
      Umax._8A_PLUS_EEA,
      Umax._8C_LTE,
      Umax._8L_PLUS_EEA,
      Umax._8QA_3G,
      Umax.KAITAK,
      Umax.SEOCHO,
      Umax.SHILIN,
      Umax.T8_3G,
      Umax.TENNOJI,
      Umax.VB_10Q_PLUS,
      Umax.VISIONBOOK_10Q_PRO
  )

  /**
   * Get all device specifications for UMIDIGI devices.
   * Useful for umidigi testing.
   */
  public fun getUmidigiDevices(): List<String> = listOf(
      Umidigi.A11,
      Umidigi.A11_PRO_MAX,
      Umidigi.A11_TAB,
      Umidigi.A11_TAB_EEA,
      Umidigi.A11S,
      Umidigi.A13,
      Umidigi.A13_PRO,
      Umidigi.A13_PRO_5G,
      Umidigi.A13_PRO_MAX_5G,
      Umidigi.A13_TAB,
      Umidigi.A13_TAB_EEA,
      Umidigi.A13S,
      Umidigi.A15_TAB,
      Umidigi.A15_TAB_EEA,
      Umidigi.A15T,
      Umidigi.A3,
      Umidigi.A3_PRO,
      Umidigi.A3S,
      Umidigi.A3X,
      Umidigi.A5_PRO,
      Umidigi.A7,
      Umidigi.A7_EEA,
      Umidigi.A7_PRO,
      Umidigi.A7S,
      Umidigi.A9,
      Umidigi.A9_PRO,
      Umidigi.A9_PRO_128GB,
      Umidigi.A9_PRO_R,
      Umidigi.ABLEPAD_PRO,
      Umidigi.ACTIVE_T1,
      Umidigi.BISON,
      Umidigi.BISON_2,
      Umidigi.BISON_GT,
      Umidigi.BISON_GT2,
      Umidigi.BISON_GT2_5G,
      Umidigi.BISON_PRO,
      Umidigi.BISON_R,
      Umidigi.BISON_X10,
      Umidigi.BISON_X10_PRO,
      Umidigi.BISON_X10G,
      Umidigi.BISON_X10G_NFC,
      Umidigi.BISON_X10S,
      Umidigi.BISON_X10S_NFC,
      Umidigi.BISON_X20,
      Umidigi.C1_MAX,
      Umidigi.C1_PLUS,
      Umidigi.F1,
      Umidigi.F2,
      Umidigi.F3_5G,
      Umidigi.F3_PRO_5G,
      Umidigi.F3S,
      Umidigi.G100,
      Umidigi.G100A,
      Umidigi.G1_MAX,
      Umidigi.G1_PLUS,
      Umidigi.G1_TAB,
      Umidigi.G1_TAB_EEA,
      Umidigi.G1_TAB_KIDS,
      Umidigi.G1_TAB_KIDS_EEA,
      Umidigi.G1_TAB_MINI,
      Umidigi.G1_TAB_MINI_EEA,
      Umidigi.G1_TAB_MINI_KIDS,
      Umidigi.G1_TAB_MINI_KIDS_EEA,
      Umidigi.G2_TAB,
      Umidigi.G2_TAB_EEA,
      Umidigi.G2_TAB_KIDS,
      Umidigi.G2_TAB_KIDS_EEA,
      Umidigi.G3_MAX,
      Umidigi.G3_PLUS,
      Umidigi.G3_TAB_ULTRA,
      Umidigi.G5_MECHA,
      Umidigi.G5_TAB,
      Umidigi.G5_TAB_EEA,
      Umidigi.G5_TAB_KIDS,
      Umidigi.G5_TAB_KIDS_EEA,
      Umidigi.G6_5G,
      Umidigi.G7,
      Umidigi.G7_TAB_MINI,
      Umidigi.G7_TAB_PRO,
      Umidigi.G9_TAB,
      Umidigi.G9_TAB_EEA,
      Umidigi.G9A,
      Umidigi.G9C,
      Umidigi.G9T,
      Umidigi.G9X,
      Umidigi.NOTE_100,
      Umidigi.NOTE_100_5G,
      Umidigi.NOTE_100A,
      Umidigi.ONE,
      Umidigi.ONE_MAX,
      Umidigi.ONE_PRO,
      Umidigi.POWER,
      Umidigi.POWER_3,
      Umidigi.POWER_5,
      Umidigi.POWER_5S,
      Umidigi.POWER_7,
      Umidigi.POWER_7_MAX,
      Umidigi.POWER_7S,
      Umidigi.S2_PRO,
      Umidigi.S3_PRO,
      Umidigi.S5_PRO,
      Umidigi.UMIDIGI_A15,
      Umidigi.UMIDIGI_A15C,
      Umidigi.UMIDIGI_C1,
      Umidigi.UMIDIGI_C2,
      Umidigi.UMIDIGI_F3,
      Umidigi.UMIDIGI_G1,
      Umidigi.UMIDIGI_G2,
      Umidigi.UMIDIGI_G3,
      Umidigi.UMIDIGI_G5,
      Umidigi.UMIDIGI_G5A,
      Umidigi.UMIDIGI_X,
      Umidigi.Z2,
      Umidigi.Z2_PRO
  )

  /**
   * Get all device specifications for Umx devices.
   * Useful for umx testing.
   */
  public fun getUmxDevices(): List<String> = listOf(
      Umx.U2_PLUS_TE_VR,
      Umx.U2VR,
      Umx.U3AR,
      Umx.U504TL,
      Umx.U673C,
      Umx.U683CL,
      Umx.U693CL,
      Umx.U696CL
  )

  /**
   * Get all device specifications for Unbluable devices.
   * Useful for unbluable testing.
   */
  public fun getUnbluableDevices(): List<String> = listOf(
      Unbluable.PAPERTABLET
  )

  /**
   * Get all device specifications for UNICO devices.
   * Useful for unico testing.
   */
  public fun getUnicoDevices(): List<String> = listOf(
      Unico.OSAKI
  )

  /**
   * Get all device specifications for unifi-TV devices.
   * Useful for unifi-tv testing.
   */
  public fun getUnifiTvDevices(): List<String> = listOf(
      UnifiTv.HP40A3,
      UnifiTv.HP43A
  )

  /**
   * Get all device specifications for Unihertz devices.
   * Useful for unihertz testing.
   */
  public fun getUnihertzDevices(): List<String> = listOf(
      Unihertz.ATOM,
      Unihertz.ATOM_L,
      Unihertz.ATOM_XL,
      Unihertz.JELLY2,
      Unihertz.JELLY2_JP,
      Unihertz.JELLY_2E,
      Unihertz.JELLY_MAX,
      Unihertz.JELLY_STAR,
      Unihertz.LUNA,
      Unihertz.TANK_01,
      Unihertz.TICKTOCK,
      Unihertz.TICKTOCK_S,
      Unihertz.TITAN,
      Unihertz.TITAN_POCKET,
      Unihertz.TITAN_SLIM,
      Unihertz.UNIA62
  )

  /**
   * Get all device specifications for UNIQ devices.
   * Useful for uniq testing.
   */
  public fun getUniqDevices(): List<String> = listOf(
      Uniq.D10,
      Uniq.D7
  )

  /**
   * Get all device specifications for UNIQCELL devices.
   * Useful for uniqcell testing.
   */
  public fun getUniqcellDevices(): List<String> = listOf(
      Uniqcell.UNI_10X,
      Uniqcell.UNI_GO,
      Uniqcell.UNI_X,
      Uniqcell.UNIQ0122,
      Uniqcell.UNIQCELL_A4,
      Uniqcell.UNIQCELL_A55
  )

  /**
   * Get all device specifications for UNISCED devices.
   * Useful for unisced testing.
   */
  public fun getUniscedDevices(): List<String> = listOf(
      Unisced.UNISCEDTAB24
  )

  /**
   * Get all device specifications for Uniscope devices.
   * Useful for uniscope testing.
   */
  public fun getUniscopeDevices(): List<String> = listOf(
      Uniscope.S6S,
      Uniscope.S6W
  )

  /**
   * Get all device specifications for Unistrong devices.
   * Useful for unistrong testing.
   */
  public fun getUnistrongDevices(): List<String> = listOf(
      Unistrong.UT10,
      Unistrong.UT12,
      Unistrong.UT12P,
      Unistrong.UT30,
      Unistrong.UT32,
      Unistrong.UT56
  )

  /**
   * Get all device specifications for unitech devices.
   * Useful for unitech testing.
   */
  public fun getUnitechDevices(): List<String> = listOf(
      Unitech.EA320,
      Unitech.EA500PLUS,
      Unitech.EA510,
      Unitech.EA520,
      Unitech.EA520_US,
      Unitech.EA630,
      Unitech.EA630_PLUS,
      Unitech.EA660,
      Unitech.HT330,
      Unitech.HT730,
      Unitech.PA760,
      Unitech.PA768,
      Unitech.RT112,
      Unitech.TB85,
      Unitech.TB85PLUS,
      Unitech.WD200
  )

  /**
   * Get all device specifications for United devices.
   * Useful for united testing.
   */
  public fun getUnitedDevices(): List<String> = listOf(
      United.GANGBYEON,
      United.IKEBUKURO,
      United.REDWOOD
  )

  /**
   * Get all device specifications for Unitel devices.
   * Useful for unitel testing.
   */
  public fun getUnitelDevices(): List<String> = listOf(
      Unitel.U903,
      Unitel.UNITEL_TAB_4G_H101,
      Unitel.USMART6
  )

  /**
   * Get all device specifications for UNIWA devices.
   * Useful for uniwa testing.
   */
  public fun getUniwaDevices(): List<String> = listOf(
      Uniwa.K626,
      Uniwa.M101,
      Uniwa.UNIWA_W888,
      Uniwa.UNIWA_W999,
      Uniwa.W555
  )

  /**
   * Get all device specifications for unnecto devices.
   * Useful for unnecto testing.
   */
  public fun getUnnectoDevices(): List<String> = listOf(
      Unnecto.BOLT1,
      Unnecto.BOLT10,
      Unnecto.BOLT20
  )

  /**
   * Get all device specifications for Unnion devices.
   * Useful for unnion testing.
   */
  public fun getUnnionDevices(): List<String> = listOf(
      Unnion.UN_CT101
  )

  /**
   * Get all device specifications for UNNIONTECH devices.
   * Useful for unniontech testing.
   */
  public fun getUnniontechDevices(): List<String> = listOf(
      Unniontech.UNSP7
  )

  /**
   * Get all device specifications for UNO devices.
   * Useful for uno testing.
   */
  public fun getUnoDevices(): List<String> = listOf(
      Uno.NEWPAD_10,
      Uno.PREMIER5,
      Uno.PREMIER5MAX,
      Uno.PREMIER_PRO,
      Uno.PREMIER_PRO_B,
      Uno.PREMIER_PROA,
      Uno.UNO_PRIME6
  )

  /**
   * Get all device specifications for UNONU devices.
   * Useful for unonu testing.
   */
  public fun getUnonuDevices(): List<String> = listOf(
      Unonu.N63A,
      Unonu.UN55L,
      Unonu.UNONU_N55S,
      Unonu.UNONU_N65_LITE,
      Unonu.UNONU_U4001,
      Unonu.UNONU_W50X,
      Unonu.UNONU_W57A,
      Unonu.UNONU_W609,
      Unonu.UNONU_W61,
      Unonu.UT3G,
      Unonu.UT3GPLUS,
      Unonu.W50A
  )

  /**
   * Get all device specifications for UNOWHY devices.
   * Useful for unowhy testing.
   */
  public fun getUnowhyDevices(): List<String> = listOf(
      Unowhy.S10G001S4M_EEA,
      Unowhy.Y10_PREMIUM,
      Unowhy.Y10G001S4M,
      Unowhy.Y10G007S4M_EEA,
      Unowhy.Y10G007S4MI_EEA
  )

  /**
   * Get all device specifications for Up_Mobile devices.
   * Useful for up_mobile testing.
   */
  public fun getUpMobileDevices(): List<String> = listOf(
      UpMobile.MOVER_EDITION
  )

  /**
   * Get all device specifications for Urovo devices.
   * Useful for urovo testing.
   */
  public fun getUrovoDevices(): List<String> = listOf(
      Urovo.DT40,
      Urovo.DT50,
      Urovo.DT50_5G,
      Urovo.DT66,
      Urovo.I6310,
      Urovo.I9000S,
      Urovo.P8100,
      Urovo.P8100P,
      Urovo.RT40S,
      Urovo.SQ46M,
      Urovo.SQ47,
      Urovo.SQ57
  )

  /**
   * Get all device specifications for USConnect devices.
   * Useful for usconnect testing.
   */
  public fun getUsconnectDevices(): List<String> = listOf(
      Usconnect.VT10M2
  )

  /**
   * Get all device specifications for UTime devices.
   * Useful for utime testing.
   */
  public fun getUtimeDevices(): List<String> = listOf(
      Utime.TH602
  )

  /**
   * Get all device specifications for UTOPIA devices.
   * Useful for utopia testing.
   */
  public fun getUtopiaDevices(): List<String> = listOf(
      Utopia.UH0342
  )

  /**
   * Get all device specifications for UTVbox devices.
   * Useful for utvbox testing.
   */
  public fun getUtvboxDevices(): List<String> = listOf(
      Utvbox.MGV2002_HK
  )

  /**
   * Get all device specifications for V2com devices.
   * Useful for v2com testing.
   */
  public fun getV2comDevices(): List<String> = listOf(
      V2com.ROCKY_T2
  )

  /**
   * Get all device specifications for V7 devices.
   * Useful for v7 testing.
   */
  public fun getV7Devices(): List<String> = listOf(
      V7.BUV7TBLT10A,
      V7.RK3588_T
  )

  /**
   * Get all device specifications for VAIO devices.
   * Useful for vaio testing.
   */
  public fun getVaioDevices(): List<String> = listOf(
      Vaio.VPA051
  )

  /**
   * Get all device specifications for VALE devices.
   * Useful for vale testing.
   */
  public fun getValeDevices(): List<String> = listOf(
      Vale.V10A_4128,
      Vale.V10E_LTE,
      Vale.V11E_LTE_4128,
      Vale.V12E_LTE,
      Vale.V12E_LTE_8128
  )

  /**
   * Get all device specifications for VALERION devices.
   * Useful for valerion testing.
   */
  public fun getValerionDevices(): List<String> = listOf(
      Valerion.HENGSHAN
  )

  /**
   * Get all device specifications for VALIFONE devices.
   * Useful for valifone testing.
   */
  public fun getValifoneDevices(): List<String> = listOf(
      Valifone.V200,
      Valifone.V710,
      Valifone.V730,
      Valifone.W888
  )

  /**
   * Get all device specifications for Vankyo devices.
   * Useful for vankyo testing.
   */
  public fun getVankyoDevices(): List<String> = listOf(
      Vankyo.MATRIXPAD_X36,
      Vankyo.P10,
      Vankyo.P31,
      Vankyo.P31_E_EEA,
      Vankyo.P40,
      Vankyo.S10,
      Vankyo.S10_EEA,
      Vankyo.S10_ROW,
      Vankyo.S20,
      Vankyo.S20_2020,
      Vankyo.S20_EEA,
      Vankyo.S20_EEA_2020,
      Vankyo.S21,
      Vankyo.S30,
      Vankyo.S30_2020,
      Vankyo.S30_EEA,
      Vankyo.S30_EEA_2020,
      Vankyo.S7,
      Vankyo.S7_EEA,
      Vankyo.S8,
      Vankyo.S8_EEA,
      Vankyo.VANKYO_S10,
      Vankyo.VANKYO_S10_EEA,
      Vankyo.VANKYO_S7,
      Vankyo.VANKYO_S7_EEA,
      Vankyo.VANKYO_S8,
      Vankyo.VANKYO_S8_EEA,
      Vankyo.Z1,
      Vankyo.Z10,
      Vankyo.Z1_EEA,
      Vankyo.Z4,
      Vankyo.Z4_EEA
  )

  /**
   * Get all device specifications for VASOUN devices.
   * Useful for vasoun testing.
   */
  public fun getVasounDevices(): List<String> = listOf(
      Vasoun.L10_T02,
      Vasoun.L10_T02_EEA,
      Vasoun.L10_T11,
      Vasoun.L10_T11_EEA,
      Vasoun.L10_A01,
      Vasoun.L10_A01_EEA,
      Vasoun.L10_A02,
      Vasoun.L10_A03,
      Vasoun.L10_A03_EEA,
      Vasoun.L10_A05,
      Vasoun.L10_A05_EEA,
      Vasoun.L10_T05,
      Vasoun.L10_T05_EEA,
      Vasoun.L10_T06,
      Vasoun.L10_T06_EEA,
      Vasoun.L10_T08,
      Vasoun.L10_T08_EEA,
      Vasoun.L10_T10,
      Vasoun.L10_T10_EEA,
      Vasoun.M7,
      Vasoun.M7_EEA,
      Vasoun.TAB12,
      Vasoun.TAB12_EEA
  )

  /**
   * Get all device specifications for Vastking devices.
   * Useful for vastking testing.
   */
  public fun getVastkingDevices(): List<String> = listOf(
      Vastking.KINDPAD_SA8_EEA,
      Vastking.KINGPAD_K10,
      Vastking.KINGPAD_K10_EEA,
      Vastking.KINGPAD_K10PRO,
      Vastking.KINGPAD_K10PRO_EEA,
      Vastking.KINGPAD_M10,
      Vastking.KINGPAD_M10_EEA,
      Vastking.KINGPAD_SA10,
      Vastking.KINGPAD_SA10_EEA,
      Vastking.KINGPAD_SA8,
      Vastking.KINGPAD_Z10,
      Vastking.KINGPAD_Z10_EEA
  )

  /**
   * Get all device specifications for vatenick devices.
   * Useful for vatenick testing.
   */
  public fun getVatenickDevices(): List<String> = listOf(
      Vatenick.V7,
      Vatenick.V7_EEA
  )

  /**
   * Get all device specifications for VAVA devices.
   * Useful for vava testing.
   */
  public fun getVavaDevices(): List<String> = listOf(
      Vava.V1,
      Vava.V2,
      Vava.XP3
  )

  /**
   * Get all device specifications for VBox devices.
   * Useful for vbox testing.
   */
  public fun getVboxDevices(): List<String> = listOf(
      Vbox.DTP9539
  )

  /**
   * Get all device specifications for VECT devices.
   * Useful for vect testing.
   */
  public fun getVectDevices(): List<String> = listOf(
      Vect.RK3588_T
  )

  /**
   * Get all device specifications for Vectra devices.
   * Useful for vectra testing.
   */
  public fun getVectraDevices(): List<String> = listOf(
      Vectra.DV8519_VECTRA
  )

  /**
   * Get all device specifications for VEGA devices.
   * Useful for vega testing.
   */
  public fun getVegaDevices(): List<String> = listOf(
      Vega.EF49K,
      Vega.EF51K,
      Vega.EF52K,
      Vega.EF52S,
      Vega.EF56S,
      Vega.EF59K,
      Vega.EF59L,
      Vega.EF59S,
      Vega.EF60S,
      Vega.EF61K,
      Vega.EF63K,
      Vega.EF63S,
      Vega.TAMACHI,
      Vega.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for Veidoo devices.
   * Useful for veidoo testing.
   */
  public fun getVeidooDevices(): List<String> = listOf(
      Veidoo.T12,
      Veidoo.T20,
      Veidoo.T20_PLUS,
      Veidoo.T20_PLAY_EEA,
      Veidoo.T30_EEA,
      Veidoo.T30_PLUS,
      Veidoo.T30_PLUS_EEA,
      Veidoo.T7S,
      Veidoo.T80,
      Veidoo.T80_PLUS,
      Veidoo.V88,
      Veidoo.VEIDOO_T30_PLUS,
      Veidoo.VEIDOO_T40,
      Veidoo.VEIDOO_T40_EEA,
      Veidoo.VEIDOO_T50,
      Veidoo.VEIDOO_T60_PLUS,
      Veidoo.VEIDOO_T70,
      Veidoo.VEIDOO_T70_PLUS,
      Veidoo.VEIDOO_T8,
      Veidoo.VEIDOO_T80,
      Veidoo.VEIDOOT30_EEA
  )

  /**
   * Get all device specifications for VEIRA devices.
   * Useful for veira testing.
   */
  public fun getVeiraDevices(): List<String> = listOf(
      Veira.MOUNTBAKER
  )

  /**
   * Get all device specifications for VENTURER devices.
   * Useful for venturer testing.
   */
  public fun getVenturerDevices(): List<String> = listOf(
      Venturer.CT9A03W23,
      Venturer.CT9A06P23,
      Venturer.VCT9B06Q22,
      Venturer.VCT9B06Q23,
      Venturer.VCT9B06Q23EU,
      Venturer.VCT9F0A68R23EU,
      Venturer.VCT9F78Q22,
      Venturer.VCT9F78Q22_A0,
      Venturer.VCT9F78Q22_A1,
      Venturer.VCT9F78Q22_E,
      Venturer.VCT9F78Q22EU,
      Venturer.VCT9F8A68RD,
      Venturer.VCT9T48Q34,
      Venturer.VCT9T48Q34EU
  )

  /**
   * Get all device specifications for VENUS devices.
   * Useful for venus testing.
   */
  public fun getVenusDevices(): List<String> = listOf(
      Venus.V5_PLUS
  )

  /**
   * Get all device specifications for VEON devices.
   * Useful for veon testing.
   */
  public fun getVeonDevices(): List<String> = listOf(
      Veon.BANGBAE,
      Veon.BRUNO,
      Veon.SEI103,
      Veon.SW6H
  )

  /**
   * Get all device specifications for Verifone devices.
   * Useful for verifone testing.
   */
  public fun getVerifoneDevices(): List<String> = listOf(
      Verifone.IX90_CQA1103_EEA
  )

  /**
   * Get all device specifications for Verizon devices.
   * Useful for verizon testing.
   */
  public fun getVerizonDevices(): List<String> = listOf(
      Verizon.CHAGALLLTEVZW,
      Verizon.COREPRIMELTEVZW,
      Verizon.D2VZW,
      Verizon.D6708,
      Verizon.DORADO,
      Verizon.ESPRESSO10VZW,
      Verizon.ESPRESSOVZW,
      Verizon.F354,
      Verizon.GOLDENLTEVZW,
      Verizon.GRACEQLTEVZW,
      Verizon.GTA2XLLTEVZW,
      Verizon.GTASLITELTEVZW,
      Verizon.GTELLTEVZW,
      Verizon.GTESLTEVZW,
      Verizon.GTESVELTEVZW,
      Verizon.GTS210LTEVZW,
      Verizon.GTS210VELTEVZW,
      Verizon.GTS3LLTEVZW,
      Verizon.GTS4LLTEVZW,
      Verizon.GVLTEVZW,
      Verizon.HERO2QLTEVZW,
      Verizon.HEROQLTEVZW,
      Verizon.HLTEVZW,
      Verizon.J1QLTEVZW,
      Verizon.J3LTEVZW,
      Verizon.J3POPLTEVZW,
      Verizon.J3TOPELTEVZW,
      Verizon.J7POPLTEVZW,
      Verizon.J7TOPELTEVZW,
      Verizon.JASPERVZW,
      Verizon.JFLTEVZW,
      Verizon.JFLTEVZWPP,
      Verizon.KLIMTLTEVZW,
      Verizon.KLTEVZW,
      Verizon.LT03LTEVZW,
      Verizon.MATISSELTEVZW,
      Verizon.MILLETLTEVZW,
      Verizon.NOBLELTEVZW,
      Verizon.P4NOTELTEVZW,
      Verizon.QMV7A,
      Verizon.QTAIR7,
      Verizon.QTAQZ3,
      Verizon.QTAQZ3KID,
      Verizon.QTASUN1,
      Verizon.QTASUN2,
      Verizon.QTAXIA1,
      Verizon.SCSIP02,
      Verizon.SERRANOLTEVZW,
      Verizon.SGP561,
      Verizon.STI6220D315,
      Verizon.STI6250D315,
      Verizon.STI6251D315,
      Verizon.STINGRAY,
      Verizon.T0LTEVZW,
      Verizon.TBLTEVZW,
      Verizon.TRLTEVZW,
      Verizon.VIENNALTEVZW,
      Verizon.ZENLTEVZW,
      Verizon.ZEROFLTEVZW,
      Verizon.ZEROLTEVZW
  )

  /**
   * Get all device specifications for vernee devices.
   * Useful for vernee testing.
   */
  public fun getVerneeDevices(): List<String> = listOf(
      Vernee.M2,
      Vernee.M2_PRO,
      Vernee.M3,
      Vernee.M6,
      Vernee.M7_EEA,
      Vernee.M8_PRO,
      Vernee.T3_PRO,
      Vernee.THOR_E,
      Vernee.THOR_PLUS,
      Vernee.V1,
      Vernee.V2_PRO,
      Vernee.VERNEE_M5,
      Vernee.X1,
      Vernee.X1_PRO,
      Vernee.X2_EURO
  )

  /**
   * Get all device specifications for Vertex devices.
   * Useful for vertex testing.
   */
  public fun getVertexDevices(): List<String> = listOf(
      Vertex.BACCARA,
      Vertex.BLK3D,
      Vertex.CS24,
      Vertex.CS28,
      Vertex.EF,
      Vertex.GLOCALME_S1,
      Vertex.GRIP,
      Vertex.IMPRESS_ACTION,
      Vertex.IMPRESS_AQUA,
      Vertex.IMPRESS_BEAR,
      Vertex.IMPRESS_BLADE,
      Vertex.IMPRESS_CITY,
      Vertex.IMPRESS_CLICK,
      Vertex.IMPRESS_CLICK_NFC,
      Vertex.IMPRESS_CUBE,
      Vertex.IMPRESS_EAGLE,
      Vertex.IMPRESS_FIRE,
      Vertex.IMPRESS_FOREST,
      Vertex.IMPRESS_FROST,
      Vertex.IMPRESS_INDIGO,
      Vertex.IMPRESS_LIFE,
      Vertex.IMPRESS_LUCK,
      Vertex.IMPRESS_LUCK4G_NFC,
      Vertex.IMPRESS_PLAY,
      Vertex.IMPRESS_STONE,
      Vertex.IMPRESS_SUNSET4G,
      Vertex.IMPRESS_TOR,
      Vertex.IMPRESS_VEGA,
      Vertex.IMPRESS_VIRA,
      Vertex.IMPRESS_WIN,
      Vertex.IMPRESS_WOLF,
      Vertex.IMPRESS_ZEON4G,
      Vertex.LION_DC,
      Vertex.LUCK,
      Vertex.LUCK_L100_3G,
      Vertex.LUCK_L120_4G,
      Vertex.LUCK_L130,
      Vertex.PRO_P300_4G,
      Vertex.PRO_P310_4G,
      Vertex.TABX10,
      Vertex.TABX8
  )

  /**
   * Get all device specifications for Vertu devices.
   * Useful for vertu testing.
   */
  public fun getVertuDevices(): List<String> = listOf(
      Vertu.ALEXA,
      Vertu.ASTER_P,
      Vertu.GAMBIT,
      Vertu.ODIN,
      Vertu.TITAN,
      Vertu.TRON,
      Vertu.VTL_202101,
      Vertu.VTL_202201,
      Vertu.VTL_202301,
      Vertu.VTL_202302
  )

  /**
   * Get all device specifications for Vestel devices.
   * Useful for vestel testing.
   */
  public fun getVestelDevices(): List<String> = listOf(
      Vestel.ADA,
      Vestel.ADAGO,
      Vestel.ARYA,
      Vestel.ATLAS,
      Vestel.CUNDA,
      Vestel.DYNOLIGHT,
      Vestel.EKVATOR,
      Vestel.LEO,
      Vestel.LEO_2GB,
      Vestel.LODOS,
      Vestel.MB300,
      Vestel.ORSA,
      Vestel.PARDUS,
      Vestel.PARS,
      Vestel.POYRAZ,
      Vestel.REYS,
      Vestel.RIGA,
      Vestel.SAMOS,
      Vestel.SHANDAO,
      Vestel.TEOS,
      Vestel.TROIA,
      Vestel.TRUVA,
      Vestel.V4,
      Vestel.V_TAB_1050,
      Vestel.V_TAB_7020A,
      Vestel.V_TAB_7810,
      Vestel.VENUS_V3_5040,
      Vestel.VENUS_V3_5045,
      Vestel.VENUS_V3_5070,
      Vestel.VENUS_V3_5570,
      Vestel.VTAB7010,
      Vestel.VTABZ1A,
      Vestel.YEOKSAM
  )

  /**
   * Get all device specifications for VETOO devices.
   * Useful for vetoo testing.
   */
  public fun getVetooDevices(): List<String> = listOf(
      Vetoo.T4GB07,
      Vetoo.T4GB10,
      Vetoo.TWIFIB07,
      Vetoo.V10
  )

  /**
   * Get all device specifications for Vexia devices.
   * Useful for vexia testing.
   */
  public fun getVexiaDevices(): List<String> = listOf(
      Vexia.NICATABLETV3
  )

  /**
   * Get all device specifications for VEZZER devices.
   * Useful for vezzer testing.
   */
  public fun getVezzerDevices(): List<String> = listOf(
      Vezzer.LAKESIDE,
      Vezzer.PIHA
  )

  /**
   * Get all device specifications for VfonX devices.
   * Useful for vfonx testing.
   */
  public fun getVfonxDevices(): List<String> = listOf(
      Vfonx.GP8
  )

  /**
   * Get all device specifications for VGO_TEL devices.
   * Useful for vgo_tel testing.
   */
  public fun getVgoTelDevices(): List<String> = listOf(
      VgoTel.FLEX_2,
      VgoTel.NEW_10,
      VgoTel.NEW_20,
      VgoTel.NOTE_23,
      VgoTel.SMART_8,
      VgoTel.SMARTPHONE
  )

  /**
   * Get all device specifications for VGOTEL devices.
   * Useful for vgotel testing.
   */
  public fun getVgotelDevices(): List<String> = listOf(
      Vgotel.NEW_15,
      Vgotel.NEW_15_PRO,
      Vgotel.NEW_24,
      Vgotel.NEW_25,
      Vgotel.NEW_26,
      Vgotel.NEW_7,
      Vgotel.NOTE_24,
      Vgotel.OCEAN9L,
      Vgotel.OCEAN_9,
      Vgotel.SMART_2,
      Vgotel.SMART_4,
      Vgotel.SMART_5,
      Vgotel.SMART_7,
      Vgotel.VENTURE_V12,
      Vgotel.VENTUREV10,
      Vgotel.VGOTEL_OCEAN_6
  )

  /**
   * Get all device specifications for Victurio devices.
   * Useful for victurio testing.
   */
  public fun getVicturioDevices(): List<String> = listOf(
      Victurio.VI108,
      Victurio.VI86
  )

  /**
   * Get all device specifications for VID devices.
   * Useful for vid testing.
   */
  public fun getVidDevices(): List<String> = listOf(
      Vid.GQ3115TF5_VID
  )

  /**
   * Get all device specifications for VIDA devices.
   * Useful for vida testing.
   */
  public fun getVidaDevices(): List<String> = listOf(
      Vida.S63PLUS,
      Vida.VIDA_I501
  )

  /**
   * Get all device specifications for Viettel devices.
   * Useful for viettel testing.
   */
  public fun getViettelDevices(): List<String> = listOf(
      Viettel.MEDIABOX_B866V2,
      Viettel.VTTV_SD4K_20
  )

  /**
   * Get all device specifications for ViettelTV devices.
   * Useful for vietteltv testing.
   */
  public fun getVietteltvDevices(): List<String> = listOf(
      Vietteltv.HP40A
  )

  /**
   * Get all device specifications for ViewSonic devices.
   * Useful for viewsonic testing.
   */
  public fun getViewsonicDevices(): List<String> = listOf(
      Viewsonic.IFP34,
      Viewsonic.IFP51,
      Viewsonic.IFP8652_2,
      Viewsonic.IN02_SERIES,
      Viewsonic.MID1016_MA,
      Viewsonic.MID1032_MK,
      Viewsonic.MID7015_MK_32,
      Viewsonic.VPC_A31_O1,
      Viewsonic.VSD242
  )

  /**
   * Get all device specifications for VIKUSHA devices.
   * Useful for vikusha testing.
   */
  public fun getVikushaDevices(): List<String> = listOf(
      Vikusha.V_E5,
      Vikusha.V_N5,
      Vikusha.V_Z40,
      Vikusha.V_Z40PRO,
      Vikusha.V_Z70,
      Vikusha.V_Z80PLUS,
      Vikusha.VZ_1,
      Vikusha.VZ_30,
      Vikusha.VZ_30PRO
  )

  /**
   * Get all device specifications for VILLAON devices.
   * Useful for villaon testing.
   */
  public fun getVillaonDevices(): List<String> = listOf(
      Villaon.V20,
      Villaon.VILLAON_V30,
      Villaon.VILLAON_V30_RS,
      Villaon.VILLAON_V40,
      Villaon.VILLAON_V40S,
      Villaon.VILLAON_V652L,
      Villaon.VILLAON_V20_SE
  )

  /**
   * Get all device specifications for ViMa-Tek devices.
   * Useful for vima-tek testing.
   */
  public fun getVimaTekDevices(): List<String> = listOf(
      VimaTek.VM20
  )

  /**
   * Get all device specifications for VIMEEL devices.
   * Useful for vimeel testing.
   */
  public fun getVimeelDevices(): List<String> = listOf(
      Vimeel.LAVENDER,
      Vimeel.MOUNTBAKER
  )

  /**
   * Get all device specifications for VIMOQ devices.
   * Useful for vimoq testing.
   */
  public fun getVimoqDevices(): List<String> = listOf(
      Vimoq.VIMOQ_A631LO,
      Vimoq.VIMOQ_P662LO,
      Vimoq.VIMOQ_S661LS
  )

  /**
   * Get all device specifications for VINCENT devices.
   * Useful for vincent testing.
   */
  public fun getVincentDevices(): List<String> = listOf(
      Vincent.BRUNO,
      Vincent.SHILIN
  )

  /**
   * Get all device specifications for VIOMI devices.
   * Useful for viomi testing.
   */
  public fun getViomiDevices(): List<String> = listOf(
      Viomi.LONGSHAN
  )

  /**
   * Get all device specifications for VIOS devices.
   * Useful for vios testing.
   */
  public fun getViosDevices(): List<String> = listOf(
      Vios._65PB1,
      Vios.VI65PA1402NA,
      Vios.VTAB7,
      Vios.VTABX
  )

  /**
   * Get all device specifications for VIOTTO devices.
   * Useful for viotto testing.
   */
  public fun getViottoDevices(): List<String> = listOf(
      Viotto.HONGKONG,
      Viotto.MOUNTBAKER
  )

  /**
   * Get all device specifications for Viper devices.
   * Useful for viper testing.
   */
  public fun getViperDevices(): List<String> = listOf(
      Viper.SZ11MK1,
      Viper.VIPER_Z08MK,
      Viper.Z11MK
  )

  /**
   * Get all device specifications for VIRZO devices.
   * Useful for virzo testing.
   */
  public fun getVirzoDevices(): List<String> = listOf(
      Virzo.V511,
      Virzo.V608_C,
      Virzo.VT1001,
      Virzo.VT701
  )

  /**
   * Get all device specifications for Visible devices.
   * Useful for visible testing.
   */
  public fun getVisibleDevices(): List<String> = listOf(
      Visible.WTVIS01
  )

  /**
   * Get all device specifications for VISIO devices.
   * Useful for visio testing.
   */
  public fun getVisioDevices(): List<String> = listOf(
      Visio.SHINAGAWA,
      Visio.SW4H
  )

  /**
   * Get all device specifications for VISION devices.
   * Useful for vision testing.
   */
  public fun getVisionDevices(): List<String> = listOf(
      Vision.B866V2F,
      Vision.MARTIN,
      Vision.MEDIABOX_B866V2,
      Vision.NAGATA,
      Vision.SW4H,
      Vision.SW6H,
      Vision.TAMACHI,
      Vision.UMEDA,
      Vision.VISION_V1
  )

  /**
   * Get all device specifications for VISION-TECHNOLOGY devices.
   * Useful for vision-technology testing.
   */
  public fun getVisionTechnologyDevices(): List<String> = listOf(
      VisionTechnology.R1,
      VisionTechnology.R2,
      VisionTechnology.R3
  )

  /**
   * Get all device specifications for VISIONTEK devices.
   * Useful for visiontek testing.
   */
  public fun getVisiontekDevices(): List<String> = listOf(
      Visiontek.VT_31
  )

  /**
   * Get all device specifications for VISTA devices.
   * Useful for vista testing.
   */
  public fun getVistaDevices(): List<String> = listOf(
      Vista.STANFORD,
      Vista.ZHONGSHAN
  )

  /**
   * Get all device specifications for VISUAL-LAND devices.
   * Useful for visual-land testing.
   */
  public fun getVisualLandDevices(): List<String> = listOf(
      VisualLand.ELITE10QH,
      VisualLand.ELITE10QHPRO
  )

  /**
   * Get all device specifications for Vitumi devices.
   * Useful for vitumi testing.
   */
  public fun getVitumiDevices(): List<String> = listOf(
      Vitumi.TV46410B01
  )

  /**
   * Get all device specifications for Viumee devices.
   * Useful for viumee testing.
   */
  public fun getViumeeDevices(): List<String> = listOf(
      Viumee.EV7_PRO
  )

  /**
   * Get all device specifications for VIVAX devices.
   * Useful for vivax testing.
   */
  public fun getVivaxDevices(): List<String> = listOf(
      Vivax.FUN_S20,
      Vivax.LONGSHAN,
      Vivax.MID7015A_MK,
      Vivax.POINT_X2,
      Vivax.POINT_X502,
      Vivax.POINT_X503,
      Vivax.STANFORD,
      Vivax.TPC_102_4G,
      Vivax.TPC_8043G,
      Vivax.TPC_8053G,
      Vivax.TPC_8063G,
      Vivax.TPC_8074G,
      Vivax.VIVAX_FLY6,
      Vivax.VIVAX_FLY_V1,
      Vivax.VIVAX_PRO3,
      Vivax.VIVAX_TPC_105_4G,
      Vivax.ZHONGSHAN
  )

  /**
   * Get all device specifications for VIVIMAGE devices.
   * Useful for vivimage testing.
   */
  public fun getVivimageDevices(): List<String> = listOf(
      Vivimage.E10,
      Vivimage.E11,
      Vivimage.E8,
      Vivimage.VIVIMAGE_A10,
      Vivimage.VIVIMAGE_A10_EEA
  )

  /**
   * Get all device specifications for Vivitek devices.
   * Useful for vivitek testing.
   */
  public fun getVivitekDevices(): List<String> = listOf(
      Vivitek.RK3576_U
  )

  /**
   * Get all device specifications for vivo devices.
   * Useful for vivo testing.
   */
  public fun getVivoDevices(): List<String> = listOf(
      Vivo._1601,
      Vivo._1603,
      Vivo._1606,
      Vivo._1609,
      Vivo._1610,
      Vivo._1611,
      Vivo._1714,
      Vivo._1716,
      Vivo._1718,
      Vivo._1719,
      Vivo._1723,
      Vivo._1723CF,
      Vivo._1724,
      Vivo._1725,
      Vivo._1726,
      Vivo._1727,
      Vivo._1727ID,
      Vivo._1801,
      Vivo._1802,
      Vivo._1803,
      Vivo._1804,
      Vivo._1805,
      Vivo._1806,
      Vivo._1807,
      Vivo._1807N,
      Vivo._1808,
      Vivo._1811,
      Vivo._1812,
      Vivo._1813,
      Vivo._1814,
      Vivo._1815,
      Vivo._1816,
      Vivo._1817,
      Vivo._1818,
      Vivo._1818N,
      Vivo._1819,
      Vivo._1819N,
      Vivo._1820,
      Vivo._1851,
      Vivo._1901,
      Vivo._1902,
      Vivo._1902D,
      Vivo._1904,
      Vivo._1906,
      Vivo._1907,
      Vivo._1907N,
      Vivo._1909,
      Vivo._1910,
      Vivo._1910N,
      Vivo._1912,
      Vivo._1913,
      Vivo._1915,
      Vivo._1916,
      Vivo._1917,
      Vivo._1919,
      Vivo._1920,
      Vivo._1921,
      Vivo._1930,
      Vivo._1933,
      Vivo._1937,
      Vivo._1938,
      Vivo._1951,
      Vivo._2004,
      Vivo._2005,
      Vivo._2006,
      Vivo._2015,
      Vivo._2018,
      Vivo._2023,
      Vivo._2025,
      Vivo._2026,
      Vivo._2028,
      Vivo._2030,
      Vivo._2034,
      Vivo._2036,
      Vivo._2037,
      Vivo._2040,
      Vivo._2041,
      Vivo._2044,
      Vivo._2045,
      Vivo._2046,
      Vivo._2047,
      Vivo._2050,
      Vivo._2055,
      Vivo._2058,
      Vivo._2059,
      Vivo._2060,
      Vivo._2061,
      Vivo._2105,
      Vivo._2109,
      Vivo._2110,
      Vivo._2111,
      Vivo._2114,
      Vivo._2116,
      Vivo._2120,
      Vivo._2124,
      Vivo._2126,
      Vivo._2127,
      Vivo._2129,
      Vivo._2130,
      Vivo._2131,
      Vivo._2132,
      Vivo._2135,
      Vivo._2141,
      Vivo._2149,
      Vivo._2160,
      Vivo.BBK6735_65C_L,
      Vivo.BBK6752_LWT_KK,
      Vivo.BBK6752_LWT_L,
      Vivo.DPD2106,
      Vivo.DPD2221,
      Vivo.DPD2305,
      Vivo.DPD2307,
      Vivo.DPD2345,
      Vivo.DPD2424,
      Vivo.DPD2429,
      Vivo.DPD2437,
      Vivo.MSM8916_32,
      Vivo.PD1401CL,
      Vivo.PD1415A,
      Vivo.PD1415BA,
      Vivo.PD1415D,
      Vivo.PD1421V,
      Vivo.PD1501D,
      Vivo.PD1502A,
      Vivo.PD1502L,
      Vivo.PD1503,
      Vivo.PD1505,
      Vivo.PD1510,
      Vivo.PD1515A,
      Vivo.PD1515BA,
      Vivo.PD1522A,
      Vivo.PD1523,
      Vivo.PD1524,
      Vivo.PD1524B,
      Vivo.PD1602,
      Vivo.PD1603,
      Vivo.PD1610,
      Vivo.PD1612,
      Vivo.PD1613,
      Vivo.PD1616,
      Vivo.PD1616B,
      Vivo.PD1619,
      Vivo.PD1621,
      Vivo.PD1621B,
      Vivo.PD1624,
      Vivo.PD1628,
      Vivo.PD1635,
      Vivo.PD1705,
      Vivo.PD1708,
      Vivo.PD1708C,
      Vivo.PD1709,
      Vivo.PD1709F_EX,
      Vivo.PD1710,
      Vivo.PD1710F_EX,
      Vivo.PD1718,
      Vivo.PD1721,
      Vivo.PD1728,
      Vivo.PD1728UD,
      Vivo.PD1730,
      Vivo.PD1730C,
      Vivo.PD1730D,
      Vivo.PD1730E,
      Vivo.PD1730G,
      Vivo.PD1731,
      Vivo.PD1731C,
      Vivo.PD1731D,
      Vivo.PD1732,
      Vivo.PD1801,
      Vivo.PD1803,
      Vivo.PD1805,
      Vivo.PD1806,
      Vivo.PD1806B,
      Vivo.PD1809,
      Vivo.PD1813,
      Vivo.PD1813B,
      Vivo.PD1813C,
      Vivo.PD1813D,
      Vivo.PD1813E,
      Vivo.PD1814,
      Vivo.PD1816,
      Vivo.PD1818,
      Vivo.PD1818B,
      Vivo.PD1818C,
      Vivo.PD1818E,
      Vivo.PD1818G,
      Vivo.PD1821,
      Vivo.PD1824,
      Vivo.PD1829,
      Vivo.PD1831,
      Vivo.PD1832,
      Vivo.PD1836,
      Vivo.PD1838,
      Vivo.PD1901,
      Vivo.PD1911,
      Vivo.PD1913,
      Vivo.PD1914,
      Vivo.PD1916,
      Vivo.PD1921,
      Vivo.PD1922,
      Vivo.PD1923,
      Vivo.PD1924,
      Vivo.PD1928,
      Vivo.PD1930,
      Vivo.PD1932,
      Vivo.PD1934,
      Vivo.PD1936,
      Vivo.PD1936G,
      Vivo.PD1938,
      Vivo.PD1941,
      Vivo.PD1945,
      Vivo.PD1950,
      Vivo.PD1955,
      Vivo.PD1962,
      Vivo.PD1963,
      Vivo.PD1965,
      Vivo.PD1981,
      Vivo.PD1986,
      Vivo.PD1990,
      Vivo.PD2001,
      Vivo.PD2002,
      Vivo.PD2005,
      Vivo.PD2011,
      Vivo.PD2012,
      Vivo.PD2019,
      Vivo.PD2020,
      Vivo.PD2023,
      Vivo.PD2024,
      Vivo.PD2031,
      Vivo.PD2031EA,
      Vivo.PD2034,
      Vivo.PD2034D,
      Vivo.PD2036,
      Vivo.PD2046,
      Vivo.PD2047,
      Vivo.PD2048,
      Vivo.PD2049,
      Vivo.PD2054,
      Vivo.PD2055,
      Vivo.PD2056,
      Vivo.PD2057,
      Vivo.PD2061,
      Vivo.PD2065,
      Vivo.PD2066,
      Vivo.PD2066B,
      Vivo.PD2068,
      Vivo.PD2069,
      Vivo.PD2072,
      Vivo.PD2073,
      Vivo.PD2080,
      Vivo.PD2085,
      Vivo.PD2092,
      Vivo.PD2102,
      Vivo.PD2106,
      Vivo.PD2111,
      Vivo.PD2115,
      Vivo.PD2118,
      Vivo.PD2121,
      Vivo.PD2123,
      Vivo.PD2130,
      Vivo.PD2131,
      Vivo.PD2133,
      Vivo.PD2134,
      Vivo.PD2136,
      Vivo.PD2140,
      Vivo.PD2141,
      Vivo.PD2143,
      Vivo.PD2145,
      Vivo.PD2148,
      Vivo.PD2154,
      Vivo.PD2156,
      Vivo.PD2156U,
      Vivo.PD2157,
      Vivo.PD2158,
      Vivo.PD2162,
      Vivo.PD2163,
      Vivo.PD2164,
      Vivo.PD2164U,
      Vivo.PD2165,
      Vivo.PD2166,
      Vivo.PD2168,
      Vivo.PD2170,
      Vivo.PD2171,
      Vivo.PD2172,
      Vivo.PD2178,
      Vivo.PD2180,
      Vivo.PD2183,
      Vivo.PD2185,
      Vivo.PD2186,
      Vivo.PD2188,
      Vivo.PD2190,
      Vivo.PD2196,
      Vivo.PD2199,
      Vivo.PD2203,
      Vivo.PD2207,
      Vivo.PD2217,
      Vivo.PD2218,
      Vivo.PD2219,
      Vivo.PD2220,
      Vivo.PD2224,
      Vivo.PD2227,
      Vivo.PD2229,
      Vivo.PD2230,
      Vivo.PD2231,
      Vivo.PD2232,
      Vivo.PD2236,
      Vivo.PD2238,
      Vivo.PD2239,
      Vivo.PD2241,
      Vivo.PD2242,
      Vivo.PD2243,
      Vivo.PD2244,
      Vivo.PD2245,
      Vivo.PD2254,
      Vivo.PD2256,
      Vivo.PD2266,
      Vivo.PD2270,
      Vivo.PD2271,
      Vivo.PD2272,
      Vivo.PD2278,
      Vivo.PD2279,
      Vivo.PD2279J,
      Vivo.PD2282,
      Vivo.PD2283,
      Vivo.PD2284,
      Vivo.PD2285,
      Vivo.PD2301,
      Vivo.PD2302,
      Vivo.PD2303,
      Vivo.PD2304,
      Vivo.PD2307,
      Vivo.PD2309,
      Vivo.PD2312,
      Vivo.PD2313,
      Vivo.PD2314,
      Vivo.PD2317,
      Vivo.PD2318,
      Vivo.PD2323,
      Vivo.PD2327,
      Vivo.PD2329,
      Vivo.PD2334,
      Vivo.PD2337,
      Vivo.PD2338,
      Vivo.PD2344,
      Vivo.PD2352,
      Vivo.PD2353,
      Vivo.PD2354,
      Vivo.PD2354M,
      Vivo.PD2357,
      Vivo.PD2361,
      Vivo.PD2362,
      Vivo.PD2364,
      Vivo.PD2366,
      Vivo.PD2403,
      Vivo.PD2405,
      Vivo.PD2408,
      Vivo.PD2410,
      Vivo.PD2415,
      Vivo.PD2417,
      Vivo.PD2419,
      Vivo.PD2425,
      Vivo.PD2426,
      Vivo.PD2429,
      Vivo.PD2430,
      Vivo.PD2435,
      Vivo.PD2436,
      Vivo.PD2442,
      Vivo.PD2444,
      Vivo.PD2445,
      Vivo.PD2452,
      Vivo.PD2453,
      Vivo.PD2454,
      Vivo.PD2456,
      Vivo.PD2463,
      Vivo.PD2464,
      Vivo.PD2465,
      Vivo.V1,
      Vivo.V2144,
      Vivo.V2145,
      Vivo.V2151,
      Vivo.V2154,
      Vivo.V2158,
      Vivo.V2201,
      Vivo.V2202,
      Vivo.V2204,
      Vivo.V2205,
      Vivo.V2206,
      Vivo.V2207,
      Vivo.V2217,
      Vivo.V2218,
      Vivo.V2219,
      Vivo.V2222,
      Vivo.V2225,
      Vivo.V2230,
      Vivo.V2231,
      Vivo.V2236,
      Vivo.V2237,
      Vivo.V2239,
      Vivo.V2244,
      Vivo.V2247,
      Vivo.V2248,
      Vivo.V2248G,
      Vivo.V2249,
      Vivo.V2250,
      Vivo.V2254,
      Vivo.V2303,
      Vivo.V2307,
      Vivo.V2308,
      Vivo.V2309,
      Vivo.V2310,
      Vivo.V2315,
      Vivo.V2317,
      Vivo.V2318,
      Vivo.V2319,
      Vivo.V2321,
      Vivo.V2327,
      Vivo.V2330,
      Vivo.V2333,
      Vivo.V2334,
      Vivo.V2338,
      Vivo.V2339,
      Vivo.V2342,
      Vivo.V2343,
      Vivo.V2344,
      Vivo.V2346,
      Vivo.V2347,
      Vivo.V2348,
      Vivo.V2352,
      Vivo.V2355,
      Vivo.V2403,
      Vivo.V2404,
      Vivo.V2413,
      Vivo.V2415,
      Vivo.V2418,
      Vivo.V2419,
      Vivo.V2420,
      Vivo.V2422,
      Vivo.V2427,
      Vivo.V2428,
      Vivo.V2429,
      Vivo.V2430,
      Vivo.V2434,
      Vivo.V2436,
      Vivo.V2437,
      Vivo.V2439,
      Vivo.V2440,
      Vivo.V2441,
      Vivo.V2446,
      Vivo.V2502,
      Vivo.V2503,
      Vivo.V2504,
      Vivo.V2506,
      Vivo.V3,
      Vivo.V3MAX,
      Vivo.X5PRO,
      Vivo.Y11,
      Vivo.Y15,
      Vivo.Y15S,
      Vivo.Y21,
      Vivo.Y21L,
      Vivo.Y27,
      Vivo.Y31,
      Vivo.Y31I,
      Vivo.Y31L,
      Vivo.Y37,
      Vivo.Y51
  )

  /**
   * Get all device specifications for VIWA devices.
   * Useful for viwa testing.
   */
  public fun getViwaDevices(): List<String> = listOf(
      Viwa.VIWA_LIGHT_ONE,
      Viwa.VIWA_LIGHT_PLUS,
      Viwa.VIWA_V10
  )

  /**
   * Get all device specifications for VIZIO devices.
   * Useful for vizio testing.
   */
  public fun getVizioDevices(): List<String> = listOf(
      Vizio.XR6M10,
      Vizio.XR6P10
  )

  /**
   * Get all device specifications for Vizualogic devices.
   * Useful for vizualogic testing.
   */
  public fun getVizualogicDevices(): List<String> = listOf(
      Vizualogic.Q83
  )

  /**
   * Get all device specifications for VIZZION devices.
   * Useful for vizzion testing.
   */
  public fun getVizzionDevices(): List<String> = listOf(
      Vizzion.STANFORD,
      Vizzion.SW4H,
      Vizzion.ZHONGSHAN
  )

  /**
   * Get all device specifications for vkworld devices.
   * Useful for vkworld testing.
   */
  public fun getVkworldDevices(): List<String> = listOf(
      Vkworld.VK7000,
      Vkworld.VKWORLD_S8
  )

  /**
   * Get all device specifications for VNPTTechnology devices.
   * Useful for vnpttechnology testing.
   */
  public fun getVnpttechnologyDevices(): List<String> = listOf(
      Vnpttechnology.VNPTT_SMB_3,
      Vnpttechnology.VNPTT_SMB_V2X,
      Vnpttechnology.VNT_TAB8,
      Vnpttechnology.VNTTAB2
  )

  /**
   * Get all device specifications for Vocal devices.
   * Useful for vocal testing.
   */
  public fun getVocalDevices(): List<String> = listOf(
      Vocal.V0,
      Vocal.V01,
      Vocal.V0CORE,
      Vocal.V1,
      Vocal.V11
  )

  /**
   * Get all device specifications for VOD_Horizon devices.
   * Useful for vod_horizon testing.
   */
  public fun getVodHorizonDevices(): List<String> = listOf(
      VodHorizon._5G_SMART_PHONE
  )

  /**
   * Get all device specifications for Vodacom devices.
   * Useful for vodacom testing.
   */
  public fun getVodacomDevices(): List<String> = listOf(
      Vodacom.H6032_VDC
  )

  /**
   * Get all device specifications for Vodafone devices.
   * Useful for vodafone testing.
   */
  public fun getVodafoneDevices(): List<String> = listOf(
      Vodafone.HP46D,
      Vodafone.M377_VF,
      Vodafone.M393GENA_VF,
      Vodafone.MSM8916_32,
      Vodafone.P731V35,
      Vodafone.P809V50,
      Vodafone.P839V55,
      Vodafone.SMART_GRAND,
      Vodafone.TAB7,
      Vodafone.UIW4030VHA,
      Vodafone.VF_895N,
      Vodafone.VF685,
      Vodafone.VF695,
      Vodafone.VFD100,
      Vodafone.VFD1300,
      Vodafone.VFD1400,
      Vodafone.VFD300,
      Vodafone.VFD301,
      Vodafone.VFD320,
      Vodafone.VFD500,
      Vodafone.VFD501,
      Vodafone.VFD502,
      Vodafone.VFD510,
      Vodafone.VFD511,
      Vodafone.VFD513,
      Vodafone.VFD525,
      Vodafone.VFD527,
      Vodafone.VFD528,
      Vodafone.VFD529,
      Vodafone.VFD610,
      Vodafone.VFD620,
      Vodafone.VFD630,
      Vodafone.VFD700,
      Vodafone.VFD710,
      Vodafone.VFD720,
      Vodafone.VFD730,
      Vodafone.VFD820,
      Vodafone.VFD822,
      Vodafone.VFD900,
      Vodafone.VODA_TAB,
      Vodafone.VODAFONE985N,
      Vodafone.VODAFONE_785,
      Vodafone.VODAFONE_SMART_TAB_3G,
      Vodafone.VODAFONE_SMART_TAB_4,
      Vodafone.VODAFONE_SMART_TAB_4G,
      Vodafone.VODAFONE_TAB_PRIME,
      Vodafone.VODAFONE_TAB_SPEED_6,
      Vodafone.VODAFONESMART4TURBO
  )

  /**
   * Get all device specifications for VodafoneKD devices.
   * Useful for vodafonekd testing.
   */
  public fun getVodafonekdDevices(): List<String> = listOf(
      Vodafonekd.DIW362
  )

  /**
   * Get all device specifications for Voger devices.
   * Useful for voger testing.
   */
  public fun getVogerDevices(): List<String> = listOf(
      Voger.X100,
      Voger.X100_EEA
  )

  /**
   * Get all device specifications for VOLENTEX devices.
   * Useful for volentex testing.
   */
  public fun getVolentexDevices(): List<String> = listOf(
      Volentex.M10_A04
  )

  /**
   * Get all device specifications for VOLFEN devices.
   * Useful for volfen testing.
   */
  public fun getVolfenDevices(): List<String> = listOf(
      Volfen.NEXO_TAB_10A
  )

  /**
   * Get all device specifications for VOLIA devices.
   * Useful for volia testing.
   */
  public fun getVoliaDevices(): List<String> = listOf(
      Volia.VOL001
  )

  /**
   * Get all device specifications for Volkano devices.
   * Useful for volkano testing.
   */
  public fun getVolkanoDevices(): List<String> = listOf(
      Volkano.VK_740_12
  )

  /**
   * Get all device specifications for VolvoCars devices.
   * Useful for volvocars testing.
   */
  public fun getVolvocarsDevices(): List<String> = listOf(
      Volvocars.HABANERO,
      Volvocars.IHU_ABL_CAR,
      Volvocars.MOOSE
  )

  /**
   * Get all device specifications for VON devices.
   * Useful for von testing.
   */
  public fun getVonDevices(): List<String> = listOf(
      Von.STANFORD
  )

  /**
   * Get all device specifications for Vonino devices.
   * Useful for vonino testing.
   */
  public fun getVoninoDevices(): List<String> = listOf(
      Vonino.EPIC_E8,
      Vonino.IMART_PRO,
      Vonino.MAGNET_G30,
      Vonino.MAGNET_G50,
      Vonino.MAGNET_M10,
      Vonino.MAGNET_M10_2020,
      Vonino.MAGNET_M1_A7,
      Vonino.PLURI_M7_2020,
      Vonino.PLURI_M8,
      Vonino.PLURI_M8_2020,
      Vonino.PLURI_M8_2020_A10,
      Vonino.XAVY_T7
  )

  /**
   * Get all device specifications for VOO devices.
   * Useful for voo testing.
   */
  public fun getVooDevices(): List<String> = listOf(
      Voo.DV8220
  )

  /**
   * Get all device specifications for VOOBox devices.
   * Useful for voobox testing.
   */
  public fun getVooboxDevices(): List<String> = listOf(
      Voobox.SEI700TMM
  )

  /**
   * Get all device specifications for VORAGO devices.
   * Useful for vorago testing.
   */
  public fun getVoragoDevices(): List<String> = listOf(
      Vorago.PAD_7_KIDS,
      Vorago.PAD_7_V5,
      Vorago.PAD_7_V6,
      Vorago.PAD_8
  )

  /**
   * Get all device specifications for VORCOM devices.
   * Useful for vorcom testing.
   */
  public fun getVorcomDevices(): List<String> = listOf(
      Vorcom.AVALON,
      Vorcom.QUARTZLITE,
      Vorcom.QUARTZPRO,
      Vorcom.S12_CLASSIC,
      Vorcom.S7_CLASSIC,
      Vorcom.S7_CLASSIC_10,
      Vorcom.S8PRO,
      Vorcom.SXPRO_CLASSIC,
      Vorcom.ULTRAPAD
  )

  /**
   * Get all device specifications for Vortex devices.
   * Useful for vortex testing.
   */
  public fun getVortexDevices(): List<String> = listOf(
      Vortex.A24,
      Vortex.BTAB10,
      Vortex.C24L,
      Vortex.CB68,
      Vortex.CG65,
      Vortex.CM62,
      Vortex.G8,
      Vortex.HD55,
      Vortex.HD60,
      Vortex.HD60I,
      Vortex.HD60L,
      Vortex.HD62,
      Vortex.HD65,
      Vortex.HD65_PLUS,
      Vortex.HD65_SELECT,
      Vortex.HD65_ULTRA,
      Vortex.HD67,
      Vortex.J24,
      Vortex.MUV,
      Vortex.NS65,
      Vortex.PG65,
      Vortex.SYNC,
      Vortex.SYNQ,
      Vortex.T10M_PRO,
      Vortex.TAB8,
      Vortex.V22,
      Vortex.V22S,
      Vortex.VORTEX_HD65_CHOICE,
      Vortex.VORTEXV20,
      Vortex.Z22,
      Vortex.Z23,
      Vortex.ZG55,
      Vortex.ZG65,
      Vortex.ZG65_PRO
  )

  /**
   * Get all device specifications for VOTO devices.
   * Useful for voto testing.
   */
  public fun getVotoDevices(): List<String> = listOf(
      Voto.VOTO_V2I
  )

  /**
   * Get all device specifications for VOXelectronics devices.
   * Useful for voxelectronics testing.
   */
  public fun getVoxelectronicsDevices(): List<String> = listOf(
      Voxelectronics.ELLINIKO,
      Voxelectronics.HONGKONG,
      Voxelectronics.KENTON,
      Voxelectronics.LASALLE,
      Voxelectronics.LAVENDER,
      Voxelectronics.MOUNTBAKER
  )

  /**
   * Get all device specifications for vsmart devices.
   * Useful for vsmart testing.
   */
  public fun getVsmartDevices(): List<String> = listOf(
      Vsmart.CASSIA,
      Vsmart.CASUARINA,
      Vsmart.CLOVER,
      Vsmart.COCONUT,
      Vsmart.FIVESTAR,
      Vsmart.JACARANDA,
      Vsmart.JACARANDAPRO,
      Vsmart.JUNIPER,
      Vsmart.PQ4001,
      Vsmart.PQ4002,
      Vsmart.PQ6001,
      Vsmart.PQ6002,
      Vsmart.RICE,
      Vsmart.SAMSEONG,
      Vsmart.SUGARCANE,
      Vsmart.TR2001,
      Vsmart.V220A,
      Vsmart.V220B,
      Vsmart.V320A,
      Vsmart.V420A,
      Vsmart.V620A,
      Vsmart.WILLOWPRO
  )

  /**
   * Get all device specifications for VSP devices.
   * Useful for vsp testing.
   */
  public fun getVspDevices(): List<String> = listOf(
      Vsp.BEAUDRY
  )

  /**
   * Get all device specifications for VTEX devices.
   * Useful for vtex testing.
   */
  public fun getVtexDevices(): List<String> = listOf(
      Vtex.MT8768,
      Vtex.VK102W,
      Vtex.VK802W
  )

  /**
   * Get all device specifications for VU devices.
   * Useful for vu testing.
   */
  public fun getVuDevices(): List<String> = listOf(
      Vu.HAMAMATSUCHO,
      Vu.HENGSHAN,
      Vu.HUANGSHAN,
      Vu.IKEBUKURO,
      Vu.KEONEAE,
      Vu.LAOSHAN,
      Vu.LONGSHAN,
      Vu.LUSHAN,
      Vu.SAMSEONG,
      Vu.SONGSHAN,
      Vu.WUYISHAN,
      Vu.XIAOYUSHAN
  )

  /**
   * Get all device specifications for Vucatimes devices.
   * Useful for vucatimes testing.
   */
  public fun getVucatimesDevices(): List<String> = listOf(
      Vucatimes.N10,
      Vucatimes.N7,
      Vucatimes.N8,
      Vucatimes.VUCAPAD_N20,
      Vucatimes.VUCAPAD_NS20_EEA
  )

  /**
   * Get all device specifications for W_O devices.
   * Useful for w_o testing.
   */
  public fun getWODevices(): List<String> = listOf(
      WO.X6
  )

  /**
   * Get all device specifications for Wacom devices.
   * Useful for wacom testing.
   */
  public fun getWacomDevices(): List<String> = listOf(
      Wacom.CINTIQCOMPANIONHYBRID13HD
  )

  /**
   * Get all device specifications for WAF devices.
   * Useful for waf testing.
   */
  public fun getWafDevices(): List<String> = listOf(
      Waf.F808NM,
      Waf.THMTKAW01216
  )

  /**
   * Get all device specifications for Wainyok devices.
   * Useful for wainyok testing.
   */
  public fun getWainyokDevices(): List<String> = listOf(
      Wainyok.P10S,
      Wainyok.P10X
  )

  /**
   * Get all device specifications for waiputv devices.
   * Useful for waiputv testing.
   */
  public fun getWaiputvDevices(): List<String> = listOf(
      Waiputv.SEI700WP,
      Waiputv.SEI730WP,
      Waiputv.SEID00BWP
  )

  /**
   * Get all device specifications for WALTON devices.
   * Useful for walton testing.
   */
  public fun getWaltonDevices(): List<String> = listOf(
      Walton._10P,
      Walton.ANAHEIM,
      Walton.GUANDU,
      Walton.IAD,
      Walton.MARTIN,
      Walton.MATEO,
      Walton.NEXG_N25,
      Walton.NEXG_N26,
      Walton.NEXG_N27,
      Walton.NEXG_N71,
      Walton.NEXG_N71_PLUS,
      Walton.NEXG_N72,
      Walton.NEXG_N73,
      Walton.NEXG_N74,
      Walton.NEXG_N8,
      Walton.NEXG_N9,
      Walton.ORBIT_Y11,
      Walton.ORBIT_Y12,
      Walton.ORBIT_Y13,
      Walton.ORBIT_Y70,
      Walton.ORBITY20,
      Walton.OSAKI,
      Walton.PRIMO_D10,
      Walton.PRIMO_D9,
      Walton.PRIMO_E10,
      Walton.PRIMO_E10_PLUS,
      Walton.PRIMO_E11,
      Walton.PRIMO_E12,
      Walton.PRIMO_E8S,
      Walton.PRIMO_E9,
      Walton.PRIMO_EF10,
      Walton.PRIMO_EF7,
      Walton.PRIMO_EF8_4G,
      Walton.PRIMO_EF9,
      Walton.PRIMO_EM2,
      Walton.PRIMO_F10,
      Walton.PRIMO_F8,
      Walton.PRIMO_F8S,
      Walton.PRIMO_F9,
      Walton.PRIMO_G8I,
      Walton.PRIMO_G8I_4G,
      Walton.PRIMO_G9,
      Walton.PRIMO_GF6,
      Walton.PRIMO_GF7,
      Walton.PRIMO_GH10,
      Walton.PRIMO_GH7,
      Walton.PRIMO_GH7I,
      Walton.PRIMO_GH8,
      Walton.PRIMO_GH9,
      Walton.PRIMO_GM2,
      Walton.PRIMO_GM2_PLUS,
      Walton.PRIMO_GM3,
      Walton.PRIMO_GM3_PLUS,
      Walton.PRIMO_GM4,
      Walton.PRIMO_H10,
      Walton.PRIMO_H7S,
      Walton.PRIMO_H8_PRO,
      Walton.PRIMO_H9,
      Walton.PRIMO_H9_PRO,
      Walton.PRIMO_HM5,
      Walton.PRIMO_HM6,
      Walton.PRIMO_HM7,
      Walton.PRIMO_N4,
      Walton.PRIMO_N5,
      Walton.PRIMO_NF3,
      Walton.PRIMO_NF4,
      Walton.PRIMO_NF4_2GB,
      Walton.PRIMO_NF5,
      Walton.PRIMO_NH3,
      Walton.PRIMO_NH3_LITE,
      Walton.PRIMO_NH3I,
      Walton.PRIMO_NH4,
      Walton.PRIMO_NH5,
      Walton.PRIMO_NX6,
      Walton.PRIMO_R4_PLUS,
      Walton.PRIMO_R5,
      Walton.PRIMO_R5_PLUS,
      Walton.PRIMO_R6,
      Walton.PRIMO_R6_MAX,
      Walton.PRIMO_R8,
      Walton.PRIMO_R9,
      Walton.PRIMO_RM3,
      Walton.PRIMO_RM4,
      Walton.PRIMO_RX6,
      Walton.PRIMO_RX7,
      Walton.PRIMO_RX8,
      Walton.PRIMO_RX8_MINI,
      Walton.PRIMO_RX9,
      Walton.PRIMO_S6,
      Walton.PRIMO_S6_DUAL,
      Walton.PRIMO_S6_INFINITY,
      Walton.PRIMO_S7,
      Walton.PRIMO_S7_PRO,
      Walton.PRIMO_S8,
      Walton.PRIMO_X5,
      Walton.PRIMO_ZX3,
      Walton.PRIMO_ZX4,
      Walton.RX7_MINI,
      Walton.SW6H,
      Walton.TAMACHI,
      Walton.UMEDA,
      Walton.WALPAD10HPROMAX,
      Walton.WALPAD8G_V2,
      Walton.WALPAD_10H,
      Walton.WALPAD_10H_PRO,
      Walton.WALPAD_8G,
      Walton.WALPAD_9G,
      Walton.WBW5616WA,
      Walton.XANON_X20,
      Walton.XANON_X21,
      Walton.XANON_X90,
      Walton.XANON_X91,
      Walton.YEONGDEUNGPO,
      Walton.ZENX_1,
      Walton.ZENX_2
  )

  /**
   * Get all device specifications for Wansa devices.
   * Useful for wansa testing.
   */
  public fun getWansaDevices(): List<String> = listOf(
      Wansa.LONGSHAN,
      Wansa.REDWOOD,
      Wansa.SAMSEONG,
      Wansa.XIAOYUSHAN
  )

  /**
   * Get all device specifications for WAOO devices.
   * Useful for waoo testing.
   */
  public fun getWaooDevices(): List<String> = listOf(
      Waoo.M393GENA_W
  )

  /**
   * Get all device specifications for WARP devices.
   * Useful for warp testing.
   */
  public fun getWarpDevices(): List<String> = listOf(
      Warp.TAB_WP11
  )

  /**
   * Get all device specifications for WasabiMango devices.
   * Useful for wasabimango testing.
   */
  public fun getWasabimangoDevices(): List<String> = listOf(
      Wasabimango.SEOCHO
  )

  /**
   * Get all device specifications for Wave_8 devices.
   * Useful for wave_8 testing.
   */
  public fun getWave8Devices(): List<String> = listOf(
      Wave8.WAVE_8_10,
      Wave8.WAVE_8_7
  )

  /**
   * Get all device specifications for Wave8RedNougat devices.
   * Useful for wave8rednougat testing.
   */
  public fun getWave8rednougatDevices(): List<String> = listOf(
      Wave8rednougat.WV8R_N
  )

  /**
   * Get all device specifications for WCED devices.
   * Useful for wced testing.
   */
  public fun getWcedDevices(): List<String> = listOf(
      Wced.H1010_M50
  )

  /**
   * Get all device specifications for WE devices.
   * Useful for we testing.
   */
  public fun getWeDevices(): List<String> = listOf(
      We.A10,
      We.A50,
      We.F1,
      We.L7,
      We.V5,
      We.WE_F20,
      We.WE_L9,
      We.WE_R4,
      We.WE_T1
  )

  /**
   * Get all device specifications for Webee devices.
   * Useful for webee testing.
   */
  public fun getWebeeDevices(): List<String> = listOf(
      Webee.WEBEE_TAB_8
  )

  /**
   * Get all device specifications for Webfleet_Solutions devices.
   * Useful for webfleet_solutions testing.
   */
  public fun getWebfleetSolutionsDevices(): List<String> = listOf(
      WebfleetSolutions.TRITON
  )

  /**
   * Get all device specifications for weelikeit devices.
   * Useful for weelikeit testing.
   */
  public fun getWeelikeitDevices(): List<String> = listOf(
      Weelikeit.C19W,
      Weelikeit.C19W_EEA,
      Weelikeit.C28,
      Weelikeit.C72W,
      Weelikeit.C72W_EEA,
      Weelikeit.C76W,
      Weelikeit.C76W_EEA,
      Weelikeit.C81W,
      Weelikeit.C81W_EEA,
      Weelikeit.C85W,
      Weelikeit.C85W_EEA,
      Weelikeit.F11W,
      Weelikeit.F83W,
      Weelikeit.P11W,
      Weelikeit.P11W_EEA,
      Weelikeit.P16_W,
      Weelikeit.P16W,
      Weelikeit.P16W_EEA,
      Weelikeit.P36W,
      Weelikeit.P36W_EEA,
      Weelikeit.P39W,
      Weelikeit.P39W_EEA,
      Weelikeit.P51L_EEA
  )

  /**
   * Get all device specifications for Welio devices.
   * Useful for welio testing.
   */
  public fun getWelioDevices(): List<String> = listOf(
      Welio.WPAD_AURA
  )

  /**
   * Get all device specifications for Wemax devices.
   * Useful for wemax testing.
   */
  public fun getWemaxDevices(): List<String> = listOf(
      Wemax.TIANSHAN
  )

  /**
   * Get all device specifications for Westgate devices.
   * Useful for westgate testing.
   */
  public fun getWestgateDevices(): List<String> = listOf(
      Westgate.WESTGATE_T801
  )

  /**
   * Get all device specifications for Westgate_Resorts devices.
   * Useful for westgate_resorts testing.
   */
  public fun getWestgateResortsDevices(): List<String> = listOf(
      WestgateResorts.T802
  )

  /**
   * Get all device specifications for WestgateResorts devices.
   * Useful for westgateresorts testing.
   */
  public fun getWestgateresortsDevices(): List<String> = listOf(
      Westgateresorts.T803,
      Westgateresorts.T805
  )

  /**
   * Get all device specifications for Westinghouse devices.
   * Useful for westinghouse testing.
   */
  public fun getWestinghouseDevices(): List<String> = listOf(
      Westinghouse.UENO,
      Westinghouse.W10TWF19,
      Westinghouse.WH10S9863232
  )

  /**
   * Get all device specifications for WESTWAY devices.
   * Useful for westway testing.
   */
  public fun getWestwayDevices(): List<String> = listOf(
      Westway.MOUNTBAKER
  )

  /**
   * Get all device specifications for WeTap devices.
   * Useful for wetap testing.
   */
  public fun getWetapDevices(): List<String> = listOf(
      Wetap.WETAP_Y10
  )

  /**
   * Get all device specifications for WeTek devices.
   * Useful for wetek testing.
   */
  public fun getWetekDevices(): List<String> = listOf(
      Wetek.WH220
  )

  /**
   * Get all device specifications for Whitedeer devices.
   * Useful for whitedeer testing.
   */
  public fun getWhitedeerDevices(): List<String> = listOf(
      Whitedeer.G13
  )

  /**
   * Get all device specifications for WHOOP devices.
   * Useful for whoop testing.
   */
  public fun getWhoopDevices(): List<String> = listOf(
      Whoop.TAB_8US2
  )

  /**
   * Get all device specifications for WiBox-tv devices.
   * Useful for wibox-tv testing.
   */
  public fun getWiboxTvDevices(): List<String> = listOf(
      WiboxTv.WIBOX_TV
  )

  /**
   * Get all device specifications for Widevu devices.
   * Useful for widevu testing.
   */
  public fun getWidevuDevices(): List<String> = listOf(
      Widevu.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for Wieppo devices.
   * Useful for wieppo testing.
   */
  public fun getWieppoDevices(): List<String> = listOf(
      Wieppo.T596_JW_WIEPPO
  )

  /**
   * Get all device specifications for Wigor devices.
   * Useful for wigor testing.
   */
  public fun getWigorDevices(): List<String> = listOf(
      Wigor.V2,
      Wigor.V3,
      Wigor.V5
  )

  /**
   * Get all device specifications for WIKO devices.
   * Useful for wiko testing.
   */
  public fun getWikoDevices(): List<String> = listOf(
      Wiko.C210AE,
      Wiko.DBA_AN00,
      Wiko.I9031,
      Wiko.L5221,
      Wiko.L5227AC,
      Wiko.L5251,
      Wiko.L5261,
      Wiko.L5320,
      Wiko.L5421,
      Wiko.L5460,
      Wiko.L5510,
      Wiko.L5560AE,
      Wiko.L9010,
      Wiko.P4601AN,
      Wiko.P4661AN,
      Wiko.P4901AC,
      Wiko.P4903JP,
      Wiko.P4903LA,
      Wiko.P6601AE,
      Wiko.P6609BC,
      Wiko.P6609BCD,
      Wiko.P6901,
      Wiko.P7201,
      Wiko.P7203,
      Wiko.S4050AP,
      Wiko.S5030,
      Wiko.S5030AP12H,
      Wiko.S5201AP,
      Wiko.S5222,
      Wiko.S5250,
      Wiko.S5254,
      Wiko.S5260,
      Wiko.S5420,
      Wiko.S8515,
      Wiko.T20,
      Wiko.T2800AN,
      Wiko.T3903BN,
      Wiko.T3931AC,
      Wiko.T60,
      Wiko.T6901AC,
      Wiko.T9051AC,
      Wiko.U307AS,
      Wiko.U316AT,
      Wiko.U520AS,
      Wiko.U614AS,
      Wiko.U616AT,
      Wiko.V12BN,
      Wiko.V12BNLITE,
      Wiko.V12DNLITE,
      Wiko.V12ENLITE,
      Wiko.V2502AN,
      Wiko.V2508,
      Wiko.V2510,
      Wiko.V2520,
      Wiko.V2600CN,
      Wiko.V2610,
      Wiko.V2800AN,
      Wiko.V2802AN,
      Wiko.V2806,
      Wiko.V3610AN,
      Wiko.V3702AN,
      Wiko.V3720,
      Wiko.V3740,
      Wiko.V3750AN,
      Wiko.V3802AN,
      Wiko.V3903BN,
      Wiko.V3913,
      Wiko.V3913BN22I,
      Wiko.V3921,
      Wiko.V3931AC,
      Wiko.V3933AC,
      Wiko.V3941,
      Wiko.V3953,
      Wiko.V3953AN25K,
      Wiko.V3961,
      Wiko.V3971,
      Wiko.V3991AN,
      Wiko.VHEM,
      Wiko.W_K130,
      Wiko.W_K200,
      Wiko.W_K211,
      Wiko.W_K360,
      Wiko.W_K380,
      Wiko.W_K420,
      Wiko.W_K510,
      Wiko.W_K510DG,
      Wiko.W_K521,
      Wiko.W_K560,
      Wiko.W_K610,
      Wiko.W_K630,
      Wiko.W_P210,
      Wiko.W_P220,
      Wiko.W_P311,
      Wiko.W_P611,
      Wiko.W_P861,
      Wiko.W_U300,
      Wiko.W_V600,
      Wiko.W_V673,
      Wiko.W_V680,
      Wiko.W_V720,
      Wiko.W_V730,
      Wiko.W_V745,
      Wiko.W_V750BN,
      Wiko.W_V755,
      Wiko.W_V770,
      Wiko.W_V800,
      Wiko.W_V830,
      Wiko.W_V850,
      Wiko.W_V851,
      Wiko.W_C200SN,
      Wiko.W_C201,
      Wiko.W_C800,
      Wiko.W_C800S,
      Wiko.W_C860,
      Wiko.W_K101,
      Wiko.W_K101S,
      Wiko.W_K120,
      Wiko.W_K300,
      Wiko.W_K300S,
      Wiko.W_K400,
      Wiko.W_K600,
      Wiko.W_P130,
      Wiko.W_P200,
      Wiko.W_P200CM,
      Wiko.WC300,
      Wiko.WC300SN
  )

  /**
   * Get all device specifications for Wileyfox devices.
   * Useful for wileyfox testing.
   */
  public fun getWileyfoxDevices(): List<String> = listOf(
      Wileyfox.CRACKLING,
      Wileyfox.MARMITE,
      Wileyfox.PORRIDGE,
      Wileyfox.PORRIDGEK3
  )

  /**
   * Get all device specifications for WILLETT devices.
   * Useful for willett testing.
   */
  public fun getWillettDevices(): List<String> = listOf(
      Willett.TAMACHI
  )

  /**
   * Get all device specifications for WillkoTech devices.
   * Useful for willkotech testing.
   */
  public fun getWillkotechDevices(): List<String> = listOf(
      Willkotech.KISHI_001,
      Willkotech.WK1863L
  )

  /**
   * Get all device specifications for Win devices.
   * Useful for win testing.
   */
  public fun getWinDevices(): List<String> = listOf(
      Win.DV8947_KPW,
      Win.M3,
      Win.M5PLUS,
      Win.N4,
      Win.N4PLUS,
      Win.Q9
  )

  /**
   * Get all device specifications for Wind devices.
   * Useful for wind testing.
   */
  public fun getWindDevices(): List<String> = listOf(
      Wind.UZW4030WNH
  )

  /**
   * Get all device specifications for WINDS devices.
   * Useful for winds testing.
   */
  public fun getWindsDevices(): List<String> = listOf(
      Winds.WINDS_T3
  )

  /**
   * Get all device specifications for Wings devices.
   * Useful for wings testing.
   */
  public fun getWingsDevices(): List<String> = listOf(
      Wings.W1,
      Wings.W3,
      Wings.W6,
      Wings.W7,
      Wings.WX
  )

  /**
   * Get all device specifications for Wings_Mobile devices.
   * Useful for wings_mobile testing.
   */
  public fun getWingsMobileDevices(): List<String> = listOf(
      WingsMobile.W4,
      WingsMobile.W7_Q
  )

  /**
   * Get all device specifications for Winmax devices.
   * Useful for winmax testing.
   */
  public fun getWinmaxDevices(): List<String> = listOf(
      Winmax.TIGER_X12,
      Winmax.TIGER_X7,
      Winmax.X50
  )

  /**
   * Get all device specifications for WINNOVO devices.
   * Useful for winnovo testing.
   */
  public fun getWinnovoDevices(): List<String> = listOf(
      Winnovo.H10,
      Winnovo.H10_US,
      Winnovo.H7,
      Winnovo.H7_US,
      Winnovo.H8,
      Winnovo.H8_US,
      Winnovo.M8,
      Winnovo.P20_TAB,
      Winnovo.T10,
      Winnovo.T10LTE,
      Winnovo.T7,
      Winnovo.T8,
      Winnovo.TS10,
      Winnovo.TS10_EEA,
      Winnovo.TS7,
      Winnovo.TS7_EEA,
      Winnovo.WINNOVOT5
  )

  /**
   * Get all device specifications for WinRo devices.
   * Useful for winro testing.
   */
  public fun getWinroDevices(): List<String> = listOf(
      Winro.VONI10
  )

  /**
   * Get all device specifications for WINTEK devices.
   * Useful for wintek testing.
   */
  public fun getWintekDevices(): List<String> = listOf(
      Wintek.W405
  )

  /**
   * Get all device specifications for WINTOUCH devices.
   * Useful for wintouch testing.
   */
  public fun getWintouchDevices(): List<String> = listOf(
      Wintouch.A20,
      Wintouch.A50,
      Wintouch.K19,
      Wintouch.Q705
  )

  /**
   * Get all device specifications for WirelessGate devices.
   * Useful for wirelessgate testing.
   */
  public fun getWirelessgateDevices(): List<String> = listOf(
      Wirelessgate.WG_TABLET_01
  )

  /**
   * Get all device specifications for Wise-Tech devices.
   * Useful for wise-tech testing.
   */
  public fun getWiseTechDevices(): List<String> = listOf(
      WiseTech.P1_PLUS,
      WiseTech.P33,
      WiseTech.P55,
      WiseTech.TECH_A1,
      WiseTech.TECH_A1_PLUS,
      WiseTech.WISE_TECH_M1,
      WiseTech.WISE_TAB
  )

  /**
   * Get all device specifications for Wiseasy devices.
   * Useful for wiseasy testing.
   */
  public fun getWiseasyDevices(): List<String> = listOf(
      Wiseasy.WISENET5
  )

  /**
   * Get all device specifications for WiseTech devices.
   * Useful for wisetech testing.
   */
  public fun getWisetechDevices(): List<String> = listOf(
      Wisetech.WISETECH_NOTE_10,
      Wisetech.WISETECH_NOTE_12
  )

  /**
   * Get all device specifications for Wishtel devices.
   * Useful for wishtel testing.
   */
  public fun getWishtelDevices(): List<String> = listOf(
      Wishtel.IRA,
      Wishtel.IRA07,
      Wishtel.IRA102017I,
      Wishtel.IRA_DUO,
      Wishtel.IRA_S1,
      Wishtel.IRAJ2,
      Wishtel.IRAW7258,
      Wishtel.IRAW801,
      Wishtel.IRAW801I,
      Wishtel.T811
  )

  /**
   * Get all device specifications for WISMANN devices.
   * Useful for wismann testing.
   */
  public fun getWismannDevices(): List<String> = listOf(
      Wismann.STANFORD,
      Wismann.ZHONGSHAN
  )

  /**
   * Get all device specifications for Witooth devices.
   * Useful for witooth testing.
   */
  public fun getWitoothDevices(): List<String> = listOf(
      Witooth.LONGSHAN,
      Witooth.SINDORIM
  )

  /**
   * Get all device specifications for WIZ devices.
   * Useful for wiz testing.
   */
  public fun getWizDevices(): List<String> = listOf(
      Wiz.ARC8,
      Wiz.SLATE10
  )

  /**
   * Get all device specifications for wizz devices.
   * Useful for wizz testing.
   */
  public fun getWizzDevices(): List<String> = listOf(
      Wizz.DV_PTB1080
  )

  /**
   * Get all device specifications for wnc devices.
   * Useful for wnc testing.
   */
  public fun getWncDevices(): List<String> = listOf(
      Wnc.JS8V
  )

  /**
   * Get all device specifications for WOM devices.
   * Useful for wom testing.
   */
  public fun getWomDevices(): List<String> = listOf(
      Wom.SEI500W
  )

  /**
   * Get all device specifications for WONGKUO devices.
   * Useful for wongkuo testing.
   */
  public fun getWongkuoDevices(): List<String> = listOf(
      Wongkuo.T20
  )

  /**
   * Get all device specifications for Workmate devices.
   * Useful for workmate testing.
   */
  public fun getWorkmateDevices(): List<String> = listOf(
      Workmate.U13
  )

  /**
   * Get all device specifications for WOW devices.
   * Useful for wow testing.
   */
  public fun getWowDevices(): List<String> = listOf(
      Wow.UIW4020WOW
  )

  /**
   * Get all device specifications for WOWI devices.
   * Useful for wowi testing.
   */
  public fun getWowiDevices(): List<String> = listOf(
      Wowi.S8E,
      Wowi.SQ753,
      Wowi.SQ788,
      Wowi.SQ788_1,
      Wowi.SQ788EXTREME,
      Wowi.TAB_X5
  )

  /**
   * Get all device specifications for WOXTER devices.
   * Useful for woxter testing.
   */
  public fun getWoxterDevices(): List<String> = listOf(
      Woxter.WOXTER_N200,
      Woxter.X100,
      Woxter.X100_PRO,
      Woxter.X100V3,
      Woxter.X200,
      Woxter.X200_PRO_V2,
      Woxter.X70,
      Woxter.X70_PRO,
      Woxter.X70V2
  )

  /**
   * Get all device specifications for WOZIFAN devices.
   * Useful for wozifan testing.
   */
  public fun getWozifanDevices(): List<String> = listOf(
      Wozifan.W10_EEA,
      Wozifan.W10_T_US,
      Wozifan.W10_US,
      Wozifan.W3_EEA,
      Wozifan.W3_US
  )

  /**
   * Get all device specifications for Wpawa devices.
   * Useful for wpawa testing.
   */
  public fun getWpawaDevices(): List<String> = listOf(
      Wpawa.HT10_A
  )

  /**
   * Get all device specifications for WS devices.
   * Useful for ws testing.
   */
  public fun getWsDevices(): List<String> = listOf(
      Ws.TD_TP010G_2,
      Ws.WS_T01
  )

  /**
   * Get all device specifications for WXUNJA devices.
   * Useful for wxunja testing.
   */
  public fun getWxunjaDevices(): List<String> = listOf(
      Wxunja.E10
  )

  /**
   * Get all device specifications for WYBOR devices.
   * Useful for wybor testing.
   */
  public fun getWyborDevices(): List<String> = listOf(
      Wybor.HONGKONG,
      Wybor.LAVENDER,
      Wybor.MOUNTBAKER
  )

  /**
   * Get all device specifications for X-AGE devices.
   * Useful for x-age testing.
   */
  public fun getXAgeDevices(): List<String> = listOf(
      XAge.A1,
      XAge.ACE,
      XAge.G1,
      XAge.G1LITE,
      XAge.G2,
      XAge.X_AGE_LEAP_1,
      XAge.X_AGE_SNAP_1
  )

  /**
   * Get all device specifications for X-mobile devices.
   * Useful for x-mobile testing.
   */
  public fun getXMobileDevices(): List<String> = listOf(
      XMobile.XM_SW1
  )

  /**
   * Get all device specifications for X-PREMIUM devices.
   * Useful for x-premium testing.
   */
  public fun getXPremiumDevices(): List<String> = listOf(
      XPremium.X1
  )

  /**
   * Get all device specifications for X_TIGI devices.
   * Useful for x_tigi testing.
   */
  public fun getXTigiDevices(): List<String> = listOf(
      XTigi._9C,
      XTigi.A10C,
      XTigi.A10S,
      XTigi.A20C,
      XTigi.A20S,
      XTigi.A20S_PRO,
      XTigi.A3,
      XTigi.HOPE10_MATE,
      XTigi.HOPE10_PLUS,
      XTigi.HOPE10_PRO,
      XTigi.HOPE10PRO,
      XTigi.HOPE7_LTE,
      XTigi.HOPE7_MATE,
      XTigi.HOPE7_MAX,
      XTigi.HOPE7_PRO,
      XTigi.HOPE8_LTE,
      XTigi.HOPE8_MATE,
      XTigi.JOY10_MATE,
      XTigi.JOY7_MATE,
      XTigi.JOY7_TV,
      XTigi.JOY8_MATE,
      XTigi.KIDS7_PRO,
      XTigi.KIDS8_PRO,
      XTigi.KIDS9_PRO,
      XTigi.KIDS_TAB,
      XTigi.M20S,
      XTigi.MID,
      XTigi.PHOTO_P16,
      XTigi.SHARP1,
      XTigi.SHARP_2,
      XTigi.V12,
      XTigi.V18_PRO_A,
      XTigi.V28,
      XTigi.V28_LTE,
      XTigi.V8,
      XTigi.X_TIGI_A55,
      XTigi.X_TIGI_JOY7_MAX,
      XTigi.X_TIGI_V15,
      XTigi.X_TIGI_V18_PRO,
      XTigi.X_TIGI_V5,
      XTigi.X_TIGI_V9,
      XTigi.X_TIGI_PHOTO_P20,
      XTigi.X_TIGI_V16,
      XTigi.X_TIGI_V16_LTE,
      XTigi.X_TIGI_V19
  )

  /**
   * Get all device specifications for X-View devices.
   * Useful for x-view testing.
   */
  public fun getXViewDevices(): List<String> = listOf(
      XView.AMBER_KIDS,
      XView.BEARS,
      XView.FTB13,
      XView.KIDS10,
      XView.NEON,
      XView.PRO_BOOK,
      XView.PROTAB10,
      XView.PROTON_AMBER_HD,
      XView.PROTON_NEON,
      XView.Q10,
      XView.Q11,
      XView.Q7,
      XView.QUANTUM_Q7S,
      XView.QUANTUM_Q7S_PLUS,
      XView.SAPPHIRE_HDLT,
      XView.TABLET10_X_VIEW,
      XView.TABLET7_X_VIEW,
      XView.TITANIUMCOLORS,
      XView.TITANIUMHD,
      XView.X_VIEWGAMER10,
      XView.X_VIEWTABLET10,
      XView.X_VIEWTABLET7,
      XView.X_VIEW_Q7,
      XView.X_VIEWTABLET10,
      XView.XRB15,
      XView.XVIEW_TABLET_7,
      XView.ZPB17
  )

  /**
   * Get all device specifications for XB devices.
   * Useful for xb testing.
   */
  public fun getXbDevices(): List<String> = listOf(
      Xb.XB_T11I
  )

  /**
   * Get all device specifications for XD devices.
   * Useful for xd testing.
   */
  public fun getXdDevices(): List<String> = listOf(
      Xd.MARTIN
  )

  /**
   * Get all device specifications for XD-Enjoy devices.
   * Useful for xd-enjoy testing.
   */
  public fun getXdEnjoyDevices(): List<String> = listOf(
      XdEnjoy.XDDGM10,
      XdEnjoy.XDDGM11BS,
      XdEnjoy.XDDGM99PM
  )

  /**
   * Get all device specifications for Xelex devices.
   * Useful for xelex testing.
   */
  public fun getXelexDevices(): List<String> = listOf(
      Xelex.GAMA_TAB_X8
  )

  /**
   * Get all device specifications for XELL devices.
   * Useful for xell testing.
   */
  public fun getXellDevices(): List<String> = listOf(
      Xell.HONGKONG,
      Xell.MOUNTBAKER
  )

  /**
   * Get all device specifications for XENON devices.
   * Useful for xenon testing.
   */
  public fun getXenonDevices(): List<String> = listOf(
      Xenon.MARINA,
      Xenon.NAGATA
  )

  /**
   * Get all device specifications for XGIMI devices.
   * Useful for xgimi testing.
   */
  public fun getXgimiDevices(): List<String> = listOf(
      Xgimi.ALTAI,
      Xgimi.XGIMIAPOLLO,
      Xgimi.XGIMIGALILEO
  )

  /**
   * Get all device specifications for XGODY devices.
   * Useful for xgody testing.
   */
  public fun getXgodyDevices(): List<String> = listOf(
      Xgody.MATE_70,
      Xgody.N02,
      Xgody.N02_A,
      Xgody.N02_PROA,
      Xgody.P60PRO,
      Xgody.P60PRO_15,
      Xgody.Q16,
      Xgody.Q17,
      Xgody.R15_EEA,
      Xgody.T702,
      Xgody.T702E_EEA,
      Xgody.T702PRO_A,
      Xgody.T702PRO_S,
      Xgody.TAB10,
      Xgody.TAB_M10,
      Xgody.TAB_M10_EEA,
      Xgody.X32,
      Xgody.XGT_EEA
  )

  /**
   * Get all device specifications for Xiaomi devices.
   * Useful for xiaomi testing.
   */
  public fun getXiaomiDevices(): List<String> = listOf(
      Xiaomi._22081212C,
      Xiaomi.AMBER,
      Xiaomi.AMELIE,
      Xiaomi.ANDROMEDA,
      Xiaomi.ANGLEEUHD,
      Xiaomi.APOLLO,
      Xiaomi.AQUA,
      Xiaomi.ARCTICTALE,
      Xiaomi.ARIES,
      Xiaomi.ARISTOTLE,
      Xiaomi.ARMANI,
      Xiaomi.AURORA,
      Xiaomi.AXOLOTL,
      Xiaomi.AXOLOTLAXIE,
      Xiaomi.AXOLOTLTE,
      Xiaomi.BABYLON,
      Xiaomi.BERYLLIUM,
      Xiaomi.CACTUS,
      Xiaomi.CANCRO,
      Xiaomi.CAPPU,
      Xiaomi.CAPRICORN,
      Xiaomi.CAS,
      Xiaomi.CEPHEUS,
      Xiaomi.CEREUS,
      Xiaomi.CETUS,
      Xiaomi.CHENFENG,
      Xiaomi.CHIRON,
      Xiaomi.CLOVER,
      Xiaomi.COROT,
      Xiaomi.COURBET,
      Xiaomi.COURBETIN,
      Xiaomi.CROODS,
      Xiaomi.CRUX,
      Xiaomi.CUPID,
      Xiaomi.DADA,
      Xiaomi.DAGU,
      Xiaomi.DAISY_SPROUT,
      Xiaomi.DANGAL,
      Xiaomi.DANGALFHD,
      Xiaomi.DANGALUHD,
      Xiaomi.DAUMIER,
      Xiaomi.DAVINCI,
      Xiaomi.DAVINCIIN,
      Xiaomi.DEGAS,
      Xiaomi.DIJUN,
      Xiaomi.DIOR,
      Xiaomi.DIPPER,
      Xiaomi.DITING,
      Xiaomi.ELISH,
      Xiaomi.ENUMA,
      Xiaomi.EQUULEUS,
      Xiaomi.FERRARI,
      Xiaomi.FUXI,
      Xiaomi.GAUGUIN,
      Xiaomi.GAUGUININPRO,
      Xiaomi.GEMINI,
      Xiaomi.GINKGO,
      Xiaomi.GINKGO,
      Xiaomi.GOKU,
      Xiaomi.GRUS,
      Xiaomi.GUCCI,
      Xiaomi.HAOTIAN,
      Xiaomi.HAYDN,
      Xiaomi.HAYDNIN,
      Xiaomi.HELIUM,
      Xiaomi.HENNESSY,
      Xiaomi.HERMANO,
      Xiaomi.HERMES,
      Xiaomi.HM2013022,
      Xiaomi.HM2013023,
      Xiaomi.HM2014811,
      Xiaomi.HM2014812,
      Xiaomi.HM2014813,
      Xiaomi.HM2014817,
      Xiaomi.HM2014818,
      Xiaomi.HM2014819,
      Xiaomi.HOUJI,
      Xiaomi.HYDROGEN,
      Xiaomi.IDO,
      Xiaomi.IROBOT,
      Xiaomi.ISHTAR,
      Xiaomi.JASMINE_SPROUT,
      Xiaomi.JASON,
      Xiaomi.JAWS,
      Xiaomi.JINGHU,
      Xiaomi.KATE,
      Xiaomi.KENZO,
      Xiaomi.KUNGFUPANDA,
      Xiaomi.LADYBIRD,
      Xiaomi.LALALAND,
      Xiaomi.LAND,
      Xiaomi.LATTE,
      Xiaomi.LAURUS,
      Xiaomi.LAVENDER,
      Xiaomi.LCSH92_WET_JB9,
      Xiaomi.LEO,
      Xiaomi.LIBRA,
      Xiaomi.LISA,
      Xiaomi.LITHIUM,
      Xiaomi.LIUQIN,
      Xiaomi.LOTUS,
      Xiaomi.MACHUCA,
      Xiaomi.MAGNOLIA,
      Xiaomi.MARKW,
      Xiaomi.MARS,
      Xiaomi.MARTIAN,
      Xiaomi.MAYFLY,
      Xiaomi.MERI,
      Xiaomi.MIDO,
      Xiaomi.MOCHA,
      Xiaomi.MONA,
      Xiaomi.MONET,
      Xiaomi.MUYU,
      Xiaomi.NABU,
      Xiaomi.NATRIUM,
      Xiaomi.NIKEL,
      Xiaomi.NINO,
      Xiaomi.NITROGEN,
      Xiaomi.NUWA,
      Xiaomi.ODIN,
      Xiaomi.OLIVELITE,
      Xiaomi.OMEGA,
      Xiaomi.ONC,
      Xiaomi.ONCE,
      Xiaomi.ONEDAY,
      Xiaomi.OXYGEN,
      Xiaomi.PERSEUS,
      Xiaomi.PINE,
      Xiaomi.PIPA,
      Xiaomi.PISCES,
      Xiaomi.PISSARROIN,
      Xiaomi.PISSARROINPRO,
      Xiaomi.PLATINA,
      Xiaomi.PLATO,
      Xiaomi.POLARIS,
      Xiaomi.PRADA,
      Xiaomi.PSYCHE,
      Xiaomi.PYXIS,
      Xiaomi.RANGO,
      Xiaomi.RAPHAELIN,
      Xiaomi.RENOIR,
      Xiaomi.RIVA,
      Xiaomi.RIVER,
      Xiaomi.ROLEX,
      Xiaomi.ROSY,
      Xiaomi.ROTHKO,
      Xiaomi.RUYI,
      Xiaomi.SAGIT,
      Xiaomi.SAKURA,
      Xiaomi.SANTONI,
      Xiaomi.SCORPIO,
      Xiaomi.SHENG,
      Xiaomi.SHENNONG,
      Xiaomi.SIRIUS,
      Xiaomi.SOUL,
      Xiaomi.STAR,
      Xiaomi.TAOYAO,
      Xiaomi.TARZAN,
      Xiaomi.THOR,
      Xiaomi.THYME,
      Xiaomi.TIANSHAN,
      Xiaomi.TIARE,
      Xiaomi.TIFFANY,
      Xiaomi.TISSOT_SPROUT,
      Xiaomi.TOCO,
      Xiaomi.TUCANA,
      Xiaomi.TWILIGHT,
      Xiaomi.UGG,
      Xiaomi.UGGLITE,
      Xiaomi.UKE,
      Xiaomi.UMI,
      Xiaomi.UNICORN,
      Xiaomi.URSA,
      Xiaomi.VANGOGH,
      Xiaomi.VAYU,
      Xiaomi.VENOM,
      Xiaomi.VINCE,
      Xiaomi.VIOLET,
      Xiaomi.VIRGO,
      Xiaomi.VOLVER,
      Xiaomi.WATCHMEN,
      Xiaomi.WAYNE,
      Xiaomi.WILLOW,
      Xiaomi.XIG04,
      Xiaomi.XIG07,
      Xiaomi.XUANYUAN,
      Xiaomi.YSL,
      Xiaomi.YUDI,
      Xiaomi.YUECHU,
      Xiaomi.ZEUS,
      Xiaomi.ZIJIN,
      Xiaomi.ZIYI,
      Xiaomi.ZIZHAN
  )

  /**
   * Get all device specifications for Xitrix devices.
   * Useful for xitrix testing.
   */
  public fun getXitrixDevices(): List<String> = listOf(
      Xitrix.STANFORD,
      Xitrix.TRAVELPAD_A10,
      Xitrix.ZHONGSHAN
  )

  /**
   * Get all device specifications for xl devices.
   * Useful for xl testing.
   */
  public fun getXlDevices(): List<String> = listOf(
      Xl.STI6XXX
  )

  /**
   * Get all device specifications for XLAxiata devices.
   * Useful for xlaxiata testing.
   */
  public fun getXlaxiataDevices(): List<String> = listOf(
      Xlaxiata.DV8252
  )

  /**
   * Get all device specifications for Xming devices.
   * Useful for xming testing.
   */
  public fun getXmingDevices(): List<String> = listOf(
      Xming.TIANSHAN
  )

  /**
   * Get all device specifications for XMOBILE devices.
   * Useful for xmobile testing.
   */
  public fun getXmobileDevices(): List<String> = listOf(
      Xmobile.X1,
      Xmobile.X10MAX,
      Xmobile.X55NALU,
      Xmobile.X55USA,
      Xmobile.X63,
      Xmobile.X63PRO,
      Xmobile.X7,
      Xmobile.X8MAX,
      Xmobile.X8PRO,
      Xmobile.X8PRONUS,
      Xmobile.X_55_A,
      Xmobile.X_55B,
      Xmobile.X_63_B_PROB,
      Xmobile.X_63_PROA,
      Xmobile.XMOBILE,
      Xmobile.XMOBILE_X2,
      Xmobile.XMOBILE_X2_US,
      Xmobile.XMOVI_X8
  )

  /**
   * Get all device specifications for Xolo devices.
   * Useful for xolo testing.
   */
  public fun getXoloDevices(): List<String> = listOf(
      Xolo.ERA1X,
      Xolo.ERA5X,
      Xolo.ERA_2,
      Xolo.ERA_2V,
      Xolo.ERA_3X,
      Xolo.ERA_4X,
      Xolo.ERA_4X_2GB,
      Xolo.XE2X,
      Xolo.XE2X3GB,
      Xolo.XOLO_ERA_4K
  )

  /**
   * Get all device specifications for XORO devices.
   * Useful for xoro testing.
   */
  public fun getXoroDevices(): List<String> = listOf(
      Xoro.MEGAPAD_1333_PRO,
      Xoro.XORO
  )

  /**
   * Get all device specifications for Xphoenix devices.
   * Useful for xphoenix testing.
   */
  public fun getXphoenixDevices(): List<String> = listOf(
      Xphoenix.ONETABPRO2,
      Xphoenix.ONETABPROMATE
  )

  /**
   * Get all device specifications for XPLORE devices.
   * Useful for xplore testing.
   */
  public fun getXploreDevices(): List<String> = listOf(
      Xplore.M6,
      Xplore.XP8105,
      Xplore.XP8105A
  )

  /**
   * Get all device specifications for Xplore_Technologies devices.
   * Useful for xplore_technologies testing.
   */
  public fun getXploreTechnologiesDevices(): List<String> = listOf(
      XploreTechnologies.XSLATE_D10
  )

  /**
   * Get all device specifications for XPPen devices.
   * Useful for xppen testing.
   */
  public fun getXppenDevices(): List<String> = listOf(
      Xppen.TITAN_XPPEN
  )

  /**
   * Get all device specifications for XREAL devices.
   * Useful for xreal testing.
   */
  public fun getXrealDevices(): List<String> = listOf(
      Xreal.X4000
  )

  /**
   * Get all device specifications for Xsmart devices.
   * Useful for xsmart testing.
   */
  public fun getXsmartDevices(): List<String> = listOf(
      Xsmart.CORE_X,
      Xsmart.MATE_10,
      Xsmart.NOVA_7
  )

  /**
   * Get all device specifications for XTIGI devices.
   * Useful for xtigi testing.
   */
  public fun getXtigiDevices(): List<String> = listOf(
      Xtigi.V51
  )

  /**
   * Get all device specifications for XTOUCH devices.
   * Useful for xtouch testing.
   */
  public fun getXtouchDevices(): List<String> = listOf(
      Xtouch.A5,
      Xtouch.S20,
      Xtouch.S40,
      Xtouch.X40,
      Xtouch.XBOT_JUNIOR,
      Xtouch.XBOT_SENIOR,
      Xtouch.XP10_4G,
      Xtouch.XP10_WIFI,
      Xtouch.XTOUCH_A4,
      Xtouch.XTOUCH_X,
      Xtouch.XTOUCH_X10
  )

  /**
   * Get all device specifications for XTR devices.
   * Useful for xtr testing.
   */
  public fun getXtrDevices(): List<String> = listOf(
      Xtr.T4,
      Xtr.Z5
  )

  /**
   * Get all device specifications for XTRATECH devices.
   * Useful for xtratech testing.
   */
  public fun getXtratechDevices(): List<String> = listOf(
      Xtratech.BND8163_TB_N,
      Xtratech.BRIO_X31,
      Xtratech.X10MT16,
      Xtratech.X10MT87,
      Xtratech.X8MT16,
      Xtratech.X8MT87
  )

  /**
   * Get all device specifications for XTRATECH_IGUANAPAD devices.
   * Useful for xtratech_iguanapad testing.
   */
  public fun getXtratechIguanapadDevices(): List<String> = listOf(
      XtratechIguanapad.X8MT16
  )

  /**
   * Get all device specifications for Xtreme devices.
   * Useful for xtreme testing.
   */
  public fun getXtremeDevices(): List<String> = listOf(
      Xtreme.R3,
      Xtreme.R4,
      Xtreme.SHINJUKU,
      Xtreme.SUNNYVALE,
      Xtreme.SW4H,
      Xtreme.SW6H,
      Xtreme.UMEDA
  )

  /**
   * Get all device specifications for Xwave devices.
   * Useful for xwave testing.
   */
  public fun getXwaveDevices(): List<String> = listOf(
      Xwave.XPAD
  )

  /**
   * Get all device specifications for Yandex devices.
   * Useful for yandex testing.
   */
  public fun getYandexDevices(): List<String> = listOf(
      Yandex.AMBER
  )

  /**
   * Get all device specifications for YARA devices.
   * Useful for yara testing.
   */
  public fun getYaraDevices(): List<String> = listOf(
      Yara.HONGKONG
  )

  /**
   * Get all device specifications for YASIN devices.
   * Useful for yasin testing.
   */
  public fun getYasinDevices(): List<String> = listOf(
      Yasin.BANGBAE,
      Yasin.KOMAGOME,
      Yasin.SHINAGAWA,
      Yasin.SW4H,
      Yasin.SW6H,
      Yasin.UMEDA
  )

  /**
   * Get all device specifications for YAY devices.
   * Useful for yay testing.
   */
  public fun getYayDevices(): List<String> = listOf(
      Yay.HND
  )

  /**
   * Get all device specifications for YELLYOUTH devices.
   * Useful for yellyouth testing.
   */
  public fun getYellyouthDevices(): List<String> = listOf(
      Yellyouth.TAB_101
  )

  /**
   * Get all device specifications for Yes devices.
   * Useful for yes testing.
   */
  public fun getYesDevices(): List<String> = listOf(
      Yes.ALTITUDE_4,
      Yes.DWI765YES,
      Yes.M631Y,
      Yes.M685Y4,
      Yes.SEI500Y,
      Yes.SEI800Y
  )

  /**
   * Get all device specifications for Yestel devices.
   * Useful for yestel testing.
   */
  public fun getYestelDevices(): List<String> = listOf(
      Yestel.NOTE_30_PRO,
      Yestel.T13_EEA,
      Yestel.T13_T_EEA,
      Yestel.T13_US,
      Yestel.T15_EEA,
      Yestel.T15_US,
      Yestel.T5,
      Yestel.T5_PLUS,
      Yestel.T5_PLUS_EEA,
      Yestel.T5_0,
      Yestel.T5_EEA,
      Yestel.T5_EEA_0,
      Yestel.X2_EEA,
      Yestel.X2_T_EEA,
      Yestel.X2_T_US,
      Yestel.X2_US,
      Yestel.X3_EEA,
      Yestel.X7_EEA,
      Yestel.X9_EEA,
      Yestel.X9_US
  )

  /**
   * Get all device specifications for Yettel devices.
   * Useful for yettel testing.
   */
  public fun getYettelDevices(): List<String> = listOf(
      Yettel.STB_BG_B866V2H01
  )

  /**
   * Get all device specifications for YEZZ devices.
   * Useful for yezz testing.
   */
  public fun getYezzDevices(): List<String> = listOf(
      Yezz._4E,
      Yezz._5E,
      Yezz._5EQ,
      Yezz.ART1,
      Yezz.ART1_PRO,
      Yezz.ART2PRO,
      Yezz.ART3_PRO,
      Yezz.ART_3_LITE,
      Yezz.ART_3S,
      Yezz.EPIC_3_MAX,
      Yezz.GO1,
      Yezz.GO_2,
      Yezz.GO_3,
      Yezz.LIV1,
      Yezz.LIV2_LTE,
      Yezz.LIV2LTE,
      Yezz.LIV3_LTE,
      Yezz.LIV_1S,
      Yezz.LIV_3S,
      Yezz.LIV_3S_LTE,
      Yezz.MAX1,
      Yezz.MAX2,
      Yezz.MAX2_PLUS,
      Yezz.MAX3,
      Yezz.MAX3_ULTRA,
      Yezz.MAX_2_ULTRA,
      Yezz.MAX_3_PLUS
  )

  /**
   * Get all device specifications for YIKEMI devices.
   * Useful for yikemi testing.
   */
  public fun getYikemiDevices(): List<String> = listOf(
      Yikemi.PAD6_PLUS_EEA
  )

  /**
   * Get all device specifications for YINOCHE devices.
   * Useful for yinoche testing.
   */
  public fun getYinocheDevices(): List<String> = listOf(
      Yinoche.R8,
      Yinoche.Y8
  )

  /**
   * Get all device specifications for Ymobile devices.
   * Useful for ymobile testing.
   */
  public fun getYmobileDevices(): List<String> = listOf(
      Ymobile.P450A01
  )

  /**
   * Get all device specifications for YOBANSE devices.
   * Useful for yobanse testing.
   */
  public fun getYobanseDevices(): List<String> = listOf(
      Yobanse.T88,
      Yobanse.Y101,
      Yobanse.Z_T10,
      Yobanse.Z_TAB10
  )

  /**
   * Get all device specifications for YOKIS devices.
   * Useful for yokis testing.
   */
  public fun getYokisDevices(): List<String> = listOf(
      Yokis.TABLET
  )

  /**
   * Get all device specifications for Yokoscan devices.
   * Useful for yokoscan testing.
   */
  public fun getYokoscanDevices(): List<String> = listOf(
      Yokoscan.TC60_EEA
  )

  /**
   * Get all device specifications for YosaToo devices.
   * Useful for yosatoo testing.
   */
  public fun getYosatooDevices(): List<String> = listOf(
      Yosatoo.Y10,
      Yosatoo.Y101,
      Yosatoo.Y102
  )

  /**
   * Get all device specifications for YOSHIRO devices.
   * Useful for yoshiro testing.
   */
  public fun getYoshiroDevices(): List<String> = listOf(
      Yoshiro.R3,
      Yoshiro.R4
  )

  /**
   * Get all device specifications for YotaPhone devices.
   * Useful for yotaphone testing.
   */
  public fun getYotaphoneDevices(): List<String> = listOf(
      Yotaphone.YOTAPHONE2
  )

  /**
   * Get all device specifications for YOTOPT devices.
   * Useful for yotopt testing.
   */
  public fun getYotoptDevices(): List<String> = listOf(
      Yotopt.Q11_EEA,
      Yotopt.X109,
      Yotopt.Y103_EEA,
      Yotopt.Y121_EEA,
      Yotopt.Y3_EEA,
      Yotopt.Y61,
      Yotopt.Y61_EEA,
      Yotopt.Y8_EEA
  )

  /**
   * Get all device specifications for YouFone devices.
   * Useful for youfone testing.
   */
  public fun getYoufoneDevices(): List<String> = listOf(
      Youfone.AMIGO7XYUF
  )

  /**
   * Get all device specifications for YOUIN devices.
   * Useful for youin testing.
   */
  public fun getYouinDevices(): List<String> = listOf(
      Youin.HND
  )

  /**
   * Get all device specifications for YOUTAB devices.
   * Useful for youtab testing.
   */
  public fun getYoutabDevices(): List<String> = listOf(
      Youtab.YOUTAB_S7
  )

  /**
   * Get all device specifications for YQSAVIOR devices.
   * Useful for yqsavior testing.
   */
  public fun getYqsaviorDevices(): List<String> = listOf(
      Yqsavior.Q2K,
      Yqsavior.YQ10S
  )

  /**
   * Get all device specifications for YQSVAIOR devices.
   * Useful for yqsvaior testing.
   */
  public fun getYqsvaiorDevices(): List<String> = listOf(
      Yqsvaior.YQ10
  )

  /**
   * Get all device specifications for YSF devices.
   * Useful for ysf testing.
   */
  public fun getYsfDevices(): List<String> = listOf(
      Ysf.RUGGED_TABLET
  )

  /**
   * Get all device specifications for YSFEN devices.
   * Useful for ysfen testing.
   */
  public fun getYsfenDevices(): List<String> = listOf(
      Ysfen.B9000
  )

  /**
   * Get all device specifications for YU devices.
   * Useful for yu testing.
   */
  public fun getYuDevices(): List<String> = listOf(
      Yu.YU4711,
      Yu.YU5011,
      Yu.YU5012,
      Yu.YU5014,
      Yu.YU5040,
      Yu.YU6000,
      Yu.YUNICORN,
      Yu.YUPHORIA,
      Yu.YUREKA,
      Yu.YUREKA2,
      Yu.YUREKAS,
      Yu.YUTOPIA
  )

  /**
   * Get all device specifications for YUHO devices.
   * Useful for yuho testing.
   */
  public fun getYuhoDevices(): List<String> = listOf(
      Yuho.A1332E,
      Yuho.NETRA,
      Yuho.YUHO_TAB10,
      Yuho.YUHO_TAB8,
      Yuho.YUHO_Y1_STARS
  )

  /**
   * Get all device specifications for YUMKEM devices.
   * Useful for yumkem testing.
   */
  public fun getYumkemDevices(): List<String> = listOf(
      Yumkem.N10_EEA,
      Yumkem.U221,
      Yumkem.U221_EEA,
      Yumkem.U320,
      Yumkem.U320_EEA
  )

  /**
   * Get all device specifications for yuntab devices.
   * Useful for yuntab testing.
   */
  public fun getYuntabDevices(): List<String> = listOf(
      Yuntab.D107
  )

  /**
   * Get all device specifications for yyswie devices.
   * Useful for yyswie testing.
   */
  public fun getYyswieDevices(): List<String> = listOf(
      Yyswie.A74W,
      Yyswie.CT1001,
      Yyswie.CT1001_EEA
  )

  /**
   * Get all device specifications for ZAIKAI devices.
   * Useful for zaikai testing.
   */
  public fun getZaikaiDevices(): List<String> = listOf(
      Zaikai.MENSA_AN64,
      Zaikai.T7_AN400
  )

  /**
   * Get all device specifications for ZAITH devices.
   * Useful for zaith testing.
   */
  public fun getZaithDevices(): List<String> = listOf(
      Zaith.Z3211G
  )

  /**
   * Get all device specifications for ZAMOLXE devices.
   * Useful for zamolxe testing.
   */
  public fun getZamolxeDevices(): List<String> = listOf(
      Zamolxe.ZXT_10FL323G_PRO,
      Zamolxe.ZXT_10HL323S
  )

  /**
   * Get all device specifications for ZapiTV devices.
   * Useful for zapitv testing.
   */
  public fun getZapitvDevices(): List<String> = listOf(
      Zapitv.SEI500PTV,
      Zapitv.SEI800ZAPI
  )

  /**
   * Get all device specifications for ZATEC devices.
   * Useful for zatec testing.
   */
  public fun getZatecDevices(): List<String> = listOf(
      Zatec.JOY,
      Zatec.JOY_PLUS,
      Zatec.WIND,
      Zatec.ZATEC_ZPOWER_2018,
      Zatec.ZPAD_1
  )

  /**
   * Get all device specifications for ZCS devices.
   * Useful for zcs testing.
   */
  public fun getZcsDevices(): List<String> = listOf(
      Zcs.Z91,
      Zcs.Z92
  )

  /**
   * Get all device specifications for ZDK devices.
   * Useful for zdk testing.
   */
  public fun getZdkDevices(): List<String> = listOf(
      Zdk.ZDKMP_T30A,
      Zdk.ZDKMP_T30B
  )

  /**
   * Get all device specifications for Zebra devices.
   * Useful for enterprise and rugged device testing.
   */
  public fun getZebraDevices(): List<String> = listOf(
      Zebra.CC605LN,
      Zebra.CC610LC,
      Zebra.CC610PC,
      Zebra.EC30RT,
      Zebra.EC50,
      Zebra.EC55,
      Zebra.EM45,
      Zebra.ET40L,
      Zebra.ET40S,
      Zebra.ET45L,
      Zebra.ET45S,
      Zebra.ET50E,
      Zebra.ET50T,
      Zebra.ET51L,
      Zebra.ET51S,
      Zebra.ET55E,
      Zebra.ET55T,
      Zebra.ET56L,
      Zebra.ET56S,
      Zebra.ET60,
      Zebra.ET65,
      Zebra.KC50L,
      Zebra.KC50S,
      Zebra.L10AW,
      Zebra.MC2200,
      Zebra.MC2700,
      Zebra.MC33,
      Zebra.MC3300X,
      Zebra.MC3300XC,
      Zebra.MC33C,
      Zebra.MC3400,
      Zebra.MC93,
      Zebra.MC93C,
      Zebra.MC9400,
      Zebra.MC9450,
      Zebra.PS20JP,
      Zebra.TC15,
      Zebra.TC20KB,
      Zebra.TC20RD,
      Zebra.TC20RT,
      Zebra.TC21,
      Zebra.TC22,
      Zebra.TC25FM,
      Zebra.TC26,
      Zebra.TC27,
      Zebra.TC51,
      Zebra.TC51HC,
      Zebra.TC52,
      Zebra.TC52X,
      Zebra.TC53,
      Zebra.TC53E,
      Zebra.TC55,
      Zebra.TC56,
      Zebra.TC57,
      Zebra.TC57X,
      Zebra.TC58,
      Zebra.TC58E,
      Zebra.TC70,
      Zebra.TC70X,
      Zebra.TC72,
      Zebra.TC73,
      Zebra.TC73T,
      Zebra.TC75,
      Zebra.TC75X,
      Zebra.TC75XDF,
      Zebra.TC77,
      Zebra.TC78,
      Zebra.TC78T,
      Zebra.TC8000,
      Zebra.TC83B0,
      Zebra.TC83BH,
      Zebra.VC80X,
      Zebra.VC8308,
      Zebra.VC8310,
      Zebra.WT63B0,
      Zebra.WT6400
  )

  /**
   * Get all device specifications for ZEEKER devices.
   * Useful for zeeker testing.
   */
  public fun getZeekerDevices(): List<String> = listOf(
      Zeeker.ZEEKER_P10,
      Zeeker.ZEEKER_T100
  )

  /**
   * Get all device specifications for Zeki devices.
   * Useful for zeki testing.
   */
  public fun getZekiDevices(): List<String> = listOf(
      Zeki.TBDV986,
      Zeki.TBOG1034,
      Zeki.TBQG1031,
      Zeki.TBQG1038
  )

  /**
   * Get all device specifications for ZELU devices.
   * Useful for zelu testing.
   */
  public fun getZeluDevices(): List<String> = listOf(
      Zelu.C400
  )

  /**
   * Get all device specifications for Zenijust devices.
   * Useful for zenijust testing.
   */
  public fun getZenijustDevices(): List<String> = listOf(
      Zenijust.H20_EEA
  )

  /**
   * Get all device specifications for ZENOS devices.
   * Useful for zenos testing.
   */
  public fun getZenosDevices(): List<String> = listOf(
      Zenos.KENTON
  )

  /**
   * Get all device specifications for ZENTEC devices.
   * Useful for zentec testing.
   */
  public fun getZentecDevices(): List<String> = listOf(
      Zentec.ALTAB08
  )

  /**
   * Get all device specifications for Zeop devices.
   * Useful for zeop testing.
   */
  public fun getZeopDevices(): List<String> = listOf(
      Zeop.B866V2F
  )

  /**
   * Get all device specifications for Zephir devices.
   * Useful for zephir testing.
   */
  public fun getZephirDevices(): List<String> = listOf(
      Zephir.BANGBAE,
      Zephir.KOMAGOME,
      Zephir.TAMACHI,
      Zephir.YEONGDEUNGPO
  )

  /**
   * Get all device specifications for ZETATV devices.
   * Useful for zetatv testing.
   */
  public fun getZetatvDevices(): List<String> = listOf(
      Zetatv.DV8545_C_KUT
  )

  /**
   * Get all device specifications for ZIFFLER devices.
   * Useful for ziffler testing.
   */
  public fun getZifflerDevices(): List<String> = listOf(
      Ziffler.SHINAGAWA
  )

  /**
   * Get all device specifications for Zigo devices.
   * Useful for zigo testing.
   */
  public fun getZigoDevices(): List<String> = listOf(
      Zigo.ZIGO_NEBULA_10_1
  )

  /**
   * Get all device specifications for ZIK devices.
   * Useful for zik testing.
   */
  public fun getZikDevices(): List<String> = listOf(
      Zik.ZIK_W1027
  )

  /**
   * Get all device specifications for Zinox devices.
   * Useful for zinox testing.
   */
  public fun getZinoxDevices(): List<String> = listOf(
      Zinox.ZPAD_X8,
      Zinox.ZPAD_X8_PRO
  )

  /**
   * Get all device specifications for ZIOVO devices.
   * Useful for ziovo testing.
   */
  public fun getZiovoDevices(): List<String> = listOf(
      Ziovo.Z118_EEA,
      Ziovo.Z118_U_EEA,
      Ziovo.Z118_U_US,
      Ziovo.Z118_US,
      Ziovo.Z128_EEA,
      Ziovo.Z128_T_EEA,
      Ziovo.Z128_T_US,
      Ziovo.Z128_US,
      Ziovo.Z138_EEA,
      Ziovo.Z138_US,
      Ziovo.Z168_EEA,
      Ziovo.Z168_U_EEA,
      Ziovo.Z168_U_US,
      Ziovo.Z168_US
  )

  /**
   * Get all device specifications for Ziox devices.
   * Useful for ziox testing.
   */
  public fun getZioxDevices(): List<String> = listOf(
      Ziox.DUOPIX_F9_PRO
  )

  /**
   * Get all device specifications for Zitab devices.
   * Useful for zitab testing.
   */
  public fun getZitabDevices(): List<String> = listOf(
      Zitab.ZITAB01
  )

  /**
   * Get all device specifications for ZITRO devices.
   * Useful for zitro testing.
   */
  public fun getZitroDevices(): List<String> = listOf(
      Zitro.MOUNTBAKER,
      Zitro.STANFORD,
      Zitro.ZHONGSHAN
  )

  /**
   * Get all device specifications for ZMBIZI devices.
   * Useful for zmbizi testing.
   */
  public fun getZmbiziDevices(): List<String> = listOf(
      Zmbizi.ZMBIZI_Z1,
      Zmbizi.ZMBIZI_Z2
  )

  /**
   * Get all device specifications for ZMOOTH devices.
   * Useful for zmooth testing.
   */
  public fun getZmoothDevices(): List<String> = listOf(
      Zmooth.ZKAI_STUDY_TAB
  )

  /**
   * Get all device specifications for ZOFYWNAS devices.
   * Useful for zofywnas testing.
   */
  public fun getZofywnasDevices(): List<String> = listOf(
      Zofywnas.D10
  )

  /**
   * Get all device specifications for ZOJI devices.
   * Useful for zoji testing.
   */
  public fun getZojiDevices(): List<String> = listOf(
      Zoji.Z33,
      Zoji.Z8,
      Zoji.Z9
  )

  /**
   * Get all device specifications for ZOLON devices.
   * Useful for zolon testing.
   */
  public fun getZolonDevices(): List<String> = listOf(
      Zolon.L16XX
  )

  /**
   * Get all device specifications for Zong devices.
   * Useful for zong testing.
   */
  public fun getZongDevices(): List<String> = listOf(
      Zong.Z1,
      Zong.Z2
  )

  /**
   * Get all device specifications for ZONKO devices.
   * Useful for zonko testing.
   */
  public fun getZonkoDevices(): List<String> = listOf(
      Zonko.D105,
      Zonko.D106,
      Zonko.D110,
      Zonko.D115,
      Zonko.D118,
      Zonko.K101,
      Zonko.K101_EEA,
      Zonko.K105,
      Zonko.K105_EEA,
      Zonko.K106,
      Zonko.K110,
      Zonko.K113,
      Zonko.K116_M,
      Zonko.K118,
      Zonko.K150,
      Zonko.K710,
      Zonko.K711
  )

  /**
   * Get all device specifications for ZONMAI devices.
   * Useful for zonmai testing.
   */
  public fun getZonmaiDevices(): List<String> = listOf(
      Zonmai.MX2_EEA
  )

  /**
   * Get all device specifications for ZOOM devices.
   * Useful for zoom testing.
   */
  public fun getZoomDevices(): List<String> = listOf(
      Zoom.ULTRA,
      Zoom.ULTRA_PLUS
  )

  /**
   * Get all device specifications for ZOOMME devices.
   * Useful for zoomme testing.
   */
  public fun getZoommeDevices(): List<String> = listOf(
      Zoomme.M2,
      Zoomme.M3
  )

  /**
   * Get all device specifications for ZOOMSMART devices.
   * Useful for zoomsmart testing.
   */
  public fun getZoomsmartDevices(): List<String> = listOf(
      Zoomsmart.LT600T,
      Zoomsmart.LT800,
      Zoomsmart.ZM800
  )

  /**
   * Get all device specifications for ZooomTV devices.
   * Useful for zooomtv testing.
   */
  public fun getZooomtvDevices(): List<String> = listOf(
      Zooomtv.DV8529_T2_S2_KSI
  )

  /**
   * Get all device specifications for Zpad devices.
   * Useful for zpad testing.
   */
  public fun getZpadDevices(): List<String> = listOf(
      Zpad.ZPAD_X7,
      Zpad.ZPADX7
  )

  /**
   * Get all device specifications for ZTE devices.
   * Useful for zte testing.
   */
  public fun getZteDevices(): List<String> = listOf(
      Zte.ABBY,
      Zte.ACHILL,
      Zte.AILSA,
      Zte.AILSA_II,
      Zte.ALICE,
      Zte.B860H_V1,
      Zte.BAFFIN,
      Zte.BEAM,
      Zte.BENZ,
      Zte.BILLY,
      Zte.BLADE_L3_PLUS,
      Zte.BOLTON,
      Zte.BREAKER,
      Zte.CALBEE,
      Zte.CAMELLIA,
      Zte.CANDICE,
      Zte.CAROL,
      Zte.CHAPEL,
      Zte.CINCO,
      Zte.CROCUS,
      Zte.CYGNI,
      Zte.CYNTHIA,
      Zte.DANDELION,
      Zte.DEMI,
      Zte.DRACO,
      Zte.DRACONIS,
      Zte.FINANCIER,
      Zte.FLORIST,
      Zte.FORTUNE,
      Zte.FUJISAN,
      Zte.GEVJON,
      Zte.GIFT,
      Zte.GRAYJOY,
      Zte.GRAYJOYLITE,
      Zte.GUARDIAN,
      Zte.HELEN,
      Zte.HERA,
      Zte.JASMINE,
      Zte.JEFF,
      Zte.JERRY,
      Zte.K83,
      Zte.K83CA,
      Zte.K85,
      Zte.K87,
      Zte.K95,
      Zte.K96,
      Zte.K97,
      Zte.KELLY,
      Zte.LAVENDER,
      Zte.LEMON,
      Zte.LEO,
      Zte.LEWIS,
      Zte.LILY,
      Zte.LOL,
      Zte.MARTELL,
      Zte.MAX,
      Zte.MIMIR,
      Zte.MO_01J,
      Zte.MO_01K,
      Zte.MSM8226,
      Zte.MSM8909,
      Zte.MSM8916_32,
      Zte.MSM8916_64,
      Zte.MSM8937,
      Zte.MSM8952_64,
      Zte.MSM8974,
      Zte.MSM8994,
      Zte.MSM8996,
      Zte.NANCY,
      Zte.NX597J,
      Zte.OLDMAN,
      Zte.P172A40,
      Zte.P172E10,
      Zte.P172R10,
      Zte.P182A10,
      Zte.P182A20,
      Zte.P450F10,
      Zte.P450L10,
      Zte.P545,
      Zte.P606F01,
      Zte.P606F02,
      Zte.P606F05,
      Zte.P606F07,
      Zte.P606F08,
      Zte.P606F09,
      Zte.P606F10,
      Zte.P606F13,
      Zte.P606F17,
      Zte.P606F19,
      Zte.P606F20,
      Zte.P606F21,
      Zte.P606T07C,
      Zte.P609,
      Zte.P615F01,
      Zte.P616F01,
      Zte.P616F02,
      Zte.P616F03,
      Zte.P616F05,
      Zte.P616T01C,
      Zte.P616T02_AC,
      Zte.P616T02C,
      Zte.P616T03_AC,
      Zte.P616T03C,
      Zte.P618A01,
      Zte.P618A03,
      Zte.P618A11,
      Zte.P618F05,
      Zte.P618F06,
      Zte.P618F07,
      Zte.P618F08,
      Zte.P618T01C,
      Zte.P632A10,
      Zte.P632T31,
      Zte.P633F05,
      Zte.P633F08,
      Zte.P633F10,
      Zte.P633S01,
      Zte.P633S05,
      Zte.P633S07,
      Zte.P633S08,
      Zte.P633S31,
      Zte.P635A20,
      Zte.P635A31,
      Zte.P635A50,
      Zte.P635A60,
      Zte.P635E40,
      Zte.P635F33,
      Zte.P635F50,
      Zte.P635N34,
      Zte.P635T36,
      Zte.P635T39,
      Zte.P635T40,
      Zte.P637F02,
      Zte.P637F10,
      Zte.P637S02,
      Zte.P637S15,
      Zte.P637T02,
      Zte.P637T10,
      Zte.P639F10,
      Zte.P639F10L,
      Zte.P639S10,
      Zte.P639T10,
      Zte.P650A30,
      Zte.P650A31,
      Zte.P653A10,
      Zte.P653A11,
      Zte.P653N11,
      Zte.P653N31,
      Zte.P653S06,
      Zte.P653S07,
      Zte.P655A30,
      Zte.P662F02,
      Zte.P662F02_D1,
      Zte.P662F02_D2,
      Zte.P662F02D,
      Zte.P671A11,
      Zte.P671A13,
      Zte.P671F20,
      Zte.P671F20D,
      Zte.P671F50,
      Zte.P671F50_D,
      Zte.P671F60,
      Zte.P671F70,
      Zte.P671S02,
      Zte.P671S20,
      Zte.P675T07,
      Zte.P680A10,
      Zte.P680A20,
      Zte.P683S10,
      Zte.P720F02,
      Zte.P720F03,
      Zte.P720F03_A,
      Zte.P720F05,
      Zte.P720F09,
      Zte.P720S07,
      Zte.P720S11,
      Zte.P725A02,
      Zte.P725A11,
      Zte.P725A12,
      Zte.P731A10,
      Zte.P731A20,
      Zte.P731F10,
      Zte.P731F12,
      Zte.P731F20,
      Zte.P731F21,
      Zte.P731F30,
      Zte.P731F50,
      Zte.P731F60,
      Zte.P731K30,
      Zte.P768A02,
      Zte.P780F03,
      Zte.P809A01,
      Zte.P809A20,
      Zte.P809A50,
      Zte.P809F01,
      Zte.P809F10,
      Zte.P809F12,
      Zte.P809F15,
      Zte.P809F20,
      Zte.P809F30,
      Zte.P809F40,
      Zte.P809F52,
      Zte.P809K50,
      Zte.P809S10,
      Zte.P809T70,
      Zte.P816A20,
      Zte.P817E52,
      Zte.P817E53,
      Zte.P817F01,
      Zte.P817F18,
      Zte.P817S01,
      Zte.P817S13,
      Zte.P839F30,
      Zte.P839T30,
      Zte.P839T60,
      Zte.P840F03,
      Zte.P840F12,
      Zte.P840F13,
      Zte.P840F20,
      Zte.P840S03,
      Zte.P840S18,
      Zte.P840T22,
      Zte.P845A01,
      Zte.P845A02,
      Zte.P852F52,
      Zte.P855A01,
      Zte.P855A03,
      Zte.P855A03_NA,
      Zte.P855A21,
      Zte.P870A01,
      Zte.P870A02,
      Zte.P870A21,
      Zte.P870F21,
      Zte.P875A02,
      Zte.P875A11,
      Zte.P875A12,
      Zte.P876T01J,
      Zte.P898A01,
      Zte.P898A11,
      Zte.P898A25,
      Zte.P898F01,
      Zte.P898P01,
      Zte.P932F10,
      Zte.P932F20,
      Zte.P932F21,
      Zte.P932F22,
      Zte.P932F23,
      Zte.P932F50,
      Zte.P932K20,
      Zte.P963F01,
      Zte.P963F01D,
      Zte.P963F02,
      Zte.P963F03,
      Zte.P963F05,
      Zte.P963F06,
      Zte.P963F07,
      Zte.P963F10,
      Zte.P963F30,
      Zte.P963F30P,
      Zte.P963F50,
      Zte.P963F50_A,
      Zte.P963F51W,
      Zte.P963F60,
      Zte.P963F61,
      Zte.P963F61_A,
      Zte.P963F62,
      Zte.P963F63,
      Zte.P963F64,
      Zte.P963F65,
      Zte.P963F66,
      Zte.P963F70,
      Zte.P963F80,
      Zte.P963F90W,
      Zte.P963F91,
      Zte.P963F92,
      Zte.P963F93,
      Zte.P963F94,
      Zte.P963F94_A,
      Zte.P963F95,
      Zte.P963F95_A,
      Zte.P963T01C,
      Zte.P963T02C,
      Zte.PEONY,
      Zte.PLATY,
      Zte.PRIMROSE,
      Zte.PROLINE,
      Zte.RED,
      Zte.SAPPHIRE,
      Zte.SAPPHIRE4G,
      Zte.SDM660_64,
      Zte.SHEEN,
      Zte.SIF,
      Zte.STARK,
      Zte.STOLLEN,
      Zte.SWEET,
      Zte.T86,
      Zte.TOM,
      Zte.TULIP,
      Zte.TURKCELL_T40,
      Zte.URD,
      Zte.V_P635T36,
      Zte.V_P635T40,
      Zte.V_P839T30,
      Zte.VERDANDI,
      Zte.VFD511,
      Zte.WARP6,
      Zte.WARP8,
      Zte.WELLINGTON,
      Zte.XUANTAN,
      Zte.YEV,
      Zte.YMA,
      Zte.YXE,
      Zte.Z_01K,
      Zte.Z2339,
      Zte.Z3051T,
      Zte.Z3052O,
      Zte.Z3052T,
      Zte.Z3101T,
      Zte.Z3153,
      Zte.Z3351,
      Zte.Z3352CA,
      Zte.Z3353,
      Zte.Z3511O,
      Zte.Z5031O,
      Zte.Z5151,
      Zte.Z5155T,
      Zte.Z5156,
      Zte.Z5156U,
      Zte.Z5157,
      Zte.Z5158,
      Zte.Z5201T,
      Zte.Z5351T,
      Zte.Z5501S,
      Zte.Z557,
      Zte.Z559DL,
      Zte.Z6100T,
      Zte.Z6201,
      Zte.Z6202S,
      Zte.Z6250,
      Zte.Z6251,
      Zte.Z6252,
      Zte.Z6350T,
      Zte.Z6351O,
      Zte.Z6355O,
      Zte.Z6356O,
      Zte.Z6356T,
      Zte.Z6400,
      Zte.Z6410,
      Zte.Z6530,
      Zte.Z6556O,
      Zte.Z6561S,
      Zte.Z6571S,
      Zte.Z6575S,
      Zte.Z6576S,
      Zte.Z6621O,
      Zte.Z6650S,
      Zte.Z6750,
      Zte.Z6750K,
      Zte.Z7540,
      Zte.Z7750R,
      Zte.Z8850K,
      Zte.Z8888S,
      Zte.ZTE_G720C,
      Zte.ZTE_BLADE_A110,
      Zte.ZTE_BLADE_A210,
      Zte.ZTE_BLADE_A315,
      Zte.ZTE_BLADE_A465,
      Zte.ZTE_BLADE_A475,
      Zte.ZTE_BLADE_A476,
      Zte.ZTE_BLADE_A511,
      Zte.ZTE_BLADE_A601,
      Zte.ZTE_BLADE_A610,
      Zte.ZTE_BLADE_C370,
      Zte.ZTE_BLADE_L110,
      Zte.ZTE_BLADE_L2_PLUS,
      Zte.ZTE_BLADE_V0710,
      Zte.ZTE_BLADE_V0720,
      Zte.ZTE_BLADE_V0730,
      Zte.ZTE_BLADE_V0800,
      Zte.ZTE_BLADE_V0820,
      Zte.ZTE_BLADE_V0850,
      Zte.ZTE_BLADE_V580,
      Zte.ZTE_T617,
      Zte.ZTE_T620,
      Zte.ZTE_T920,
      Zte.ZTE_V971LM,
      Zte.ZTE_V97L,
      Zte.ZX55Q05_64
  )

  /**
   * Get all device specifications for ZTE_TV devices.
   * Useful for zte_tv testing.
   */
  public fun getZteTvDevices(): List<String> = listOf(
      ZteTv.B866_ZTE
  )

  /**
   * Get all device specifications for ZTLEKE devices.
   * Useful for ztleke testing.
   */
  public fun getZtlekeDevices(): List<String> = listOf(
      Ztleke.P10,
      Ztleke.P10MAX,
      Ztleke.P10PRO,
      Ztleke.S8PLUS,
      Ztleke.S8PLUS2
  )

  /**
   * Get all device specifications for Zucchetti devices.
   * Useful for zucchetti testing.
   */
  public fun getZucchettiDevices(): List<String> = listOf(
      Zucchetti.ZPAD_608
  )

  /**
   * Get all device specifications for ZUK devices.
   * Useful for zuk testing.
   */
  public fun getZukDevices(): List<String> = listOf(
      Zuk.K9,
      Zuk.Z1,
      Zuk.Z2_PLUS,
      Zuk.Z2_PLUS_HW,
      Zuk.Z2_ROW
  )

  /**
   * Get all device specifications for ZULEISY devices.
   * Useful for zuleisy testing.
   */
  public fun getZuleisyDevices(): List<String> = listOf(
      Zuleisy.E8A
  )

  /**
   * Get all device specifications for ZUOPU devices.
   * Useful for zuopu testing.
   */
  public fun getZuopuDevices(): List<String> = listOf(
      Zuopu.JH101,
      Zuopu.JH103,
      Zuopu.JH105,
      Zuopu.JH863
  )

  /**
   * Get all device specifications for ZUUM devices.
   * Useful for zuum testing.
   */
  public fun getZuumDevices(): List<String> = listOf(
      Zuum.AKUS,
      Zuum.AKUS_P1,
      Zuum.AKUS_PRO,
      Zuum.AKUS_TAB,
      Zuum.AKUS_Z,
      Zuum.AKUS_Z1,
      Zuum.AURA_M1,
      Zuum.AURA_M2,
      Zuum.AURA_PLUS_JLO,
      Zuum.AURA_PRO,
      Zuum.AURA_PRO_JLO,
      Zuum.AURA_X,
      Zuum.AURA_Z,
      Zuum.AURA_Z1,
      Zuum.COVET,
      Zuum.COVET_PRO,
      Zuum.COVET_PRO_LITE,
      Zuum.COVET_X,
      Zuum.COVET_Z,
      Zuum.GRANT,
      Zuum.GRAVITY,
      Zuum.GRAVITY_M,
      Zuum.GRAVITY_Z,
      Zuum.HIDRA_PLUS,
      Zuum.MAGNO_C,
      Zuum.MAGNO_C1,
      Zuum.MAGNO_C2,
      Zuum.MAGNO_C_PLUS,
      Zuum.MAGNO_MINI,
      Zuum.MAGNO_P1,
      Zuum.MAGNO_P4,
      Zuum.MAGNO_PLUS,
      Zuum.MAGNO_PRO,
      Zuum.MAGNO_S,
      Zuum.NOVUS_TAB,
      Zuum.ONIX,
      Zuum.ONIX_S,
      Zuum.ROCKET_II,
      Zuum.ROCKET_III,
      Zuum.SENS_CURVE,
      Zuum.SENS_G,
      Zuum.STELLAR_M1,
      Zuum.STELLAR_M2,
      Zuum.STELLAR_M3,
      Zuum.STELLAR_M4,
      Zuum.STELLAR_M5,
      Zuum.STELLAR_M6,
      Zuum.STELLAR_MAX,
      Zuum.STELLAR_MINI,
      Zuum.STELLAR_P3,
      Zuum.STELLAR_P4,
      Zuum.STELLAR_P5,
      Zuum.STELLAR_P6,
      Zuum.STELLAR_P8,
      Zuum.STELLAR_PLUS,
      Zuum.STELLAR_Z,
      Zuum.VOLTA_KIDS,
      Zuum.ZUUM_PAD_KIDS,
      Zuum.ZUUM_PAD_LIGHTYEAR
  )

  /**
   * Get all device specifications for zyrex devices.
   * Useful for zyrex testing.
   */
  public fun getZyrexDevices(): List<String> = listOf(
      Zyrex.ZT216_1,
      Zyrex.ZT216_2,
      Zyrex.ZT216_23,
      Zyrex.ZT216_5,
      Zyrex.ZT_216
  )

  /**
   * Get all device specifications for ZZB devices.
   * Useful for zzb testing.
   */
  public fun getZzbDevices(): List<String> = listOf(
      Zzb.ZB10,
      Zzb.ZB10M,
      Zzb.ZB40
  )

  /**
   * Get all device specifications for 10or devices.
   * Useful for 10or testing.
   */
  public fun get_10orDevices(): List<String> = listOf(
      _10or._10OR_D,
      _10or.E,
      _10or.G,
      _10or.G2
  )

  /**
   * Get all device specifications for 1u1 devices.
   * Useful for 1u1 testing.
   */
  public fun get_1u1Devices(): List<String> = listOf(
      _1u1.DIW362_1U1,
      _1u1.DIW377_1U1,
      _1u1.DIW387_1U1
  )

  /**
   * Get all device specifications for 2E devices.
   * Useful for 2e testing.
   */
  public fun get_2eDevices(): List<String> = listOf(
      _2e.CAPITOLHILL,
      _2e.E450A2018,
      _2e.F534L,
      _2e.F572L,
      _2e.KEONEAE
  )

  /**
   * Get all device specifications for 3222222Satelital devices.
   * Useful for 3222222satelital testing.
   */
  public fun get_3222222satelitalDevices(): List<String> = listOf(
      _3222222satelital.G706
  )

  /**
   * Get all device specifications for 3BBTV devices.
   * Useful for 3bbtv testing.
   */
  public fun get_3bbtvDevices(): List<String> = listOf(
      _3bbtv.TBBTV01
  )

  /**
   * Get all device specifications for 3Rtablet devices.
   * Useful for 3rtablet testing.
   */
  public fun get_3rtabletDevices(): List<String> = listOf(
      _3rtablet.VT_7GE
  )

  /**
   * Get all device specifications for 7mobile devices.
   * Useful for 7mobile testing.
   */
  public fun get_7mobileDevices(): List<String> = listOf(
      _7mobile._7MOBILE_KAMBA_2,
      _7mobile.SWEGUE_2
  )

  /**
   * Get all device specifications for 8849 devices.
   * Useful for 8849 testing.
   */
  public fun get_8849Devices(): List<String> = listOf(
      _8849.OB_A98,
      _8849.OB_P08,
      _8849.OB_P10,
      _8849.TANK2,
      _8849.TANK2PRO,
      _8849.TANK3,
      _8849.TANK_MINI_1
  )

  /**
   * Get device specifications for a specific brand.
   *
   * @param brandName The name of the brand (case-insensitive)
   * @return List of device specification strings for the brand, or empty list if brand not found
   */
  public fun getDevicesForBrand(brandName: String): List<String> =
      brandMap[brandName.lowercase()]?.invoke() ?: emptyList()

  /**
   * Get names of all supported brands with preview groups.
   */
  public fun getSupportedBrands(): List<String> = brandMap.keys.sorted()
}
