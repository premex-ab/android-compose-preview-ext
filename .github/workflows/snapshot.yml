name: Auto deploy snapshot artifacts on draft release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: tart

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Check out code
        uses: actions/checkout@v5
        with:
          fetch-depth: '0'

      - name: Release tag
        run: |
          git describe --tags --always --first-parent
          git tag

      - name: Setup java
        uses: actions/setup-java@v5
        with:
          distribution: 'adopt'
          java-version: 21

      - name: Publish application
        run: |
          # Get current version from gradle.properties
          CURRENT_VERSION=$(grep "^version=" gradle.properties | cut -d'=' -f2)
          echo "Current version: $CURRENT_VERSION"
          
          # Set snapshot version (if not already a snapshot)
          if [[ $CURRENT_VERSION != *"-SNAPSHOT" ]]; then
            SNAPSHOT_VERSION="${CURRENT_VERSION}-SNAPSHOT"
          else
            SNAPSHOT_VERSION="$CURRENT_VERSION"
          fi
          
          echo "Publishing snapshot version: $SNAPSHOT_VERSION"
          export VERSION_NAME="$SNAPSHOT_VERSION"
          ./gradlew publishAllPublicationsToMavenCentralRepository
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.OSSRH_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.SIGNING_KEY_ID }}

      - name: Upload reports
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: Reports
          path: '**/build/reports/*'
          retention-days: 2